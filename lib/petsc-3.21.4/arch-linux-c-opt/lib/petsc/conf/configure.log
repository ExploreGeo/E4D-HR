Executing: uname -s
stdout: Linux
=============================================================================================
                         Configuring PETSc to compile on your system
=============================================================================================

================================================================================
================================================================================
Starting configure run at Mon, 18 Aug 2025 18:18:28 +0800
Configure Options: --configModules=PETSc.Configure --optionsModule=config.compilerOptions --with-debugging=0 --with-fc="mpiifort -fc=ifx" --with-cc="mpiicc -cc=icx" --with-cxx="mpiicpc -cxx=icpx" --with-blaslapack-dir=/opt/intel/oneapi/mkl/2025.0 FOPTFLAGS="-O2 -march=native -mtune=native" COPTFLAGS="-O2 -march=native -mtune=native" CXXOPTFLAGS="-O2 -march=native -mtune=native"
Working directory: /srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4
Machine platform:
uname_result(system='Linux', node='chrysoprase', release='6.14.0-27-generic', version='#27~24.04.1-Ubuntu SMP PREEMPT_DYNAMIC Tue Jul 22 17:38:49 UTC 2', machine='x86_64')
Python version:
3.12.3 (main, Jun 18 2025, 17:59:45) [GCC 13.3.0]
================================================================================
  Environmental variables
LESSOPEN=| /usr/bin/lesspipe %s
LIBRARY_PATH=/opt/intel/oneapi/tcm/1.2/lib:/opt/intel/oneapi/umf/0.9/lib:/opt/intel/oneapi/tbb/2022.0/env/../lib/intel64/gcc4.8:/opt/intel/oneapi/pti/0.10/lib:/opt/intel/oneapi/mpi/2021.14/lib:/opt/intel/oneapi/mkl/2025.0/lib:/opt/intel/oneapi/ipp/2022.0/lib:/opt/intel/oneapi/dal/2025.0/lib/intel64:/opt/intel/oneapi/compiler/2025.0/lib:/opt/intel/oneapi/ccl/2021.14/lib/
CMPLR_ROOT=/opt/intel/oneapi/compiler/2025.0
TCM_ROOT=/opt/intel/oneapi/tcm/1.2
USER=dhyan
XDG_SESSION_TYPE=x11
INTEL_PYTHONHOME=/opt/intel/oneapi/debugger/2025.0/opt/debugger
CLUTTER_DISABLE_MIPMAPPED_TEXT=1
SHLVL=1
LD_LIBRARY_PATH=/opt/intel/oneapi/tcm/1.2/lib:/opt/intel/oneapi/umf/0.9/lib:/opt/intel/oneapi/tbb/2022.0/env/../lib/intel64/gcc4.8:/opt/intel/oneapi/pti/0.10/lib:/opt/intel/oneapi/mpi/2021.14/opt/mpi/libfabric/lib:/opt/intel/oneapi/mpi/2021.14/lib:/opt/intel/oneapi/mkl/2025.0/lib:/opt/intel/oneapi/ipp/2022.0/lib:/opt/intel/oneapi/debugger/2025.0/opt/debugger/lib:/opt/intel/oneapi/dal/2025.0/lib/intel64:/opt/intel/oneapi/compiler/2025.0/opt/compiler/lib:/opt/intel/oneapi/compiler/2025.0/lib:/opt/intel/oneapi/ccl/2021.14/lib/:/home/dhyan/petsc/arch-linux-c-opt/lib:/home/dhyan/slepc/arch-linux-c-opt/lib:
HOME=/home/dhyan
DESKTOP_SESSION=ubuntu
GNOME_SHELL_SESSION_MODE=ubuntu
GTK_MODULES=gail:atk-bridge
IPPROOT=/opt/intel/oneapi/ipp/2022.0
OCL_ICD_FILENAMES=/opt/intel/oneapi/compiler/2025.0/lib/libintelocl.so
SYSTEMD_EXEC_PID=3084
GSM_SKIP_SSH_AGENT_WORKAROUND=true
DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1001/bus
TBBROOT=/opt/intel/oneapi/tbb/2022.0/env/..
COLORTERM=truecolor
DIAGUTIL_PATH=/opt/intel/oneapi/dpcpp-ct/2025.0/etc/dpct/sys_check/sys_check.sh:/opt/intel/oneapi/compiler/2025.0/etc/compiler/sys_check/sys_check.sh
DEBUGINFOD_URLS=https://debuginfod.ubuntu.com 
INFOPATH=/opt/intel/oneapi/debugger/2025.0/share/info
LOGNAME=dhyan
DPL_ROOT=/opt/intel/oneapi/dpl/2022.7
DAL_MAJOR_BINARY=3
_=/usr/bin/python3
PKG_CONFIG_PATH=/opt/intel/oneapi/tbb/2022.0/env/../lib/pkgconfig:/opt/intel/oneapi/mpi/2021.14/lib/pkgconfig:/opt/intel/oneapi/mkl/2025.0/lib/pkgconfig:/opt/intel/oneapi/dpl/2022.7/lib/pkgconfig:/opt/intel/oneapi/dal/2025.0/lib/pkgconfig:/opt/intel/oneapi/compiler/2025.0/lib/pkgconfig:/opt/intel/oneapi/ccl/2021.14/lib/pkgconfig/
MEMORY_PRESSURE_WATCH=/sys/fs/cgroup/user.slice/user-1001.slice/user@1001.service/session.slice/org.gnome.Shell@x11.service/memory.pressure
XDG_SESSION_CLASS=user
USERNAME=dhyan
TERM=xterm-256color
GNOME_DESKTOP_SESSION_ID=this-is-deprecated
WINDOWPATH=2
GDB_INFO=/opt/intel/oneapi/debugger/2025.0/share/info/
PATH=/opt/intel/oneapi/mpi/2021.14/bin:/opt/intel/oneapi/mkl/2025.0/bin:/opt/intel/oneapi/dpcpp-ct/2025.0/bin:/opt/intel/oneapi/dev-utilities/2025.0/bin:/opt/intel/oneapi/debugger/2025.0/opt/debugger/bin:/opt/intel/oneapi/compiler/2025.0/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin
SESSION_MANAGER=local/chrysoprase:@/tmp/.ICE-unix/3038,unix/chrysoprase:/tmp/.ICE-unix/3038
ONEAPI_ROOT=/opt/intel/oneapi
CCL_CONFIGURATION=cpu_gpu_dpcpp
XDG_MENU_PREFIX=gnome-
GNOME_TERMINAL_SCREEN=/org/gnome/Terminal/screen/b9ade34c_f0f7_43d8_b44c_ceef1c1f6fb8
DALROOT=/opt/intel/oneapi/dal/2025.0
UMF_ROOT=/opt/intel/oneapi/umf/0.9
XDG_RUNTIME_DIR=/run/user/1001
DISPLAY=:1
CCL_ROOT=/opt/intel/oneapi/ccl/2021.14
LANG=en_US.UTF-8
XDG_CURRENT_DESKTOP=ubuntu:GNOME
XMODIFIERS=@im=ibus
XDG_SESSION_DESKTOP=ubuntu
XAUTHORITY=/run/user/1001/gdm/Xauthority
LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=00:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.avif=01;35:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:*~=00;90:*#=00;90:*.bak=00;90:*.crdownload=00;90:*.dpkg-dist=00;90:*.dpkg-new=00;90:*.dpkg-old=00;90:*.dpkg-tmp=00;90:*.old=00;90:*.orig=00;90:*.part=00;90:*.rej=00;90:*.rpmnew=00;90:*.rpmorig=00;90:*.rpmsave=00;90:*.swp=00;90:*.tmp=00;90:*.ucf-dist=00;90:*.ucf-new=00;90:*.ucf-old=00;90:
GNOME_TERMINAL_SERVICE=:1.354
SSH_AUTH_SOCK=/run/user/1001/keyring/ssh
SHELL=/bin/bash
CCL_CONFIGURATION_PATH=
Pti_DIR=/opt/intel/oneapi/pti/0.10/lib/cmake/pti
QT_ACCESSIBILITY=1
DAL_MINOR_BINARY=0
GDMSESSION=ubuntu
LESSCLOSE=/usr/bin/lesspipe %s %s
MKLROOT=/opt/intel/oneapi/mkl/2025.0
GPG_AGENT_INFO=/run/user/1001/gnupg/S.gpg-agent:0:1
SETVARS_COMPLETED=1
IPP_TARGET_ARCH=intel64
CLASSPATH=/opt/intel/oneapi/mpi/2021.14/share/java/mpi.jar
NLSPATH=/opt/intel/oneapi/compiler/2025.0/lib/compiler/locale/%l_%t/%N
QT_IM_MODULE=ibus
FI_PROVIDER_PATH=/opt/intel/oneapi/mpi/2021.14/opt/mpi/libfabric/lib/prov:/usr/lib/x86_64-linux-gnu/libfabric
PWD=/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4
XDG_CONFIG_DIRS=/etc/xdg/xdg-ubuntu:/etc/xdg
XDG_DATA_DIRS=/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop
I_MPI_ROOT=/opt/intel/oneapi/mpi/2021.14
CPATH=/opt/intel/oneapi/umf/0.9/include:/opt/intel/oneapi/tbb/2022.0/env/../include:/opt/intel/oneapi/pti/0.10/include:/opt/intel/oneapi/mpi/2021.14/include:/opt/intel/oneapi/mkl/2025.0/include:/opt/intel/oneapi/ipp/2022.0/include:/opt/intel/oneapi/dpl/2022.7/include:/opt/intel/oneapi/dpcpp-ct/2025.0/include:/opt/intel/oneapi/dev-utilities/2025.0/include:/opt/intel/oneapi/dal/2025.0/include:/opt/intel/oneapi/ccl/2021.14/include
MEMORY_PRESSURE_WRITE=c29tZSAyMDAwMDAgMjAwMDAwMAA=
MANPATH=/opt/intel/oneapi/mpi/2021.14/share/man:/opt/intel/oneapi/debugger/2025.0/share/man:/opt/intel/oneapi/compiler/2025.0/share/man:
VTE_VERSION=7600
CMAKE_PREFIX_PATH=/opt/intel/oneapi/tbb/2022.0/env/..:/opt/intel/oneapi/pti/0.10/lib/cmake/pti:/opt/intel/oneapi/mkl/2025.0/lib/cmake:/opt/intel/oneapi/ipp/2022.0/lib/cmake/ipp:/opt/intel/oneapi/dpl/2022.7/lib/cmake/oneDPL:/opt/intel/oneapi/dal/2025.0:/opt/intel/oneapi/compiler/2025.0
    Files in path provided by default path
      /opt/intel/oneapi/mpi/2021.14/bin: mpiexec hydra_pmi_proxy IMB-MPI1 mpicc impi_info mpigcc mpiicc mpiifort IMB-RMA mpicxx mpiicpc mpif77 impi_cpuinfo mpiifx mpiicpx hydra_bstrap_proxy mpigxx IMB-P2P mpif90 mpiexec.hydra hydra_nameserver IMB-MPI1-GPU mpiicx mpirun mpitune_fast IMB-NBC cpuinfo mpifc IMB-MT
      /opt/intel/oneapi/mkl/2025.0/bin: mkl_link_tool
      /opt/intel/oneapi/dpcpp-ct/2025.0/bin: c2s dpct intercept-build codepin-report.py
      /opt/intel/oneapi/dev-utilities/2025.0/bin: oneapi-cli install-eclipse-plugins.sh
      /opt/intel/oneapi/debugger/2025.0/opt/debugger/bin: gdbserver-ze gdbserver-32 gdb-add-index-oneapi gdbserver gdb-oneapi gcore-oneapi
      /opt/intel/oneapi/compiler/2025.0/bin: sycl-ls aocl-ioc64 icx opencl-aot icpx.cfg icpx dpcpp compiler sycl-trace fpp ifx icx.cfg ifx.cfg run-clang-tidy icx-cc git-clang-format dpcpp-cl icx-cl ioc64
      /usr/local/sbin: 
      /usr/local/bin: gtk-3-fortran-pymodscan gtk-4-fortran-pymodscan gtk-4-fortran-modscan gtk-3-fortran gtk-4-fortran gtk-3-fortran-modscan
      /usr/sbin: samba_kcc ippeveprinter rcvboxautostart-service update-passwd runqlen-bpfcc zic reset-trace-bpfcc dosfslabel biolatency-bpfcc update-pciids dmstats ebtables-nft-restore tclcalls-bpfcc biolatency-kp.bt filelife-bpfcc sudo_sendlog llcstat-bpfcc arptables-restore javastat-bpfcc pythoncalls-bpfcc cups-browsed select-default-wordlist tcpconnect-bpfcc filetop-bpfcc samba-gpupdate rtcwake ebtables-translate rcvboxweb-service usbmuxd update-updmap biosdecode aa-teardown grub-reboot update-icon-caches umount.nfs4 argdist-bpfcc pppdump sgdisk getweb remove-default-ispell blkzone ldconfig swapoff ip6tables-restore execsnoop.bt update-fonts-scale arptables-save switch_root tcpstates-bpfcc syscount-bpfcc deluser dnsmasq iwconfig chat e2label kvmexit-bpfcc loads.bt rpc.idmapd newusers writeback.bt resolvconf iptables-legacy-save request-key poweroff biostacks.bt zfsdist-bpfcc tcpretrans-bpfcc update-locale threadsnoop.bt e4crypt lpmove tarcat ip6tables-nft-restore statsnoop.bt alsa-info vboxconfig stackcount-bpfcc mkswap sysctl nfsdcld umount.nfs setuids.bt biosnoop-bpfcc funcinterval-bpfcc lpc ntfsclone locale-gen iwgetid halt fsck.fat dbslower-bpfcc arptables-nft pam_getenv update-rc.d mount.lowntfs-3g dirtop-bpfcc uobjnew badblocks cupsd update-language-lua iptables-apply tcpdrop-bpfcc ntfsundelete iwpriv ebtables-restore ugc profile-bpfcc blkid ModemManager funcslower-bpfcc ctrlaltdel applygnupgdefaults tcpretrans.bt mkfs.fat grub-mkdevicemap hdparm pidpersec.bt thermald wpa_cli update-grub2 getty wpa_action kerneloops cupsenable update-dictcommon-aspell softirqs-bpfcc update-ca-certificates vfscount-bpfcc rmmod iptables-nft-save iucode_tool adduser fsidd vigr shadowconfig ip6tables-translate sslsnoop.bt dmsetup biosnoop.bt rpcbind validlocale filegone-bpfcc update-language delgroup vdpa mountstats fstrim sofdsnoop-bpfcc fixparts pidpersec-bpfcc userdel ip6tables-save arptables-nft-save mount.ntfs ext4dist-bpfcc sudo_logsrvd pccardctl runuser rubyobjnew-bpfcc update-grub pythonstat-bpfcc aa-remove-unknown sshd apparmor_status uflow oomkill.bt iptables prime-offload tcpsynbl.bt make-ssl-cert nodestat-bpfcc logrotate javacalls-bpfcc netqtop-bpfcc arptables cupsdisable getcap aspell-autobuildhash mdflush.bt tcpsubnet-bpfcc depmod e2freefrag nfsref oomkill-bpfcc e2image faillock mount.ntfs-3g perlcalls-bpfcc javagc-bpfcc brltty-setup iptables-legacy-restore pwck fsck.cramfs tclflow-bpfcc deadlock-bpfcc cracklib-check perlstat-bpfcc logsave ufw rtmon cupsreject update-fmtutil uthreads addgroup getpcaps update-ieee-data pwunconv tune2fs capable-bpfcc vfscount.bt funclatency-bpfcc cppw update-catalog grub-install fsck.ext2 visudo tcpdrop.bt swapin.bt bitesize.bt nodegc-bpfcc setcap fsck.ext4 tcplife-bpfcc lpadmin syscount.bt exportfs capable.bt syncsnoop-bpfcc exitsnoop-bpfcc update-tl-stacked-conffile bindsnoop-bpfcc pwconv tcpconnect.bt sm-notify blkdiscard phpflow-bpfcc ip6tables-legacy-restore avahi-daemon runqlat.bt cracklib-unpacker update-cracklib cobjnew-bpfcc mkdosfs ispell-autobuildhash samba_upgradedns unix_update killsnoop-bpfcc fsfreeze pam_timestamp_check update-xmlcatalog cpgr grub-mkconfig gennorm2 dcstat-bpfcc uuidd gnome-menus-blacklist fsck update-java-alternatives kbdrate apparmor_parser findfs pam_extrausers_update samba_dnsupdate update-texmf-config ippevepcl wpa_supplicant tclstat-bpfcc tcpconnlat-bpfcc fsck.ext3 fsck.minix hardirqs-bpfcc losetup nfsdclddb pam_namespace_helper rpc.gssd ip6tables-apply mkinitramfs chmem groupadd gencmn klockstat-bpfcc NetworkManager cupsfilter bashreadline.bt update-language-def ssllatency.bt mdflush-bpfcc ntfsresize mkfs.msdos spice-vdagentd tplist-bpfcc tcptracer-bpfcc syncsnoop.bt runlevel pptp nfsidmap virtiostat-bpfcc service addgnupghome dmidecode alsa iptables-restore-translate xtables-nft-multi funccount-bpfcc update-initramfs sfdisk invoke-rc.d dpkg-preconfigure iptables-restore nft isosize update-dictcommon-hunspell rmt-tar partprobe blockdev aa-load gethostlatency.bt mkfs.ntfs cfdisk pam_extrausers_chkpwd key.dns_resolver offwaketime-bpfcc rpc.svcgssd nfsslower-bpfcc runqlen.bt ebtables-nft gethostlatency-bpfcc mklost+found trace-bpfcc update-language-dat aa-status javathreads-bpfcc samba_downgrade_db e2undo cron rtacct pppd wakeuptime-bpfcc ldattach e2mmpstatus zramctl telinit memleak-bpfcc rpcdebug grpck u-d-c-print-pci-ids select-default-ispell update-inetd bitesize-bpfcc mkfs.minix swapon accessdb undump.bt paperconfig samba ustat gensprep start-stop-daemon nfsiostat fsck.msdos tcpsynbl-bpfcc vfsstat.bt cgdisk mountsnoop-bpfcc chroot tcpaccept.bt tc setvtrgb modinfo nfsdcltrack escapesrc ip6tables-nft perlflow-bpfcc mkfs.ext3 modprobe agetty ip6tables-legacy-save mkfs.ext2 iwevent pivot_root pythonflow-bpfcc readahead-bpfcc mkntfs rubycalls-bpfcc ip6tables vcstime dumpe2fs cracklib-packer rpcinfo dcsnoop-bpfcc ttysnoop-bpfcc tcplife.bt update-shells unix_chkpwd mkfs.bfs cachestat-bpfcc vpddecode genccode ip6tables-legacy aptd dpkg-reconfigure pppstats plymouthd e2fsck installkernel usb_modeswitch init groupmod execsnoop-bpfcc openvpn update-gsfontmap compactsnoop-bpfcc pptpsetup cachetop-bpfcc chgpasswd opensnoop.bt mkfs.vfat xfsdist.bt rpc.mountd remove-default-wordlist mke2fs tipc dhcpcd grub-set-default resize2fs pwhistory_helper phpstat-bpfcc ldconfig.real btrfsslower-bpfcc pppoe-discovery e2scrub_all rfkill ntfslabel fileslower-bpfcc blkmapd xtables-monitor biolatency.bt update-fonts-alias devlink opensnoop-bpfcc naptime.bt dbstat-bpfcc shutdown threadsnoop-bpfcc eventlogadm ippeveps alsabat-test dosfsck biotop-bpfcc chpasswd readprofile icupkg start-statd solisten-bpfcc ip6tables-nft-save ethtool runqslower-bpfcc nfsdclnts rcvboxballoonctrl-service iucode-tool bluetoothd nfsdist-bpfcc insmod update-default-aspell rpcctl cpuunclaimed-bpfcc sulogin slabratetop-bpfcc cracklib-format debugfs rtkitctl capsh javaflow-bpfcc sslsniff-bpfcc cupsctl alsactl brltty killall5 lpinfo gdm3 iconvconfig drsnoop-bpfcc offcputime-bpfcc update-default-ispell nfnl_osf filefrag update-info-dir nfsstat btrfsdist-bpfcc lspcmcia ebtables-nft-save swaplabel xfsdist-bpfcc rsyslogd rpc.statd cpuwalk.bt ip6tables-restore-translate ownership nmbd lsmod setvesablank groupdel rcvboxdrv bridge usermod iptables-nft ipp-usb update-texmf statsnoop-bpfcc iptables-legacy mount.nfs on_ac_power install-sgmlcatalog cpudist-bpfcc hwloc-dump-hwdata ppchcalls-bpfcc create-cracklib-dict iptables-save tclobjnew-bpfcc ext4slower-bpfcc vfsstat-bpfcc e2scrub ebtables-save nologin rubyflow-bpfcc mkfs samba_spnupdate dcb phpcalls-bpfcc javaobjnew-bpfcc ntfscp grpunconv tcpcong-bpfcc vipw dcsnoop.bt e4defrag pam-auth-update rubygc-bpfcc pythongc-bpfcc prime-switch rubystat-bpfcc usb_modeswitch_dispatcher iptables-translate bpflist-bpfcc rdmaucma-bpfcc chcpu mount.fuse iwspy fatlabel mkfs.cramfs update-fonts-dir genl bashreadline-bpfcc groupmems wipefs update-default-wordlist arpd tcpaccept-bpfcc mount.nfs4 cupsaccept tcprtt-bpfcc ucalls inject-bpfcc useradd parted fsck.vfat sssd iptables-nft-restore criticalstat-bpfcc bpftool fdisk xfsslower-bpfcc mkhomedir_helper gdisk mysqld_qslower-bpfcc rpc.nfsd blkdeactivate runqlat-bpfcc mount.fuse3 fstab-decode biopattern-bpfcc tcptop-bpfcc smbd zfsslower-bpfcc shmsnoop-bpfcc get-quirk-options grpconv nfsconf anacron killsnoop.bt update-secureboot-policy grub-probe rmt ub-device-create umount.udisks2 iwlist add-shell ip reboot showmount arptables-nft-restore biolatpcts-bpfcc saned grub-macbless netplan ebtables xtables-legacy-multi remove-shell mkfs.ext4
      /usr/bin: lconvert pamdeinterlace resize info arm2hpdl gtk-update-icon-cache ld.bfd pamdice qmltestrunner cefpdflatex tracker3-reset seahorse bpftrace-aotrt texi2dvi nvidia-settings faked-tcp gdallocationinfo vboxheadless nvidia-ngx-updater gp-display-text bash gst-stats-1.0 znew cvt gp-display-html gpgparsemail pamshuffle ppmtopi1 pinentry pamunlookup mpif90.mpich apt-sortpkgs xdg-user-dir pkmon pamfunc tzselect pwd gcov showrgb pamtojpeg2k gcov-tool-13 im-launch pktogf qmljs mbim-network screendump migratepages ovp2ovf r-mpost pdfetex sg chage x86_64 bbl2bib cefspdflatex cgi-fcgi simpdftex gnome-logs ptx helpztags sha384sum gpg vmstat dpkg-gencontrol pnmtile rawtopgm gdal_edit.py X11 411toppm pbmupc pbmtolj sadf gcc-ar gnome-disks column x86_64-linux-gnu-pkgconf ln xbiff pamtohdiff ldapcompare yuy2topam pamtilt pambackground gapplication psbook 7z cct VirtualBox samba-tool qmlviewer hipercdecode py3compile bundler3.2 nstat host brltty-trtxt chfn gs tdbrestore texdoc disdvi apport-bug pmxab git-latexdiff gdmflexiserver gcc-ar-13 uclampset pro mpiexec wpctl cameratopam pnmtoplainpnm transset hpcdtoppm qml c99 fc-validate devnag foo2lava-wrapper whatis rpcgen rstartd l4p-tmpl split gcc gfortran-13 systemd-cat dirname m4 xzfgrep bluetooth-sendto switcherooctl lsusb mpicc.mpich ntfsinfo smbstatus gdaltransform animate x86_64-linux-gnu-g++-13 display m2300w xzmore mag ppmfade pst2pdf palmtopnm xdg-desktop-menu dpkg-mergechangelogs pamtooctaveimg hwloc-diff pdfatfi esc-m dvipng sane-find-scanner static-sh foo2oak-wrapper mogrify-im6 nslookup aclocal-1.16 nm corelist wish hydra_pmi_proxy gnome-characters musixtex awk netaddr m17n-db linguist id webquiz poff do-release-upgrade ppmtoicr dmesg vftovp unattended-upgrades ssh-import-id dpkg-divert dbus-run-session pamtoqoi appres typeprof3.2 xset sleep vboxballoonctrl paste pmap x86_64-linux-gnu-ranlib xkbcomp pbmpage pnmsmooth timedatectl pbmlife gcc-13 pnmtoxwd mft gtbl rubibtex xclipboard c_rehash lexgrog lupdate ppmtogif mkindex xinput setterm gpic ogrmerge.py pgmtosbig qtchooser prime-select dviinfox pamfile pnmtofits pnmhistmap tracker3-import egrep lpstat ttf2kotexfont dd pamcrater resizecons wbmptopbm kbdinfo gencnval pamflip pw-play ppmhist troff pbmtomacp ppmnorm mpicc pnmalias ssh-keygen xmodmap qdoc dvidvi pidwait ipptool pktopbm getmapdl xfontsel rev localc doxyindexer dvips base64 podchecker driverless-fax gpu-manager mesa-overlay-control.py xdg-dbus-proxy pmpost gem3.2 uil dpkg-vendor t1binary pybabel-python3 lsmem qgis_process pnminterp-gen rake sunicontopnm dh_doxygen latexdiff-cvs pamtofits pamoil tikztosvg ntfscat enchant-lsmod-2 showconsolefont spice-vdagent pamarith who ppmtoleaf gdalenhance kpsereadlink dvisvgm ppmtompeg pamtotga pamsharpmap lto-dump-13 cefslatex gpgconf obexctl psfxtable mfplain sdiff fmtutil tecla brltty-hid dvihp sh pamtompfont aa-exec ed imgtoppm pdfcsplain x86_64-linux-gnu-gp-display-html compare pkfix-helper icontopbm setfacl xterm gem luatex foo2xqx-wrapper pamendian extractbb xedit dpkg-source patch latex xmore muraster pw-link moc latexdiff-hg pod2texi pbmtoescp2 jq foo2hbpl2 cmp gcr-viewer-gtk4 gfortran min12xxw py3clean automake-1.16 dvipos preunzip cksum ntfscmp pamlevels tlmgr addpart ctwill-twinx x86_64-linux-gnu-readelf pbmtosunicon foo2zjs-wrapper pdfseparate pamaddnoise mkpic texfindpkg splitindex time splain dh_bash-completion setarch nano fallocate md5sum.textutils kpsewhich ltx2crossrefxml systemd-path pkgconf tclsh newgrp hp-query mpichversion psfstriptable gettext dvilj open pod2man xmltex pkcon ldapadd pod2text feynmf gstreamer-codec-install fixdlsrps pdftexi2dvi x86_64-linux-gnu-cpp vboximg-mount link fiascotopnm mpifort.mpich vi x86_64-linux-gnu-gcov-dump apt-add-repository vpl2vpl evince pnmcrop qdbusviewer alsamixer pgmmorphconv col gdk-pixbuf-csource ddbugtopbm write lpoptions foo2zjs-icc2ps printenv pslatex zipnote pbmto10x hwloc-calc rdma eog texi2pdf remmina-file-wrapper pygettext3.12 zeisstopnm cachepic otfinfo pidstat timeout bmptoppm mt isympy ybmtopbm kanji-config-updmap-user g++ unzip lstopo-no-graphics pcxtoppm systemd-sysusers grops ptardiff ppmtoneo lpr nvidia-detector xdg-user-dirs-update apg pidof gslp invgeod pnmgamma lzma brltty-clip debconf-copydb iostat texosquery pamtogif de-macro psidtopgm ntfsfix pw-config ar gtk-builder-tool gdal2xyz.py sjislatex strip unzipsfx systemd-machine-id-setup pnmtofiasco lrelease unshare spd-say ovf2ovp xinit pythontex fixtpps red snice ttftotype42 install-info top autoscan tar login scite lzegrep pager kanji-fontmap-creator streamzip pw-dump nm-applet pnmtopng bib2gls getopt fc-scan make nisdomainname qmllint nearblack xstdcmap catman htxetex hostname geqn rm systemd perli11ndoc numfmt pnminvert gnome-thumbnail-font platex gnuplot unity-scope-loader locale-check lscpu pktype lesspipe hp-timedate xxd ppmtobmp a5toa4 ntfstruncate xsetmode jpegtopnm file2brl txtconv addr2line su psfaddtable tracker3-sql pon pammixmulti fc-pattern arecord h2xs hwloc-annotate wovf2ovp pi3topbm networkctl xcursorgen sgitopnm piconv dvilualatex mvxattr zless perf sensible-browser slxdecode x86_64-linux-gnu-gcov-dump-13 rnano hydra_persist pf2afm x86_64-linux-gnu-nm hp-scan pbmtogem xargs spctoppm x86_64-linux-gnu-objdump convbkmk scp-dbus-service pamrgbatopng xsetwacom ppmflash pamlookup ppmtojpeg hostid pstree.x11 makeglossaries-lite x86_64-linux-gnu-gp-archive ocamlruni desktop-file-install mkfontdir Xephyr latexdiff-rcs mk4ht synctex sss_ssh_authorizedkeys pamsistoaglyph pyproj pltotf hwloc-info ppmtomitsu setfattr f2py xetex pdb3 mscompress tabs rake3.2 x-www-browser glib-gettextize cfftot1 gtester-report systemd-cgls mendex identify-im6 notify-send fig4latex ldapmodify chklref x86_64-linux-gnu-gp-display-src ht ps2pdf14 kbxutil prezip-bin linux-version ps2pdf13 animate-im6 aplaymidi mktexfmt as grub-mkstandalone Xwayland lzmainfo prtstat utf8mex bzexe x86_64-linux-gnu-python3-config migspeed pamtopnm x86_64-linux-gnu-as dbwrap_tool pango-view makejvf ppmtopcx git-receive-pack qmlmin iecset ps4pdf tex4ht png-fix-itxt localedef tracker3-index fixpsditps sbsign qmlscene pamtris ldapsearch remmina foo2hp2600-wrapper lily-image-commands ppmtowinicon zstdless pgmkernel x86_64-linux-gnu-gcc-13 installfont-tl sbattach dpkg-checkbuilddeps lofromtemplate l2test gnome-session-properties uppltotf sbverify winicontoppm dpkg-split gdm-screenshot update-desktop-database dpkg-query x86_64-linux-gnu-gfortran pbmtoxbm texcount fontinst ppmmake oakdecode yuvsplittoppm cpan linux-update-symlinks lily-glyph-commands x86_64-linux-gnu-size sudoreplay GET pfbtopfa unopkg ranlib remmina-gnome ppmdist orca apt-ftparchive fprintd-verify systemd-notify prepmx r-pmpost projinfo autoconf paperconf pnmquantall m2400w fprintd-delete xprop hwe-support-status pambrighten pnmmontage ppmlabel colrm gcov-tool pbibtex pnmremap iptables-xml bibexport dviconcat systemd-firstboot uptftopl tdbbackup unzstd gdal_footprint whereis dvibook showkey getconf tracker3 pyserial-ports plog grotty latexfileversion getfacl winicontopam gtk4-encode-symbolic-svg chmod whoopsie pinentry-gnome3 VirtualBoxVM gpgsm foo2slx-wrapper nvidia-cuda-mps-control rgb3toppm arlatex fixfmps apgbfm viewres realpath check-language-support pdfannotextractor pdftocairo gnome-shell-extension-tool unlzma derb dviselect mgrtopbm perl5.38.2 nm-connection-editor ua exceltex kmod irb3.2 pbmtoepsi pl2pm foo2slx fixwwps qoitopam pammixinterlace xdg-email sirtopnm qgis ld.so dvipdft bzgrep conjure gdal2tiles.py xelatex foo2qpdl pcre2-config orca-dm-wrapper pamphletangler cpupower VBox mdatopbm pamundice p7zip rrsync mkdir proj ssh-copy-id json-patch-jsondiff bashbug funzip gsettings unxz editor allneeded ulqda getfattr stream-im6 efibootmgr debconf pamslice ngettext hexdump fixpspps broadwayd foo2ddst pamgetcolor xmag texfot usbreset pambayer zipgrep qdbuscpp2xml httexi uxterm ec2metadata nproc gencfu rygel setsid xsetpointer xditview hipstopgm x86_64-linux-gnu-lto-dump-13 mf gnome-keyring ps2ps2 apt-cache mktextfm mpstat opl2ofm pipewire lspci hp-plugin lessfile zdump pamsumm ppmchange faked-sysv qgis.bin dh_autotools-dev_restoreconfig dvipdfm apt-extracttemplates genrb py3versions plymouth dvi2tty grub-mknetdir pamtopdbimg xmessage pnmfile cloud-init strings manpath sudoedit epspdf pinentry-x11 transicc cistopbm qtconfig qtplugininfo pngtopnm kpsewhere linux-boot-prober fakeroot display-im6 pbmtoybm scriptreplay pamsummcol cpp gjs btmgmt driverless dconf expr pdbedit libpng16-config mtvtoppm pnmmercator pnmtojpeg sar.sysstat dh_numpy3 makeinfo dvired pbmtoppa mktexpk pw-cli gdb-add-index VBoxManage mpivars latex2man pdfmex pamstack desktop-file-validate mimetype pgmnoise rcc tr ldapwhoami rendercheck bibtex8 gi-compile-repository f95 vprerex telnet chardet pnmquant spa-resample dpkg-gensymbols ipod-read-sysinfo-extended gold lp_solve loadkeys debconf-set-selections splitfont dbus-daemon zcat xdg-user-dirs-gtk-update pbmtoascii cs2cs choom sjisconv gpg-agent psfgettable systemd-tmpfiles composite gp-archive gdalmdiminfo tset lsattr texfind basename xorrecord fc-cache grub-mkimage pdfxup mpicxx gpasswd bmtoa outocp udisksctl grub-mkfont basenc autosp file dh_installtex ipcs nm-online genbrk fprintd-list nautilus unattended-upgrade upmpost preconv prerex c++ ucfq pstree x86_64-linux-gnu-gi-inspect-typelib pdftotext pdfxmltex hilatex apt-get mpicxx.mpich mkjobtexmf gnome-session-quit lastlog r-upmpost sum asy x86_64-linux-gnu-gcov gp-display-src gdal_rasterize texlogfilter sqfscat mktexmf conjure-im6.q16 runcon x86_64-linux-gnu-pkg-config pw-reserve ppmspread captoinfo ppmtoterm enchant-2 nvidia-persistenced ubuntu-bug csplain bpftrace bzless texluac koi8rxterm tput ctanify btmon linkicc tl-paper macptopbm digestif lessecho zcmp display-im6.q16 typeoutfileinfo ppmdither pamtouil lualatex ppmglobe vboxmanage enc2xs lualatex-dev ischroot gdbus pamvalidate gio-querymodules dir ppmtopj gtester dbus-uuidgen colormgr mkgrkindex arch samba-log-parser pip pdfjadetex xqxdecode autom4te add-apt-repository luac grub-render-label gnome-language-selector heif-thumbnailer gcc-nm gamma4scanimage smbpasswd texliveonfly gnmmanage evince-previewer ul gcalccmd axohelp script qhelpgenerator spd-conf pkill pango-list x86_64-linux-gnu-gp-collect-app dpkg-genbuildinfo ppmcolors ruby snapctl asciitopgm identify stream cd-iccdump x86_64-linux-gnu-gcc ypdomainname spottopgm busctl deweb systemd-stdio-bridge pbmtopi3 lsblk gpg-connect-agent true mokutil gresource gobject-query mkfontscale pbmtoepson urlbst pdftops uconv HEAD grub-mkrelpath latexdiff-vc gdal_viewshed escp2topbm x11perf gnuplot-qt dvigif file-roller ubuntu-security-status translit tgatoppm aseqdump aa-enabled flock pbmtog3 passwd inimf mogrify-im6.q16 kanji-config-updmap updmap VBoxHeadless t1reencode xcmsdb pbmtoplot qlalr g3topbm erb3.2 pamtopam xsetroot euptex pk2bm pnmscalefixed gbkpdflatex ntfsmove latex-papersize cpack gdb fprintd-enroll ddstdecode gtk4-update-icon-cache xorrisofs pbmtomrf lcf airscan-discover ispell-wrapper perlthanks 7za x-session-manager totem calibrate_ppa linux64 jsonschema dircolors cut kill qgis_process.bin chktex tracker3-info systemd-inhibit lwp-request pnmtopnm svn-multi umount latexdiff pamtohtmltbl uic3 jexec logname cweave pbmtonokia gpgtar xconsole nvidia-bug-report.sh zstdgrep ppmrough gnome-keyring-daemon spix pdf2dsc unicode_start foomatic-rip mpif77 x-grass gsdj aspell x86_64-linux-gnu-gp-display-text pnmtorle pbmtowbmp cancel psresize x86_64-linux-gnu-c++filt t4ht dirmngr-client rsync-ssl zenity qmlplugindump sync sqfstar sftp gnome-extensions fmt make4ht mousetweaks pw-loopback x86_64-linux-gnu-gcc-ranlib usb-creator-gtk cef5pdflatex chown ppmcie pbmclean jpeg2ktopam gdal_translate ppmtotga xzdiff sbvarsign ppmtoascii lp atobm dpkg-buildflags debian-distro-info mt-gnu pfarrei encguess pampop9 scanimage speech-dispatcher xvidtune dpkg-buildtree update_rubygems jbigtopnm vcs-run gdalwarp ldappasswd ppltotf gnome-clocks ppmtoppm mtr pbmtodjvurle pi1toppm taskset pbmtoptx updvitomp ld.gold pamenlarge cd-create-profile pbmtext precat ptar hostnamectl pgmramp pnmhisteq libreoffice mogrify mktexlsr ppmtoapplevol snapfuse sputoppm keyctl e2pall icuexportdata chrt pip3 ldapurl ceflatex hp-clean systemd-creds dpkg-deb pbmmask twill qmi-network os-prober xev pnmtorast ucs2any uuidgen mpif77.mpich ntfsusermap domainname fold hp-makeuri convert lwp-download ctest gftype ctan-o-mat truncate delpart gouldtoppm rctest pamgradient perldoc memusage pnmnoraw x86_64-linux-gnu-ld ppmddumpfont alsaloop routel pnmtoddif pfb2t1c gsbj x86_64-linux-gnu-python3.12-config latexdiff-fast bzip2recover x86_64-linux-gnu-gcc-ar-13 mawk convertgls2bib ppmtorgb3 dumpkeys ntfs-3g.probe mknod xdg-screensaver tdbbackup.tdbtools kmodsign oclock xsubpp pydoc3.12 nroff opldecode gtk4-rendernode-tool echo pbmreduce ruby3.2 sprof laptop-detect fusermount3 shasum pc1toppm pngfix syntax_suggest3.2 gcov-dump-13 canberra-gtk-play pyserial-miniterm sed foo2zjs tsort JxrDecApp memhog tdbdump ppmtv mmpfb wayland-scanner pico hbf2gf VBoxBugReport ppmtoarbtxt ico foo2hiperc t1rawafm wovp2ovf ginstall-info pdffonts scalar aseqnet t1mac uptex pbmtocmuwm gemtopnm make-first-existing-target bc rawtoppm ldapmodrdn w compare-im6 pnmmargin pnmarith rpdfcrop pgmmedian uplatex-dev df hwloc-gather-cpuid gdm-config ttf2tfm gdal_fillnodata.py loffice duplicity pdb3.12 tac pdfdetach dpkg-scansources mdig gcr-viewer ctangle findhyph ppmtopjxl upower rbs3.2 colcrt pnmflip clear pdf2ps rename.ul pbmtozinc alsaucm xauth zjsdecode fmtutil-sys zegrep t1dotlessj browse dvilualatex-dev whoopsie-preferences tex2aspc pnmpsnr loginctl pooltype gcov-13 slogin xkbprint comm xvinfo elfedit pgmtexture update-perl-sax-parsers qrttoppm ubuntu-distro-info ptftopl pamexec pnmcut setpci aspell-import look fragmaster pdbimgtopam zipsplit pixeltool uncompress brltty-atb pampick pgmslice wdctl printer-profile zmore jsonpatch wall pipewire-avb pygettext3 lzless debconf-escape man-recode wish8.6 tail apropos foo2hiperc-wrapper codepage editres mesg fusermount pbmtoatk reset t1c2pfb pw-dsdplay word-list-compress t1asm pamchannel xzgrep context.lua ctanupload doublecmd b2sum doxysearch.cgi pdftoppm hwloc-compress-dir ppmtoxpm netcat gst-play-1.0 qvkgen systemd-cryptsetup fc-match gdal_contour ubuntu-advantage gzip gsdj500 ibus-daemon gdalbuildvrt xdg-desktop-icon nsupdate stty htmex ppmbrighten qtattributionsscanner testparm xrefresh spa-monitor markdown_py cupstestppd grep pamwipeout snap thumbpdf ps2pdf12 otp2ocp gnome-shell-test-tool ocamlrund lzcmp diff pamtoavs ocamlrun systemd-delta libmkl_core.so trace-cmd xdvipdfmx ppmquantall totem-video-thumbnailer udevadm usbhid-dump seq grub-fstest which tex dpkg-genchanges json_xs dpkg-parsechangelog pnmtopalm qcollectiongenerator xload dvilj6 hex2hcd xclock listbib pstoedit conjure-im6 intel-virtual-output afm2tfm sdptool markdown-it dv2dt sha256sum gdal_pansharpen.py bbox pgmminkowski growpart pgmhist systemd-id128 pngtopam migrate-pubring-from-classic-gpg gcc-ranlib fakeroot-sysv mpost mk_modmap rhythmbox-client pbmtogo rtstat jadetex fixwfwps xzegrep pnmstitch printf l3build pamcat dvitomp pgmtost4 xbmtopbm tload xlsatoms bg5pdflatex libmkl_intel_lp64.so cpp-13 anytopnm profiles ppmdmkfont systemd-hwdb gsnd zforce gnome-session ps2epsi nohup faillog libnetcfg texfont grub-script-check bundledoc xzcat git x86_64-linux-gnu-ld.bfd session-migration histretch savelog tpic2pdftex software-properties-gtk tftopl gemtopbm install chgrp false latexdiff-git fonttosfnt vptovf ppmtopgm luac5.1 lzfgrep pdflatexpicscale mrftopbm systemd-analyze nvidia-sleep.sh setfont tracepath pphs vmwarectrl cef5conv hp-check systemd-detect-virt xdriinfo sort eject fmtutil-user mltex hwloc-gather-topology chattr makedtx fitstopnm dpkg-realpath sbigtopgm pbmtopgm pamrecolor pr numactl zdiff a2ping xdvi-xaw uic tie brltty-lscmds sty2dtx libpng-config ps2pdf arecordmidi gcc-nm-13 gted gtk-encode-symbolic-svg pw-profiler pbmtobbnbg pnmindex ctanbib systemd-ask-password montage autoupdate stat efibootdump gdal_create utmpdump size foo2hp bmptopnm animate-im6.q16 bibtex wget dash fc-list pamgauss apt-config ppmtoeyuv mflua apport-collect pbmtomda oem-getlogs grass xlsclients authorindex gdbtui dh_installxmlcatalogs xkbwatch skill bzmore qmleasing kpsetool gdbus-codegen latexindent gnome-shell ntfswipe wofm2opl fc-cat tifftopnm lomath cluttex upmendex pbmtoibm23xx lslogins projsync tracker3-sparql watch pbmtopsg3 bunzip2 pamfind mv pammosaicknit transmission-gtk yplan pnmtotiffcmyk tificc x86_64-linux-gnu-lto-dump x86_64-linux-gnu-gcc-ar gnome-calendar gtf extconv import-im6 bluemoon afm2afm xkbbell ckbcomp getafm dvispc pamtopng pgmbentley shred epstopdf vpl2ovp pnmtosgi gcov-dump view gst-device-monitor-1.0 mkofm perltex pslog ltximg sharesec iconv setupcon gslj xindex pamhomography texi2any lua5.1 xgc pedigree xdg-settings systemd-cryptenroll ptargrep nvidia-powerd x86_64-linux-gnu-gi-decompile-typelib gpgv networkd-dispatcher more ldd wpa_passphrase grub-kbdcomp convert-im6.q16 initex lzmore pod2html xhost infotocap chacl latex-wordcount lprm uniq gnmanalyse xbrlapi hciconfig lshw qml1plugindump gipddecode svgtopam pnmenlarge nvidia-xconfig kpsexpand watchgnupg ipod-time-sync ppmtouil dc locale smproxy grub-menulst2cfg dpkg-architecture xeyes linux-check-removal pdflatex-dev eptex monitor-sensor hp-probe perl mptopdf qtpaths foo2ddst-wrapper depythontex pw-mididump ltxfileinfo tracker3-daemon xrdb brltty-morse ssh-agent tracker3-status chartex pstops listings-ext POST apt-mark jpgicc x86_64-linux-gnu-cpp-13 invproj xkbvleds compare-im6.q16 x86_64-linux-gnu-gcc-nm-13 tracker3-tag fgconsole whiptail grub-mount pdfclose x86_64-linux-gnu-strings mbimcli lsns qpdldecode im-config qmicli gcore cjk-gs-integrate eutp perlbug ppmrelief ebb gnome-help ltx2unitxt grub-editenv sfconv appstreamcli uplatex texosquery-jre5 systemd-repart apport-unpack x86_64-linux-gnu-gfortran-13 sss_ssh_knownhostsproxy pnmcomp unmkinitramfs xzcmp pgmcrater bioradtopgm wopl2ofm xkbevd hp-levels yes pjtoppm gdaldem logger xlogo brltty-ctb systemd-cgtop pipewire-aes67 zstd dbus-cleanup-sockets fc-conflist pamrubber ptex JxrEncApp x86_64-linux-gnu-gi-compile-repository pygmentex pnmpaste dpkg-maintscript-helper gnome-session-inhibit pdftex gdal_merge.py ssh-import-id-lp arara bg5latex montage-im6 lpq pammasksharpen VBoxDTrace libmkl_intel_thread.so rgb2pct.py pbmtoicon listres vstp pmxchords mpic++ hp-info ctwill-refsort pamedge grdctl users vboxautostart vpe ghostscript htxelatex pamhue thinkjettopbm perlivp kernel-install ucfr kpsepath glib-genmarshal pgmtofs cvtsudoers inputattach makeindex openjade hardlink pdfattach xwdtopnm hwloc-patch uptime cefsconv stdbuf readlink ptex2pdf turbostat nmblookup startx hdifftopam nc pgmtolispm renice mktemp mkt1font pgmnorm mpif90 gdk-pixbuf-thumbnailer wireplumber grub-glue-efi ps2pdfwr spdsend vlna mpiexec.hydra vboxsdl mutool x86_64-linux-gnu-gcov-tool-13 zgrep zip pw-encplay pdftosrc hp-colorcal pnmtops mmcli bitmap gst-tester-1.0 xgamma gnome-www-browser aconnect ping4 eyuvtoppm ntfsrecover alsabat qtdiag i386 quirks-handler loadunimap pamrestack hwloc-ps texosquery-jre8 ri3.2 gdal_calc.py ppmtomap nmcli epsffit findrule rmiregistry ctstat composite-im6.q16 msexpand purifyeps gtk-query-settings cifsiostat parkill memusagestat kpsestat x86_64-linux-gnu-gcov-tool pw-midiplay brltty-ttb shotwell pcdindex hwloc-distrib rview t1ascii nice pbmtocis rpcinfo qdoc3 texdirflatten smbcontrol f2py3.12 update-manager pic ilbmtoppm evince-thumbnailer cefconv openjade-1.4devel zipdetails weave ucf pinky nc.openbsd samba-regedit [ foo2oak tempfile luametatex adhocfilelist gnome-control-center pdfimages detex attr dig mpris-proxy runtexshebang stream-im6.q16 chsh toe tex4ebook gi-decompile-typelib pamtotiff pnmshear bdftruncate latexdiff-svn busybox xwd pamthreshold foo2hbpl2-wrapper xmlpatterns objcopy pamstretch systemd-confext ppdpo trust context apport-cli t1testpage pamditherbw pgmtoppm pstopnm debconf-apt-progress gnome-terminal.real dvilj4 gregorio ppmtoyuvsplit nvidia-smi dpkg-name psnup eatmydata du l2ping gnome-disk-image-mounter gftopk identify-im6.q16 pdfjam mapscrn hp-align ppmdraw lstopo dh_autotools-dev_updateconfig gcc-ranlib-13 pdfsig pzstd cd-fix-profile ppdmerge find dnsdomainname pdftohtml apt-key killall pbmtopk systemd-tty-ask-password-agent checklistings eqn xelatex-dev xwininfo unlink ppdc curl jpackage x86_64-linux-gnu-strip etex pamsharpness pgmdeshadow llmk ippfind tracker3-search md5sum hp-pkservice free pbmmake deja-dup texlua neqn pgmmake texlinks pfmtopam m-tx mkocp x86_64-linux-gnu-g++ resolvectl VBoxSDL atktopbm zstdcat foo2qpdl-wrapper gdal_retile.py chcon tdbtool delv umax_pp repc gnome-terminal csplit usb-devices xmlpatternsvalidator allec dpkg-trigger pdftex-quiet ps2ps srcredact dpkg-scanpackages kbd_mode lzgrep gtk-launch nvidia-debugdump systemd-ac-power lwp-mirror doxygen tclsh8.6 jfmutil gpgsplit virtualbox gio pct2rgb.py lowriter run-parts pdfcrop rlatopam gst-launch-1.0 pbmpscale latexmk sha224sum pbmminkowski dosepsbin btattach designer jsonpointer strace cpio rasttopnm zipinfo nl dumpmscat ppmntsc gnome-keyring-3 usbip head amstex dwp dbus-monitor nsenter pbmtolps hydra_nameserver ppmdim clear_console prezip tracker3-extract gdal_proximity.py ipcmk ppmtosixel glib-mkenums uname hwloc-bind openssl htmove foo2xqx xpmtoppm ogr2ogr pn2pdf pw-metadata groups ibus-setup nautilus-sendto SciTE c++filt hwloc-ls texconfig infobrowser ssh-keyscan pgmenhance rgrep pamfixtrunc gbklatex sbsiglist xz bg5+pdflatex f77 texlogsieve ls setxkbmap gettext.sh boltctl pbmtextps dvitype numastat spa-acp-tool pbmtox10bm factor x86_64-linux-gnu-ar amixer foo2zjs-pstops ctwill update-alternatives xfd rfcomm chardetect gdalcompare.py t1lint prove deallocvt gprofng brltty-tune ppmtopict racc3.2 cmake sudo dirmngr pbmto4425 rmdir ctie openvt scriptlive lwarpmk sensible-terminal teckit_compile ldapdelete mpifort select-editor ex psmerge aleph ssh unsquashfs thunderbird biber ubuntu-report infocmp convert-im6 latexpand mmafm spa-inspect glib-compile-resources pbmtoln03 pkttyagent axfer gdalmanage dvipdfmx leaftoppm pgmedge k cpan5.38-x86_64-linux-gnu pnmcolormap expiry lslocks m2300w-wrapper ntfscluster gtk4-query-settings diff3 unicode_stop pw-cat pkg-config latex-git-log dpkg apt ppmrainbow ogrinfo neotoppm bzfgrep amidi rdoc ppdhtml debconf-show ibus-table-createdb lesskey makeglossaries lzcat systemd-sysext pnmtotiff iceauth sjispdflatex pamstretch-gen latexrevise gdalsrsinfo lnstat pamcomp chkweb lsinitramfs gdal_grid lollipop rtla grub-syslinux2cfg ssh-argv0 pnmnlfilt sha512sum dpkg-shlibdeps VBoxAutostart mathspic musixflx snapshot xml2pmx dpkg-buildpackage gatttool mllatex pnmcat p11-kit pdfunite gnome-calculator x86_64-linux-gnu-elfedit odvitype journalctl lsipc cp afm2pl texconfig-dialog dh_perl_openssl unexpand srftopam pw-mon brltty groff tracker3-help bzcmp ps2eps pinentry-curses yelp prlimit strace-log-merge ntfssecaudit updmap-user jamo-normalize upbibtex qmlcachegen xkill tbl ppmtoacad pdftrimwhite fixwpps setmetamode gp-collect-app gtk4-launch fstopgm pw-top ximtoppm loimpress bzdiff xvminitoppm pipewire-pulse texdef crontab pamtable mkfifo lxterm lastb pamcut jsondiff ionice python3.12 mpirun.mpich pip3.12 mtxrun latex2nemeth xorriso ppmtopuzz chkdvifont x86_64-linux-gnu-gprof fixscribeps pnmrotate inetutils-telnet bzegrep tnftp mcookie ppmdcfont isympy3 ppmforge fuser updvitype qdbus deb-systemd-invoke mex oLschema2ldif tapestat gunzip rubikrotation setkeycodes omfonts x86_64-linux-gnu-gold firefox pdflatex cat h2ph yuvtoppm mako-render pkfix pydoc3 xdvi scp alsatplg lsof cloud-init-per paraview texplate msxlint mpirun scor2prt texindex texsis mountpoint xdg-open ibus pnmsplit ps virtualboxvm autoheader nvidia-cuda-mps-server wpexec sotruss ntfsfallocate soelim less repstopdf includeres lsmod t1unmac VBoxBalloonCtrl ping bg5+latex python3-config nmtui-hostname zfgrep ubuntu-drivers hd glib-compile-schemas ttfdump pamstereogram aclocal autoinst bibzbladd date odvicopy localectl pdvitype ifnames import-im6.q16 pamscale hp-setup varlinkctl ppmcolormask systemd-mount pybabel objdump psicc pnmtosir aptdcon gsftopk bzip2 gjs-console ldapexop ri setleds ppmmix kpseaccess perl5.38-x86_64-linux-gnu dpkg-distaddfile gendict qmake x86_energy_perf_policy chvt net pkexec qgltf pgmtopgm pgmoil on_ac_power gdalinfo lua run-with-aspell gprof hp-testpage mpiexec.mpich pamtoxvmini x11perfcomp ppmshadow git-shell rdoc3.2 vdir dvilj2p kerneloops-submit xkeystone gnome-font-viewer fakeroot-tcp cef5latex test gftodvi pamx pbmtomgr mpiCC systemd-escape c89-gcc update-notifier xdvi.bin htlatex rdbg3.2 gtk4-path-tool pnmtopclxl tracker3-endpoint bibdoiadd java fwupdmgr texconfig-sys pldd xcutsel dbxtool x86_64-linux-gnu-dwp systemd-run dpkg-statoverride ss libtoolize findmnt foo2lava qmi-firmware-update lily-rebuild-pdfs x86_64-linux-gnu-gcov-13 ppmwheel gencat pfb2pfa lodraw patgen ppmshift x-terminal-emulator lispmtopgm pbmnoise luaotfload-tool sar gnome-text-editor fgrep vim.tiny touch updmap-sys gmake texdiff env pampaintspill hbpldecode xman txixml2texi ppdi pamtowinicon pgrep pgmabel aa-features-abi rumakeindex xsm ot2kpx nmtui-edit pnmdepth apt-cdrom x86_64-linux-gnu-gcc-nm ijs_pxljr dvipdf x86_64-linux-gnu-addr2line envsubst shuf pnmnorm bwrap slabtop bluetoothctl dviluatex match_parens isdv4-serial-debugger lzdiff ppmtospu luahbtex ping6 autoreconf pnmpad gst-inspect-1.0 bundle3.2 ogrtindex systemctl powerprofilesctl pygmentize pnmconvol optex eps2eps dt2dv ogr_layer_algebra.py prime-supported htcopy lwp-dump keytool pamsplit base32 latexdef getent wc update-mime-database bzcat ppmtoilbm gkbd-keyboard-display multibibliography cc hciattach acpidbg hp-config_usb_printer ppm3d xdg-mime linux32 pathchk mksquashfs sensible-editor pdfbook2 diadia tangle namei a5booklet ps2frag texdoctk irb ps2pk sha1sum usbipd printafm allcm pamshadedrelief latex-dev mtxrun.lua dbus-update-activation-environment speaker-test dpkg-buildapi xdpyinfo aplay x86_64-linux-gnu-ld.gold pw-midirecord import tty psjoin gtk4-broadwayd bg5conv c99-gcc setpriv oomctl pnm2ppa gdal_sieve.py pkcheck geod otftotfm ps2ascii nautilus-autorun-software qdbusxml2cpp last pamaltsat gdalmdimtranslate rhythmbox mflua-nowin xrandr peekfd usb_printerid gnome-system-monitor hcitool gnome-terminal.wrapper mount nawk git-upload-archive grub-mklayout xwud g++-13 ipcrm texloganalyser hishrink gst-typefind-1.0 ld dvitodvi ofm2opl pamseq ketcindy ps2txt imagetops sessreg gpg-wks-client qmlbundle pamfix ntfs-3g python3 ppmtoyuv ntfsls gi-inspect-typelib ogrlineref gnome-power-statistics Xorg pw-dot readelf gdalattachpct.py baobab brltty-ktb vboxbugreport assistant pnminterp ssh-add ntfsdecrypt pamperspective grub-file od soffice icuinfo pamtosrf gdalmove.py simple-scan gdk-pixbuf-pixdata pcdovtoppm mf2pt1 hp-plugin-ubuntu gdaltindex pw-record cd-it8 qhelpconverter brushtopbm tcpdump expand deb-systemd-helper pbmtomatrixorbital join lspower setlogcons pkgdata lsb_release dbus-send c89 bdftopcf man pgmtopbm zstdmt pkaction xcalc x86_64-linux-gnu-gprofng pamtopfm pwdx epspdftk systemd-socket-activate lto-dump avstopam which.debianutils whoami debconf-communicate hitex ppmquant mandb bibmradd tic rletopnm f2py3 pamtosvg ppmtolj rbash dtxgen gtk4-builder-tool grog t1disasm git-upload-pack biburl2doi ciptool sbkeysync cloud-id instmodsh osirrox getkeycodes sozip komkindex ssh-import-id-gh qmlprofiler eplain ppmpat X platex-dev cmuwmtopbm systemd-umount zipcloak tee hp-doctor grub-mkrescue makeconv pnmscale st4topgm lspgpot nmtui resizepart extractres hp-firmware kanji-config-updmap-sys psselect lacheck xdg-icon-resource pamdepth rsync otangle dvicopy python3.12-config mtr-packet pnmtojbig partx vboxwebsrv pdfinfo bibtex.original pdvitomp json_pp sensible-pager 7zr uuidparse sldtoppm ip rstart isdv4-serial-inputattach nmtui-connect showchar gdal_polygonize.py xlsfonts infotopam mimeopen mtrace automake composite-im6 grub-mkpasswd-pbkdf2 gie pod2usage qmlimportscanner lowntfs-3g gdaladdo select-default-iwrap hp-logcapture erb loweb spa-json-dump xhlatex giftopnm vbox-img texhash httex checkcites x86_64-linux-gnu-objcopy x86_64-linux-gnu-gcc-ranlib-13 code mf-nowin xzless dviasm distro-info pango-segmentation dvilj4l gzexe ttf2afm fwupdtool bibtexu pdfopen dvi2fax lavadecode gamemoded fc-query ftp tracker3-export pamtodjvurle desktop-file-edit montage-im6.q16 gst-discoverer-1.0 ttf2pk
      /sbin: samba_kcc ippeveprinter rcvboxautostart-service update-passwd runqlen-bpfcc zic reset-trace-bpfcc dosfslabel biolatency-bpfcc update-pciids dmstats ebtables-nft-restore tclcalls-bpfcc biolatency-kp.bt filelife-bpfcc sudo_sendlog llcstat-bpfcc arptables-restore javastat-bpfcc pythoncalls-bpfcc cups-browsed select-default-wordlist tcpconnect-bpfcc filetop-bpfcc samba-gpupdate rtcwake ebtables-translate rcvboxweb-service usbmuxd update-updmap biosdecode aa-teardown grub-reboot update-icon-caches umount.nfs4 argdist-bpfcc pppdump sgdisk getweb remove-default-ispell blkzone ldconfig swapoff ip6tables-restore execsnoop.bt update-fonts-scale arptables-save switch_root tcpstates-bpfcc syscount-bpfcc deluser dnsmasq iwconfig chat e2label kvmexit-bpfcc loads.bt rpc.idmapd newusers writeback.bt resolvconf iptables-legacy-save request-key poweroff biostacks.bt zfsdist-bpfcc tcpretrans-bpfcc update-locale threadsnoop.bt e4crypt lpmove tarcat ip6tables-nft-restore statsnoop.bt alsa-info vboxconfig stackcount-bpfcc mkswap sysctl nfsdcld umount.nfs setuids.bt biosnoop-bpfcc funcinterval-bpfcc lpc ntfsclone locale-gen iwgetid halt fsck.fat dbslower-bpfcc arptables-nft pam_getenv update-rc.d mount.lowntfs-3g dirtop-bpfcc uobjnew badblocks cupsd update-language-lua iptables-apply tcpdrop-bpfcc ntfsundelete iwpriv ebtables-restore ugc profile-bpfcc blkid ModemManager funcslower-bpfcc ctrlaltdel applygnupgdefaults tcpretrans.bt mkfs.fat grub-mkdevicemap hdparm pidpersec.bt thermald wpa_cli update-grub2 getty wpa_action kerneloops cupsenable update-dictcommon-aspell softirqs-bpfcc update-ca-certificates vfscount-bpfcc rmmod iptables-nft-save iucode_tool adduser fsidd vigr shadowconfig ip6tables-translate sslsnoop.bt dmsetup biosnoop.bt rpcbind validlocale filegone-bpfcc update-language delgroup vdpa mountstats fstrim sofdsnoop-bpfcc fixparts pidpersec-bpfcc userdel ip6tables-save arptables-nft-save mount.ntfs ext4dist-bpfcc sudo_logsrvd pccardctl runuser rubyobjnew-bpfcc update-grub pythonstat-bpfcc aa-remove-unknown sshd apparmor_status uflow oomkill.bt iptables prime-offload tcpsynbl.bt make-ssl-cert nodestat-bpfcc logrotate javacalls-bpfcc netqtop-bpfcc arptables cupsdisable getcap aspell-autobuildhash mdflush.bt tcpsubnet-bpfcc depmod e2freefrag nfsref oomkill-bpfcc e2image faillock mount.ntfs-3g perlcalls-bpfcc javagc-bpfcc brltty-setup iptables-legacy-restore pwck fsck.cramfs tclflow-bpfcc deadlock-bpfcc cracklib-check perlstat-bpfcc logsave ufw rtmon cupsreject update-fmtutil uthreads addgroup getpcaps update-ieee-data pwunconv tune2fs capable-bpfcc vfscount.bt funclatency-bpfcc cppw update-catalog grub-install fsck.ext2 visudo tcpdrop.bt swapin.bt bitesize.bt nodegc-bpfcc setcap fsck.ext4 tcplife-bpfcc lpadmin syscount.bt exportfs capable.bt syncsnoop-bpfcc exitsnoop-bpfcc update-tl-stacked-conffile bindsnoop-bpfcc pwconv tcpconnect.bt sm-notify blkdiscard phpflow-bpfcc ip6tables-legacy-restore avahi-daemon runqlat.bt cracklib-unpacker update-cracklib cobjnew-bpfcc mkdosfs ispell-autobuildhash samba_upgradedns unix_update killsnoop-bpfcc fsfreeze pam_timestamp_check update-xmlcatalog cpgr grub-mkconfig gennorm2 dcstat-bpfcc uuidd gnome-menus-blacklist fsck update-java-alternatives kbdrate apparmor_parser findfs pam_extrausers_update samba_dnsupdate update-texmf-config ippevepcl wpa_supplicant tclstat-bpfcc tcpconnlat-bpfcc fsck.ext3 fsck.minix hardirqs-bpfcc losetup nfsdclddb pam_namespace_helper rpc.gssd ip6tables-apply mkinitramfs chmem groupadd gencmn klockstat-bpfcc NetworkManager cupsfilter bashreadline.bt update-language-def ssllatency.bt mdflush-bpfcc ntfsresize mkfs.msdos spice-vdagentd tplist-bpfcc tcptracer-bpfcc syncsnoop.bt runlevel pptp nfsidmap virtiostat-bpfcc service addgnupghome dmidecode alsa iptables-restore-translate xtables-nft-multi funccount-bpfcc update-initramfs sfdisk invoke-rc.d dpkg-preconfigure iptables-restore nft isosize update-dictcommon-hunspell rmt-tar partprobe blockdev aa-load gethostlatency.bt mkfs.ntfs cfdisk pam_extrausers_chkpwd key.dns_resolver offwaketime-bpfcc rpc.svcgssd nfsslower-bpfcc runqlen.bt ebtables-nft gethostlatency-bpfcc mklost+found trace-bpfcc update-language-dat aa-status javathreads-bpfcc samba_downgrade_db e2undo cron rtacct pppd wakeuptime-bpfcc ldattach e2mmpstatus zramctl telinit memleak-bpfcc rpcdebug grpck u-d-c-print-pci-ids select-default-ispell update-inetd bitesize-bpfcc mkfs.minix swapon accessdb undump.bt paperconfig samba ustat gensprep start-stop-daemon nfsiostat fsck.msdos tcpsynbl-bpfcc vfsstat.bt cgdisk mountsnoop-bpfcc chroot tcpaccept.bt tc setvtrgb modinfo nfsdcltrack escapesrc ip6tables-nft perlflow-bpfcc mkfs.ext3 modprobe agetty ip6tables-legacy-save mkfs.ext2 iwevent pivot_root pythonflow-bpfcc readahead-bpfcc mkntfs rubycalls-bpfcc ip6tables vcstime dumpe2fs cracklib-packer rpcinfo dcsnoop-bpfcc ttysnoop-bpfcc tcplife.bt update-shells unix_chkpwd mkfs.bfs cachestat-bpfcc vpddecode genccode ip6tables-legacy aptd dpkg-reconfigure pppstats plymouthd e2fsck installkernel usb_modeswitch init groupmod execsnoop-bpfcc openvpn update-gsfontmap compactsnoop-bpfcc pptpsetup cachetop-bpfcc chgpasswd opensnoop.bt mkfs.vfat xfsdist.bt rpc.mountd remove-default-wordlist mke2fs tipc dhcpcd grub-set-default resize2fs pwhistory_helper phpstat-bpfcc ldconfig.real btrfsslower-bpfcc pppoe-discovery e2scrub_all rfkill ntfslabel fileslower-bpfcc blkmapd xtables-monitor biolatency.bt update-fonts-alias devlink opensnoop-bpfcc naptime.bt dbstat-bpfcc shutdown threadsnoop-bpfcc eventlogadm ippeveps alsabat-test dosfsck biotop-bpfcc chpasswd readprofile icupkg start-statd solisten-bpfcc ip6tables-nft-save ethtool runqslower-bpfcc nfsdclnts rcvboxballoonctrl-service iucode-tool bluetoothd nfsdist-bpfcc insmod update-default-aspell rpcctl cpuunclaimed-bpfcc sulogin slabratetop-bpfcc cracklib-format debugfs rtkitctl capsh javaflow-bpfcc sslsniff-bpfcc cupsctl alsactl brltty killall5 lpinfo gdm3 iconvconfig drsnoop-bpfcc offcputime-bpfcc update-default-ispell nfnl_osf filefrag update-info-dir nfsstat btrfsdist-bpfcc lspcmcia ebtables-nft-save swaplabel xfsdist-bpfcc rsyslogd rpc.statd cpuwalk.bt ip6tables-restore-translate ownership nmbd lsmod setvesablank groupdel rcvboxdrv bridge usermod iptables-nft ipp-usb update-texmf statsnoop-bpfcc iptables-legacy mount.nfs on_ac_power install-sgmlcatalog cpudist-bpfcc hwloc-dump-hwdata ppchcalls-bpfcc create-cracklib-dict iptables-save tclobjnew-bpfcc ext4slower-bpfcc vfsstat-bpfcc e2scrub ebtables-save nologin rubyflow-bpfcc mkfs samba_spnupdate dcb phpcalls-bpfcc javaobjnew-bpfcc ntfscp grpunconv tcpcong-bpfcc vipw dcsnoop.bt e4defrag pam-auth-update rubygc-bpfcc pythongc-bpfcc prime-switch rubystat-bpfcc usb_modeswitch_dispatcher iptables-translate bpflist-bpfcc rdmaucma-bpfcc chcpu mount.fuse iwspy fatlabel mkfs.cramfs update-fonts-dir genl bashreadline-bpfcc groupmems wipefs update-default-wordlist arpd tcpaccept-bpfcc mount.nfs4 cupsaccept tcprtt-bpfcc ucalls inject-bpfcc useradd parted fsck.vfat sssd iptables-nft-restore criticalstat-bpfcc bpftool fdisk xfsslower-bpfcc mkhomedir_helper gdisk mysqld_qslower-bpfcc rpc.nfsd blkdeactivate runqlat-bpfcc mount.fuse3 fstab-decode biopattern-bpfcc tcptop-bpfcc smbd zfsslower-bpfcc shmsnoop-bpfcc get-quirk-options grpconv nfsconf anacron killsnoop.bt update-secureboot-policy grub-probe rmt ub-device-create umount.udisks2 iwlist add-shell ip reboot showmount arptables-nft-restore biolatpcts-bpfcc saned grub-macbless netplan ebtables xtables-legacy-multi remove-shell mkfs.ext4
      /bin: lconvert pamdeinterlace resize info arm2hpdl gtk-update-icon-cache ld.bfd pamdice qmltestrunner cefpdflatex tracker3-reset seahorse bpftrace-aotrt texi2dvi nvidia-settings faked-tcp gdallocationinfo vboxheadless nvidia-ngx-updater gp-display-text bash gst-stats-1.0 znew cvt gp-display-html gpgparsemail pamshuffle ppmtopi1 pinentry pamunlookup mpif90.mpich apt-sortpkgs xdg-user-dir pkmon pamfunc tzselect pwd gcov showrgb pamtojpeg2k gcov-tool-13 im-launch pktogf qmljs mbim-network screendump migratepages ovp2ovf r-mpost pdfetex sg chage x86_64 bbl2bib cefspdflatex cgi-fcgi simpdftex gnome-logs ptx helpztags sha384sum gpg vmstat dpkg-gencontrol pnmtile rawtopgm gdal_edit.py X11 411toppm pbmupc pbmtolj sadf gcc-ar gnome-disks column x86_64-linux-gnu-pkgconf ln xbiff pamtohdiff ldapcompare yuy2topam pamtilt pambackground gapplication psbook 7z cct VirtualBox samba-tool qmlviewer hipercdecode py3compile bundler3.2 nstat host brltty-trtxt chfn gs tdbrestore texdoc disdvi apport-bug pmxab git-latexdiff gdmflexiserver gcc-ar-13 uclampset pro mpiexec wpctl cameratopam pnmtoplainpnm transset hpcdtoppm qml c99 fc-validate devnag foo2lava-wrapper whatis rpcgen rstartd l4p-tmpl split gcc gfortran-13 systemd-cat dirname m4 xzfgrep bluetooth-sendto switcherooctl lsusb mpicc.mpich ntfsinfo smbstatus gdaltransform animate x86_64-linux-gnu-g++-13 display m2300w xzmore mag ppmfade pst2pdf palmtopnm xdg-desktop-menu dpkg-mergechangelogs pamtooctaveimg hwloc-diff pdfatfi esc-m dvipng sane-find-scanner static-sh foo2oak-wrapper mogrify-im6 nslookup aclocal-1.16 nm corelist wish hydra_pmi_proxy gnome-characters musixtex awk netaddr m17n-db linguist id webquiz poff do-release-upgrade ppmtoicr dmesg vftovp unattended-upgrades ssh-import-id dpkg-divert dbus-run-session pamtoqoi appres typeprof3.2 xset sleep vboxballoonctrl paste pmap x86_64-linux-gnu-ranlib xkbcomp pbmpage pnmsmooth timedatectl pbmlife gcc-13 pnmtoxwd mft gtbl rubibtex xclipboard c_rehash lexgrog lupdate ppmtogif mkindex xinput setterm gpic ogrmerge.py pgmtosbig qtchooser prime-select dviinfox pamfile pnmtofits pnmhistmap tracker3-import egrep lpstat ttf2kotexfont dd pamcrater resizecons wbmptopbm kbdinfo gencnval pamflip pw-play ppmhist troff pbmtomacp ppmnorm mpicc pnmalias ssh-keygen xmodmap qdoc dvidvi pidwait ipptool pktopbm getmapdl xfontsel rev localc doxyindexer dvips base64 podchecker driverless-fax gpu-manager mesa-overlay-control.py xdg-dbus-proxy pmpost gem3.2 uil dpkg-vendor t1binary pybabel-python3 lsmem qgis_process pnminterp-gen rake sunicontopnm dh_doxygen latexdiff-cvs pamtofits pamoil tikztosvg ntfscat enchant-lsmod-2 showconsolefont spice-vdagent pamarith who ppmtoleaf gdalenhance kpsereadlink dvisvgm ppmtompeg pamtotga pamsharpmap lto-dump-13 cefslatex gpgconf obexctl psfxtable mfplain sdiff fmtutil tecla brltty-hid dvihp sh pamtompfont aa-exec ed imgtoppm pdfcsplain x86_64-linux-gnu-gp-display-html compare pkfix-helper icontopbm setfacl xterm gem luatex foo2xqx-wrapper pamendian extractbb xedit dpkg-source patch latex xmore muraster pw-link moc latexdiff-hg pod2texi pbmtoescp2 jq foo2hbpl2 cmp gcr-viewer-gtk4 gfortran min12xxw py3clean automake-1.16 dvipos preunzip cksum ntfscmp pamlevels tlmgr addpart ctwill-twinx x86_64-linux-gnu-readelf pbmtosunicon foo2zjs-wrapper pdfseparate pamaddnoise mkpic texfindpkg splitindex time splain dh_bash-completion setarch nano fallocate md5sum.textutils kpsewhich ltx2crossrefxml systemd-path pkgconf tclsh newgrp hp-query mpichversion psfstriptable gettext dvilj open pod2man xmltex pkcon ldapadd pod2text feynmf gstreamer-codec-install fixdlsrps pdftexi2dvi x86_64-linux-gnu-cpp vboximg-mount link fiascotopnm mpifort.mpich vi x86_64-linux-gnu-gcov-dump apt-add-repository vpl2vpl evince pnmcrop qdbusviewer alsamixer pgmmorphconv col gdk-pixbuf-csource ddbugtopbm write lpoptions foo2zjs-icc2ps printenv pslatex zipnote pbmto10x hwloc-calc rdma eog texi2pdf remmina-file-wrapper pygettext3.12 zeisstopnm cachepic otfinfo pidstat timeout bmptoppm mt isympy ybmtopbm kanji-config-updmap-user g++ unzip lstopo-no-graphics pcxtoppm systemd-sysusers grops ptardiff ppmtoneo lpr nvidia-detector xdg-user-dirs-update apg pidof gslp invgeod pnmgamma lzma brltty-clip debconf-copydb iostat texosquery pamtogif de-macro psidtopgm ntfsfix pw-config ar gtk-builder-tool gdal2xyz.py sjislatex strip unzipsfx systemd-machine-id-setup pnmtofiasco lrelease unshare spd-say ovf2ovp xinit pythontex fixtpps red snice ttftotype42 install-info top autoscan tar login scite lzegrep pager kanji-fontmap-creator streamzip pw-dump nm-applet pnmtopng bib2gls getopt fc-scan make nisdomainname qmllint nearblack xstdcmap catman htxetex hostname geqn rm systemd perli11ndoc numfmt pnminvert gnome-thumbnail-font platex gnuplot unity-scope-loader locale-check lscpu pktype lesspipe hp-timedate xxd ppmtobmp a5toa4 ntfstruncate xsetmode jpegtopnm file2brl txtconv addr2line su psfaddtable tracker3-sql pon pammixmulti fc-pattern arecord h2xs hwloc-annotate wovf2ovp pi3topbm networkctl xcursorgen sgitopnm piconv dvilualatex mvxattr zless perf sensible-browser slxdecode x86_64-linux-gnu-gcov-dump-13 rnano hydra_persist pf2afm x86_64-linux-gnu-nm hp-scan pbmtogem xargs spctoppm x86_64-linux-gnu-objdump convbkmk scp-dbus-service pamrgbatopng xsetwacom ppmflash pamlookup ppmtojpeg hostid pstree.x11 makeglossaries-lite x86_64-linux-gnu-gp-archive ocamlruni desktop-file-install mkfontdir Xephyr latexdiff-rcs mk4ht synctex sss_ssh_authorizedkeys pamsistoaglyph pyproj pltotf hwloc-info ppmtomitsu setfattr f2py xetex pdb3 mscompress tabs rake3.2 x-www-browser glib-gettextize cfftot1 gtester-report systemd-cgls mendex identify-im6 notify-send fig4latex ldapmodify chklref x86_64-linux-gnu-gp-display-src ht ps2pdf14 kbxutil prezip-bin linux-version ps2pdf13 animate-im6 aplaymidi mktexfmt as grub-mkstandalone Xwayland lzmainfo prtstat utf8mex bzexe x86_64-linux-gnu-python3-config migspeed pamtopnm x86_64-linux-gnu-as dbwrap_tool pango-view makejvf ppmtopcx git-receive-pack qmlmin iecset ps4pdf tex4ht png-fix-itxt localedef tracker3-index fixpsditps sbsign qmlscene pamtris ldapsearch remmina foo2hp2600-wrapper lily-image-commands ppmtowinicon zstdless pgmkernel x86_64-linux-gnu-gcc-13 installfont-tl sbattach dpkg-checkbuilddeps lofromtemplate l2test gnome-session-properties uppltotf sbverify winicontoppm dpkg-split gdm-screenshot update-desktop-database dpkg-query x86_64-linux-gnu-gfortran pbmtoxbm texcount fontinst ppmmake oakdecode yuvsplittoppm cpan linux-update-symlinks lily-glyph-commands x86_64-linux-gnu-size sudoreplay GET pfbtopfa unopkg ranlib remmina-gnome ppmdist orca apt-ftparchive fprintd-verify systemd-notify prepmx r-pmpost projinfo autoconf paperconf pnmquantall m2400w fprintd-delete xprop hwe-support-status pambrighten pnmmontage ppmlabel colrm gcov-tool pbibtex pnmremap iptables-xml bibexport dviconcat systemd-firstboot uptftopl tdbbackup unzstd gdal_footprint whereis dvibook showkey getconf tracker3 pyserial-ports plog grotty latexfileversion getfacl winicontopam gtk4-encode-symbolic-svg chmod whoopsie pinentry-gnome3 VirtualBoxVM gpgsm foo2slx-wrapper nvidia-cuda-mps-control rgb3toppm arlatex fixfmps apgbfm viewres realpath check-language-support pdfannotextractor pdftocairo gnome-shell-extension-tool unlzma derb dviselect mgrtopbm perl5.38.2 nm-connection-editor ua exceltex kmod irb3.2 pbmtoepsi pl2pm foo2slx fixwwps qoitopam pammixinterlace xdg-email sirtopnm qgis ld.so dvipdft bzgrep conjure gdal2tiles.py xelatex foo2qpdl pcre2-config orca-dm-wrapper pamphletangler cpupower VBox mdatopbm pamundice p7zip rrsync mkdir proj ssh-copy-id json-patch-jsondiff bashbug funzip gsettings unxz editor allneeded ulqda getfattr stream-im6 efibootmgr debconf pamslice ngettext hexdump fixpspps broadwayd foo2ddst pamgetcolor xmag texfot usbreset pambayer zipgrep qdbuscpp2xml httexi uxterm ec2metadata nproc gencfu rygel setsid xsetpointer xditview hipstopgm x86_64-linux-gnu-lto-dump-13 mf gnome-keyring ps2ps2 apt-cache mktextfm mpstat opl2ofm pipewire lspci hp-plugin lessfile zdump pamsumm ppmchange faked-sysv qgis.bin dh_autotools-dev_restoreconfig dvipdfm apt-extracttemplates genrb py3versions plymouth dvi2tty grub-mknetdir pamtopdbimg xmessage pnmfile cloud-init strings manpath sudoedit epspdf pinentry-x11 transicc cistopbm qtconfig qtplugininfo pngtopnm kpsewhere linux-boot-prober fakeroot display-im6 pbmtoybm scriptreplay pamsummcol cpp gjs btmgmt driverless dconf expr pdbedit libpng16-config mtvtoppm pnmmercator pnmtojpeg sar.sysstat dh_numpy3 makeinfo dvired pbmtoppa mktexpk pw-cli gdb-add-index VBoxManage mpivars latex2man pdfmex pamstack desktop-file-validate mimetype pgmnoise rcc tr ldapwhoami rendercheck bibtex8 gi-compile-repository f95 vprerex telnet chardet pnmquant spa-resample dpkg-gensymbols ipod-read-sysinfo-extended gold lp_solve loadkeys debconf-set-selections splitfont dbus-daemon zcat xdg-user-dirs-gtk-update pbmtoascii cs2cs choom sjisconv gpg-agent psfgettable systemd-tmpfiles composite gp-archive gdalmdiminfo tset lsattr texfind basename xorrecord fc-cache grub-mkimage pdfxup mpicxx gpasswd bmtoa outocp udisksctl grub-mkfont basenc autosp file dh_installtex ipcs nm-online genbrk fprintd-list nautilus unattended-upgrade upmpost preconv prerex c++ ucfq pstree x86_64-linux-gnu-gi-inspect-typelib pdftotext pdfxmltex hilatex apt-get mpicxx.mpich mkjobtexmf gnome-session-quit lastlog r-upmpost sum asy x86_64-linux-gnu-gcov gp-display-src gdal_rasterize texlogfilter sqfscat mktexmf conjure-im6.q16 runcon x86_64-linux-gnu-pkg-config pw-reserve ppmspread captoinfo ppmtoterm enchant-2 nvidia-persistenced ubuntu-bug csplain bpftrace bzless texluac koi8rxterm tput ctanify btmon linkicc tl-paper macptopbm digestif lessecho zcmp display-im6.q16 typeoutfileinfo ppmdither pamtouil lualatex ppmglobe vboxmanage enc2xs lualatex-dev ischroot gdbus pamvalidate gio-querymodules dir ppmtopj gtester dbus-uuidgen colormgr mkgrkindex arch samba-log-parser pip pdfjadetex xqxdecode autom4te add-apt-repository luac grub-render-label gnome-language-selector heif-thumbnailer gcc-nm gamma4scanimage smbpasswd texliveonfly gnmmanage evince-previewer ul gcalccmd axohelp script qhelpgenerator spd-conf pkill pango-list x86_64-linux-gnu-gp-collect-app dpkg-genbuildinfo ppmcolors ruby snapctl asciitopgm identify stream cd-iccdump x86_64-linux-gnu-gcc ypdomainname spottopgm busctl deweb systemd-stdio-bridge pbmtopi3 lsblk gpg-connect-agent true mokutil gresource gobject-query mkfontscale pbmtoepson urlbst pdftops uconv HEAD grub-mkrelpath latexdiff-vc gdal_viewshed escp2topbm x11perf gnuplot-qt dvigif file-roller ubuntu-security-status translit tgatoppm aseqdump aa-enabled flock pbmtog3 passwd inimf mogrify-im6.q16 kanji-config-updmap updmap VBoxHeadless t1reencode xcmsdb pbmtoplot qlalr g3topbm erb3.2 pamtopam xsetroot euptex pk2bm pnmscalefixed gbkpdflatex ntfsmove latex-papersize cpack gdb fprintd-enroll ddstdecode gtk4-update-icon-cache xorrisofs pbmtomrf lcf airscan-discover ispell-wrapper perlthanks 7za x-session-manager totem calibrate_ppa linux64 jsonschema dircolors cut kill qgis_process.bin chktex tracker3-info systemd-inhibit lwp-request pnmtopnm svn-multi umount latexdiff pamtohtmltbl uic3 jexec logname cweave pbmtonokia gpgtar xconsole nvidia-bug-report.sh zstdgrep ppmrough gnome-keyring-daemon spix pdf2dsc unicode_start foomatic-rip mpif77 x-grass gsdj aspell x86_64-linux-gnu-gp-display-text pnmtorle pbmtowbmp cancel psresize x86_64-linux-gnu-c++filt t4ht dirmngr-client rsync-ssl zenity qmlplugindump sync sqfstar sftp gnome-extensions fmt make4ht mousetweaks pw-loopback x86_64-linux-gnu-gcc-ranlib usb-creator-gtk cef5pdflatex chown ppmcie pbmclean jpeg2ktopam gdal_translate ppmtotga xzdiff sbvarsign ppmtoascii lp atobm dpkg-buildflags debian-distro-info mt-gnu pfarrei encguess pampop9 scanimage speech-dispatcher xvidtune dpkg-buildtree update_rubygems jbigtopnm vcs-run gdalwarp ldappasswd ppltotf gnome-clocks ppmtoppm mtr pbmtodjvurle pi1toppm taskset pbmtoptx updvitomp ld.gold pamenlarge cd-create-profile pbmtext precat ptar hostnamectl pgmramp pnmhisteq libreoffice mogrify mktexlsr ppmtoapplevol snapfuse sputoppm keyctl e2pall icuexportdata chrt pip3 ldapurl ceflatex hp-clean systemd-creds dpkg-deb pbmmask twill qmi-network os-prober xev pnmtorast ucs2any uuidgen mpif77.mpich ntfsusermap domainname fold hp-makeuri convert lwp-download ctest gftype ctan-o-mat truncate delpart gouldtoppm rctest pamgradient perldoc memusage pnmnoraw x86_64-linux-gnu-ld ppmddumpfont alsaloop routel pnmtoddif pfb2t1c gsbj x86_64-linux-gnu-python3.12-config latexdiff-fast bzip2recover x86_64-linux-gnu-gcc-ar-13 mawk convertgls2bib ppmtorgb3 dumpkeys ntfs-3g.probe mknod xdg-screensaver tdbbackup.tdbtools kmodsign oclock xsubpp pydoc3.12 nroff opldecode gtk4-rendernode-tool echo pbmreduce ruby3.2 sprof laptop-detect fusermount3 shasum pc1toppm pngfix syntax_suggest3.2 gcov-dump-13 canberra-gtk-play pyserial-miniterm sed foo2zjs tsort JxrDecApp memhog tdbdump ppmtv mmpfb wayland-scanner pico hbf2gf VBoxBugReport ppmtoarbtxt ico foo2hiperc t1rawafm wovp2ovf ginstall-info pdffonts scalar aseqnet t1mac uptex pbmtocmuwm gemtopnm make-first-existing-target bc rawtoppm ldapmodrdn w compare-im6 pnmmargin pnmarith rpdfcrop pgmmedian uplatex-dev df hwloc-gather-cpuid gdm-config ttf2tfm gdal_fillnodata.py loffice duplicity pdb3.12 tac pdfdetach dpkg-scansources mdig gcr-viewer ctangle findhyph ppmtopjxl upower rbs3.2 colcrt pnmflip clear pdf2ps rename.ul pbmtozinc alsaucm xauth zjsdecode fmtutil-sys zegrep t1dotlessj browse dvilualatex-dev whoopsie-preferences tex2aspc pnmpsnr loginctl pooltype gcov-13 slogin xkbprint comm xvinfo elfedit pgmtexture update-perl-sax-parsers qrttoppm ubuntu-distro-info ptftopl pamexec pnmcut setpci aspell-import look fragmaster pdbimgtopam zipsplit pixeltool uncompress brltty-atb pampick pgmslice wdctl printer-profile zmore jsonpatch wall pipewire-avb pygettext3 lzless debconf-escape man-recode wish8.6 tail apropos foo2hiperc-wrapper codepage editres mesg fusermount pbmtoatk reset t1c2pfb pw-dsdplay word-list-compress t1asm pamchannel xzgrep context.lua ctanupload doublecmd b2sum doxysearch.cgi pdftoppm hwloc-compress-dir ppmtoxpm netcat gst-play-1.0 qvkgen systemd-cryptsetup fc-match gdal_contour ubuntu-advantage gzip gsdj500 ibus-daemon gdalbuildvrt xdg-desktop-icon nsupdate stty htmex ppmbrighten qtattributionsscanner testparm xrefresh spa-monitor markdown_py cupstestppd grep pamwipeout snap thumbpdf ps2pdf12 otp2ocp gnome-shell-test-tool ocamlrund lzcmp diff pamtoavs ocamlrun systemd-delta libmkl_core.so trace-cmd xdvipdfmx ppmquantall totem-video-thumbnailer udevadm usbhid-dump seq grub-fstest which tex dpkg-genchanges json_xs dpkg-parsechangelog pnmtopalm qcollectiongenerator xload dvilj6 hex2hcd xclock listbib pstoedit conjure-im6 intel-virtual-output afm2tfm sdptool markdown-it dv2dt sha256sum gdal_pansharpen.py bbox pgmminkowski growpart pgmhist systemd-id128 pngtopam migrate-pubring-from-classic-gpg gcc-ranlib fakeroot-sysv mpost mk_modmap rhythmbox-client pbmtogo rtstat jadetex fixwfwps xzegrep pnmstitch printf l3build pamcat dvitomp pgmtost4 xbmtopbm tload xlsatoms bg5pdflatex libmkl_intel_lp64.so cpp-13 anytopnm profiles ppmdmkfont systemd-hwdb gsnd zforce gnome-session ps2epsi nohup faillog libnetcfg texfont grub-script-check bundledoc xzcat git x86_64-linux-gnu-ld.bfd session-migration histretch savelog tpic2pdftex software-properties-gtk tftopl gemtopbm install chgrp false latexdiff-git fonttosfnt vptovf ppmtopgm luac5.1 lzfgrep pdflatexpicscale mrftopbm systemd-analyze nvidia-sleep.sh setfont tracepath pphs vmwarectrl cef5conv hp-check systemd-detect-virt xdriinfo sort eject fmtutil-user mltex hwloc-gather-topology chattr makedtx fitstopnm dpkg-realpath sbigtopgm pbmtopgm pamrecolor pr numactl zdiff a2ping xdvi-xaw uic tie brltty-lscmds sty2dtx libpng-config ps2pdf arecordmidi gcc-nm-13 gted gtk-encode-symbolic-svg pw-profiler pbmtobbnbg pnmindex ctanbib systemd-ask-password montage autoupdate stat efibootdump gdal_create utmpdump size foo2hp bmptopnm animate-im6.q16 bibtex wget dash fc-list pamgauss apt-config ppmtoeyuv mflua apport-collect pbmtomda oem-getlogs grass xlsclients authorindex gdbtui dh_installxmlcatalogs xkbwatch skill bzmore qmleasing kpsetool gdbus-codegen latexindent gnome-shell ntfswipe wofm2opl fc-cat tifftopnm lomath cluttex upmendex pbmtoibm23xx lslogins projsync tracker3-sparql watch pbmtopsg3 bunzip2 pamfind mv pammosaicknit transmission-gtk yplan pnmtotiffcmyk tificc x86_64-linux-gnu-lto-dump x86_64-linux-gnu-gcc-ar gnome-calendar gtf extconv import-im6 bluemoon afm2afm xkbbell ckbcomp getafm dvispc pamtopng pgmbentley shred epstopdf vpl2ovp pnmtosgi gcov-dump view gst-device-monitor-1.0 mkofm perltex pslog ltximg sharesec iconv setupcon gslj xindex pamhomography texi2any lua5.1 xgc pedigree xdg-settings systemd-cryptenroll ptargrep nvidia-powerd x86_64-linux-gnu-gi-decompile-typelib gpgv networkd-dispatcher more ldd wpa_passphrase grub-kbdcomp convert-im6.q16 initex lzmore pod2html xhost infotocap chacl latex-wordcount lprm uniq gnmanalyse xbrlapi hciconfig lshw qml1plugindump gipddecode svgtopam pnmenlarge nvidia-xconfig kpsexpand watchgnupg ipod-time-sync ppmtouil dc locale smproxy grub-menulst2cfg dpkg-architecture xeyes linux-check-removal pdflatex-dev eptex monitor-sensor hp-probe perl mptopdf qtpaths foo2ddst-wrapper depythontex pw-mididump ltxfileinfo tracker3-daemon xrdb brltty-morse ssh-agent tracker3-status chartex pstops listings-ext POST apt-mark jpgicc x86_64-linux-gnu-cpp-13 invproj xkbvleds compare-im6.q16 x86_64-linux-gnu-gcc-nm-13 tracker3-tag fgconsole whiptail grub-mount pdfclose x86_64-linux-gnu-strings mbimcli lsns qpdldecode im-config qmicli gcore cjk-gs-integrate eutp perlbug ppmrelief ebb gnome-help ltx2unitxt grub-editenv sfconv appstreamcli uplatex texosquery-jre5 systemd-repart apport-unpack x86_64-linux-gnu-gfortran-13 sss_ssh_knownhostsproxy pnmcomp unmkinitramfs xzcmp pgmcrater bioradtopgm wopl2ofm xkbevd hp-levels yes pjtoppm gdaldem logger xlogo brltty-ctb systemd-cgtop pipewire-aes67 zstd dbus-cleanup-sockets fc-conflist pamrubber ptex JxrEncApp x86_64-linux-gnu-gi-compile-repository pygmentex pnmpaste dpkg-maintscript-helper gnome-session-inhibit pdftex gdal_merge.py ssh-import-id-lp arara bg5latex montage-im6 lpq pammasksharpen VBoxDTrace libmkl_intel_thread.so rgb2pct.py pbmtoicon listres vstp pmxchords mpic++ hp-info ctwill-refsort pamedge grdctl users vboxautostart vpe ghostscript htxelatex pamhue thinkjettopbm perlivp kernel-install ucfr kpsepath glib-genmarshal pgmtofs cvtsudoers inputattach makeindex openjade hardlink pdfattach xwdtopnm hwloc-patch uptime cefsconv stdbuf readlink ptex2pdf turbostat nmblookup startx hdifftopam nc pgmtolispm renice mktemp mkt1font pgmnorm mpif90 gdk-pixbuf-thumbnailer wireplumber grub-glue-efi ps2pdfwr spdsend vlna mpiexec.hydra vboxsdl mutool x86_64-linux-gnu-gcov-tool-13 zgrep zip pw-encplay pdftosrc hp-colorcal pnmtops mmcli bitmap gst-tester-1.0 xgamma gnome-www-browser aconnect ping4 eyuvtoppm ntfsrecover alsabat qtdiag i386 quirks-handler loadunimap pamrestack hwloc-ps texosquery-jre8 ri3.2 gdal_calc.py ppmtomap nmcli epsffit findrule rmiregistry ctstat composite-im6.q16 msexpand purifyeps gtk-query-settings cifsiostat parkill memusagestat kpsestat x86_64-linux-gnu-gcov-tool pw-midiplay brltty-ttb shotwell pcdindex hwloc-distrib rview t1ascii nice pbmtocis rpcinfo qdoc3 texdirflatten smbcontrol f2py3.12 update-manager pic ilbmtoppm evince-thumbnailer cefconv openjade-1.4devel zipdetails weave ucf pinky nc.openbsd samba-regedit [ foo2oak tempfile luametatex adhocfilelist gnome-control-center pdfimages detex attr dig mpris-proxy runtexshebang stream-im6.q16 chsh toe tex4ebook gi-decompile-typelib pamtotiff pnmshear bdftruncate latexdiff-svn busybox xwd pamthreshold foo2hbpl2-wrapper xmlpatterns objcopy pamstretch systemd-confext ppdpo trust context apport-cli t1testpage pamditherbw pgmtoppm pstopnm debconf-apt-progress gnome-terminal.real dvilj4 gregorio ppmtoyuvsplit nvidia-smi dpkg-name psnup eatmydata du l2ping gnome-disk-image-mounter gftopk identify-im6.q16 pdfjam mapscrn hp-align ppmdraw lstopo dh_autotools-dev_updateconfig gcc-ranlib-13 pdfsig pzstd cd-fix-profile ppdmerge find dnsdomainname pdftohtml apt-key killall pbmtopk systemd-tty-ask-password-agent checklistings eqn xelatex-dev xwininfo unlink ppdc curl jpackage x86_64-linux-gnu-strip etex pamsharpness pgmdeshadow llmk ippfind tracker3-search md5sum hp-pkservice free pbmmake deja-dup texlua neqn pgmmake texlinks pfmtopam m-tx mkocp x86_64-linux-gnu-g++ resolvectl VBoxSDL atktopbm zstdcat foo2qpdl-wrapper gdal_retile.py chcon tdbtool delv umax_pp repc gnome-terminal csplit usb-devices xmlpatternsvalidator allec dpkg-trigger pdftex-quiet ps2ps srcredact dpkg-scanpackages kbd_mode lzgrep gtk-launch nvidia-debugdump systemd-ac-power lwp-mirror doxygen tclsh8.6 jfmutil gpgsplit virtualbox gio pct2rgb.py lowriter run-parts pdfcrop rlatopam gst-launch-1.0 pbmpscale latexmk sha224sum pbmminkowski dosepsbin btattach designer jsonpointer strace cpio rasttopnm zipinfo nl dumpmscat ppmntsc gnome-keyring-3 usbip head amstex dwp dbus-monitor nsenter pbmtolps hydra_nameserver ppmdim clear_console prezip tracker3-extract gdal_proximity.py ipcmk ppmtosixel glib-mkenums uname hwloc-bind openssl htmove foo2xqx xpmtoppm ogr2ogr pn2pdf pw-metadata groups ibus-setup nautilus-sendto SciTE c++filt hwloc-ls texconfig infobrowser ssh-keyscan pgmenhance rgrep pamfixtrunc gbklatex sbsiglist xz bg5+pdflatex f77 texlogsieve ls setxkbmap gettext.sh boltctl pbmtextps dvitype numastat spa-acp-tool pbmtox10bm factor x86_64-linux-gnu-ar amixer foo2zjs-pstops ctwill update-alternatives xfd rfcomm chardetect gdalcompare.py t1lint prove deallocvt gprofng brltty-tune ppmtopict racc3.2 cmake sudo dirmngr pbmto4425 rmdir ctie openvt scriptlive lwarpmk sensible-terminal teckit_compile ldapdelete mpifort select-editor ex psmerge aleph ssh unsquashfs thunderbird biber ubuntu-report infocmp convert-im6 latexpand mmafm spa-inspect glib-compile-resources pbmtoln03 pkttyagent axfer gdalmanage dvipdfmx leaftoppm pgmedge k cpan5.38-x86_64-linux-gnu pnmcolormap expiry lslocks m2300w-wrapper ntfscluster gtk4-query-settings diff3 unicode_stop pw-cat pkg-config latex-git-log dpkg apt ppmrainbow ogrinfo neotoppm bzfgrep amidi rdoc ppdhtml debconf-show ibus-table-createdb lesskey makeglossaries lzcat systemd-sysext pnmtotiff iceauth sjispdflatex pamstretch-gen latexrevise gdalsrsinfo lnstat pamcomp chkweb lsinitramfs gdal_grid lollipop rtla grub-syslinux2cfg ssh-argv0 pnmnlfilt sha512sum dpkg-shlibdeps VBoxAutostart mathspic musixflx snapshot xml2pmx dpkg-buildpackage gatttool mllatex pnmcat p11-kit pdfunite gnome-calculator x86_64-linux-gnu-elfedit odvitype journalctl lsipc cp afm2pl texconfig-dialog dh_perl_openssl unexpand srftopam pw-mon brltty groff tracker3-help bzcmp ps2eps pinentry-curses yelp prlimit strace-log-merge ntfssecaudit updmap-user jamo-normalize upbibtex qmlcachegen xkill tbl ppmtoacad pdftrimwhite fixwpps setmetamode gp-collect-app gtk4-launch fstopgm pw-top ximtoppm loimpress bzdiff xvminitoppm pipewire-pulse texdef crontab pamtable mkfifo lxterm lastb pamcut jsondiff ionice python3.12 mpirun.mpich pip3.12 mtxrun latex2nemeth xorriso ppmtopuzz chkdvifont x86_64-linux-gnu-gprof fixscribeps pnmrotate inetutils-telnet bzegrep tnftp mcookie ppmdcfont isympy3 ppmforge fuser updvitype qdbus deb-systemd-invoke mex oLschema2ldif tapestat gunzip rubikrotation setkeycodes omfonts x86_64-linux-gnu-gold firefox pdflatex cat h2ph yuvtoppm mako-render pkfix pydoc3 xdvi scp alsatplg lsof cloud-init-per paraview texplate msxlint mpirun scor2prt texindex texsis mountpoint xdg-open ibus pnmsplit ps virtualboxvm autoheader nvidia-cuda-mps-server wpexec sotruss ntfsfallocate soelim less repstopdf includeres lsmod t1unmac VBoxBalloonCtrl ping bg5+latex python3-config nmtui-hostname zfgrep ubuntu-drivers hd glib-compile-schemas ttfdump pamstereogram aclocal autoinst bibzbladd date odvicopy localectl pdvitype ifnames import-im6.q16 pamscale hp-setup varlinkctl ppmcolormask systemd-mount pybabel objdump psicc pnmtosir aptdcon gsftopk bzip2 gjs-console ldapexop ri setleds ppmmix kpseaccess perl5.38-x86_64-linux-gnu dpkg-distaddfile gendict qmake x86_energy_perf_policy chvt net pkexec qgltf pgmtopgm pgmoil on_ac_power gdalinfo lua run-with-aspell gprof hp-testpage mpiexec.mpich pamtoxvmini x11perfcomp ppmshadow git-shell rdoc3.2 vdir dvilj2p kerneloops-submit xkeystone gnome-font-viewer fakeroot-tcp cef5latex test gftodvi pamx pbmtomgr mpiCC systemd-escape c89-gcc update-notifier xdvi.bin htlatex rdbg3.2 gtk4-path-tool pnmtopclxl tracker3-endpoint bibdoiadd java fwupdmgr texconfig-sys pldd xcutsel dbxtool x86_64-linux-gnu-dwp systemd-run dpkg-statoverride ss libtoolize findmnt foo2lava qmi-firmware-update lily-rebuild-pdfs x86_64-linux-gnu-gcov-13 ppmwheel gencat pfb2pfa lodraw patgen ppmshift x-terminal-emulator lispmtopgm pbmnoise luaotfload-tool sar gnome-text-editor fgrep vim.tiny touch updmap-sys gmake texdiff env pampaintspill hbpldecode xman txixml2texi ppdi pamtowinicon pgrep pgmabel aa-features-abi rumakeindex xsm ot2kpx nmtui-edit pnmdepth apt-cdrom x86_64-linux-gnu-gcc-nm ijs_pxljr dvipdf x86_64-linux-gnu-addr2line envsubst shuf pnmnorm bwrap slabtop bluetoothctl dviluatex match_parens isdv4-serial-debugger lzdiff ppmtospu luahbtex ping6 autoreconf pnmpad gst-inspect-1.0 bundle3.2 ogrtindex systemctl powerprofilesctl pygmentize pnmconvol optex eps2eps dt2dv ogr_layer_algebra.py prime-supported htcopy lwp-dump keytool pamsplit base32 latexdef getent wc update-mime-database bzcat ppmtoilbm gkbd-keyboard-display multibibliography cc hciattach acpidbg hp-config_usb_printer ppm3d xdg-mime linux32 pathchk mksquashfs sensible-editor pdfbook2 diadia tangle namei a5booklet ps2frag texdoctk irb ps2pk sha1sum usbipd printafm allcm pamshadedrelief latex-dev mtxrun.lua dbus-update-activation-environment speaker-test dpkg-buildapi xdpyinfo aplay x86_64-linux-gnu-ld.gold pw-midirecord import tty psjoin gtk4-broadwayd bg5conv c99-gcc setpriv oomctl pnm2ppa gdal_sieve.py pkcheck geod otftotfm ps2ascii nautilus-autorun-software qdbusxml2cpp last pamaltsat gdalmdimtranslate rhythmbox mflua-nowin xrandr peekfd usb_printerid gnome-system-monitor hcitool gnome-terminal.wrapper mount nawk git-upload-archive grub-mklayout xwud g++-13 ipcrm texloganalyser hishrink gst-typefind-1.0 ld dvitodvi ofm2opl pamseq ketcindy ps2txt imagetops sessreg gpg-wks-client qmlbundle pamfix ntfs-3g python3 ppmtoyuv ntfsls gi-inspect-typelib ogrlineref gnome-power-statistics Xorg pw-dot readelf gdalattachpct.py baobab brltty-ktb vboxbugreport assistant pnminterp ssh-add ntfsdecrypt pamperspective grub-file od soffice icuinfo pamtosrf gdalmove.py simple-scan gdk-pixbuf-pixdata pcdovtoppm mf2pt1 hp-plugin-ubuntu gdaltindex pw-record cd-it8 qhelpconverter brushtopbm tcpdump expand deb-systemd-helper pbmtomatrixorbital join lspower setlogcons pkgdata lsb_release dbus-send c89 bdftopcf man pgmtopbm zstdmt pkaction xcalc x86_64-linux-gnu-gprofng pamtopfm pwdx epspdftk systemd-socket-activate lto-dump avstopam which.debianutils whoami debconf-communicate hitex ppmquant mandb bibmradd tic rletopnm f2py3 pamtosvg ppmtolj rbash dtxgen gtk4-builder-tool grog t1disasm git-upload-pack biburl2doi ciptool sbkeysync cloud-id instmodsh osirrox getkeycodes sozip komkindex ssh-import-id-gh qmlprofiler eplain ppmpat X platex-dev cmuwmtopbm systemd-umount zipcloak tee hp-doctor grub-mkrescue makeconv pnmscale st4topgm lspgpot nmtui resizepart extractres hp-firmware kanji-config-updmap-sys psselect lacheck xdg-icon-resource pamdepth rsync otangle dvicopy python3.12-config mtr-packet pnmtojbig partx vboxwebsrv pdfinfo bibtex.original pdvitomp json_pp sensible-pager 7zr uuidparse sldtoppm ip rstart isdv4-serial-inputattach nmtui-connect showchar gdal_polygonize.py xlsfonts infotopam mimeopen mtrace automake composite-im6 grub-mkpasswd-pbkdf2 gie pod2usage qmlimportscanner lowntfs-3g gdaladdo select-default-iwrap hp-logcapture erb loweb spa-json-dump xhlatex giftopnm vbox-img texhash httex checkcites x86_64-linux-gnu-objcopy x86_64-linux-gnu-gcc-ranlib-13 code mf-nowin xzless dviasm distro-info pango-segmentation dvilj4l gzexe ttf2afm fwupdtool bibtexu pdfopen dvi2fax lavadecode gamemoded fc-query ftp tracker3-export pamtodjvurle desktop-file-edit montage-im6.q16 gst-discoverer-1.0 ttf2pk
      /usr/games: gamemodelist gamemoderun gamemode-simulate-game
      /usr/local/games: 
      /snap/bin: snap-store.show-updates kate htop snap-store firefox.geckodriver firmware-updater geckodriver thunderbird firefox
      /snap/bin: snap-store.show-updates kate htop snap-store firefox.geckodriver firmware-updater geckodriver thunderbird firefox
=============================================================================================
TESTING: configureExternalPackagesDir from config.framework(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/framework.py:1084)
  Set alternative directory external packages are built in
    serialEvaluation: initial cxxDialectRanges ('c++11', 'c++20')
    serialEvaluation: new cxxDialectRanges ('c++11', 'c++20')
    child config.utilities.macosFirewall took 0.000003 seconds
=============================================================================================
TESTING: configureDebuggers from config.utilities.debuggers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/utilities/debuggers.py:20)
  Find a default debugger and determine its arguments
    Checking for program /opt/intel/oneapi/mpi/2021.14/bin/gdb...not found
    Checking for program /opt/intel/oneapi/mkl/2025.0/bin/gdb...not found
    Checking for program /opt/intel/oneapi/dpcpp-ct/2025.0/bin/gdb...not found
    Checking for program /opt/intel/oneapi/dev-utilities/2025.0/bin/gdb...not found
    Checking for program /opt/intel/oneapi/debugger/2025.0/opt/debugger/bin/gdb...not found
    Checking for program /opt/intel/oneapi/compiler/2025.0/bin/gdb...not found
    Checking for program /usr/local/sbin/gdb...not found
    Checking for program /usr/local/bin/gdb...not found
    Checking for program /usr/sbin/gdb...not found
    Checking for program /usr/bin/gdb...found
              Defined make macro "GDB" to "/usr/bin/gdb"
            Defined "USE_DEBUGGER" to ""gdb""
            Defined make macro "DSYMUTIL" to "true"
    child config.utilities.debuggers took 0.000864 seconds
=============================================================================================
TESTING: configureDirectories from PETSc.options.petscdir(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/PETSc/options/petscdir.py:22)
  Checks PETSC_DIR and sets if not set
          PETSC_VERSION_RELEASE of 1 indicates the code is from a release branch or a branch created from a release branch.
          Version Information:
          #define PETSC_VERSION_RELEASE    1
          #define PETSC_VERSION_MAJOR      3
          #define PETSC_VERSION_MINOR      21
          #define PETSC_VERSION_SUBMINOR   4
          #define PETSC_VERSION_DATE       "Jul 30, 2024"
          #define PETSC_VERSION_GIT        "v3.21.4"
          #define PETSC_VERSION_DATE_GIT   "2024-07-30 11:45:07 -0500"
          #define PETSC_VERSION_EQ(MAJOR,MINOR,SUBMINOR) \
          #define PETSC_VERSION_ PETSC_VERSION_EQ
          #define PETSC_VERSION_LT(MAJOR,MINOR,SUBMINOR)          \
          #define PETSC_VERSION_LE(MAJOR,MINOR,SUBMINOR) \
          #define PETSC_VERSION_GT(MAJOR,MINOR,SUBMINOR) \
          #define PETSC_VERSION_GE(MAJOR,MINOR,SUBMINOR) \
    child PETSc.options.petscdir took 0.001310 seconds
=============================================================================================
TESTING: getDatafilespath from PETSc.options.dataFilesPath(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/PETSc/options/dataFilesPath.py:29)
  Checks what DATAFILESPATH should be
    child PETSc.options.dataFilesPath took 0.000168 seconds
=============================================================================================
TESTING: configureGit from config.sourceControl(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/sourceControl.py:24)
  Find the Git executable
    Checking for program /opt/intel/oneapi/mpi/2021.14/bin/git...not found
    Checking for program /opt/intel/oneapi/mkl/2025.0/bin/git...not found
    Checking for program /opt/intel/oneapi/dpcpp-ct/2025.0/bin/git...not found
    Checking for program /opt/intel/oneapi/dev-utilities/2025.0/bin/git...not found
    Checking for program /opt/intel/oneapi/debugger/2025.0/opt/debugger/bin/git...not found
    Checking for program /opt/intel/oneapi/compiler/2025.0/bin/git...not found
    Checking for program /usr/local/sbin/git...not found
    Checking for program /usr/local/bin/git...not found
    Checking for program /usr/sbin/git...not found
    Checking for program /usr/bin/git...found
              Defined make macro "GIT" to "git"
Executing: git --version
stdout: git version 2.43.0
=============================================================================================
TESTING: configureMercurial from config.sourceControl(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/sourceControl.py:35)
  Find the Mercurial executable
    Checking for program /opt/intel/oneapi/mpi/2021.14/bin/hg...not found
    Checking for program /opt/intel/oneapi/mkl/2025.0/bin/hg...not found
    Checking for program /opt/intel/oneapi/dpcpp-ct/2025.0/bin/hg...not found
    Checking for program /opt/intel/oneapi/dev-utilities/2025.0/bin/hg...not found
    Checking for program /opt/intel/oneapi/debugger/2025.0/opt/debugger/bin/hg...not found
    Checking for program /opt/intel/oneapi/compiler/2025.0/bin/hg...not found
    Checking for program /usr/local/sbin/hg...not found
    Checking for program /usr/local/bin/hg...not found
    Checking for program /usr/sbin/hg...not found
    Checking for program /usr/bin/hg...not found
    Checking for program /sbin/hg...not found
    Checking for program /bin/hg...not found
    Checking for program /usr/games/hg...not found
    Checking for program /usr/local/games/hg...not found
    Checking for program /snap/bin/hg...not found
    Checking for program /snap/bin/hg...not found
    Checking for program /srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/lib/petsc/bin/win32fe/hg...not found
    child config.sourceControl took 0.005908 seconds
=============================================================================================
TESTING: configureInstallationMethod from PETSc.options.petscclone(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/PETSc/options/petscclone.py:20)
  Determine if PETSc was obtained via git or a tarball
          This is a tarball installation
    child PETSc.options.petscclone took 0.000257 seconds
=============================================================================================
TESTING: setNativeArchitecture from PETSc.options.arch(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/PETSc/options/arch.py:29)
  Forms the arch as GNU's configure would form it
=============================================================================================
TESTING: configureArchitecture from PETSc.options.arch(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/PETSc/options/arch.py:42)
  Checks if PETSC_ARCH is set and sets it if not set
        No previous hashfile found
          Setting hashfile: arch-linux-c-opt/lib/petsc/conf/configure-hash
          Deleting configure hash file: arch-linux-c-opt/lib/petsc/conf/configure-hash
          Unable to delete configure hash file: arch-linux-c-opt/lib/petsc/conf/configure-hash
    child PETSc.options.arch took 0.010752 seconds
=============================================================================================
TESTING: setInstallDir from PETSc.options.installDir(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/PETSc/options/installDir.py:31)
  Set installDir to either prefix or if that is not set to PETSC_DIR/PETSC_ARCH
            Defined make macro "PREFIXDIR" to "/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/arch-linux-c-opt"
=============================================================================================
TESTING: saveReconfigure from PETSc.options.installDir(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/PETSc/options/installDir.py:76)
  Save the configure options in a script in PETSC_ARCH/lib/petsc/conf so the same configure may be easily re-run
=============================================================================================
TESTING: cleanConfDir from PETSc.options.installDir(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/PETSc/options/installDir.py:68)
  Remove all the files from configuration directory for this PETSC_ARCH, from --with-clean option
=============================================================================================
TESTING: configureInstallDir from PETSc.options.installDir(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/PETSc/options/installDir.py:52)
  Makes  installDir subdirectories if it does not exist for both prefix install location and PETSc work install location
          Changed persistence directory to /srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/arch-linux-c-opt/lib/petsc/conf
=============================================================================================
TESTING: restoreReconfigure from PETSc.options.installDir(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/PETSc/options/installDir.py:90)
  If --with-clean was requested but restoring the reconfigure file was requested then restore it
    child PETSc.options.installDir took 0.000902 seconds
=============================================================================================
TESTING: setExternalPackagesDir from PETSc.options.externalpackagesdir(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/PETSc/options/externalpackagesdir.py:15)
  Set location where external packages will be downloaded to
=============================================================================================
TESTING: cleanExternalpackagesDir from PETSc.options.externalpackagesdir(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/PETSc/options/externalpackagesdir.py:23)
  Remove all downloaded external packages, from --with-clean
    child PETSc.options.externalpackagesdir took 0.000183 seconds
=============================================================================================
TESTING: configureCLanguage from PETSc.options.languages(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/PETSc/options/languages.py:28)
  Choose whether to compile the PETSc library using a C or C++ compiler
          C language is C
            Defined "CLANGUAGE_C" to "1"
            Defined make macro "CLANGUAGE" to "C"
    child PETSc.options.languages took 0.000753 seconds
=============================================================================================
TESTING: resetEnvCompilers from config.setCompilers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/setCompilers.py:2761)
  Remove compilers from the shell environment so they do not interfere with testing
=============================================================================================
TESTING: checkEnvCompilers from config.setCompilers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/setCompilers.py:2778)
  Set configure compilers from the environment, from -with-environment-variables
=============================================================================================
TESTING: checkMPICompilerOverride from config.setCompilers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/setCompilers.py:2731)
  Check if --with-mpi-dir is used along with CC CXX or FC compiler options.
    This usually prevents mpi compilers from being used - so issue a warning
=============================================================================================
TESTING: requireMpiLdPath from config.setCompilers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/setCompilers.py:2752)
  Open MPI wrappers require LD_LIBRARY_PATH set
=============================================================================================
TESTING: checkInitialFlags from config.setCompilers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/setCompilers.py:739)
  Initialize the compiler and linker flags
          Initialized CFLAGS to 
          Initialized CFLAGS to 
          Initialized LDFLAGS to 
          Initialized CUDAFLAGS to 
          Initialized CUDAFLAGS to 
          Initialized LDFLAGS to 
          Initialized HIPFLAGS to 
          Initialized HIPFLAGS to 
          Initialized LDFLAGS to 
          Initialized SYCLFLAGS to 
          Initialized SYCLFLAGS to 
          Initialized SYCLC_LINKER_FLAGS to 
          Initialized CXXFLAGS to 
          Initialized CXX_CXXFLAGS to 
          Initialized LDFLAGS to 
          Initialized FFLAGS to 
          Initialized FFLAGS to 
          Initialized LDFLAGS to 
          Initialized CPPFLAGS to 
          Initialized FPPFLAGS to 
          Initialized CUDAPPFLAGS to 
          Initialized CXXPPFLAGS to 
          Initialized HIPPPFLAGS to 
          Initialized SYCLPPFLAGS to 
          Initialized CC_LINKER_FLAGS to []
          Initialized CXX_LINKER_FLAGS to []
          Initialized FC_LINKER_FLAGS to []
          Initialized CUDAC_LINKER_FLAGS to []
          Initialized HIPC_LINKER_FLAGS to []
          Initialized sharedLibraryFlags to []
          Initialized dynamicLibraryFlags to []
=============================================================================================
TESTING: checkCCompiler from config.setCompilers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/setCompilers.py:1448)
    Checking for program /opt/intel/oneapi/mpi/2021.14/bin/mpiicc...found
              Defined make macro "CC" to "mpiicc -cc=icx"
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers   /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers   /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest    /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o 
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers   /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest    /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o  -lpetsc-ufod4vtr9mqHvKIQiVAm
stdout:
/usr/bin/ld: cannot find -lpetsc-ufod4vtr9mqHvKIQiVAm: No such file or directory
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Possible ERROR while running linker: exit code 1
stderr:
/usr/bin/ld: cannot find -lpetsc-ufod4vtr9mqHvKIQiVAm: No such file or directory
icx: error: linker command failed with exit code 1 (use -v to see invocation)
======== Checking running linked program
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers   /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest    /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o 
Testing executable /tmp/petsc-m5p55c3k/config.setCompilers/conftest to see if it can be run
Executing: /tmp/petsc-m5p55c3k/config.setCompilers/conftest
Running Executable with threads to time it out at 60
Executing: /tmp/petsc-m5p55c3k/config.setCompilers/conftest
Executing: mpiicc -cc=icx --version
stdout:
Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)
Target: x86_64-unknown-linux-gnu
Thread model: posix
InstalledDir: /opt/intel/oneapi/compiler/2025.0/bin/compiler
Configuration file: /opt/intel/oneapi/compiler/2025.0/bin/compiler/../icx.cfg
Executing: mpiicc -cc=icx -v | head -n 20
stdout:
mpiicx for the Intel(R) MPI Library 2021.14 for Linux*
Copyright Intel Corporation.
stdout:
Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)
Target: x86_64-unknown-linux-gnu
Thread model: posix
InstalledDir: /opt/intel/oneapi/compiler/2025.0/bin/compiler
Configuration file: /opt/intel/oneapi/compiler/2025.0/bin/compiler/../icx.cfg
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/13
Selected GCC installation: /usr/lib/gcc/x86_64-linux-gnu/13
Candidate multilib: .;@m64
Selected multilib: .;@m64
icx: warning: argument unused during compilation: '-I /opt/intel/oneapi/mpi/2021.14/include' [-Wunused-command-line-argument]
          Since MPI c compiler starts with mpi, force searches for other compilers to only look for MPI compilers

=============================================================================================
TESTING: checkCPreprocessor from config.setCompilers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/setCompilers.py:1495)
  Locate a functional C preprocessor
    Checking for program /opt/intel/oneapi/mpi/2021.14/bin/mpiicc...found
              Defined make macro "CPP" to "mpiicc -cc=icx -E"
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <stdlib.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers  /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
=============================================================================================
TESTING: checkCxxCompiler from config.setCompilers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/setCompilers.py:1777)
  Locate a functional Cxx compiler
    Checking for program /opt/intel/oneapi/mpi/2021.14/bin/mpiicpc...found
              Defined make macro "CXX" to "mpiicpc -cxx=icpx"
Executing: mpiicpc -cxx=icpx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers    /tmp/petsc-m5p55c3k/config.setCompilers/conftest.cc 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

Executing: mpiicpc -cxx=icpx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers    /tmp/petsc-m5p55c3k/config.setCompilers/conftest.cc 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

Executing: mpiicpc -cxx=icpx  -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest    /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o 
Executing: mpiicpc -cxx=icpx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers    /tmp/petsc-m5p55c3k/config.setCompilers/conftest.cc 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

Executing: mpiicpc -cxx=icpx  -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest    /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o  -lpetsc-ufod4vtr9mqHvKIQiVAm
stdout:
/usr/bin/ld: cannot find -lpetsc-ufod4vtr9mqHvKIQiVAm: No such file or directory
icpx: error: linker command failed with exit code 1 (use -v to see invocation)
Possible ERROR while running linker: exit code 1
stderr:
/usr/bin/ld: cannot find -lpetsc-ufod4vtr9mqHvKIQiVAm: No such file or directory
icpx: error: linker command failed with exit code 1 (use -v to see invocation)
======== Checking running linked program
Executing: mpiicpc -cxx=icpx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers    /tmp/petsc-m5p55c3k/config.setCompilers/conftest.cc 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

Executing: mpiicpc -cxx=icpx  -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest    /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o 
Testing executable /tmp/petsc-m5p55c3k/config.setCompilers/conftest to see if it can be run
Executing: /tmp/petsc-m5p55c3k/config.setCompilers/conftest
Running Executable with threads to time it out at 60
Executing: /tmp/petsc-m5p55c3k/config.setCompilers/conftest
Executing: mpiicpc -cxx=icpx --version
stdout:
Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)
Target: x86_64-unknown-linux-gnu
Thread model: posix
InstalledDir: /opt/intel/oneapi/compiler/2025.0/bin/compiler
Configuration file: /opt/intel/oneapi/compiler/2025.0/bin/compiler/../icpx.cfg
=============================================================================================
TESTING: checkDeviceHostCompiler from config.setCompilers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/setCompilers.py:765)
  Set the host compiler (HC) of the device compiler (DC) to the HC unless the DC already explicitly sets its HC. This may be needed if the default HC used by the DC is ancient and PETSc uses a different HC (e.g., through --with-cxx=...).
Executing: mpiicpc -cxx=icpx --help | head -n 20 
stdout:
OVERVIEW: Intel(R) oneAPI DPC++/C++ Compiler
USAGE: icpx [options] file...
OPTIONS:
  -###                    Print (but do not run) the commands to run for this compilation
  -#x                     Show commands to run and use verbose output
  -#                      Print (but do not run) the commands to run for this compilation
  -align                  Align doubles to two words in structs (x86 only)
  --amdgpu-arch-tool=<value>
                          Tool used for detecting AMD GPU arch in the system.
  --analyzer-output <value>
                          Static analyzer report output format (html|plist|plist-multi-file|plist-html|sarif|sarif-html|text).
  --analyze               Run the static analyzer
  -ansi-alias             enable use of ANSI aliasing rules optimizations user asserts that the program adheres to these rules
  -arcmt-migrate-emit-errors
                          Emit ARC errors even if the migrator can fix them
  -arcmt-migrate-report-output <value>
                          Output path for the plist report
  -ax<codes>              generate multiple, processor-specific, auto-dispatched code paths for Intel® processors, specified by <codes>, if there is a performance benefit
Executing: mpiicpc -cxx=icpx --help
stdout:
OVERVIEW: Intel(R) oneAPI DPC++/C++ Compiler
USAGE: icpx [options] file...
OPTIONS:
  -###                    Print (but do not run) the commands to run for this compilation
  -#x                     Show commands to run and use verbose output
  -#                      Print (but do not run) the commands to run for this compilation
  -align                  Align doubles to two words in structs (x86 only)
  --amdgpu-arch-tool=<value>
                          Tool used for detecting AMD GPU arch in the system.
  --analyzer-output <value>
                          Static analyzer report output format (html|plist|plist-multi-file|plist-html|sarif|sarif-html|text).
  --analyze               Run the static analyzer
  -ansi-alias             enable use of ANSI aliasing rules optimizations user asserts that the program adheres to these rules
  -arcmt-migrate-emit-errors
                          Emit ARC errors even if the migrator can fix them
  -arcmt-migrate-report-output <value>
                          Output path for the plist report
  -ax<codes>              generate multiple, processor-specific, auto-dispatched code paths for Intel® processors, specified by <codes>, if there is a performance benefit
  -B <prefix>             Search $prefix$file for executables, libraries, and data files. If $prefix is a directory, search $prefix/$file
  -b <arg>                Pass -b <arg> to the linker on AIX
  -CC                     Include comments from within macros in preprocessed output
  -cl-denorms-are-zero    OpenCL only. Allow denormals to be flushed to zero.
  -cl-ext=<value>         OpenCL only. Enable or disable OpenCL extensions/optional features. The argument is a comma-separated sequence of one or more extension names, each prefixed by '+' or '-'.
  -cl-fast-relaxed-math   OpenCL only. Sets -cl-finite-math-only and -cl-unsafe-math-optimizations, and defines __FAST_RELAXED_MATH__.
  -cl-finite-math-only    OpenCL only. Allow floating-point optimizations that assume arguments and results are not NaNs or +-Inf.
  -cl-fp32-correctly-rounded-divide-sqrt
                          OpenCL only. Specify that single precision floating-point divide and sqrt used in the program source are correctly rounded.
  -cl-kernel-arg-info     OpenCL only. Generate kernel argument metadata.
  -cl-mad-enable          OpenCL only. Allow use of less precise MAD computations in the generated binary.
  -cl-no-signed-zeros     OpenCL only. Allow use of less precise no signed zeros computations in the generated binary.
  -cl-no-stdinc           OpenCL only. Disables all standard includes containing non-native compiler types and functions.
  -cl-opt-disable         OpenCL only. This option disables all optimizations. By default optimizations are enabled.
  -cl-single-precision-constant
                          OpenCL only. Treat double precision floating-point constant as single precision constant.
  -cl-std=<value>         OpenCL language standard to compile for.
  -cl-strict-aliasing     OpenCL only. This option is added for compatibility with OpenCL 1.0.
  -cl-uniform-work-group-size
                          OpenCL only. Defines that the global work-size be a multiple of the work-group size specified to clEnqueueNDRangeKernel
  -cl-unsafe-math-optimizations
                          OpenCL only. Allow unsafe floating-point optimizations.  Also implies -cl-no-signed-zeros and -cl-mad-enable.
  --config=<file>         Specify configuration file
  --cuda-compile-host-device
                          Compile CUDA code for both host and device (default). Has no effect on non-CUDA compilations.
  --cuda-device-only      Compile CUDA code for device only
  --cuda-feature=<value>  Manually specify the CUDA feature to use
  --cuda-host-only        Compile CUDA code for host only. Has no effect on non-CUDA compilations.
  --cuda-include-ptx=<value>
                          Include PTX for the following GPU architecture (e.g. sm_35) or 'all'. May be specified more than once.
  --cuda-noopt-device-debug
                          Enable device-side debug info generation. Disables ptxas optimizations.
  --cuda-path-ignore-env  Ignore environment variables to detect CUDA installation
  --cuda-path=<value>     CUDA installation path
  -cuid=<value>           An ID for compilation unit, which should be the same for the same compilation unit but different for different compilation units. It is used to externalize device-side static variables for single source offloading languages CUDA and HIP so that they can be accessed by the host code of the same compilation unit.
  -cxx-isystem <directory>
                          Add directory to the C++ SYSTEM include search path
  -C                      Include comments in preprocessed output
  -c                      Only run preprocess, compile, and assemble steps
  -daal=<value>           Link Intel(R) Data Analytics Acceleration Library (Intel(R) DAAL) libraries and bring in the associated headers (parallel)
  -darwin-target-variant-triple <value>
                          Specify the darwin target variant triple
  -darwin-target-variant <value>
                          Generate code for an additional runtime variant of the deployment target
  -dD                     Print macro definitions in -E mode in addition to normal output
  -debug=<value>          Enable debug information. Valid args: none, all, full, minimal
  -dependency-dot <value> Filename to write DOT-formatted header dependencies to
  -dependency-file <value>
                          Filename (or -) to write dependency output to
  -device-math-lib=<value>
                          Control the addition of device math libraries when compiling for other devices.  Valid arguments are fp64, fp32
  -dI                     Print include directives in -E mode in addition to normal output
  -dM                     Print macro definitions in -E mode instead of normal output
  -dryrun                 Print (but do not run) the commands to run for this compilation
  -dsym-dir <dir>         Directory to output dSYM's (if any) to
  -dumpdir <dumppfx>      Use <dumpfpx> as a prefix to form auxiliary and dump file names
  -dumpmachine            Display the compiler's target processor
  -dumpversion            Display the version of the compiler
  -D <macro>=<value>      Define <macro> to <value> (or 1 if <value> omitted)
  --embed-dir=<dir>       Add directory to embed search path
  -emit-ast               Emit Clang AST files for source inputs
  --emit-extension-symbol-graphs
                          Generate additional symbol graphs for extended modules.
  -emit-interface-stubs   Generate Interface Stub Files.
  -emit-llvm              Use the LLVM representation for assembler and object files
  -emit-merged-ifs        Generate Interface Stub Files, emit merged text not binary.
  --emit-static-lib       Enable linker job to emit a static library.
  -emit-symbol-graph      Generate Extract API information as a side effect of compilation.
  --end-no-unused-arguments
                          Start emitting warnings for unused driver arguments
  -EP                     Preprocess to stdout, omitting #line directives.
  --extract-api-ignores=<value>
                          Comma separated list of files containing a new line separated list of API symbols to ignore when extracting API information.
  -extract-api            Extract API information
  -E                      Only run the preprocessor
  -faapcs-bitfield-load   Follows the AAPCS standard that all volatile bit-field write generates at least one load. (ARM only).
  -faapcs-bitfield-width  Follow the AAPCS standard requirement stating that volatile bit-field width is dictated by the field container type. (ARM only).
  -faddrsig               Emit an address-significance table
  -falign-functions=<value>
                          Align the start of functions on a 2 (DEFAULT) or <n> byte boundary where <n> is a power of 2.
  -falign-functions       align the start of functions to an optimal machine-dependent value.
  -falign-loops=<N>       N must be a power of two. Align loops to the boundary
  -falign-stack=assume-16-byte
                          Assume the stack is aligned on 16-byte boundaries
  -falign-stack=assume-4-byte
                          Assume the stack is aligned on 4-byte boundaries
  -falign-stack=maintain-16-byte
                          Do not assume any alignment, but maintain alignment in case the stack is already aligned
  -faligned-allocation    Enable C++17 aligned allocation functions
  -fallow-editor-placeholders
                          Treat editor placeholders as valid source code
  -faltivec-src-compat=<value>
                          Source-level compatibility for Altivec vectors (for PowerPC targets). This includes results of vector comparison (scalar for 'xl', vector for 'gcc') as well as behavior when initializing with a scalar (splatting for 'xl', element zero only for 'gcc'). For 'mixed', the compatibility is as 'gcc' for 'vector bool/vector pixel' and as 'xl' for other types. Current default is 'mixed'.
  -fansi-escape-codes     Use ANSI escape codes for diagnostics
  -fapinotes-modules      Enable module-based external API notes support
  -fapinotes-swift-version=<version>
                          Specify the Swift version to use when filtering API notes
  -fapinotes              Enable external API notes support
  -fapple-kext            Use Apple's kernel extensions ABI
  -fapple-link-rtlib      Force linking the clang builtins runtime library
  -fapple-pragma-pack     Enable Apple gcc-compatible #pragma pack handling
  -fapplication-extension Restrict code to those available for App Extensions
  -fapprox-func           Allow certain math function calls to be replaced with an approximately equivalent calculation
  -fargument-noalias      Enables 'noalias' attribute for all pointer-type arguments
  -fassume-nothrow-exception-dtor
                          Assume that exception objects' destructors are non-throwing
  -fasync-exceptions      Enable EH Asynchronous exceptions
  -fauto-import           MinGW specific. Enable code generation support for automatic dllimport, and enable support for it in the linker. Enabled by default.
  -fbasic-block-address-map
                          Emit the basic block address map section.
  -fbasic-block-sections=<value>
                          Place each function's basic blocks in unique sections (ELF Only)
  -fbinutils-version=<major.minor>
                          Produced object files can use all ELF features supported by this binutils version and newer. If -fno-integrated-as is specified, the generated assembly will consider GNU as support. 'none' means that all ELF features can be used, regardless of binutils support. Defaults to 2.26.
  -fblocks                Enable the 'blocks' language feature
  -fborland-extensions    Accept non-standard constructs supported by the Borland compiler
  -fbuild-session-file=<file>
                          Use the last modification time of <file> as the build session timestamp
  -fbuild-session-timestamp=<time since Epoch in seconds>
                          Time when the current build session started
  -fbuiltin-module-map    Load the clang builtins module map file.
  -fc++-abi=<value>       C++ ABI to use. This will override the target C++ ABI.
  -fcall-saved-x10        Make the x10 register call-saved (AArch64 only)
  -fcall-saved-x11        Make the x11 register call-saved (AArch64 only)
  -fcall-saved-x12        Make the x12 register call-saved (AArch64 only)
  -fcall-saved-x13        Make the x13 register call-saved (AArch64 only)
  -fcall-saved-x14        Make the x14 register call-saved (AArch64 only)
  -fcall-saved-x15        Make the x15 register call-saved (AArch64 only)
  -fcall-saved-x18        Make the x18 register call-saved (AArch64 only)
  -fcall-saved-x8         Make the x8 register call-saved (AArch64 only)
  -fcall-saved-x9         Make the x9 register call-saved (AArch64 only)
  -fcaret-diagnostics-max-lines=<value>
                          Set the maximum number of source lines to show in a caret diagnostic (0 = no limit).
  -fcf-protection=<value> Instrument control-flow architecture protection
  -fcf-protection         Enable cf-protection in 'full' mode
  -fchar8_t               Enable C++ builtin type char8_t
  -fcheck-new             Do not assume C++ operator new may not return NULL
  -fclang-abi-compat=<version>
                          Attempt to match the ABI of Clang <version>
  -fclangir               Use the ClangIR pipeline to compile
  -fcolor-diagnostics     Enable colors in diagnostics
  -fcomment-block-commands=<arg>
                          Treat each comma separated argument in <arg> as a documentation comment block command
  -fcommon                Place uninitialized global variables in a common block
  -fcomplete-member-pointers
                          Require member pointer base types to be complete if they would be significant under the Microsoft ABI
  -fconstexpr-backtrace-limit=<value>
                          Set the maximum number of entries to print in a constexpr evaluation backtrace (0 = no limit)
  -fconstexpr-depth=<value>
                          Set the maximum depth of recursive constexpr function calls
  -fconstexpr-steps=<value>
                          Set the maximum number of steps in constexpr function evaluation
  -fcoro-aligned-allocation
                          Prefer aligned allocation for C++ Coroutines
  -fcoroutines            Enable support for the C++ Coroutines
  -fcoverage-compilation-dir=<value>
                          The compilation directory to embed in the coverage mapping.
  -fcoverage-mapping      Generate coverage mapping to enable code coverage analysis
  -fcoverage-mcdc         Enable MC/DC criteria when generating code coverage
  -fcoverage-prefix-map=<old>=<new>
                          remap file source paths <old> to <new> in coverage mapping. If there are multiple options, prefix replacement is applied in reverse order starting from the last one
  -fcrash-diagnostics-dir=<dir>
                          Put crash-report files in <dir>
  -fcrash-diagnostics=<value>
                          Set level of crash diagnostic reporting, (option: off, compiler, all)
  -fcrash-diagnostics     Enable crash diagnostic reporting (default)
  -fcs-profile-generate=<directory>
                          Generate instrumented code to collect context sensitive execution counts into <directory>/default.profraw (overridden by LLVM_PROFILE_FILE env var)
  -fcs-profile-generate   Generate instrumented code to collect context sensitive execution counts into default.profraw (overridden by LLVM_PROFILE_FILE env var)
  -fcuda-prec-sqrt        Specify that sqrt is correctly rounded (for CUDA devices)
  -fcuda-short-ptr        Use 32-bit pointers for accessing const/local/shared address spaces
  -fcx-fortran-rules      Range reduction is enabled for complex arithmetic operations.
  -fcx-limited-range      Basic algebraic expansions of complex arithmetic operations involving are enabled.
  -fcxx-exceptions        Enable C++ exceptions
  -fcxx-modules           Enable modules for C++
  -fdata-sections         Place each data in its own section
  -fdebug-compilation-dir=<value>
                          The compilation directory to embed in the debug info
  -fdebug-default-version=<value>
                          Default DWARF version to use, if a -g option caused DWARF debug info to be produced
  -fdebug-info-for-profiling
                          Emit extra debug info to make sample profile more accurate
  -fdebug-macro           Emit macro debug information
  -fdebug-prefix-map=<old>=<new>
                          For paths in debug info, remap directory <old> to <new>. If multiple options match a path, the last option wins
  -fdebug-ranges-base-address
                          Use DWARF base address selection entries in .debug_ranges
  -fdebug-types-section   Place debug types in their own section (ELF Only)
  -fdeclspec              Allow __declspec as a keyword
  -fdefine-target-os-macros
                          Enable predefined target OS macros
  -fdelayed-template-parsing
                          Parse templated function definitions at the end of the translation unit
  -fdelete-null-pointer-checks
                          Treat usage of null pointers as undefined behavior (default)
  -fdiagnostics-absolute-paths
                          Print absolute paths in diagnostics
  -fdiagnostics-hotness-threshold=<value>
                          Prevent optimization remarks from being output if they do not have at least this profile count. Use 'auto' to apply the threshold from profile summary
  -fdiagnostics-misexpect-tolerance=<value>
                          Prevent misexpect diagnostics from being output if the profile counts are within N% of the expected. 
  -fdiagnostics-parseable-fixits
                          Print fix-its in machine parseable form
  -fdiagnostics-print-source-range-info
                          Print source range spans in numeric form
  -fdiagnostics-show-hotness
                          Enable profile hotness information in diagnostic line
  -fdiagnostics-show-note-include-stack
                          Display include stacks for diagnostic notes
  -fdiagnostics-show-option
                          Print option name with mappable diagnostics
  -fdiagnostics-show-template-tree
                          Print a template comparison tree for differing templates
  -fdigraphs              Enable alternative token representations '<:', ':>', '<%', '%>', '%:', '%:%:' (default)
  -fdirect-access-external-data
                          Don't use GOT indirection to reference external data symbols
  -fdisable-block-signature-string
                          Disable block signature string)
  -fdiscard-value-names   Discard value names in LLVM IR
  -fdollars-in-identifiers
                          Allow '$' in identifiers
  -fdriver-only           Only run the driver.
  -fdwarf-exceptions      Use DWARF style exceptions
  -feliminate-unused-debug-types
                          Do not emit  debug info for defined but unused types
  -fembed-bitcode-marker  Embed placeholder LLVM IR data as a marker
  -fembed-bitcode=<option>
                          Embed LLVM bitcode
  -fembed-bitcode         Embed LLVM IR bitcode as data
  -fembed-offload-object=<value>
                          Embed Offloading device-side binary into host object file as a section.
  -femit-all-decls        Emit all declarations, even if unused
  -femit-class-debug-always
                          Emit debug information for a C++ class into each object file where the class is used. This flag is useful for tools which are unable to resolve incomplete type descriptions.  Using this option may cause a large increase in the size of the debug information
  -femit-compact-unwind-non-canonical
                          Try emitting Compact-Unwind for non-canonical entries. Maybe overriden by other constraints
  -femit-dwarf-unwind=<value>
                          When to emit DWARF unwind (EH frame) info
  -femulated-tls          Use emutls functions to access thread_local variables
  -fenable-matrix         Enable matrix data type and related builtin functions
  -fexceptions            Enable support for exception handling
  -fexcess-precision=<value>
                          Allows control over excess precision on targets where native support for the precision types is not available. By default, excess precision is used to calculate intermediate results following the rules specified in ISO C99.
  -fexperimental-late-parse-attributes
                          Enable experimental late parsing of attributes
  -fexperimental-library  Control whether unstable and experimental library features are enabled. This option enables various library features that are either experimental (also known as TSes), or have been but are not stable yet in the selected Standard Library implementation. It is not recommended to use this option in production code, since neither ABI nor API stability are guaranteed. This is intended to provide a preview of features that will ship in the future for experimentation purposes
  -fexperimental-modules-reduced-bmi
                          Generate the reduced BMI
  -fexperimental-new-constant-interpreter
                          Enable the experimental new constant interpreter
  -fexperimental-openacc-macro-override <value>
                          Overrides the _OPENACC macro value for experimental testing during OpenACC support development
  -fexperimental-relative-c++-abi-vtables
                          Use the experimental C++ class ABI for classes with virtual tables
  -fexperimental-sanitize-metadata-ignorelist=<value>
                          Disable sanitizer metadata for modules and functions that match the provided special case list
  -fexperimental-sanitize-metadata=<value>
                          Specify the type of metadata to emit for binary analysis sanitizers
  -fexperimental-strict-floating-point
                          Enables the use of non-default rounding modes and non-default exception handling on targets that are not currently ready.
  -fextend-arguments=<value>
                          Controls how scalar integer arguments are extended in calls to unprototyped and varargs functions
  -ffast-math             Allow aggressive, lossy floating-point optimizations
  -ffat-lto-objects       Enable fat LTO object support
  -ffile-compilation-dir=<value>
                          The compilation directory to embed in the debug info and coverage mapping.
  -ffile-prefix-map=<value>
                          remap file source paths in debug info, predefined preprocessor macros and __builtin_FILE(). Implies -ffile-reproducible.
  -ffile-reproducible     Use the target's platform-specific path separator character when expanding the __FILE__ macro
  -ffine-grained-bitfield-accesses
                          Use separate accesses for consecutive bitfield runs with legal widths and alignments.
  -ffinite-loops          Assume all non-trivial loops are finite.
  -ffinite-math-only      Allow floating-point optimizations that assume arguments and results are not NaNs or +-inf. This defines the \_\_FINITE\_MATH\_ONLY\_\_ preprocessor macro.
  -ffixed-a0              Reserve the a0 register (M68k only)
  -ffixed-a1              Reserve the a1 register (M68k only)
  -ffixed-a2              Reserve the a2 register (M68k only)
  -ffixed-a3              Reserve the a3 register (M68k only)
  -ffixed-a4              Reserve the a4 register (M68k only)
  -ffixed-a5              Reserve the a5 register (M68k only)
  -ffixed-a6              Reserve the a6 register (M68k only)
  -ffixed-d0              Reserve the d0 register (M68k only)
  -ffixed-d1              Reserve the d1 register (M68k only)
  -ffixed-d2              Reserve the d2 register (M68k only)
  -ffixed-d3              Reserve the d3 register (M68k only)
  -ffixed-d4              Reserve the d4 register (M68k only)
  -ffixed-d5              Reserve the d5 register (M68k only)
  -ffixed-d6              Reserve the d6 register (M68k only)
  -ffixed-d7              Reserve the d7 register (M68k only)
  -ffixed-g1              Reserve the G1 register (SPARC only)
  -ffixed-g2              Reserve the G2 register (SPARC only)
  -ffixed-g3              Reserve the G3 register (SPARC only)
  -ffixed-g4              Reserve the G4 register (SPARC only)
  -ffixed-g5              Reserve the G5 register (SPARC only)
  -ffixed-g6              Reserve the G6 register (SPARC only)
  -ffixed-g7              Reserve the G7 register (SPARC only)
  -ffixed-i0              Reserve the I0 register (SPARC only)
  -ffixed-i1              Reserve the I1 register (SPARC only)
  -ffixed-i2              Reserve the I2 register (SPARC only)
  -ffixed-i3              Reserve the I3 register (SPARC only)
  -ffixed-i4              Reserve the I4 register (SPARC only)
  -ffixed-i5              Reserve the I5 register (SPARC only)
  -ffixed-l0              Reserve the L0 register (SPARC only)
  -ffixed-l1              Reserve the L1 register (SPARC only)
  -ffixed-l2              Reserve the L2 register (SPARC only)
  -ffixed-l3              Reserve the L3 register (SPARC only)
  -ffixed-l4              Reserve the L4 register (SPARC only)
  -ffixed-l5              Reserve the L5 register (SPARC only)
  -ffixed-l6              Reserve the L6 register (SPARC only)
  -ffixed-l7              Reserve the L7 register (SPARC only)
  -ffixed-o0              Reserve the O0 register (SPARC only)
  -ffixed-o1              Reserve the O1 register (SPARC only)
  -ffixed-o2              Reserve the O2 register (SPARC only)
  -ffixed-o3              Reserve the O3 register (SPARC only)
  -ffixed-o4              Reserve the O4 register (SPARC only)
  -ffixed-o5              Reserve the O5 register (SPARC only)
  -ffixed-point           Enable fixed point types
  -ffixed-r19             Reserve register r19 (Hexagon only)
  -ffixed-r9              Reserve the r9 register (ARM only)
  -ffixed-x10             Reserve the x10 register (AArch64/RISC-V only)
  -ffixed-x11             Reserve the x11 register (AArch64/RISC-V only)
  -ffixed-x12             Reserve the x12 register (AArch64/RISC-V only)
  -ffixed-x13             Reserve the x13 register (AArch64/RISC-V only)
  -ffixed-x14             Reserve the x14 register (AArch64/RISC-V only)
  -ffixed-x15             Reserve the x15 register (AArch64/RISC-V only)
  -ffixed-x16             Reserve the x16 register (AArch64/RISC-V only)
  -ffixed-x17             Reserve the x17 register (AArch64/RISC-V only)
  -ffixed-x18             Reserve the x18 register (AArch64/RISC-V only)
  -ffixed-x19             Reserve the x19 register (AArch64/RISC-V only)
  -ffixed-x1              Reserve the x1 register (AArch64/RISC-V only)
  -ffixed-x20             Reserve the x20 register (AArch64/RISC-V only)
  -ffixed-x21             Reserve the x21 register (AArch64/RISC-V only)
  -ffixed-x22             Reserve the x22 register (AArch64/RISC-V only)
  -ffixed-x23             Reserve the x23 register (AArch64/RISC-V only)
  -ffixed-x24             Reserve the x24 register (AArch64/RISC-V only)
  -ffixed-x25             Reserve the x25 register (AArch64/RISC-V only)
  -ffixed-x26             Reserve the x26 register (AArch64/RISC-V only)
  -ffixed-x27             Reserve the x27 register (AArch64/RISC-V only)
  -ffixed-x28             Reserve the x28 register (AArch64/RISC-V only)
  -ffixed-x29             Reserve the x29 register (AArch64/RISC-V only)
  -ffixed-x2              Reserve the x2 register (AArch64/RISC-V only)
  -ffixed-x30             Reserve the x30 register (AArch64/RISC-V only)
  -ffixed-x31             Reserve the x31 register (AArch64/RISC-V only)
  -ffixed-x3              Reserve the x3 register (AArch64/RISC-V only)
  -ffixed-x4              Reserve the x4 register (AArch64/RISC-V only)
  -ffixed-x5              Reserve the x5 register (AArch64/RISC-V only)
  -ffixed-x6              Reserve the x6 register (AArch64/RISC-V only)
  -ffixed-x7              Reserve the x7 register (AArch64/RISC-V only)
  -ffixed-x8              Reserve the x8 register (AArch64/RISC-V only)
  -ffixed-x9              Reserve the x9 register (AArch64/RISC-V only)
  -fforce-check-cxx20-modules-input-files
                          Check the input source files from C++20 modules explicitly
  -fforce-dwarf-frame     Always emit a debug frame section
  -fforce-emit-vtables    Emits more virtual tables to improve devirtualization
  -fforce-enable-int128   Enable support for int128_t type
  -ffp-accuracy=<value>   Specifies the required accuracy for floating-point operations and library calls.
  -ffp-contract=<value>   Form fused FP ops (e.g. FMAs)
  -ffp-eval-method=<value>
                          Specifies the evaluation method to use for floating-point arithmetic.
  -ffp-exception-behavior=<value>
                          Specifies the exception behavior of floating-point operations.
  -ffp-model=<value>      Controls the semantics of floating-point calculations.
  -ffreestanding          Assert that the compilation takes place in a freestanding environment
  -ffuchsia-api-level=<value>
                          Set Fuchsia API level
  -ffunction-sections     Place each function in its own section
  -fglobal-isel           Enables the global instruction selector
  -fgnu-keywords          Allow GNU-extension keywords regardless of language standard
  -fgnu-runtime           Generate output compatible with the standard GNU Objective-C runtime
  -fgnu89-inline          Use the gnu89 inline semantics
  -fgnuc-version=<value>  Sets various macros to claim compatibility with the given GCC version (default is 4.2.1)
  -fgpu-allow-device-init Allow device side init function in HIP (experimental)
  -fgpu-approx-transcendentals
                          Use approximate transcendental functions
  -fgpu-default-stream=<value>
                          Specify default stream. The default value is 'legacy'. (CUDA/HIP only)
  -fgpu-defer-diag        Defer host/device related diagnostic messages for CUDA/HIP
  -fgpu-flush-denormals-to-zero
                          Flush denormal floating point values to zero in CUDA/HIP device mode.
  -fgpu-rdc               Generate relocatable device code, also known as separate compilation mode
  -fgpu-sanitize          Enable sanitizer for supported offloading devices
  -fhelp                  Display available options
  -fhip-emit-relocatable  Compile HIP source to relocatable
  -fhip-fp32-correctly-rounded-divide-sqrt
                          Specify that single precision floating-point divide and sqrt used in the program source are correctly rounded (HIP device compilation only)
  -fhip-kernel-arg-name   Specify that kernel argument names are preserved (HIP only)
  -fhip-new-launch-api    Use new kernel launching API for HIP
  -fhlsl-strict-availability
                          Enables strict availability diagnostic mode for HLSL built-in functions.
  -fhls                   Enable Intel FPGA High Level Synthesis extensions
  -fhonor-infinities      Specify that floating-point optimizations are not allowed that assume arguments and results are not +-inf.
  -fhonor-nan-compares    Honor NaN compares with fast math
  -fhonor-nans            Specify that floating-point optimizations are not allowed that assume arguments and results are not NANs.
  -fignore-exceptions     Enable support for ignoring exception handling constructs
  -fimf-absolute-error=<value>
                          Define the maximum allowable absolute error for math library function results
  -fimf-accuracy-bits=<value>
                          Define the relative error, measured by the number of correct bits,for math library function results
  -fimf-arch-consistency=<value>
                          Ensures that the math library functions produce consistent results across different implementations of the same architecture
  -fimf-domain-exclusion=<value>
                          Indicates the input arguments domain on which math functions must provide correct results.
  -fimf-max-error=<value> defines the maximum allowable relative error, measured in ulps, for math library function results
  -fimf-precision=<value> Defines the accuracy (precision) for math library functions.
  -fimf-use-svml=<value>  Instruct the compiler to implement math library functions using the Short Vector Math Library(SVML)
  -fimplicit-module-maps  Implicitly search the file system for module map files.
  -fincremental-extensions
                          Enable incremental processing extensions such as processingstatements on the global scope.
  -finline-functions      Inline suitable functions
  -finline-hint-functions Inline functions which are (explicitly or implicitly) marked inline
  -finline-max-stacksize=<value>
                          Suppress inlining of functions whose stack size exceeds the given value
  -finput-charset=<value> Specify the default character set for source files
  -finstrument-function-entry-bare
                          Instrument function entry only, after inlining, without arguments to the instrumentation call
  -finstrument-functions-after-inlining
                          Like -finstrument-functions, but insert the calls after inlining
  -finstrument-functions  Generate calls to instrument function entry and exit
  -fintegrated-as         Enable the integrated assembler
  -fintegrated-cc1        Run cc1 in-process
  -fintegrated-objemitter Use internal machine object code emitter.
  -fintel-long-double-size=<value>
                          Overrides the size of long double from the architecture/OS defaults.
  -fintelfpga             Perform ahead-of-time compilation for FPGA
  -fiopenmp-simd          Same as -qopenmp-simd
  -fiopenmp               Same as -qopenmp
  -fjmc                   Enable just-my-code debugging
  -fjump-tables           Use jump tables for lowering switches
  -fkeep-persistent-storage-variables
                          Enable keeping all variables that have a persistent storage duration, including global, static and thread-local variables, to guarantee that they can be directly addressed
  -fkeep-static-consts    Keep static const variables even if unused
  -fkeep-system-includes  Instead of expanding system headers when emitting preprocessor output, preserve the #include directive. Useful when producing preprocessed output for test case reduction. May produce incorrect output if preprocessor symbols that control the included content (e.g. _XOPEN_SOURCE) are defined in the including source file. The portability of the resulting source to other compilation environments is not guaranteed.
                          
                          Only valid with -E.
  -flax-vector-conversions=<value>
                          Enable implicit vector bit-casts
  -flink-huge-device-code Generate and use a custom linker script for huge device code sections
  -flto-jobs=<value>      Controls the backend parallelism of -flto=thin (default of 0 means the number of threads will be derived from the number of CPUs detected)
  -flto=auto              Enable LTO in 'full' mode
  -flto=jobserver         Enable LTO in 'full' mode
  -flto=<value>           Set LTO mode
  -flto                   Enable LTO in 'full' mode
  -fmacro-backtrace-limit=<value>
                          Set the maximum number of entries to print in a macro expansion backtrace (0 = no limit)
  -fmacro-prefix-map=<value>
                          remap file source paths in predefined preprocessor macros and __builtin_FILE(). Implies -ffile-reproducible.
  -fmaintain-32-byte-stack-align
                          Do not assume any alignment, but maintain alignment in case the stack is already aligned
  -fmath-errno            Require math functions to indicate errors by setting errno
  -fmax-tokens=<value>    Max total number of preprocessed tokens for -Wmax-tokens.
  -fmax-type-align=<value>
                          Specify the maximum alignment to enforce on pointers lacking an explicit alignment
  -fma                    Enable the combining of floating point multiples and add/subtract operations.
  -fmemory-profile-use=<pathname>
                          Use memory profile for profile-guided memory optimization
  -fmemory-profile=<directory>
                          Enable heap memory profiling and dump results into <directory>
  -fmemory-profile        Enable heap memory profiling
  -fmerge-all-constants   Allow merging of constants
  -fmerge-debug-strings   Merge identical debug strings in different object files.
  -fmessage-length=<value>
                          Format message diagnostics so that they fit within N columns
  -fminimize-whitespace   Ignore the whitespace from the input file when emitting preprocessor output. It will only contain whitespace when necessary, e.g. to keep two minus signs from merging into to an increment operator. Useful with the -P option to normalize whitespace such that two files with only formatting changes are equal.
                          
                          Only valid with -E on C-like inputs and incompatible with -traditional-cpp.
  -fmodule-file=[<name>=]<file>
                          Specify the mapping of module name to precompiled module file, or load a module file if name is omitted.
  -fmodule-header=<kind>  Build a C++20 Header Unit from a header that should be found in the user (fmodule-header=user) or system (fmodule-header=system) search path.
  -fmodule-header         Build a C++20 Header Unit from a header
  -fmodule-map-file=<file>
                          Load this module map file
  -fmodule-name=<name>    Specify the name of the module to build
  -fmodule-output=<value> Save intermediate module file results when compiling a standard C++ module unit.
  -fmodule-output         Save intermediate module file results when compiling a standard C++ module unit.
  -fmodules-cache-path=<directory>
                          Specify the module cache path
  -fmodules-decluse       Require declaration of modules used within a module
  -fmodules-disable-diagnostic-validation
                          Disable validation of the diagnostic options when loading the module
  -fmodules-ignore-macro=<value>
                          Ignore the definition of the given macro when building and loading modules
  -fmodules-prune-after=<seconds>
                          Specify the interval (in seconds) after which a module file will be considered unused
  -fmodules-prune-interval=<seconds>
                          Specify the interval (in seconds) between attempts to prune the module cache
  -fmodules-search-all    Search even non-imported modules to resolve references
  -fmodules-strict-decluse
                          Like -fmodules-decluse but requires all headers to be in modules
  -fmodules-user-build-path <directory>
                          Specify the module user build path
  -fmodules-validate-input-files-content
                          Validate PCM input files based on content if mtime differs
  -fmodules-validate-once-per-build-session
                          Don't verify input files for the modules if the module has been successfully validated or loaded during this build session
  -fmodules-validate-system-headers
                          Validate the system headers that a module depends on when loading the module
  -fmodules               Enable the 'modules' language feature
  -fms-compatibility-version=<value>
                          Dot-separated value representing the Microsoft compiler version number to report in _MSC_VER (0 = don't define it (default))
  -fms-compatibility      Enable full Microsoft Visual C++ compatibility
  -fms-define-stdc        Define '__STDC__' to '1' in MSVC Compatibility mode
  -fms-extensions         Accept some non-standard constructs supported by the Microsoft compiler
  -fms-hotpatch           Ensure that all functions can be hotpatched at runtime
  -fms-runtime-lib=<value>
                          Select Windows run-time library
  -fms-volatile           Volatile loads and stores have acquire and release semantics
  -fmsc-version=<value>   Microsoft compiler version number to report in _MSC_VER (0 = don't define it (default))
  -fnew-alignment=<align> Specifies the largest alignment guaranteed by '::operator new(size_t)'
  -fnew-infallible        Enable treating throwing global C++ operator new as always returning valid memory (annotates with __attribute__((returns_nonnull)) and throw()). This is detectable in source.
  -fno-aapcs-bitfield-width
                          Do not follow the AAPCS standard requirement stating that volatile bit-field width is dictated by the field container type. (ARM only).
  -fno-access-control     Disable C++ access control
  -fno-addrsig            Don't emit an address-significance table
  -fno-alias              Enables 'noalias' attribute for all pointer-type arguments
  -fno-align-functions    Aligns on a 2-byte boundary
  -fno-apinotes-modules   Disable module-based external API notes support
  -fno-apinotes           Disable external API notes support
  -fno-assume-sane-operator-new
                          Don't assume that C++'s global operator new can't alias any pointer
  -fno-assume-unique-vtables
                          Disable optimizations based on vtable pointer identity
  -fno-assumptions        Disable codegen and compile-time checks for C++23's [[assume]] attribute
  -fno-auto-import        MinGW specific. Disable support for automatic dllimport in code generation and linking
  -fno-autolink           Disable generation of linker directives for automatic library linking
  -fno-builtin-<value>    Disable implicit builtin knowledge of a specific function
  -fno-builtin            Disable implicit builtin knowledge of functions
  -fno-bundle-offload-arch
                          Specify that the offload bundler should not identify a bundle with specific arch. For example, the bundle for `nvptx64-nvidia-cuda-sm_80` uses the bundle tag `nvptx64-nvidia-cuda` when used. This allows .o files to contain .bc bundles that are unspecific to a particular arch version.
  -fno-c++-static-destructors
                          Disable C++ static destructor registration
  -fno-char8_t            Disable C++ builtin type char8_t
  -fno-clangir            Use the AST -> LLVM pipeline to compile
  -fno-color-diagnostics  Disable colors in diagnostics
  -fno-common             Compile common globals like normal definitions
  -fno-complete-member-pointers
                          Do not require member pointer base types to be complete if they would be significant under the Microsoft ABI
  -fno-constant-cfstrings Disable creation of CodeFoundation-type constant strings
  -fno-convergent-functions
                          Assume all functions may be convergent.
  -fno-coverage-mapping   Disable code coverage analysis
  -fno-coverage-mcdc      Disable MC/DC coverage criteria
  -fno-crash-diagnostics  Disable auto-generation of preprocessed source files and a script for reproduction during a clang crash
  -fno-cuda-prec-sqrt     Don't specify that sqrt is correctly rounded (for CUDA devices)
  -fno-cx-fortran-rules   Range reduction is disabled for complex arithmetic operations
  -fno-cx-limited-range   Basic algebraic expansions of complex arithmetic operations involving are disabled.
  -fno-cxx-modules        Disable modules for C++
  -fno-debug-macro        Do not emit macro debug information
  -fno-declspec           Disallow __declspec as a keyword
  -fno-define-target-os-macros
                          Disable predefined target OS macros
  -fno-delayed-template-parsing
                          Disable delayed template parsing
  -fno-delete-null-pointer-checks
                          Do not treat usage of null pointers as undefined behavior
  -fno-diagnostics-fixit-info
                          Do not include fixit information in diagnostics
  -fno-diagnostics-show-line-numbers
                          Show line numbers in diagnostic code snippets
  -fno-digraphs           Disallow alternative token representations '<:', ':>', '<%', '%>', '%:', '%:%:'
  -fno-direct-access-external-data
                          Use GOT indirection to reference external data symbols
  -fno-disable-block-signature-string
                          Don't disable block signature string)
  -fno-discard-value-names
                          Do not discard value names in LLVM IR
  -fno-dollars-in-identifiers
                          Disallow '$' in identifiers
  -fno-elide-constructors Disable C++ copy constructor elision
  -fno-elide-type         Do not elide types when printing diagnostics
  -fno-eliminate-unused-debug-types
                          Emit  debug info for defined but unused types
  -fno-emit-class-debug-always
                          Emit debug information for a C++ class in only one object file
  -fno-exceptions         Disable support for exception handling
  -fno-experimental-late-parse-attributes
                          Disable experimental late parsing of attributes
  -fno-experimental-relative-c++-abi-vtables
                          Do not use the experimental C++ class ABI for classes with virtual tables
  -fno-experimental-sanitize-metadata=<value>
                          Disable emitting metadata for binary analysis sanitizers
  -fno-fat-lto-objects    Disable fat LTO object support
  -fno-file-reproducible  Use the host's platform-specific path separator character when expanding the __FILE__ macro
  -fno-fine-grained-bitfield-accesses
                          Use large-integer access for consecutive bitfield runs.
  -fno-finite-loops       Do not assume that any loop is finite.
  -fno-fixed-point        Disable fixed point types
  -fno-force-enable-int128
                          Disable support for int128_t type
  -fno-global-isel        Disables the global instruction selector
  -fno-gnu-inline-asm     Disable GNU style inline asm
  -fno-gpu-allow-device-init
                          Don't allow device side init function in HIP (experimental)
  -fno-gpu-approx-transcendentals
                          Don't use approximate transcendental functions
  -fno-gpu-defer-diag     Don't defer host/device related diagnostic messages for CUDA/HIP
  -fno-hip-emit-relocatable
                          Do not override toolchain to compile HIP source to relocatable
  -fno-hip-fp32-correctly-rounded-divide-sqrt
                          Don't specify that single precision floating-point divide and sqrt used in the program source are correctly rounded (HIP device compilation only)
  -fno-hip-kernel-arg-name
                          Don't specify that kernel argument names are preserved (HIP only)
  -fno-hip-new-launch-api Don't use new kernel launching API for HIP
  -fno-honor-nan-compares Do not honor NaN compares with fast math
  -fno-integrated-as      Disable the integrated assembler
  -fno-integrated-cc1     Spawn a separate process for each cc1
  -fno-integrated-objemitter
                          Use external machine object code emitter.
  -fno-jump-tables        Do not use jump tables for lowering switches
  -fno-keep-persistent-storage-variables
                          Disable keeping all variables that have a persistent storage duration, including global, static and thread-local variables, to guarantee that they can be directly addressed
  -fno-keep-static-consts Don't keep static const variables even if unused
  -fno-knr-functions      Disable support for K&R C function declarations
  -fno-link-huge-device-code
                          Do not generate or use a custom linker script for huge device code sections (default)
  -fno-lto                Disable LTO mode (default)
  -fno-memory-profile     Disable heap memory profiling
  -fno-merge-all-constants
                          Disallow merging of constants
  -fno-merge-debug-strings
                           Do not mergeidentical debug strings in different object files.
  -fno-modules-check-relocated<value>
                          Skip checks for relocated modules when loading PCM files
  -fno-modules-validate-textual-header-includes
                          Do not enforce -fmodules-decluse and private header restrictions for textual headers. This flag will be removed in a future Clang release.
  -fno-new-infallible     Disable treating throwing global C++ operator new as always returning valid memory (annotates with __attribute__((returns_nonnull)) and throw()). This is detectable in source.
  -fno-objc-avoid-heapify-local-blocks
                          Don't try to avoid heapifying local blocks
  -fno-objc-infer-related-result-type
                          do not infer Objective-C related result type based on method family
  -fno-offload-lto        Disable LTO mode (default) for offload compilation
  -fno-offload-uniform-block
                          Don't assume that kernels are launched with uniform block sizes (default true for CUDA/HIP and false otherwise)
  -fno-openmp-device-lib=<value>
                          Control exclusion of device libraries from device binary linkage. Valid arguments are libc, libm-fp32, libm-fp64, all
  -fno-openmp-extensions  Disable all Clang extensions for OpenMP directives and clauses
  -fno-operator-names     Do not treat C++ operator name keywords as synonyms for operators
  -fno-optimize-sibling-calls
                          Disable tail call optimization, keeping the call stack accurate
  -fno-pch-codegen        Do not generate code for uses of this PCH that assumes an explicit object file will be built for the PCH
  -fno-pch-debuginfo      Do not generate debug info for types in an object file built from this PCH and do not generate them elsewhere
  -fno-plt                Use GOT indirection instead of PLT to make external function calls (x86 only)
  -fno-preserve-as-comments
                          Do not preserve comments in inline assembly
  -fno-profile-generate   Disable generation of profile instrumentation.
  -fno-profile-instr-generate
                          Disable generation of profile instrumentation.
  -fno-profile-instr-use  Disable using instrumentation data for profile-guided optimization
  -fno-pseudo-probe-for-profiling
                          Do not emit pseudo probes for sample profiling
  -fno-raw-string-literals
                          Disable raw string literals
  -fno-register-global-dtors-with-atexit
                          Don't use atexit or __cxa_atexit to register global destructors
  -fno-relaxed-template-template-args
                          Disable C++17 relaxed template template argument matching
  -fno-rtlib-add-rpath    Do not add -rpath with architecture-specific resource directory to the linker flags. When --hip-link is specified, do not add -rpath with HIP runtime library directory to the linker flags
  -fno-rtlib-defaultlib   On Windows, do not emit /defaultlib: directives to link compiler-rt libraries
  -fno-rtti-data          Disable generation of RTTI data
  -fno-rtti               Disable generation of rtti information
  -fno-sanitize-address-globals-dead-stripping
                          Disable linker dead stripping of globals in AddressSanitizer
  -fno-sanitize-address-outline-instrumentation
                          Use default code inlining logic for the address sanitizer
  -fno-sanitize-address-poison-custom-array-cookie
                          Disable poisoning array cookies when using custom operator new[] in AddressSanitizer
  -fno-sanitize-address-use-after-scope
                          Disable use-after-scope detection in AddressSanitizer
  -fno-sanitize-address-use-odr-indicator
                          Disable ODR indicator globals
  -fno-sanitize-cfi-canonical-jump-tables
                          Do not make the jump table addresses canonical in the symbol table
  -fno-sanitize-cfi-cross-dso
                          Disable control flow integrity (CFI) checks for cross-DSO calls.
  -fno-sanitize-coverage=<value>
                          Disable features of coverage instrumentation for Sanitizers
  -fno-sanitize-hwaddress-experimental-aliasing
                          Disable aliasing mode in HWAddressSanitizer
  -fno-sanitize-ignorelist
                          Don't use ignorelist file for sanitizers
  -fno-sanitize-memory-param-retval
                          Disable detection of uninitialized parameters and return values
  -fno-sanitize-memory-track-origins
                          Disable origins tracking in MemorySanitizer
  -fno-sanitize-memory-use-after-dtor
                          Disable use-after-destroy detection in MemorySanitizer
  -fno-sanitize-recover=<value>
                          Disable recovery for specified sanitizers
  -fno-sanitize-stable-abi
                          Conventional ABI instrumentation for sanitizer runtime. Default: Conventional
  -fno-sanitize-stats     Disable sanitizer statistics gathering.
  -fno-sanitize-thread-atomics
                          Disable atomic operations instrumentation in ThreadSanitizer
  -fno-sanitize-thread-func-entry-exit
                          Disable function entry/exit instrumentation in ThreadSanitizer
  -fno-sanitize-thread-memory-access
                          Disable memory access instrumentation in ThreadSanitizer
  -fno-sanitize-trap=<value>
                          Disable trapping for specified sanitizers
  -fno-sanitize-trap      Disable trapping for all sanitizers
  -fno-short-wchar        Force wchar_t to be an unsigned int
  -fno-show-column        Do not include column number on diagnostics
  -fno-show-source-location
                          Do not include source location information with diagnostics
  -fno-signed-char        char is unsigned
  -fno-signed-zeros       Allow optimizations that ignore the sign of floating point zeros
  -fno-skip-odr-check-in-gmf
                          Perform ODR checks for decls in the global module fragment.
  -fno-spell-checking     Disable spell-checking
  -fno-split-machine-functions
                          Disable late function splitting using profile information (x86 ELF/COFF)
  -fno-split-stack        Wouldn't use segmented stack
  -fno-stack-clash-protection
                          Disable stack clash protection
  -fno-stack-protector    Disable the use of stack protectors
  -fno-standalone-debug   Limit debug information produced to reduce size of debug binary
  -fno-strict-aliasing    Disable optimizations based on strict aliasing rules
  -fno-strict-float-cast-overflow
                          Relax language rules and try to match the behavior of the target's native float-to-int conversion instructions
  -fno-strict-return      Don't treat control flow paths that fall off the end of a non-void function as unreachable
  -fno-sycl-add-default-spec-consts-image
                          Turns off generation of device image where all specialization constant usages are replaced with default values.
  -fno-sycl-allow-device-dependencies
                          Do not allow dependencies between device code images (default)
  -fno-sycl-dead-args-optimization
                          Disables elimination of DPC++ dead kernel arguments
  -fno-sycl-decompose-functor
                          Do not decompose SYCL functor if possible (experimental, CUDA only)
  -fno-sycl-device-code-split-esimd
                          do not split ESIMD and SYCL device code into separate device binary images. Has effect only for SPIR-based targets. (experimental)
  -fno-sycl-device-lib-jit-link
                          Disables sycl device library jit link (experimental)
  -fno-sycl-device-lib=<value>
                          Control exclusion of device libraries from device binary linkage. Valid arguments are libc, libm-fp32, libm-fp64, all
  -fno-sycl-early-optimizations
                          Disable standard optimization pipeline for SYCL device compiler
  -fno-sycl-esimd-force-stateless-mem
                          Do not enforce using stateless memory accesses.
  -fno-sycl-explicit-simd Disable SYCL explicit SIMD extension. (deprecated)
  -fno-sycl-force-inline-kernel-lambda
                          Disallow force inline SYCL kernels lambda in entry point
  -fno-sycl-id-queries-fit-in-int
                          Do not assume that SYCL ID queries fit within MAX_INT.
  -fno-sycl-instrument-device-code
                          Do not add Instrumentation and Tracing Technology (ITT) instrumentation intrinsics calls (experimental)
  -fno-sycl-libspirv      Disable check for libspirv
  -fno-sycl-link-spirv    Disable adding of the default (spir64) triple when discovered in user specified objects and archives.
  -fno-sycl-pstl-offload  Disable offloading of C++ standard parallel algorithms.
  -fno-sycl-rdc           Generate relocatable device code during SYCL offload target compilation. Use of ‘-fno-sycl-rdc’ in combination with ‘-c’ will produce final device binaries within the generated fat object. When using this option, each kernel must be self-contained within its translation unit (source file).  Therefore, the use of SYCL_EXTERNAL is disallowed when this option is enabled.
  -fno-sycl-remove-unused-external-funcs
                          Prevent removal of unused `SYCL_EXTERNAL` functions
  -fno-sycl-unnamed-lambda
                          Disallow unnamed SYCL lambda kernels
  -fno-sycl-use-bitcode   Use SPIR-V instead of LLVM bitcode in fat objects (deprecated)
  -fno-sycl-use-footer    Disable usage of the integration footer during SYCL enabled compilations.
  -fno-sycl               Disables SYCL kernels compilation for device
  -fno-system-debug       Do not emit debug information for declarations in system headers
  -fno-temp-file          Directly create compilation output files. This may lead to incorrect incremental builds if the compiler crashes
  -fno-threadsafe-statics Do not emit code to make initialization of local statics thread safe
  -fno-trigraphs          Do not process trigraph sequences
  -fno-unified-lto        Use distinct LTO pipelines
  -fno-unique-section-names
                          Don't use unique names for text and data sections
  -fno-unroll-loops       Turn off loop unroller
  -fno-use-cxa-atexit     Don't use __cxa_atexit for calling destructors
  -fno-use-init-array     Use .ctors/.dtors instead of .init_array/.fini_array
  -fno-vec-allow-scalar-stores
                          When this option is set, an explicit simd loop (for example, one set with #pragma omp simd) will not be vectorized if it contains a store to a scalar variable that is not marked as private, lastprivate, or reduction.
  -fno-vec-peel-loops     Disable peel loop vectorization.
  -fno-vec-remainder-loops
                          Disable remainder loop vectorization.
  -fno-vec-with-mask      Disable vectorization for short trip-count loops with masking.
  -fno-verify-intermediate-code
                          Disable verification of LLVM IR
  -fno-visibility-inlines-hidden-static-local-var
                          Disables -fvisibility-inlines-hidden-static-local-var (this is the default on non-darwin targets)
  -fno-xray-function-index
                          Omit function index section at the expense of single-function patching performance
  -fno-zero-initialized-in-bss
                          Don't place zero initialized data in BSS
  -fobjc-arc-exceptions   Use EH-safe code when synthesizing retains and releases in -fobjc-arc
  -fobjc-arc              Synthesize retain and release calls for Objective-C pointers
  -fobjc-avoid-heapify-local-blocks
                          Try to avoid heapifying local blocks
  -fobjc-disable-direct-methods-for-testing
                          Ignore attribute objc_direct so that direct methods can be tested
  -fobjc-encode-cxx-class-template-spec
                          Fully encode c++ class template specialization
  -fobjc-exceptions       Enable Objective-C exceptions
  -fobjc-runtime=<value>  Specify the target Objective-C runtime kind and version
  -fobjc-weak             Enable ARC-style weak references in Objective-C
  -foffload-implicit-host-device-templates
                          Template functions or specializations without host, device and global attributes have implicit host device attributes (CUDA/HIP only)
  -foffload-lto=<value>   Set LTO mode for offload compilation
  -foffload-lto           Enable LTO in 'full' mode for offload compilation
  -foffload-uniform-block Assume that kernels are launched with uniform block sizes (default true for CUDA/HIP and false otherwise)
  -fomit-frame-pointer    Omit the frame pointer from functions that don't need it. Some stack unwinding cases, such as profilers and sanitizers, may prefer specifying -fno-omit-frame-pointer. On many targets, -O1 and higher omit the frame pointer by default. -m[no-]omit-leaf-frame-pointer takes precedence for leaf functions
  -fopenacc               Enable OpenACC
  -fopenmp-concurrent-host-device-compile<value>
                          Enable parallel compilation of host and device compilation steps when performing OpenMP offload compiles using -fopenmp-targets. (experimental)
  -fopenmp-declare-target-scalar-defaultmap=<value>
                          Assume that a scalar declare target variable with implicit data-mapping referenced in a 'target' construct has the same value in the host and device environment
  -fopenmp-device-lib=<value>
                          Control inclusion of device libraries into device binary linkage. Valid arguments are libc, libm-fp32, libm-fp64, all
  -fopenmp-device-link    Perform device link during compilation step instead of link step (-c compilations).  Use for offload compilations to produce final device binaries within the generated fat object.
  -fopenmp-extensions     Enable all Clang extensions for OpenMP directives and clauses
  -fopenmp-force-usm      Force behvaior as if the user specified pragma omp requires unified_shared_memory.
  -fopenmp-offload-mandatory
                          Do not create a host fallback if offloading to the device fails.
  -fopenmp-simd           Emit OpenMP code only for SIMD-based constructs. Advanced users who prefer to use OpenMP* as it is implemented by the LLVM community can get most of that functionality by using -fopenmp-simd.
  -fopenmp-target-buffers=<value>
                          Allow access to target objects of 4GB or larger in target code.
  -fopenmp-target-debug   Enable debugging in the OpenMP offloading device RTL
  -fopenmp-target-default-sub-group-size=<value>
                          Specify the default sub-group size of SPMD kernels generated for OpenMP target constructs for SPIR64
  -fopenmp-target-jit     Emit code that can be JIT compiled for OpenMP offloading. Implies -foffload-lto=full
  -fopenmp-targets=<value>
                          Specify comma-separated list of triples that correspond to OpenMP offloading targets to be supported.  Valid triples include spir64_gen, spir64_x86_64 and spir64
  -fopenmp-version=<value>
                          Set OpenMP version (e.g. 45 for OpenMP 4.5, 51 for OpenMP 5.1). Default value is 51 for Clang
  -fopenmp                Parse OpenMP pragmas and generate parallel code. Advanced users who prefer to use OpenMP* as it is implemented by the LLVM community can get most of that functionality by using -fopenmp.
  -foperator-arrow-depth=<value>
                          Maximum number of 'operator->'s to call for a member access
  -foptimization-record-file=<file>
                          Specify the output name of the file containing the optimization remarks. Implies -fsave-optimization-record. On Darwin platforms, this cannot be used with multiple -arch <arch> options.
  -foptimization-record-passes=<regex>
                          Only include passes which match a specified regular expression in the generated optimization record (by default, include all passes)
  -forder-file-instrumentation
                          Generate instrumented code to collect order file into default.profraw file (overridden by '=' form of option or LLVM_PROFILE_FILE env var)
  -fortlib                Allow for Fortran generated objects to be mixed and matched and linked in with the C/C++ compiler to pull in the needed libraries.
  -fp-model=<value>       Controls the semantics of floating-point calculations.
  -fp-speculation=<value> Specifies the exception behavior of floating-point operations.
  -fpack-struct=<value>   Specify the default maximum struct packing alignment
  -fpascal-strings        Recognize and construct Pascal-style string literals
  -fpass-plugin=<dsopath> Load pass plugin from a dynamic shared object file (only with new pass manager).
  -fpatchable-function-entry=<N,M>
                          Generate M NOPs before function entry and N-M NOPs after function entry
  -fpcc-struct-return     Override the default ABI to return all structs on the stack
  -fpch-codegen           Generate code for uses of this PCH that assumes an explicit object file will be built for the PCH
  -fpch-debuginfo         Generate debug info for types in an object file built from this PCH and do not generate them elsewhere
  -fpch-instantiate-templates
                          Instantiate templates already while building a PCH
  -fpch-validate-input-files-content
                          Validate PCH input files based on content if mtime differs
  -fplugin-arg-<name>-<arg>
                          Pass <arg> to plugin <name>
  -fplugin=<dsopath>      Load the named plugin (dynamic shared object)
  -fprebuilt-implicit-modules
                          Look up implicit modules in the prebuilt module path
  -fprebuilt-module-path=<directory>
                          Specify the prebuilt module path
  -fpreview-breaking-changes
                          When specified, it informs the compiler driver and compilation phases that it is allowed to break backward compatibility. When this option is specified the compiler will also set the macro __INTEL_PREVIEW_BREAKING_CHANGES.
                          When this option is used in conjunction with -fsycl, the driver will link against an alternate form of libsycl, libsycl-preview.
  -fproc-stat-report=<value>
                          Save subprocess statistics to the given file
  -fproc-stat-report<value>
                          Print subprocess statistics
  -fprofile-arcs          Instrument code to produce gcov data files (*.gcda)
  -fprofile-dwo-dir=<value>
                          Directory to store .dwo files when using -fprofile-sample-generate and -gsplit-dwarf. (experimental)
  -fprofile-exclude-files=<value>
                          Instrument only functions from files where names don't match all the regexes separated by a semi-colon
  -fprofile-filter-files=<value>
                          Instrument only functions from files where names match any regex separated by a semi-colon
  -fprofile-function-groups=<N>
                          Partition functions into N groups and select only functions in group i to be instrumented using -fprofile-selected-function-group
  -fprofile-generate=<directory>
                          Generate instrumented code to collect execution counts into <directory>/default.profraw (overridden by LLVM_PROFILE_FILE env var)
  -fprofile-generate      Generate instrumented code to collect execution counts into default.profraw (overridden by LLVM_PROFILE_FILE env var)
  -fprofile-instr-generate=<file>
                          Generate instrumented code to collect execution counts into <file> (overridden by LLVM_PROFILE_FILE env var)
  -fprofile-instr-generate
                          Generate instrumented code to collect execution counts into default.profraw file (overridden by '=' form of option or LLVM_PROFILE_FILE env var)
  -fprofile-instr-use=<value>
                          Use instrumentation data for profile-guided optimization
  -fprofile-list=<value>  Filename defining the list of functions/files to instrument. The file uses the sanitizer special case list format.
  -fprofile-ml-use        Use pre-trained machine learning model for profile guided optimizations.(deprecated)
  -fprofile-remapping-file=<file>
                          Use the remappings described in <file> to match the profile data against names in the program
  -fprofile-sample-accurate
                          Specifies that the sample profile is accurate
  -fprofile-sample-generate=<value>
                          Enable compiler and linker generating information and adjusting optimizations for Sample-based Profile Guided Optimizations (SPGO). Vaild arguments are none, keep-all-opt, med-fidelity, max-fidelity. (experimental)
  -fprofile-sample-use=<value>
                          Enable compiler and linker using information for Sample-based Profile Guided Optimizations (SPGO). (experimental)
  -fprofile-selected-function-group=<i>
                          Partition functions into N groups using -fprofile-function-groups and select only functions in group i to be instrumented. The valid range is 0 to N-1 inclusive
  -fprofile-update=<method>
                          Set update method of profile counters
  -fprofile-use=<pathname>
                          Use instrumentation data for profile-guided optimization. If pathname is a directory, it reads from <pathname>/default.profdata. Otherwise, it reads from file <pathname>.
  -fprotect-parens        Determines whether the optimizer honors parentheses when floating-point expressions are evaluated
  -fpseudo-probe-for-profiling
                          Emit pseudo probes for sample profiling
  -fptrauth-auth-traps    Enable traps on authentication failures
  -fptrauth-calls         Enable signing and authentication of all indirect calls
  -fptrauth-function-pointer-type-discrimination
                          Enable type discrimination on C function pointers
  -fptrauth-init-fini     Enable signing of function pointers in init/fini arrays
  -fptrauth-intrinsics    Enable pointer authentication intrinsics
  -fptrauth-returns       Enable signing and authentication of return addresses
  -fptrauth-vtable-pointer-address-discrimination
                          Enable address discrimination of vtable pointers
  -fptrauth-vtable-pointer-type-discrimination
                          Enable type discrimination of vtable pointers
  -frandomize-layout-seed-file=<file>
                          File holding the seed used by the randomize structure layout feature
  -frandomize-layout-seed=<seed>
                          The seed used by the randomize structure layout feature
  -fraw-string-literals   Enable raw string literals
  -freciprocal-math       Allow division operations to be reassociated
  -freg-struct-return     Override the default ABI to return small structs in registers
  -fregister-global-dtors-with-atexit
                          Use atexit or __cxa_atexit to register global destructors
  -frelaxed-template-template-args
                          Enable C++17 relaxed template template argument matching
  -fropi                  Generate read-only position independent code (ARM only)
  -frounding-math         Disable floating point optimizations that assume the default rounding mode.
  -frtlib-add-rpath       Add -rpath with architecture-specific resource directory to the linker flags. When --hip-link is specified, also add -rpath with HIP runtime library directory to the linker flags
  -frtlib-defaultlib      On Windows, emit /defaultlib: directives to link compiler-rt libraries (default)
  -frwpi                  Generate read-write position independent code (ARM only)
  -fsafe-buffer-usage-suggestions
                          Display suggestions to update code associated with -Wunsafe-buffer-usage warnings
  -fsample-profile-use-profi
                          Use profi to infer block and edge counts
  -fsanitize-address-destructor=<value>
                          Set the kind of module destructors emitted by AddressSanitizer instrumentation. These destructors are emitted to unregister instrumented global variables when code is unloaded (e.g. via `dlclose()`).
  -fsanitize-address-field-padding=<value>
                          Level of field padding for AddressSanitizer
  -fsanitize-address-globals-dead-stripping
                          Enable linker dead stripping of globals in AddressSanitizer
  -fsanitize-address-outline-instrumentation
                          Always generate function calls for address sanitizer instrumentation
  -fsanitize-address-poison-custom-array-cookie
                          Enable poisoning array cookies when using custom operator new[] in AddressSanitizer
  -fsanitize-address-use-after-return=<mode>
                          Select the mode of detecting stack use-after-return in AddressSanitizer
  -fsanitize-address-use-after-scope
                          Enable use-after-scope detection in AddressSanitizer
  -fsanitize-address-use-odr-indicator
                          Enable ODR indicator globals to avoid false ODR violation reports in partially sanitized programs at the cost of an increase in binary size
  -fsanitize-cfi-canonical-jump-tables
                          Make the jump table addresses canonical in the symbol table
  -fsanitize-cfi-cross-dso
                          Enable control flow integrity (CFI) checks for cross-DSO calls.
  -fsanitize-cfi-icall-experimental-normalize-integers
                          Normalize integers in CFI indirect call type signature checks
  -fsanitize-cfi-icall-generalize-pointers
                          Generalize pointers in CFI indirect call type signature checks
  -fsanitize-coverage-allowlist=<value>
                          Restrict sanitizer coverage instrumentation exclusively to modules and functions that match the provided special case list, except the blocked ones
  -fsanitize-coverage-ignorelist=<value>
                          Disable sanitizer coverage instrumentation for modules and functions that match the provided special case list, even the allowed ones
  -fsanitize-coverage=<value>
                          Specify the type of coverage instrumentation for Sanitizers
  -fsanitize-hwaddress-abi=<value>
                          Select the HWAddressSanitizer ABI to target (interceptor or platform, default interceptor). This option is currently unused.
  -fsanitize-hwaddress-experimental-aliasing
                          Enable aliasing mode in HWAddressSanitizer
  -fsanitize-ignorelist=<value>
                          Path to ignorelist file for sanitizers
  -fsanitize-memory-param-retval
                          Enable detection of uninitialized parameters and return values
  -fsanitize-memory-track-origins=<value>
                          Enable origins tracking in MemorySanitizer
  -fsanitize-memory-track-origins
                          Enable origins tracking in MemorySanitizer
  -fsanitize-memory-use-after-dtor
                          Enable use-after-destroy detection in MemorySanitizer
  -fsanitize-memtag-mode=<value>
                          Set default MTE mode to 'sync' (default) or 'async'
  -fsanitize-recover=<value>
                          Enable recovery for specified sanitizers
  -fsanitize-stable-abi   Stable  ABI instrumentation for sanitizer runtime. Default: Conventional
  -fsanitize-stats        Enable sanitizer statistics gathering.
  -fsanitize-system-ignorelist=<value>
                          Path to system ignorelist file for sanitizers
  -fsanitize-thread-atomics
                          Enable atomic operations instrumentation in ThreadSanitizer (default)
  -fsanitize-thread-func-entry-exit
                          Enable function entry/exit instrumentation in ThreadSanitizer (default)
  -fsanitize-thread-memory-access
                          Enable memory access instrumentation in ThreadSanitizer (default)
  -fsanitize-trap=<value> Enable trapping for specified sanitizers
  -fsanitize-trap         Enable trapping for all sanitizers
  -fsanitize-undefined-strip-path-components=<number>
                          Strip (or keep only, if negative) a given number of path components when emitting check metadata.
  -fsanitize=<check>      Turn on runtime checks for various forms of undefined or suspicious behavior. See user manual for available checks
  -fsave-optimization-record=<format>
                          Generate an optimization record file in a specific format
  -fsave-optimization-record
                          Generate a YAML optimization record file
  -fseh-exceptions        Use SEH style exceptions
  -fseparate-named-sections
                          Use separate unique sections for named sections (ELF Only)
  -fshort-enums           Allocate to an enum type only as many bytes as it needs for the declared range of possible values
  -fshort-wchar           Force wchar_t to be a short unsigned int
  -fshow-overloads=<value>
                          Which overload candidates to show when overload resolution fails. Defaults to 'all'
  -fshow-skipped-includes Show skipped includes in -H output.
  -fsigned-char           char is signed
  -fsized-deallocation    Enable C++14 sized global deallocation functions
  -fsjlj-exceptions       Use SjLj style exceptions
  -fskip-odr-check-in-gmf Skip ODR checks for decls in the global module fragment.
  -fslp-vectorize         Enable the superword-level parallelism vectorization passes
  -fspell-checking-limit=<value>
                          Set the maximum number of times to perform spell checking on unrecognized identifiers (0 = no limit)
  -fsplit-dwarf-inlining  Provide minimal debug info in the object/executable to facilitate online symbolication/stack traces in the absence of .dwo/.dwp files when using Split DWARF
  -fsplit-lto-unit        Enables splitting of the LTO unit
  -fsplit-machine-functions
                          Enable late function splitting using profile information (x86 ELF/COFF)
  -fsplit-stack           Use segmented stack
  -fstack-clash-protection
                          Enable stack clash protection
  -fstack-limit-register=<value>
                          Limits the stack register size
  -fstack-protector-all   Enable stack protectors for all functions
  -fstack-protector-strong
                          Enable stack protectors for some functions vulnerable to stack smashing. Compared to -fstack-protector, this uses a stronger heuristic that includes functions containing arrays of any size (and any type), as well as any calls to alloca or the taking of an address from a local variable
  -fstack-protector       Enable stack protectors for some functions vulnerable to stack smashing. This uses a loose heuristic which considers functions vulnerable if they contain a char (or 8bit integer) array or constant sized calls to alloca , which are of greater size than ssp-buffer-size (default: 8 bytes). All variable sized calls to alloca are considered vulnerable. A function with a stack protector has a guard value added to the stack frame that is checked on function exit. The guard value must be positioned in the stack frame such that a buffer overflow from a vulnerable variable will overwrite the guard value before overwriting the function's return address. The reference stack guard value is stored in a global variable.
  -fstack-security-check  Enable overflow security checks
  -fstack-size-section    Emit section containing metadata on function stack sizes
  -fstack-usage           Emit .su file containing information on function stack sizes
  -fstandalone-debug      Emit full debug info for all types used by the program
  -fstrict-aliasing       Enable optimizations based on strict aliasing rules
  -fstrict-enums          Enable optimizations based on the strict definition of an enum's value range
  -fstrict-flex-arrays=<n>
                          Enable optimizations based on the strict definition of flexible arrays
  -fstrict-float-cast-overflow
                          Assume that overflowing float-to-int casts are undefined (default)
  -fstrict-vtable-pointers
                          Enable optimizations based on the strict rules for overwriting polymorphic C++ objects
  -fswift-async-fp=<option>
                          Control emission of Swift async extended frame info
  -fsycl-add-default-spec-consts-image
                          Generates a copy of every device image that uses a specialization constant and replaces all usages of specialization constant with default values specified by specialization_id. If a device image doesn't use a specialization constant at all then no copy is generated. This option is only useful if used in conjunction with Ahead of Time Compilation (-fsycl-target command line option).
  -fsycl-allow-device-dependencies
                          Allow dependencies between device code images
  -fsycl-dead-args-optimization
                          Enables elimination of DPC++ dead kernel arguments
  -fsycl-decompose-functor
                          Do decompose SYCL functor if possible (experimental, CUDA only)
  -fsycl-default-sub-group-size <value>
                          Set the default sub group size for SYCL kernels
  -fsycl-device-code-split-esimd
                          split ESIMD device code from SYCL into a separate device binary image (default). Has effect only for SPIR-based targets. (experimental)
  -fsycl-device-code-split=<value>
                          Perform SYCL device code split: per_kernel (device code module is created for each SYCL kernel) | per_source (device code module is created for each source (translation unit)) | off (no device code split). | auto (use heuristic to select the best way of splitting device code). Default is 'auto' - use heuristic to distribute device code across modules
  -fsycl-device-code-split
                          Perform SYCL device code split in the 'auto' mode, i.e. use heuristic to distribute device code across modules
  -fsycl-device-lib-jit-link
                          Enables sycl device library jit link (experimental)
  -fsycl-device-lib=<value>
                          Control inclusion of device libraries into device binary linkage. Valid arguments are libc, libm-fp32, libm-fp64, libimf-fp32, libimf-fp64, libimf-bf16, all
  -fsycl-device-obj=<value>
                          Specify format of device code stored in the resulting object. Valid values are: spirv, llvmir (default)
  -fsycl-device-only      Compile SYCL kernels for device
  -fsycl-disable-range-rounding
                          Deprecated: please use -fsycl-range-rounding=disable instead.
  -fsycl-dump-device-code=<value>
                          Dump device code into the user provided directory.
  -fsycl-early-optimizations
                          Enable standard optimization pipeline for SYCL device compiler
  -fsycl-embed-ir         Embed LLVM IR for runtime kernel fusion
  -fsycl-enable-function-pointers
                          Experimental Feature: Enables function pointers and support for virtual functions for DPC++ kernels and device functions.
  -fsycl-esimd-force-stateless-mem
                          Enforce using stateless memory accesses. Convert stateful accesses via SYCL accessors to stateless within ESIMD kernels. Enabled by default.
  -fsycl-exp-range-rounding
                          Use experimental range rounding.
  -fsycl-explicit-simd    Enable SYCL explicit SIMD extension. (deprecated)
  -fsycl-footer-path=<value>
                          Specify the location of the temporary source file with the included integration footer.
  -fsycl-force-inline-kernel-lambda
                          Allow force inline SYCL kernels lambda in entry point
  -fsycl-force-target=<value>
                          Force the usage of the given triple when extracting device code from any given objects on the command line
  -fsycl-fp32-prec-sqrt   SYCL only. Specify that single precision floating-point sqrt is correctly rounded.
  -fsycl-fp64-conv-emu    Enable fp64 partial emulation for kernels with only fp64 conversion operations and no fp64 computation operations (requires Intel GPU backend supporting fp64 partial emulation).
  -fsycl-help=<value>     Emit help information from the related offline compilation tool. Valid values: all, fpga, gen, x86_64.
  -fsycl-help             Emit help information from all of the offline compilation tools
  -fsycl-host-compiler-options=<value>
                          When performing the host compilation with -fsycl-host-compiler specified, use the given options during that compile. Options are expected to be a quoted list of space separated options.
  -fsycl-host-compiler=<value>
                          Specify C++ compiler binary to perform host compilation with during SYCL offload compiles.
  -fsycl-id-queries-fit-in-int
                          Assume that SYCL ID queries fit within MAX_INT.
  -fsycl-instrument-device-code
                          Add Instrumentation and Tracing Technology (ITT) instrumentation intrinsics calls (experimental)
  -fsycl-libspirv-path=<value>
                          Path to libspirv library
  -fsycl-link=<value>     Generate partially linked device and host object to be used at various stages of compilation
  -fsycl-link             Generate partially linked device object to be used with the host link
  -fsycl-max-parallel-link-jobs=<value>
                          Experimental feature: Controls the maximum parallelism of actions performed on SYCL device code post-link, i.e. the generation of SPIR-V device images or AOT compilation of each device image.
  -fsycl-optimize-non-user-code
                          Option used in conjunction with -O0 to optimize SYCL framework utility functions and leave user's kernel code unoptimized. (experimental)
  -fsycl-pstl-offload=<value>
                          Enable offloading of C++ standard parallel algorithms. Valid arguments are gpu and cpu.
  -fsycl-pstl-offload     Enable offloading of C++ standard parallel algorithms.
  -fsycl-range-rounding=<value>
                          Options for range rounding of SYCL range kernels: disable (do not generate range rounded kernels) force (only generate range rounded kernels) on (generate range rounded kernels as well as unrounded kernels). Default is 'on'
  -fsycl-remove-unused-external-funcs
                          Allow removal of unused `SYCL_EXTERNAL` functions (default)
  -fsycl-targets=<value>  Specify comma-separated list of triples that correspond to SYCL offloading targets to be supported. Valid triples include spir64_gen, spir64_x86_64, spir64_fpga and spir64
  -fsycl-unnamed-lambda   Allow unnamed SYCL lambda kernels
  -fsycl-use-bitcode      Use LLVM bitcode instead of SPIR-V in fat objects (deprecated)
  -fsycl                  Enables SYCL kernels compilation for device
  -fsyntax-only           Run the preprocessor, parser and semantic analysis stages
  -fsystem-debug          Emit debug information for declarations in system headers
  -fsystem-module         Build this module as a system module. Only used with -emit-module
  -ftarget-compile-fast   Experimental feature: Reduce target compilation time, with potential runtime performance trade-off.
  -ftarget-export-symbols Expose exported symbols in a generated target library to allow for visibilty to other modules.
  -ftarget-register-alloc-mode=<value>
                          Specify a register allocation mode for specific hardware for use by supported target backends.
  -ftemplate-backtrace-limit=<value>
                          Set the maximum number of entries to print in a template instantiation backtrace (0 = no limit)
  -ftemplate-depth=<value>
                          Set the maximum depth of recursive template instantiation
  -ftest-coverage         Produce gcov notes files (*.gcno)
  -fthin-link-bitcode=<value>
                          Write minimized bitcode to <file> for the ThinLTO thin link only
  -fthinlto-index=<value> Perform ThinLTO importing using provided function summary index
  -ftime-report=<value>   (For new pass manager) 'per-pass': one report for each pass; 'per-pass-run': one report for each pass invocation
  -ftime-trace-granularity=<value>
                          Minimum time granularity (in microseconds) traced by time profiler
  -ftime-trace=<value>    Similar to -ftime-trace. Specify the JSON file or a directory which will contain the JSON file
  -ftime-trace            Turn on time profiler. Generates JSON file based on output filename.
  -ftrap-function=<value> Issue call to specified function rather than a trap instruction
  -ftrapv-handler=<function name>
                          Specify the function to be called on overflow
  -ftrapv                 Trap on integer overflow
  -ftrigraphs             Process trigraph sequences
  -ftrivial-auto-var-init-max-size=<value>
                          Stop initializing trivial automatic stack variables if var size exceeds the specified number of instances (in bytes)
  -ftrivial-auto-var-init-stop-after=<value>
                          Stop initializing trivial automatic stack variables after the specified number of instances
  -ftrivial-auto-var-init=<value>
                          Initialize trivial automatic stack variables. Defaults to 'uninitialized'
  -ftz                    Enable flush denormal results to zero
  -funified-lto           Use the unified LTO pipeline
  -funique-basic-block-section-names
                          Use unique names for basic block sections (ELF Only)
  -funique-internal-linkage-names
                          Uniqueify Internal Linkage Symbol Names by appending the MD5 hash of the module path
  -funroll-loops          Turn on loop unroller
  -funsafe-math-optimizations
                          Allow unsafe floating-point math optimizations which may decrease precision
  -fuse-complex-intrinsics
                          Determines whether to lower _Complex operations to LLVM complex intrinsics
  -fuse-cuid=<value>      Method to generate ID's for compilation units for single source offloading languages CUDA and HIP: 'hash' (ID's generated by hashing file path and command line options) | 'random' (ID's generated as random numbers) | 'none' (disabled). Default is 'hash'. This option will be overridden by option '-cuid=[ID]' if it is specified.
  -fuse-line-directives   Use #line in preprocessed output
  -fvalidate-ast-input-files-content
                          Compute and store the hash of input files used to build an AST. Files with mismatching mtime's are considered valid if both contents is identical
  -fvec-allow-scalar-stores
                          When this option is set, an explicit simd loop (for example, one set with #pragma omp simd) will be vectorized even if it contains a store to a scalar variable that is not marked as private, lastprivate, or reduction.
  -fvec-peel-loops        Enable peel loop vectorization.
  -fvec-remainder-loops   Enable remainder loop vectorization.
  -fvec-with-mask         Enable vectorization for short trip-count loops with masking.
  -fveclib=<value>        Use the given vector functions library
  -fvectorize             Enable the loop vectorization passes
  -fverbose-asm           Generate verbose assembly output
  -fverify-intermediate-code
                          Enable verification of LLVM IR
  -fvirtual-function-elimination
                          Enables dead virtual function elimination optimization. Requires -flto=full
  -fvisibility-dllexport=<value>
                          The visibility for dllexport definitions. If Keep is specified the visibility is not adjusted [-fvisibility-from-dllstorageclass]
  -fvisibility-externs-dllimport=<value>
                          The visibility for dllimport external declarations. If Keep is specified the visibility is not adjusted [-fvisibility-from-dllstorageclass]
  -fvisibility-externs-nodllstorageclass=<value>
                          The visibility for external declarations without an explicit DLL storage class. If Keep is specified the visibility is not adjusted [-fvisibility-from-dllstorageclass]
  -fvisibility-from-dllstorageclass
                          Override the visibility of globals based on their final DLL storage class.
  -fvisibility-global-new-delete-hidden
                          Give global C++ operator new and delete declarations hidden visibility
  -fvisibility-global-new-delete=<value>
                          The visibility for global C++ operator new and delete declarations. If 'source' is specified the visibility is not adjusted
  -fvisibility-inlines-hidden-static-local-var
                          When -fvisibility-inlines-hidden is enabled, static variables in inline C++ member functions will also be given hidden visibility by default
  -fvisibility-inlines-hidden
                          Give inline C++ member functions hidden visibility by default
  -fvisibility-ms-compat  Give global types 'default' visibility and global functions and variables 'hidden' visibility by default
  -fvisibility-nodllstorageclass=<value>
                          The visibility for definitions without an explicit DLL storage class. If Keep is specified the visibility is not adjusted [-fvisibility-from-dllstorageclass]
  -fvisibility=<value>    Set the default symbol visibility for all global definitions
  -fwasm-exceptions       Use WebAssembly style exceptions
  -fwhole-program-vtables Enables whole-program vtable optimization. Requires -flto
  -fwrapv                 Treat signed integer overflow as two's complement
  -fwritable-strings      Store string literals as writable data
  -fxl-pragma-pack        Enable IBM XL #pragma pack handling
  -fxray-always-emit-customevents
                          Always emit __xray_customevent(...) calls even if the containing function is not always instrumented
  -fxray-always-emit-typedevents
                          Always emit __xray_typedevent(...) calls even if the containing function is not always instrumented
  -fxray-always-instrument=<value>
                          DEPRECATED: Filename defining the whitelist for imbuing the 'always instrument' XRay attribute.
  -fxray-attr-list=<value>
                          Filename defining the list of functions/types for imbuing XRay attributes.
  -fxray-function-groups=<value>
                          Only instrument 1 of N groups
  -fxray-ignore-loops     Don't instrument functions with loops unless they also meet the minimum function size
  -fxray-instruction-threshold=<value>
                          Sets the minimum function size to instrument with XRay
  -fxray-instrumentation-bundle=<value>
                          Select which XRay instrumentation points to emit. Options: all, none, function-entry, function-exit, function, custom. Default is 'all'.  'function' includes both 'function-entry' and 'function-exit'.
  -fxray-instrument       Generate XRay instrumentation sleds on function entry and exit
  -fxray-link-deps        Link XRay runtime library when -fxray-instrument is specified (default)
  -fxray-modes=<value>    List of modes to link in by default into XRay instrumented binaries.
  -fxray-never-instrument=<value>
                          DEPRECATED: Filename defining the whitelist for imbuing the 'never instrument' XRay attribute.
  -fxray-selected-function-group=<value>
                          When using -fxray-function-groups, select which group of functions to instrument. Valid range is 0 to fxray-function-groups - 1
  -fzero-call-used-regs=<value>
                          Clear call-used registers upon function return (AArch64/x86 only)
  -fzvector               Enable System z vector language extension
  -F <value>              Add directory to framework include search path
  --gcc-install-dir=<value>
                          Use GCC installation in the specified directory. The directory ends with path components like 'lib{,32,64}/gcc{,-cross}/$triple/$version'. Note: executables (e.g. ld) used by the compiler are not overridden by the selected GCC installation
  --gcc-toolchain=<value> Specify a directory where Clang can find 'include' and 'lib{,32,64}/gcc{,-cross}/$triple/$version'. Clang will use the GCC installation with the largest version
  --gcc-triple=<value>    Search for the GCC installation with the specified triple.
  -gcodeview-command-line Emit compiler path and command line into CodeView debug information
  -gcodeview-ghash        Emit type record hashes in a .debug$H section
  -gcodeview              Generate CodeView debug information
  -gdwarf-2               Generate source-level debug information with dwarf version 2
  -gdwarf-3               Generate source-level debug information with dwarf version 3
  -gdwarf-4               Generate source-level debug information with dwarf version 4
  -gdwarf-5               Generate source-level debug information with dwarf version 5
  -gdwarf32               Enables DWARF32 format for ELF binaries, if debug information emission is enabled.
  -gdwarf64               Enables DWARF64 format for ELF binaries, if debug information emission is enabled.
  -gdwarf                 Generate source-level debug information with the default dwarf version
  -gembed-source          Embed source text in DWARF debug sections
  -gen-reproducer=<value> Emit reproducer on (option: off, crash (default), error, always)
  -gintel-sti             Generate Intel STI debug information
  -gline-directives-only  Emit debug line info directives only
  -gline-tables-only      Emit debug line number tables only
  -global-hoist           Enable external globals are load safe (default)
  -gmodules               Generate debug info with external references to clang modules or precompiled headers
  -gno-codeview-command-line
                          Don't emit compiler path and command line into CodeView debug information
  -gno-embed-source       Restore the default behavior of not embedding source text in DWARF debug sections
  -gno-inline-line-tables Don't emit inline line tables.
  --gpu-bundle-output     Bundle output files of HIP device compilation
  --gpu-instrument-lib=<value>
                          Instrument device library for HIP, which is a LLVM bitcode containing __cyg_profile_func_enter and __cyg_profile_func_exit
  --gpu-max-threads-per-block=<value>
                          Default max threads per block for kernel launch bounds for HIP
  -gpulibc                Link the LLVM C Library for GPUs
  -gsplit-dwarf=<value>   Set DWARF fission mode
  -gstrict-dwarf          Restrict DWARF features to those defined in the specified version, avoiding features from later versions.
  -gz=<value>             DWARF debug sections compression type
  -G <size>               Put objects of at most <size> bytes into small data section (MIPS / Hexagon)
  -g                      Generate source-level debug information
  --help-hidden           Display help for hidden options
  -help                   Display available options
  --hip-device-lib=<value>
                          HIP device library
  --hip-link              Link clang-offload-bundler bundles for HIP
  --hip-path=<value>      HIP runtime installation path, used for finding HIP version and adding HIP include path.
  --hip-version=<value>   HIP version in the format of major.minor.patch
  --hipspv-pass-plugin=<dsopath>
                          path to a pass plugin for HIP to SPIR-V passes.
  --hipstdpar-interpose-alloc
                          Replace all memory allocation / deallocation calls with hipManagedMalloc / hipFree equivalents
  --hipstdpar-path=<value>
                          HIP Standard Parallel Algorithm Acceleration library path, used for finding and implicitly including the library header
  --hipstdpar-prim-path=<value>
                          rocPrim path, required by the HIP Standard Parallel Algorithm Acceleration library, used to implicitly include the rocPrim library
  --hipstdpar-thrust-path=<value>
                          rocThrust path, required by the HIP Standard Parallel Algorithm Acceleration library, used to implicitly include the rocThrust library
  --hipstdpar             Enable HIP acceleration for standard parallel algorithms
  -H                      Show header includes and nesting depth
  -I-                     Restrict all prior -I flags to double-quoted inclusion and remove current directory from include path
  -iapinotes-modules <directory>
                          Add directory to the API notes search path referenced by module name
  -ibuiltininc            Enable builtin #include directories even when -nostdinc is used before or after -ibuiltininc. Using -nobuiltininc after the option disables it
  -idirafter <value>      Add directory to AFTER include search path
  -iframeworkwithsysroot <directory>
                          Add directory to SYSTEM framework search path, absolute paths are relative to -isysroot
  -iframework <value>     Add directory to SYSTEM framework search path
  -imacros <file>         Include macros from file before parsing
  -include-pch <file>     Include precompiled header file
  -include <file>         Include file before parsing
  -index-header-map       Make the next included directory (-I or -F) an indexer header map
  -inline-forceinline     Treat inline routines as forceinline
  -inline-level=<value>   Set function inlining level where: 0 is disable, 1 is inline marked functions and 2 is inline at compilers discretion
  --intel                 Run in Intel Compiler mode
  -ipo                    Enable LTO in 'full' mode
  -ipp-link=<value>       Link Intel(R) IPP libraries in requested manner (static,dynamic,shared)
  -ipp=<value>            Link commonly used Intel(R) Integrated Performace Primitives (Intel(R) IPP) libraries and bring in the associated headers (common,crypto,nonpic,nonpic_crypto)
  -iprefix <dir>          Set the -iwithprefix/-iwithprefixbefore prefix
  -iquote <directory>     Add directory to QUOTE include search path
  -isysroot <dir>         Set the system root directory (usually /)
  -isystem-after <directory>
                          Add directory to end of the SYSTEM include search path
  -isystem <directory>    Add directory to SYSTEM include search path
  -ivfsoverlay-lib <value>
                          Load the virtual filesystem from shared library
  -ivfsoverlay <value>    Overlay the virtual filesystem described by file over the real file system
  -iwithprefixbefore <dir>
                          Set directory to include search path with prefix
  -iwithprefix <dir>      Set directory to SYSTEM include search path with prefix
  -iwithsysroot <directory>
                          Add directory to SYSTEM include search path, absolute paths are relative to -isysroot
  -I <dir>                Add directory to the end of the list of include search paths
  --libomptarget-amdgcn-bc-path=<value>
                          Path to libomptarget-amdgcn bitcode library
  --libomptarget-amdgpu-bc-path=<value>
                          Path to libomptarget-amdgcn bitcode library
  --libomptarget-nvptx-bc-path=<value>
                          Path to libomptarget-nvptx bitcode library
  -L <dir>                Add directory to library search path
  -mabi=quadword-atomics  Enable quadword atomics ABI on AIX (AIX PPC64 only). Uses lqarx/stqcx. instructions.
  -mabicalls              Enable SVR4-style position-independent code (Mips only)
  -maix-shared-lib-tls-model-opt
                          For shared library loaded with the main program, change local-dynamic access(es) to initial-exec access(es) at the function level (AIX 64-bit only).
  -maix-small-local-dynamic-tls
                          Produce a faster access sequence for local-dynamic TLS variables where the offset from the TLS base is encoded as an immediate operand (AIX 64-bit only). This access sequence is not used for variables larger than 32KB.
  -maix-small-local-exec-tls
                          Produce a faster access sequence for local-exec TLS variables where the offset from the TLS base is encoded as an immediate operand (AIX 64-bit only). This access sequence is not used for variables larger than 32KB.
  -maix-struct-return     Return all structs in memory (PPC32 only)
  -malign-branch-boundary=<value>
                          Specify the boundary's size to align branches
  -malign-branch=<value>  Specify types of branches to align
  -malign-double          Align doubles to two words in structs (x86 only)
  -maltivec               Enable AltiVec vector initializer syntax
  -mamdgpu-ieee           Sets the IEEE bit in the expected default floating point  mode register. Floating point opcodes that support exception flag gathering quiet and propagate signaling NaN inputs per IEEE 754-2008. This option changes the ABI. (AMDGPU only)
  -mamdgpu-precise-memory-op
                          Enable precise memory mode (AMDGPU only)
  -mapx-features=<value>  Enable features of APX
  -mapx-inline-asm-use-gpr32
                          Enable use of GPR32 in inline assembly for APX
  -march=<value>          For a list of available architectures for the target use '-mcpu=help'
  -marm64x<value>         Link as a hybrid ARM64X image
  -mauto-arch=<codes>     generate multiple, processor-specific, auto-dispatched code paths for X86 processors, specified by <codes>, if there is a performance benefit
  -mbackchain             Link stack frames through backchain on System Z
  -mbranch-protection=<value>
                          Enforce targets of indirect branches and function returns
  -mbranches-within-32B-boundaries
                          Align selected branches (fused, jcc, jmp) within 32-byte boundary
  -mcabac                 Enable CABAC instructions
  -mcmse                  Allow use of CMSE (Armv8-M Security Extensions)
  -mcode-object-version=<value>
                          Specify code object ABI version. Defaults to 5. (AMDGPU only)
  -mconstructor-aliases   Enable emitting complete constructors and destructors as aliases when possible
  -mcpu=<value>           For a list of available CPUs for the target use '-mcpu=help'
  -mcrbits                Control the CR-bit tracking feature on PowerPC. ``-mcrbits`` (the enablement of CR-bit tracking support) is the default for POWER8 and above, as well as for all other CPUs when optimization is applied (-O2 and above).
  -mcrc                   Allow use of CRC instructions (ARM/Mips only)
  -mcumode                Specify CU wavefront execution mode (AMDGPU only)
  -mdaz-ftz               Globally set the denormals-are-zero (DAZ) and flush-to-zero (FTZ) bits in the floating-point control register on program startup
  -mdebug-line-version=<value>
                          Set debug line version used when generating debug information
  -mdefault-visibility-export-mapping=<value>
                          Mapping between default visibility and export
  -mdouble=<n             Force double to be <n> bits
  -MD                     Write a depfile containing user and system headers
  -meabi <value>          Set EABI type. Default depends on triple)
  -membedded-data         Place constants in the .rodata section instead of the .sdata section even if they meet the -G <size> threshold (MIPS)
  -menable-experimental-extensions
                          Enable use of experimental RISC-V extensions.
  -mexec-model=<value>    Execution model (WebAssembly only)
  -mexecute-only          Disallow generation of data access to code sections (ARM only)
  -mextern-sdata          Assume that externally defined data is in the small data if it meets the -G <size> threshold (MIPS)
  -mfentry                Insert calls to fentry at function entry (x86/SystemZ only)
  -mfix-cmse-cve-2021-35465
                          Work around VLLDM erratum CVE-2021-35465 (ARM only)
  -mfix-cortex-a53-835769 Workaround Cortex-A53 erratum 835769 (AArch64 only)
  -mfix-cortex-a57-aes-1742098
                          Work around Cortex-A57 Erratum 1742098 (ARM only)
  -mfix-cortex-a72-aes-1655431
                          Work around Cortex-A72 Erratum 1655431 (ARM only)
  -mforced-sw-shadow-stack
                          Force using software shadow stack when shadow-stack enabled
  -mfp32                  Use 32-bit floating point registers (MIPS only)
  -mfp64                  Use 64-bit floating point registers (MIPS only)
  -mframe-chain=<value>   Select the frame chain model used to emit frame records (Arm only).
  -mfunction-return=<value>
                          Replace returns with jumps to ``__x86_return_thunk`` (x86 only, error otherwise)
  -MF <file>              Write depfile output from -MMD, -MD, -MM, or -M to <file>
  -mgeneral-regs-only     Generate code which only uses the general purpose registers (AArch64/x86 only)
  -mglobal-merge          Enable merging of globals
  -mgpopt                 Use GP relative accesses for symbols known to be in a small data section (MIPS)
  -mguard=<value>         Enable or disable Control Flow Guard checks and guard tables emission
  -MG                     Add missing headers to depfile
  -mharden-sls=<value>    Select straight-line speculation hardening scope (ARM/AArch64/X86 only). <arg> must be: all, none, retbr(ARM/AArch64), blr(ARM/AArch64), comdat(ARM/AArch64), nocomdat(ARM/AArch64), return(X86), indirect-jmp(X86)
  -mhvx-ieee-fp           Enable Hexagon HVX IEEE floating-point
  -mhvx-length=<value>    Set Hexagon Vector Length
  -mhvx-qfloat            Enable Hexagon HVX QFloat instructions
  -mhvx=<value>           Enable Hexagon Vector eXtensions
  -mhvx                   Enable Hexagon Vector eXtensions
  -miamcu                 Use Intel MCU ABI
  -mignore-xcoff-visibility
                          Not emit the visibility attribute for asm in AIX OS or give all symbols 'unspecified' visibility in XCOFF object file
  --migrate               Run the migrator
  -mincremental-linker-compatible
                          (integrated-as) Emit an object file which can be used with an incremental linker
  -mindirect-branch-cs-prefix
                          Add cs prefix to call and jmp to indirect thunk
  -mindirect-jump=<value> Change indirect jump instructions to inhibit speculation
  -mintrinsic-promote     Force certain functions using intrinsics to promote their architectures and make the intrinsic headers included by default
  -mios-version-min=<value>
                          Set iOS deployment target
  -MJ <value>             Write a compilation database entry per input
  -mlasx                  Enable Loongson Advanced SIMD Extension (LASX).
  -mlink-builtin-bitcode-postopt
                          Link builtin bitcodes after the optimization pipeline
  -mllvm-lto <value>      Additional arguments to forward to LLVM's option processing. Similar to -mllvm, but will also pass the given argument to the LTO step when appropriate.
  -mllvm=<arg>            Alias for -mllvm
  -mllvm <value>          Additional arguments to forward to LLVM's option processing
  -mlocal-sdata           Extend the -G behaviour to object local data (MIPS)
  -mlong-calls            Generate branches with extended addressability, usually via indirect jumps.
  -mlong-double-128       Force long double to be 128 bits
  -mlong-double-64        Force long double to be 64 bits
  -mlong-double-80        Force long double to be 80 bits, padded to 128 bits for storage
  -mlr-for-calls-only     Do not allocate the LR register for general purpose usage, only for calls. (AArch64 only)
  -mlsx                   Enable Loongson SIMD Extension (LSX).
  -mlvi-cfi               Enable only control-flow mitigations for Load Value Injection (LVI)
  -mlvi-hardening         Enable all mitigations for Load Value Injection (LVI)
  -mmacos-version-min=<value>
                          Set macOS deployment target
  -mmadd4                 Enable the generation of 4-operand madd.s, madd.d and related instructions.
  -mmark-bti-property     Add .note.gnu.property with BTI to assembly files (AArch64 only)
  -MMD                    Write a depfile containing user headers
  -mmemops                Enable generation of memop instructions
  -mmlir <value>          Additional arguments to forward to MLIR's option processing
  -mms-bitfields          Set the default structure layout to be compatible with the Microsoft compiler standard
  -mmsa                   Enable MSA ASE (MIPS only)
  -mmt                    Enable MT ASE (MIPS only)
  -MM                     Like -MMD, but also implies -E and writes to stdout by default
  -mno-abicalls           Disable SVR4-style position-independent code (Mips only)
  -mno-amdgpu-precise-memory-op
                          Disable precise memory mode (AMDGPU only)
  -mno-apx-features=<value>
                          Disable features of APX
  -mno-bti-at-return-twice
                          Do not add a BTI instruction after a setjmp or other return-twice construct (Arm/AArch64 only)
  -mno-constructor-aliases
                          Disable emitting complete constructors and destructors as aliases when possible
  -mno-crc                Disallow use of CRC instructions (Mips only)
  -mno-cumode             Specify WGP wavefront execution mode (AMDGPU only)
  -mno-daz-ftz            Do not globally set the denormals-are-zero (DAZ) and flush-to-zero (FTZ) bits in the floating-point control register on program startup
  -mno-embedded-data      Do not place constants in the .rodata section instead of the .sdata if they meet the -G <size> threshold (MIPS)
  -mno-execute-only       Allow generation of data access to code sections (ARM only)
  -mno-extern-sdata       Do not assume that externally defined data is in the small data if it meets the -G <size> threshold (MIPS)
  -mno-fix-cmse-cve-2021-35465
                          Don't work around VLLDM erratum CVE-2021-35465 (ARM only)
  -mno-fix-cortex-a53-835769
                          Don't workaround Cortex-A53 erratum 835769 (AArch64 only)
  -mno-fix-cortex-a57-aes-1742098
                          Don't work around Cortex-A57 Erratum 1742098 (ARM only)
  -mno-fix-cortex-a72-aes-1655431
                          Don't work around Cortex-A72 Erratum 1655431 (ARM only)
  -mno-fmv                Disable function multiversioning
  -mno-forced-sw-shadow-stack
                          Not force using software shadow stack when shadow-stack enabled
  -mno-gather             Disable generation of gather instructions in auto-vectorization(x86 only)
  -mno-global-merge       Disable merging of globals
  -mno-gpopt              Do not use GP relative accesses for symbols known to be in a small data section (MIPS)
  -mno-hvx-ieee-fp        Disable Hexagon HVX IEEE floating-point
  -mno-hvx-qfloat         Disable Hexagon HVX QFloat instructions
  -mno-hvx                Disable Hexagon Vector eXtensions
  -mno-implicit-float     Don't generate implicit floating point or vector instructions
  -mno-incremental-linker-compatible
                          (integrated-as) Emit an object file which cannot be used with an incremental linker
  -mno-lasx               Disable Loongson Advanced SIMD Extension (LASX).
  -mno-local-sdata        Do not extend the -G behaviour to object local data (MIPS)
  -mno-long-calls         Restore the default behaviour of not generating long calls
  -mno-lsx                Disable Loongson SIMD Extension (LSX).
  -mno-lvi-cfi            Disable control-flow mitigations for Load Value Injection (LVI)
  -mno-lvi-hardening      Disable mitigations for Load Value Injection (LVI)
  -mno-madd4              Disable the generation of 4-operand madd.s, madd.d and related instructions.
  -mno-memops             Disable generation of memop instructions
  -mno-movt               Disallow use of movt/movw pairs (ARM only)
  -mno-ms-bitfields       Do not set the default structure layout to be compatible with the Microsoft compiler standard
  -mno-msa                Disable MSA ASE (MIPS only)
  -mno-mt                 Disable MT ASE (MIPS only)
  -mno-neg-immediates     Disallow converting instructions with negative immediates to their negation or inversion.
  -mno-nvj                Disable generation of new-value jumps
  -mno-nvs                Disable generation of new-value stores
  -mno-outline-atomics    Don't generate local calls to out-of-line atomic operations
  -mno-outline            Disable function outlining (AArch64 only)
  -mno-packets            Disable generation of instruction packets
  -mno-pic-data-is-text-relative
                          Don't assume data segments are relative to text segment
  -mno-regnames           Use only register numbers when writing assembly output
  -mno-relax              Disable linker relaxation
  -mno-restrict-it        Allow generation of complex IT blocks.
  -mno-save-restore       Disable using library calls for save and restore
  -mno-scalar-strict-align
                          Allow scalar memory accesses to be unaligned (RISC-V only)
  -mno-scatter            Disable generation of scatter instructions in auto-vectorization(x86 only)
  -mno-seses              Disable speculative execution side effect suppression (SESES)
  -mno-stack-arg-probe    Disable stack probes which are enabled by default
  -mno-strict-align       Allow memory accesses to be unaligned (AArch64/LoongArch/RISC-V only)
  -mno-tgsplit            Disable threadgroup split execution mode (AMDGPU only)
  -mno-tls-direct-seg-refs
                          Disable direct TLS access through segment registers
  -mno-tocdata=<value>    Specifies a list of variables to be exempt from the TOC datatransformation.
  -mno-tocdata            This is the default. TOC data transformation is not applied to anyvariables. Only variables specified explicitly in -mtocdata= willhave the TOC data transformation.
  -mno-unaligned-access   Force all memory accesses to be aligned (AArch32/MIPSr6 only)
  -mno-unaligned-symbols  Expect external char-aligned symbols to be without ABI alignment (SystemZ only)
  -mno-vector-strict-align
                          Allow vector memory accesses to be unaligned (RISC-V only)
  -mno-wavefrontsize64    Specify wavefront size 32 mode (AMDGPU only)
  -mnocrc                 Disallow use of CRC instructions (ARM only)
  -mnop-mcount            Generate mcount/__fentry__ calls as nops. To activate they need to be patched in.
  -mnvj                   Enable generation of new-value jumps
  -mnvs                   Enable generation of new-value stores
  -module-dependency-dir <value>
                          Directory to dump module dependencies to
  -module-file-info       Provide information about a particular module file
  -momit-leaf-frame-pointer
                          Omit frame pointer setup for leaf functions
  -moutline-atomics       Generate local calls to out-of-line atomic operations
  -moutline               Enable function outlining (AArch64 only)
  -mpacked-stack          Use packed stack layout (SystemZ only).
  -mpackets               Enable generation of instruction packets
  -mpad-max-prefix-size=<value>
                          Specify maximum number of prefixes to use for padding
  -mpic-data-is-text-relative
                          Assume data segments are relative to text segment
  -mprefer-vector-width=<value>
                          Specifies preferred vector width for auto-vectorization. Defaults to 'none' which allows target specific decisions.
  -mprintf-kind=<value>   Specify the printf lowering scheme (AMDGPU only), allowed values are "hostcall"(printing happens during kernel execution, this scheme relies on hostcalls which require system to support pcie atomics) and "buffered"(printing happens after all kernel threads exit, this uses a printf buffer and does not rely on pcie atomic support)
  -MP                     Create phony target for each dependency (other than main file)
  -mqdsp6-compat          Enable hexagon-qdsp6 backward compatibility
  -MQ <value>             Specify name of main file output to quote in depfile
  -mrecip=<value>         Control use of approximate reciprocal and reciprocal square root instructions followed by <n> iterations of Newton-Raphson refinement. <value> = ( ['!'] ['vec-'] ('rcp'|'sqrt') [('h'|'s'|'d')] [':'<n>] ) | 'all' | 'default' | 'none'
  -mrecip                 Equivalent to '-mrecip=all'
  -mrecord-mcount         Generate a __mcount_loc section entry for each __fentry__ call.
  -mregnames              Use full register names when writing assembly output
  -mrelax-all             (integrated-as) Relax all machine instructions
  -mrelax                 Enable linker relaxation
  -mrestrict-it           Disallow generation of complex IT blocks. It is off by default.
  -mrtd                   Make StdCall calling convention the default
  -mrvv-vector-bits=<value>
                          Specify the size in bits of an RVV vector register
  -msave-restore          Enable using library calls for save and restore
  -mscalar-strict-align   Force all scalar memory accesses to be aligned (RISC-V only)
  -mseses                 Enable speculative execution side effect suppression (SESES). Includes LVI control flow integrity mitigations
  -msign-return-address=<value>
                          Select return address signing scope
  -msimd=<value>          Select the SIMD extension(s) to be enabled in LoongArch either 'none', 'lsx', 'lasx'.
  -mskip-rax-setup        Skip setting up RAX register when passing variable arguments (x86 only)
  -msmall-data-limit=<value>
                          Put global and static data smaller than the limit into a special section
  -msoft-float            Use software floating point
  -msse2avx               Specify that the assembler should encode SSE instructions with VEX prefix
  -mstack-alignment=<value>
                          Set the stack alignment
  -mstack-arg-probe       Enable stack probes
  -mstack-probe-size=<value>
                          Set the stack probe size
  -mstack-protector-guard-offset=<value>
                          Use the given offset for addressing the stack-protector guard
  -mstack-protector-guard-reg=<value>
                          Use the given reg for addressing the stack-protector guard
  -mstack-protector-guard-symbol=<value>
                          Use the given symbol for addressing the stack-protector guard
  -mstack-protector-guard=<value>
                          Use the given guard (global, tls) for addressing the stack-protector guard
  -mstackrealignext       Force realign the stack at entry to every external function
  -mstackrealign          Force realign the stack at entry to every function
  -mstrict-align          Force all memory accesses to be aligned (AArch64/LoongArch/RISC-V only)
  -msve-vector-bits=<value>
                          Specify the size in bits of an SVE vector register. Defaults to the vector length agnostic value of "scalable". (AArch64 only)
  -msvr4-struct-return    Return small structs in registers (PPC32 only)
  -mtargetos=<value>      Set the deployment target to be the specified OS and OS version
  -mtgsplit               Enable threadgroup split execution mode (AMDGPU only)
  -mthread-model <value>  The thread model to use. Defaults to 'posix')
  -mtls-dialect=<value>   Which thread-local storage dialect to use for dynamic accesses of TLS variables
  -mtls-direct-seg-refs   Enable direct TLS access through segment registers (default)
  -mtls-size=<value>      Specify bit size of immediate TLS offsets (AArch64 ELF only): 12 (for 4KB) | 24 (for 16MB, default) | 32 (for 4GB) | 48 (for 256TB, needs -mcmodel=large)
  -mtocdata=<value>       Specifies a list of variables to which the TOC data transformationwill be applied.
  -mtocdata               All suitable variables will have the TOC data transformation applied
  -mtp=<value>            Thread pointer access method. For AArch32: 'soft' uses a function call, or 'tpidrurw', 'tpidruro' or 'tpidrprw' use the three CP15 registers. 'cp15' is an alias for 'tpidruro'. For AArch64: 'tpidr_el0', 'tpidr_el1', 'tpidr_el2', 'tpidr_el3' or 'tpidrro_el0' use the five system registers. 'elN' is an alias for 'tpidr_elN'.
  -mtune=<value>          Only supported on AArch64, PowerPC, RISC-V, SPARC, SystemZ, and X86
  -MT <value>             Specify name of main file output in depfile
  -munaligned-access      Allow memory accesses to be unaligned (AArch32/MIPSr6 only)
  -munaligned-symbols     Expect external char-aligned symbols to be without ABI alignment (SystemZ only)
  -munsafe-fp-atomics     Enable generation of unsafe floating point atomic instructions. May generate more efficient code, but may not respect rounding and denormal modes, and may give incorrect results for certain memory destinations. (AMDGPU only)
  -mvector-strict-align   Force all vector memory accesses to be aligned (RISC-V only)
  -mvevpu                 Emit VPU instructions for VE
  -MV                     Use NMake/Jom format for the depfile
  -mwavefrontsize64       Specify wavefront size 64 mode (AMDGPU only)
  -mxcoff-build-id=<0xHEXSTRING>
                          On AIX, request creation of a build-id string, "0xHEXSTRING", in the string table of the loader section inside the linked binary
  -mxcoff-roptr           Place constant objects with relocatable address values in the RO data section and add -bforceimprw to the linker flags (AIX only)
  -mzos-hlq-clang=<ClangHLQ>
                          High level qualifier for z/OS C++RT side deck datasets
  -mzos-hlq-csslib=<CsslibHLQ>
                          High level qualifier for z/OS CSSLIB dataset
  -mzos-hlq-le=<LeHLQ>    High level qualifier for z/OS Language Environment datasets
  -mzos-sys-include=<SysInclude>
                          Path to system headers on z/OS
  -M                      Like -MD, but also implies -E and writes to stdout by default
  -no-ansi-alias          disable use of ANSI aliasing rules optimizations
  --no-cuda-include-ptx=<value>
                          Do not include PTX for the following GPU architecture (e.g. sm_35) or 'all'. May be specified more than once.
  --no-cuda-version-check Don't error out if the detected version of the CUDA install is too low for the requested CUDA gpu architecture.
  --no-default-config     Disable loading default configuration files
  -no-fma                 Disable the combining of floating point multiples and add/subtract operations.
  -no-ftz                 Disable flush denormal results to zero
  -no-global-hoist        Disable external globals are load safe
  --no-gpu-bundle-output  Do not bundle output files of HIP device compilation
  -no-hip-rt              Do not link against HIP runtime libraries
  -no-intel-lib=<value>   Restrict linking of Intel specific libraries. Valid arguments are libirc, libimf, libirng, libsvml
  -no-intel-lib           Restrict linking of all Intel specific libraries.
  -no-ipo                 Disable LTO mode (default)
  --no-offload-arch=<value>
                          Remove CUDA/HIP offloading device architecture (e.g. sm_35, gfx906) from the list of devices to compile for. 'all' resets the list to its default value.
  --no-offload-new-driver Don't Use the new driver for offloading compilation.
  -no-parallel-source-info
                          Disable emission of source location information for parallel code generation.
  -no-sox                 Disable saving of compiler options in the executable
  --no-system-header-prefix=<prefix>
                          Treat all #include paths starting with <prefix> as not including a system header.
  -no-vec                 Disable the loop vectorization passes
  --no-wasm-opt           Disable the wasm-opt optimizer
  -nobuiltininc           Disable builtin #include directories
  -nogpuinc               Do not add include paths for CUDA/HIP and do not include the default CUDA/HIP wrapper headers
  -nogpulib               Do not link device library for CUDA/HIP device compilation
  -nohipwrapperinc        Do not include the default HIP wrapper headers and include paths
  -nolib-inline           disable inline expansion of intrinsic functions
  -nolibsycl              Do not link SYCL runtime library
  -nostdinc++             Disable standard #include directories for the C++ standard library
  --nvptx-arch-tool=<value>
                          Tool used for detecting NVIDIA GPU arch in the system.
  -ObjC++                 Treat source input files as Objective-C++ inputs
  -objcmt-allowlist-dir-path=<value>
                          Only modify files with a filename contained in the provided directory path
  -objcmt-atomic-property Make migration to 'atomic' properties
  -objcmt-migrate-all     Enable migration to modern ObjC
  -objcmt-migrate-annotation
                          Enable migration to property and method annotations
  -objcmt-migrate-designated-init
                          Enable migration to infer NS_DESIGNATED_INITIALIZER for initializer methods
  -objcmt-migrate-instancetype
                          Enable migration to infer instancetype for method result type
  -objcmt-migrate-literals
                          Enable migration to modern ObjC literals
  -objcmt-migrate-ns-macros
                          Enable migration to NS_ENUM/NS_OPTIONS macros
  -objcmt-migrate-property-dot-syntax
                          Enable migration of setter/getter messages to property-dot syntax
  -objcmt-migrate-property
                          Enable migration to modern ObjC property
  -objcmt-migrate-protocol-conformance
                          Enable migration to add protocol conformance on classes
  -objcmt-migrate-readonly-property
                          Enable migration to modern ObjC readonly property
  -objcmt-migrate-readwrite-property
                          Enable migration to modern ObjC readwrite property
  -objcmt-migrate-subscripting
                          Enable migration to modern ObjC subscripting
  -objcmt-ns-nonatomic-iosonly
                          Enable migration to use NS_NONATOMIC_IOSONLY macro for setting property's 'atomic' attribute
  -objcmt-returns-innerpointer-property
                          Enable migration to annotate property with NS_RETURNS_INNER_POINTER
  -objcmt-whitelist-dir-path=<value>
                          Alias for -objcmt-allowlist-dir-path
  -ObjC                   Treat source input files as Objective-C inputs
  -object-file-name=<file>
                          Set the output <file> for debug infos
  --offload-arch=<value>  Specify an offloading device architecture for CUDA, HIP, or OpenMP. (e.g. sm_35). If 'native' is used the compiler will detect locally installed architectures. For HIP offloading, the device architecture can be followed by target ID features delimited by a colon (e.g. gfx908:xnack+:sramecc-). May be specified more than once.
  --offload-compress      Compress offload device binaries (HIP only)
  --offload-device-only   Only compile for the offloading device.
  --offload-host-device   Compile for both the offloading host and device (default).
  --offload-host-only     Only compile for the offloading host.
  --offload-link          Use the new offloading linker to perform the link job.
  --offload-new-driver    Use the new driver for offloading compilation.
  --offload=<value>       Specify comma-separated list of offloading target triples (CUDA and HIP only)
  -o <file>               Write output to <file>
  -parallel-source-info=<value>
                          Emit source location information for parallel code generation with OpenMP and auto-parallelization.
  -pch-use <file>         Include precompiled header file
  -pc <value>             Initialize X87 floating point precision to single, double or double extended. Valid values of 32, 64 and 80
  -pedantic               Warn on language extensions
  -pg                     Enable mcount instrumentation
  -pipe                   Use pipes between commands, when possible
  --precompile            Only precompile the input
  --pretty-sgf            Emit pretty printed symbol graphs
  -print-diagnostic-options
                          Print all of Clang's warning options
  -print-effective-triple Print the effective target triple
  -print-enabled-extensions
                          Print the extensions enabled by the given target and -march/-mcpu options. (AArch64 and RISC-V only)
  -print-file-name=<file> Print the full library path of <file>
  -print-ivar-layout      Enable Objective-C Ivar layout bitmap print trace
  -print-libgcc-file-name Print the library path for the currently used compiler runtime library ("libgcc.a" or "libclang_rt.builtins.*.a")
  -print-library-module-manifest-path
                          Print the path for the C++ Standard library module manifest
  -print-multi-flags-experimental
                          Print the flags used for selecting multilibs (experimental)
  -print-prog-name=<name> Print the full program path of <name>
  -print-resource-dir     Print the resource directory pathname
  -print-rocm-search-dirs Print the paths used for finding ROCm installation
  -print-runtime-dir      Print the directory pathname containing Clang's runtime libraries
  -print-search-dirs      Print the paths used for finding libraries and programs
  -print-supported-cpus   Print supported cpu models for the given target (if target is not specified, it will print the supported cpus for the default target)
  -print-supported-extensions
                          Print supported -march extensions (RISC-V, AArch64 and ARM only)
  -print-target-triple    Print the normalized target triple
  -print-targets          Print the registered targets
  -pthread                Support POSIX threads in generated code
  --ptxas-path=<value>    Path to ptxas (used for compiling CUDA code)
  -P                      Disable linemarker output in -E mode
  -p                      Enable mcount instrumentation with prof
  -qactypes               Enable compile and link support for the Algorithmic C Data-types (AC types)
  -qdaal=<value>          Link Intel(R) Data Analytics Acceleration Library (Intel(R) DAAL) libraries and bring in the associated headers (parallel)
  -qipp-link=<value>      Link Intel(R) IPP libraries in requested manner (static,dynamic,shared)
  -qipp=<value>           Link commonly used Intel(R) Integrated Performace Primitives (Intel(R) IPP) libraries and bring in the associated headers (common,crypto,nonpic,nonpic_crypto)
  -qmkl-ilp64=<value>     Link commonly used Intel(R) Math Kernel ILP64 Variant Library (Intel(R) MKL) and bring in the associated headers (parallel,sequential,cluster)("cluster" is not supported in DPC++)
  -qmkl-sycl-impl=<value> Limit linking of SYCL-specific implementations of the Intel(R) Math Kernel Library to specified in argument. Valid arguments: blas, lapack, dft, sparse, rng, stats, vm.
  -qmkl=<value>           Link commonly used Intel(R) Math Kernel Library (Intel(R) MKL) and bring in the associated headers (parallel,sequential,cluster)("cluster" is not supported in DPC++)
  -qno-actypes            Disable the compile and link support for the Algorithmic C Data-types (AC types)
  -qno-openmp             Disable OpenMP support
  -qno-opt-dynamic-align  Disable peeling to optimize alignment for vectorization.
  -qno-opt-jump-tables    Do not use jump tables for lowering switches
  -qno-opt-matmul         Disables compiler-generated Matrix Multiply (matmul) library call
  -qno-opt-mem-layout-trans
                          Disable memory layout transformations
  -qno-opt-multiple-gather-scatter-by-shuffles
                          Disables the optimization for multiple adjacent gather/scatter type vector memory references
  -qno-opt-prefetch       Disable prefetching.
  -Qn                     Do not emit metadata containing compiler name and version
  -qopenmp-link=<value>   Choose whether to link with the static or dynamic OpenMP libraries. Default is dynamic.
  -qopenmp-simd           Emit OpenMP code only for SIMD-based constructs.
  -qopenmp-stubs          enables the user to compile OpenMP programs in sequential mode. The OpenMP directives are ignored and a stub OpenMP library is linked.
  -qopenmp-threadprivate=<value>
                          Choose which threadprivate implementation to use: compat or legacy.
  -qopenmp                Parse OpenMP pragmas and generate parallel code.
  -qopt-assume-no-loop-carried-dep=<value>
                          Set a level of performance tuning for loops.  0 - The compiler does not assume there is loop-carried dependencies (default).  1 - Assume there are no loop-carried dependencies for innermost loops.  2 - Assume there are no loop-carried dependencies for all loop levels.
  -qopt-dword-index-for-array-of-structs=<value>
                          When specified allows the compiler to use dword indexes to access elements of arrays of structs which in size do not exceed val bytes. The arrays in question should contain no more than INT_MAX / sizeof(element) elements. Allowed values for val are: 16, 32, default is 16.
  -qopt-dynamic-align     Enable peeling to optimize alignment for vectorization.
  -qopt-for-throughput=<value>
                          Optimize for throughput performance, assuming multiple jobs are running.  The memory optimizations for single job versus multiple jobs can be tuned in different ways by the compiler. Valid arguments: multi-job, single-job
  -qopt-jump-tables       Control the generation of jump tables
  -qopt-matmul            Enables compiler-generated Matrix Multiply (matmul) library call
  -qopt-mem-layout-trans=<value>
                          Control the level of memory layout transformations performed by the compiler
  -qopt-multiple-gather-scatter-by-shuffles
                          Enables the optimization for multiple adjacent gather/scatter type vector memory references
  -qopt-prefetch-distance=<value>
                          Specify the prefetch distance to be used for compiler generated prefetches inside loops. Value indicates distance from memory to L2 cache.
  -qopt-prefetch-loads-only
                          Only insert prefetches based on the loads inside the loop. Stores are ignored.
  -qopt-prefetch=<value>  Enable levels of prefetch insertion, where 0 disables.  Values of 1 - 5 are available.  Default is 2.
  -qopt-prefetch          Enable prefetch insertion.  Same as -qopt-prefetch=2.
  -qopt-report-file=<value>
                          Specify the filename or output stream (stdout, stderr) for the generated optimization report
  -qopt-report-names=<value>
                          Specifies whether mangled or unmangled names should appear in the optimization report.
  -qopt-report-phase=<value>
                          Specify one or more phases for which optimization reports are generated
  -qopt-report-stdout     Specify the generated optimization report should be directed to stdout
  -qopt-report=<value>    Generate an optimization report, min, med or max.
  -qopt-streaming-stores=<value>
                          Specifies whether streaming stores are generated.
  -qopt-zmm-usage=<value> Specifies the level of zmm registers usage, low or high
  -Qoption,<arg>           Qoption,<tool>,<args> to pass the comma separated arguments to the <tool>; <tool> can be asm for assembler (or) link/ld for linker (or) preprocessor for preprocessor (or) compiler for compiler
  -qoverride-limits       enables the user to skip throttling of loops in framework and DD.
  -qtbb                   Link Intel(R) Threading Building Blocks (Intel(R) TBB) libraries and bring in the associated headers
  -Qunused-arguments      Don't emit warning for unused driver arguments
  -Qy                     Emit metadata containing compiler name and version
  -regcall4               Set __regcall4 as a default calling convention to respect __regcall ABI v.4
  -regcall                Set __regcall as a default calling convention
  -relocatable-pch        Whether to build a relocatable precompiled header
  -reuse-exe=<exe>        Speed up FPGA aoc compile if the device code in <exe> is unchanged.
  -rewrite-legacy-objc    Rewrite Legacy Objective-C source to C++
  -rewrite-objc           Rewrite Objective-C source to C++
  --rocm-device-lib-path=<value>
                          ROCm device library path. Alternative to rocm-path.
  --rocm-path=<value>     ROCm installation path, used for finding and automatically linking required bitcode libraries.
  -Rpass-analysis=<value> Report transformation analysis from optimization passes whose name matches the given POSIX regular expression
  -Rpass-missed=<value>   Report missed transformations by optimization passes whose name matches the given POSIX regular expression
  -Rpass=<value>          Report transformations performed by optimization passes whose name matches the given POSIX regular expression
  -rtlib=<value>          Compiler runtime library to use
  -R<remark>              Enable the specified remark
  -save-stats=<value>     Save llvm statistics.
  -save-stats             Save llvm statistics.
  -save-temps=<value>     Save intermediate compilation results. <arg> can be set to 'cwd' for current working directory, or 'obj' which will save temporary files in the same directory as the final output file
  -save-temps             Alias for --save-temps=cwd
  -serialize-diagnostics <value>
                          Serialize compiler diagnostics to a file
  -shared-intel           link Intel provided libraries dynamically
  -shared-libsan          Dynamically link the sanitizer runtime
  -sox=<value>            Enable saving of compiler options, version and additional information in the executable.  Use -no-sox to disable (DEFAULT). Valid arguments: profile - Includes data when profile was used for functions that were compiled with PGO enabling options such as -fprofile-use and -fprofile-instr-use, inline - Includes a list of the functions that were inlined in each object, secure - Strip out directory names and options that use them.
  -sox                    Enable saving of compiler options in the executable
  --start-no-unused-arguments
                          Don't emit warnings about unused arguments for the following arguments
  -static-intel           link Intel provided libraries statically
  -static-libsan          Statically link the sanitizer runtime (Not supported for ASan, TSan or UBSan on darwin)
  -static-openmp          Use the static host OpenMP runtime while linking.
  -std=<value>            Language standard to compile for
  -stdlib++-isystem <directory>
                          Use directory as the C++ standard library include path
  -stdlib=<value>         C++ standard library to use
  -strict-ansi            strict ANSI conformance dialect
  -sycl-std=<value>       SYCL language standard to compile for.
  --symbol-graph-dir=<value>
                          Directory in which to emit symbol graphs.
  --system-header-prefix=<prefix>
                          Treat all #include paths starting with <prefix> as including a system header.
  -S                      Only run preprocess and compilation steps
  --target=<value>        Generate code for the given target
  -tbb                    Link Intel(R) Threading Building Blocks (Intel(R) TBB) libraries and bring in the associated headers
  -time                   Time individual commands
  -traceback              Generate traceback debug information
  -traditional-cpp        Enable some traditional CPP emulation
  -trigraphs              Process trigraph sequences
  -T <script>             Specify <script> as linker script
  -undef                  undef all system defines
  -unroll<value>          Set maximum number of times to unroll loops.  Omit n to use default heuristics.  Use 0 to disable the loop unroller.
  -unwindlib=<value>      Unwind library to use
  -use-msasm              enables the use of blocks and entire functions of assembly code within a C or C++ file
  -U <macro>              Undefine macro <macro>
  -vec-threshold<value>   Sets a threshold for the vectorization of loops based on the probability of profitable execution of the vectorized loop in parallel.
  -vecabi=<value>         Determines which vector function ABI the compiler uses to create or call vector functions. The 'gcc' (default) argument enforces compatibility with gcc. The 'cmdtarget' argument uses an extended set of vector functions.
  -vec                    Enable the loop vectorization passes
  --verify-debug-info     Verify the binary representation of debug output
  -verify-pch             Load and verify that a pre-compiled header file is not stale
  --version               Print version information
  -vfsoverlay <value>     Overlay the virtual filesystem described by file over the real file system. Additionally, pass this overlay file to the linker if it supports it
  -v                      Show commands to run and use verbose output
  -Wa,<arg>               Pass the comma separated arguments in <arg> to the assembler
  --wasm-opt              Enable the wasm-opt optimizer (default)
  -Wcheck-unicode-security
                          Enable detection and warn about Unicode constructs that can be exploited by using bi-directional formatting codes, zero-width characters in strings and use of zero-width characters and homoglyphs in identifiers. Done by using clang-tidy
  -Wdeprecated            Enable warnings for deprecated constructs and define __DEPRECATED
  -Winvalid-constexpr     Enable checking of constexpr function bodies for validity within a constant expression context
  -Wl,<arg>               Pass the comma separated arguments in <arg> to the linker
  -Wno-invalid-constexpr  Disable checking of constexpr function bodies for validity within a constant expression context
  -Wno-sycl-strict        Disable warnings which enforce strict SYCL language compatibility.
  -working-directory <value>
                          Resolve file paths relative to the specified directory
  -Wp,<arg>               Pass the comma separated arguments in <arg> to the preprocessor
  -W<warning>             Enable the specified warning
  -w                      Suppress all warnings
  -Xanalyzer <arg>        Pass <arg> to the static analyzer
  -Xarch_device <arg>     Pass <arg> to the CUDA/HIP device compilation
  -Xarch_host <arg>       Pass <arg> to the CUDA/HIP host compilation
  -Xassembler <arg>       Pass <arg> to the assembler
  -Xclang=<arg>           Alias for -Xclang
  -Xclang <arg>           Pass <arg> to clang -cc1
  -Xcuda-fatbinary <arg>  Pass <arg> to fatbinary invocation
  -Xcuda-ptxas <arg>      Pass <arg> to the ptxas assembler
  -Xlinker <arg>          Pass <arg> to the linker
  -Xoffload-linker<triple> <arg>
                          Pass <arg> to the offload linkers or the ones idenfied by -<triple>
  -Xopenmp-target-backend=<triple> <arg>
                          Pass <arg> to the OpenMP based backend identified by <triple>. Depending on the triple (spir64, spir64_gen, spir64_x86_64), the arg passed will be interpreted by the corresponding AOT tool or runtime consumer.
  -Xopenmp-target-backend <arg>
                          Pass <arg> to the OpenMP based target backend.
  -Xopenmp-target-frontend=<value>
                          Pass <arg> to the OpenMP based target frontend identified by <triple>.
  -Xopenmp-target-frontend <value>
                          Pass <arg> to the OpenMP based target frontend.
  -Xopenmp-target-linker=<triple> <arg>
                          Pass <arg> to the SYCL based target linker identified by <triple>.
  -Xopenmp-target-linker <arg>
                          Pass <arg> to the SYCL based target linker.
  -Xopenmp-target=<triple> <arg>
                          Pass <arg> to the target offloading toolchain identified by <triple>.
  -Xopenmp-target <arg>   Pass <arg> to the target offloading toolchain.
  -Xpreprocessor <arg>    Pass <arg> to the preprocessor
  -Xsycl-target-backend=<triple> <arg>
                          Pass <arg> to the SYCL based backend identified by <triple>. Depending on the triple (spir64, spir64_gen, spir64_x86_64, spir64_fpga), the arg passed will be interpreted by the corresponding AOT tool or runtime consumer.
  -Xsycl-target-backend <arg>
                          Pass <arg> to the SYCL based target backend.
  -Xsycl-target-frontend=<triple> <arg>
                          Pass <arg> to the SYCL based target frontend identified by <triple>.
  -Xsycl-target-frontend <arg>
                          Pass <arg> to the SYCL based target frontend.
  -Xsycl-target-linker=<triple> <arg>
                          Pass <arg> to the SYCL based target linker identified by <triple>.
  -Xsycl-target-linker <arg>
                          Pass <arg> to the SYCL based target linker.
  -Xs <arg>               Pass <arg> to the offline compiler.
  -Xs<arg>                Pass <arg> to the offline compiler, adding the option specifier '-' to the <arg>.
  -x <language>           Treat subsequent input files as having type <language>
  -x<code>                Generate specialized code to run exclusively on processors indicated by <code>.
  -z <arg>                Pass -z <arg> to the linker
dxc compatibility options.:
  --dxv-path=<value>  DXIL validator installation path
  -fspv-target-env=<value>
                      Specify the target environment
  -hlsl-entry <value> Entry point name for hlsl
Executing: mpiicpc -cxx=icpx --help | head -n 500
Detected CLANG compiler
=============================================================================================
TESTING: checkCxxDialect from config.setCompilers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/setCompilers.py:787)
  Determine the CXX dialect supported by the compiler (language) [and corresponding compiler
    option - if any].

    isGNUish indicates if the compiler is gnu compliant (i.e. clang).
    -with-<lang>-dialect can take options:
      auto: use highest supported dialect configure can determine
      [[c|gnu][xx|++]]23: not yet supported
      [[c|gnu][xx|++]]20: gnu++20 or c++20
      [[c|gnu][xx|++]]17: gnu++17 or c++17
      [[c|gnu][xx|++]]14: gnu++14 or c++14
      [[c|gnu][xx|++]]11: gnu++11 or c++11
      0: disable CxxDialect check and use compiler default

    On return this function sets the following values:
    - if needed, appends the relevant CXX dialect flag to <lang> compiler flags
    - self.cxxDialectRange = (minSupportedDialect,maxSupportedDialect) (e.g. ('c++11','c++14'))
    - self.addDefine('HAVE_{LANG}_DIALECT_CXX{DIALECT_NUM}',1) for every supported dialect
    - self.lang+'dialect' = 'c++'+maxDialectNumber (e.g. 'c++14') but ONLY if the user
      specifically requests a dialect version, otherwise this is not set

    Raises a config.base.ConfigureSetupError if:
    - The user has set both the --with-dialect=[...] configure options and -std=[...] in their
      compiler flags
    - The combination of specifically requested packages cannot all be compiled with the same flag
    - An unknown C++ dialect is provided

    The config.base.ConfigureSetupErrors are NOT meant to be caught, as they are fatal errors
    on part of the user

    Raises a RuntimeError (which may be caught) if:
    - The compiler does not support at minimum -std=c++11
    
Executing: mpiicpc -cxx=icpx --version
stdout:
Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)
Target: x86_64-unknown-linux-gnu
Thread model: posix
InstalledDir: /opt/intel/oneapi/compiler/2025.0/bin/compiler
Configuration file: /opt/intel/oneapi/compiler/2025.0/bin/compiler/../icpx.cfg
Did not detect MSVC
Detected Non-Microsoft Windows native compiler
          checkCxxDialect: checking C++ dialect version for language "CXX" using compiler "mpiicpc -cxx=icpx"
          checkCxxDialect: PETSc believes compiler (mpiicpc -cxx=icpx) IS gnu-ish
          checkCxxDialect: PETSc believes that we have NOT processed mpiicpc -cxx=icpx before
          checkCxxDialect: configure option after sanitization: --with-cxx-dialect=AUTO
          checkCxxDialect: dialect AUTO has been NOT explicitly selected for CXX
          checkCxxDialect: Have potential flag pool:
	   - -std=gnu++20
	   - -std=c++20
	   - -std=gnu++17
	   - -std=c++17
	   - -std=gnu++14
	   - -std=c++14
	   - -std=gnu++11
	   - -std=c++11
          checkCxxDialect: checking CXX 20 for cxx with -std=gnu++20
Executing: mpiicpc -cxx=icpx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers   -std=gnu++20   /tmp/petsc-m5p55c3k/config.setCompilers/conftest.cc 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

// c++11 includes
#include <memory>
#include <random>
#include <complex>
#include <iostream>
#include <algorithm>

template<class T> void ignore(const T&) { } // silence unused variable warnings
class valClass
{
public:
  int i;
  valClass() { i = 3; }
  valClass(int x) : i(x) { }
};

class MoveSemantics
{
  std::unique_ptr<valClass> _member;

public:
  MoveSemantics(int val = 4) : _member(new valClass(val)) { }
  MoveSemantics& operator=(MoveSemantics &&other) noexcept = default;
};

template<typename T> constexpr T Cubed( T x ) { return x*x*x; }
auto trailing(int x) -> int { return x+2; }
enum class Shapes : int {SQUARE,CIRCLE};
template<class ... Types> struct Tuple { };
using PetscErrorCode = int;


// c++14 includes
#include <type_traits>

template<class T> constexpr T pi = T(3.1415926535897932385L);  // variable template


// c++17 includes
#include <string_view>
#include <any>
#include <optional>
#include <variant>
#include <tuple>
#include <new>

std::align_val_t dummy;
[[nodiscard]] int nodiscardFunc() { return 0; }
struct S2
{
  // static inline member variables since c++17
  static inline int var = 8675309;
  void f(int i);
};
void S2::f(int i)
{
  // until c++17: Error: invalid syntax
  // since c++17: OK: captures the enclosing S2 by copy
  auto lmbd = [=, *this] { std::cout << i << " " << this->var << std::endl; };
  lmbd();
}
std::tuple<double, int, char> foobar()
{
  return {3.8, 0, 'x'};
}


// c++20 includes
#include <compare>
#include <concepts>

consteval int sqr_cpp20(int n)
{
  return n*n;
}
constexpr auto r = sqr_cpp20(10);
static_assert(r == 100);

const char *g_cpp20() { return "dynamic initialization"; }
constexpr const char *f_cpp20(bool p) { return p ? "constant initializer" : g_cpp20(); }
constinit const char *cinit_c = f_cpp20(true); // OK

// Declaration of the concept "Hashable", which is satisfied by any type 'T'
// such that for values 'a' of type 'T', the expression std::hash<T>{}(a)
// compiles and its result is convertible to std::size_t
template <typename T>
concept Hashable = requires(T a)
{
  { std::hash<T>{}(a) } -> std::convertible_to<std::size_t>;
};

struct meow {};

// Constrained C++20 function template:
template <Hashable T>
void f_concept(T) {}

void abbrev_f1(auto); // same as template<class T> void abbrev_f1(T)
void abbrev_f4(const std::destructible auto*, std::floating_point auto&); // same as template<C3 T, C4 U> void abbrev_f4(const T*, U&);

template<>
void abbrev_f4<int>(const int*, const double&); // specialization of abbrev_f4<int, const double> (since C++20)

int main(void) {

// c++11 body
valClass cls = valClass(); // value initialization
int i = cls.i;             // i is not declared const
const int& rci = i;        // but rci is
const_cast<int&>(rci) = 4;

constexpr int big_value = 1234;
decltype(big_value) ierr = big_value;
auto ret = trailing(ierr);
MoveSemantics bob;
MoveSemantics alice;
alice = std::move(bob);ignore(alice);
Tuple<> t0;ignore(t0);
Tuple<long> t1;ignore(t1);
Tuple<int,float> t2;ignore(t2);
std::random_device rd;
std::mt19937 mt(rd());
std::normal_distribution<double> dist(0,1);
const double x = dist(mt);
std::cout << x << ret << std::endl;
std::vector<std::unique_ptr<double>> vector;
std::sort(vector.begin(), vector.end(), [](std::unique_ptr<double> &a, std::unique_ptr<double> &b) { return *a < *b; });


// c++14 body
auto ptr = std::make_unique<int>();
*ptr = 1;
std::cout << pi<double> << std::endl;
constexpr const std::complex<double> const_i(0.0,1.0);
auto lambda = [](auto x, auto y) { return x + y; };
std::cout << lambda(3,4) << std::real(const_i) << std::endl;


// c++17 body
std::variant<int,float> v,w;
v = 42;               // v contains int
int ivar = std::get<int>(v);
w = std::get<0>(v);   // same effect as the previous line
w = v;                // same effect as the previous line
S2 foo;
foo.f(ivar);
if constexpr (std::is_arithmetic_v<int>) std::cout << "c++17" << std::endl;
typedef std::integral_constant<Shapes,Shapes::SQUARE> squareShape;
// static_assert with no message since c++17
static_assert(std::is_same_v<squareShape,squareShape>);
auto val = nodiscardFunc();ignore(val);
// structured binding
const auto [ab, cd, ef] = foobar();


// c++20 body
ignore(cinit_c);

using std::operator""s;
f_concept("abc"s);

  return 0;
}

              Output from compiling with  -std=gnu++20 

Added Cxx compiler flag -std=gnu++20
          checkCxxDialect: success using -std=gnu++20 for Cxx dialect C++20, set new cxxDialectRange: ('c++11', 'c++20')
            Defined "HAVE_CXX_DIALECT_CXX11" to "1"
            Defined "HAVE_CXX_DIALECT_CXX14" to "1"
            Defined "HAVE_CXX_DIALECT_CXX17" to "1"
            Defined "HAVE_CXX_DIALECT_CXX20" to "1"
=============================================================================================
TESTING: checkCxxPreprocessor from config.setCompilers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/setCompilers.py:1813)
  Locate a functional Cxx preprocessor
    Checking for program /opt/intel/oneapi/mpi/2021.14/bin/mpiicpc...found
              Defined make macro "CXXPP" to "mpiicpc -cxx=icpx -E"
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <cstdlib>

Executing: mpiicpc -cxx=icpx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers  /tmp/petsc-m5p55c3k/config.setCompilers/conftest.cc 
Preprocess output before filtering:
Preprocess output after filtering:
=============================================================================================
TESTING: checkCUDACompiler from config.setCompilers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/setCompilers.py:1532)
  Locate a functional CUDA compiler
    Checking for program /opt/intel/oneapi/mpi/2021.14/bin/nvcc...not found
    Checking for program /opt/intel/oneapi/mkl/2025.0/bin/nvcc...not found
    Checking for program /opt/intel/oneapi/dpcpp-ct/2025.0/bin/nvcc...not found
    Checking for program /opt/intel/oneapi/dev-utilities/2025.0/bin/nvcc...not found
    Checking for program /opt/intel/oneapi/debugger/2025.0/opt/debugger/bin/nvcc...not found
    Checking for program /opt/intel/oneapi/compiler/2025.0/bin/nvcc...not found
    Checking for program /usr/local/sbin/nvcc...not found
    Checking for program /usr/local/bin/nvcc...not found
    Checking for program /usr/sbin/nvcc...not found
    Checking for program /usr/bin/nvcc...not found
    Checking for program /sbin/nvcc...not found
    Checking for program /bin/nvcc...not found
    Checking for program /usr/games/nvcc...not found
    Checking for program /usr/local/games/nvcc...not found
    Checking for program /snap/bin/nvcc...not found
    Checking for program /snap/bin/nvcc...not found
    Checking for program /srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/lib/petsc/bin/win32fe/nvcc...not found
    Checking for program /Developer/NVIDIA/CUDA-6.5/bin/nvcc...not found
    Checking for program /srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/lib/petsc/bin/win32fe/nvcc...not found
  Unable to find programs: ['nvcc'] in listing of the specific search path: ['/Developer/NVIDIA/CUDA-6.5/bin']
      Warning accessing /Developer/NVIDIA/CUDA-6.5/bin gives errors: [Errno 2] No such file or directory: '/Developer/NVIDIA/CUDA-6.5/bin'
    Checking for program /usr/local/cuda/bin/nvcc...not found
    Checking for program /srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/lib/petsc/bin/win32fe/nvcc...not found
  Unable to find programs: ['nvcc'] in listing of the specific search path: ['/usr/local/cuda/bin']
      Warning accessing /usr/local/cuda/bin gives errors: [Errno 2] No such file or directory: '/usr/local/cuda/bin'
    Checking for program /opt/intel/oneapi/mpi/2021.14/bin/clang...not found
    Checking for program /opt/intel/oneapi/mkl/2025.0/bin/clang...not found
    Checking for program /opt/intel/oneapi/dpcpp-ct/2025.0/bin/clang...not found
    Checking for program /opt/intel/oneapi/dev-utilities/2025.0/bin/clang...not found
    Checking for program /opt/intel/oneapi/debugger/2025.0/opt/debugger/bin/clang...not found
    Checking for program /opt/intel/oneapi/compiler/2025.0/bin/clang...not found
    Checking for program /usr/local/sbin/clang...not found
    Checking for program /usr/local/bin/clang...not found
    Checking for program /usr/sbin/clang...not found
    Checking for program /usr/bin/clang...not found
    Checking for program /sbin/clang...not found
    Checking for program /bin/clang...not found
    Checking for program /usr/games/clang...not found
    Checking for program /usr/local/games/clang...not found
    Checking for program /snap/bin/clang...not found
    Checking for program /snap/bin/clang...not found
    Checking for program /srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/lib/petsc/bin/win32fe/clang...not found
=============================================================================================
TESTING: checkDeviceHostCompiler from config.setCompilers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/setCompilers.py:765)
  Set the host compiler (HC) of the device compiler (DC) to the HC unless the DC already explicitly sets its HC. This may be needed if the default HC used by the DC is ancient and PETSc uses a different HC (e.g., through --with-cxx=...).
          checkDeviceHostCompiler: checking CUDA accepts host compiler mpiicpc -cxx=icpx
=============================================================================================
TESTING: checkHIPCompiler from config.setCompilers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/setCompilers.py:1594)
  Locate a functional HIP compiler
    Checking for program /opt/intel/oneapi/mpi/2021.14/bin/hipcc...not found
    Checking for program /opt/intel/oneapi/mkl/2025.0/bin/hipcc...not found
    Checking for program /opt/intel/oneapi/dpcpp-ct/2025.0/bin/hipcc...not found
    Checking for program /opt/intel/oneapi/dev-utilities/2025.0/bin/hipcc...not found
    Checking for program /opt/intel/oneapi/debugger/2025.0/opt/debugger/bin/hipcc...not found
    Checking for program /opt/intel/oneapi/compiler/2025.0/bin/hipcc...not found
    Checking for program /usr/local/sbin/hipcc...not found
    Checking for program /usr/local/bin/hipcc...not found
    Checking for program /usr/sbin/hipcc...not found
    Checking for program /usr/bin/hipcc...not found
    Checking for program /sbin/hipcc...not found
    Checking for program /bin/hipcc...not found
    Checking for program /usr/games/hipcc...not found
    Checking for program /usr/local/games/hipcc...not found
    Checking for program /snap/bin/hipcc...not found
    Checking for program /snap/bin/hipcc...not found
    Checking for program /srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/lib/petsc/bin/win32fe/hipcc...not found
    Checking for program /opt/intel/oneapi/mpi/2021.14/bin/opt/rocm/bin/hipcc...not found
    Checking for program /opt/intel/oneapi/mkl/2025.0/bin/opt/rocm/bin/hipcc...not found
    Checking for program /opt/intel/oneapi/dpcpp-ct/2025.0/bin/opt/rocm/bin/hipcc...not found
    Checking for program /opt/intel/oneapi/dev-utilities/2025.0/bin/opt/rocm/bin/hipcc...not found
    Checking for program /opt/intel/oneapi/debugger/2025.0/opt/debugger/bin/opt/rocm/bin/hipcc...not found
    Checking for program /opt/intel/oneapi/compiler/2025.0/bin/opt/rocm/bin/hipcc...not found
    Checking for program /usr/local/sbin/opt/rocm/bin/hipcc...not found
    Checking for program /usr/local/bin/opt/rocm/bin/hipcc...not found
    Checking for program /usr/sbin/opt/rocm/bin/hipcc...not found
    Checking for program /usr/bin/opt/rocm/bin/hipcc...not found
    Checking for program /sbin/opt/rocm/bin/hipcc...not found
    Checking for program /bin/opt/rocm/bin/hipcc...not found
    Checking for program /usr/games/opt/rocm/bin/hipcc...not found
    Checking for program /usr/local/games/opt/rocm/bin/hipcc...not found
    Checking for program /snap/bin/opt/rocm/bin/hipcc...not found
    Checking for program /snap/bin/opt/rocm/bin/hipcc...not found
    Checking for program /srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/lib/petsc/bin/win32fe/opt/rocm/bin/hipcc...not found
=============================================================================================
TESTING: checkDeviceHostCompiler from config.setCompilers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/setCompilers.py:765)
  Set the host compiler (HC) of the device compiler (DC) to the HC unless the DC already explicitly sets its HC. This may be needed if the default HC used by the DC is ancient and PETSc uses a different HC (e.g., through --with-cxx=...).
=============================================================================================
TESTING: checkSYCLCompiler from config.setCompilers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/setCompilers.py:1653)
  Locate a functional SYCL compiler
=============================================================================================
TESTING: checkDeviceHostCompiler from config.setCompilers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/setCompilers.py:765)
  Set the host compiler (HC) of the device compiler (DC) to the HC unless the DC already explicitly sets its HC. This may be needed if the default HC used by the DC is ancient and PETSc uses a different HC (e.g., through --with-cxx=...).
=============================================================================================
TESTING: checkFortranCompiler from config.setCompilers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/setCompilers.py:1906)
  Locate a functional Fortran compiler
    Checking for program /opt/intel/oneapi/mpi/2021.14/bin/mpiifort...found
              Defined make macro "FC" to "mpiifort -fc=ifx"
Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers   /tmp/petsc-m5p55c3k/config.setCompilers/conftest.F90 
Successful compile:
Source:
      program main

      end

Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers   /tmp/petsc-m5p55c3k/config.setCompilers/conftest.F90 
Successful compile:
Source:
      program main

      end

Executing: mpiifort -fc=ifx  -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest    /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o 
Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers   /tmp/petsc-m5p55c3k/config.setCompilers/conftest.F90 
Successful compile:
Source:
      program main

      end

Executing: mpiifort -fc=ifx  -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest    /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o  -lpetsc-ufod4vtr9mqHvKIQiVAm
stdout: ld: cannot find -lpetsc-ufod4vtr9mqHvKIQiVAm: No such file or directory
Possible ERROR while running linker: exit code 1
stderr:
ld: cannot find -lpetsc-ufod4vtr9mqHvKIQiVAm: No such file or directory
======== Checking running linked program
Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers   /tmp/petsc-m5p55c3k/config.setCompilers/conftest.F90 
Successful compile:
Source:
      program main

      end

Executing: mpiifort -fc=ifx  -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest    /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o 
Testing executable /tmp/petsc-m5p55c3k/config.setCompilers/conftest to see if it can be run
Executing: /tmp/petsc-m5p55c3k/config.setCompilers/conftest
Running Executable with threads to time it out at 60
Executing: /tmp/petsc-m5p55c3k/config.setCompilers/conftest
Executing: mpiifort -fc=ifx --version
stdout:
ifx (IFX) 2025.0.0 20241008
Copyright (C) 1985-2024 Intel Corporation. All rights reserved.
=============================================================================================
TESTING: checkFortranPreprocessor from config.setCompilers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/setCompilers.py:1942)
  Locate a functional Fortran preprocessor
    Checking for program /opt/intel/oneapi/mpi/2021.14/bin/mpiifort...found
              Defined make macro "FPP" to "mpiifort -fc=ifx -E"
Preprocessing source:
#define foo 10

Executing: mpiifort -fc=ifx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers  /tmp/petsc-m5p55c3k/config.setCompilers/conftest.F90 
Preprocess output before filtering:
Preprocess output after filtering:
=============================================================================================
TESTING: checkFortranComments from config.setCompilers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/setCompilers.py:1961)
  Make sure fortran comment "!" works
Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers   /tmp/petsc-m5p55c3k/config.setCompilers/conftest.F90 
Successful compile:
Source:
      program main
! comment

      end

          Fortran comments can use ! in column 1
=============================================================================================
TESTING: checkLargeFileIO from config.setCompilers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/setCompilers.py:2157)
  check for large file support with 64-bit offset
=============================================================================================
TESTING: checkArchiver from config.setCompilers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/setCompilers.py:2250)
  Check that the archiver exists and can make a library usable by the compiler
Detected Non-Microsoft Windows native compiler
Executing: ar -V
stdout:
GNU ar (GNU Binutils for Ubuntu) 2.42
Copyright (C) 2024 Free Software Foundation, Inc.
This program is free software; you may redistribute it under the terms of
the GNU General Public License version 3 or (at your option) any later version.
This program has absolutely no warranty.
Executing: ar -V
stdout:
GNU ar (GNU Binutils for Ubuntu) 2.42
Copyright (C) 2024 Free Software Foundation, Inc.
This program is free software; you may redistribute it under the terms of
the GNU General Public License version 3 or (at your option) any later version.
This program has absolutely no warranty.
                Defined make macro "FAST_AR_FLAGS" to "Scq"
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers   /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
int foo(int a) {
  return a+1;
}


    Checking for program /opt/intel/oneapi/mpi/2021.14/bin/ar...not found
    Checking for program /opt/intel/oneapi/mkl/2025.0/bin/ar...not found
    Checking for program /opt/intel/oneapi/dpcpp-ct/2025.0/bin/ar...not found
    Checking for program /opt/intel/oneapi/dev-utilities/2025.0/bin/ar...not found
    Checking for program /opt/intel/oneapi/debugger/2025.0/opt/debugger/bin/ar...not found
    Checking for program /opt/intel/oneapi/compiler/2025.0/bin/ar...not found
    Checking for program /usr/local/sbin/ar...not found
    Checking for program /usr/local/bin/ar...not found
    Checking for program /usr/sbin/ar...not found
    Checking for program /usr/bin/ar...found
              Defined make macro "AR" to "/usr/bin/ar"
    Checking for program /opt/intel/oneapi/mpi/2021.14/bin/ranlib...not found
    Checking for program /opt/intel/oneapi/mkl/2025.0/bin/ranlib...not found
    Checking for program /opt/intel/oneapi/dpcpp-ct/2025.0/bin/ranlib...not found
    Checking for program /opt/intel/oneapi/dev-utilities/2025.0/bin/ranlib...not found
    Checking for program /opt/intel/oneapi/debugger/2025.0/opt/debugger/bin/ranlib...not found
    Checking for program /opt/intel/oneapi/compiler/2025.0/bin/ranlib...not found
    Checking for program /usr/local/sbin/ranlib...not found
    Checking for program /usr/local/bin/ranlib...not found
    Checking for program /usr/sbin/ranlib...not found
    Checking for program /usr/bin/ranlib...found
              Defined make macro "RANLIB" to "/usr/bin/ranlib -c"
Executing: /usr/bin/ar cr /tmp/petsc-m5p55c3k/config.setCompilers/libconf1.a /tmp/petsc-m5p55c3k/config.setCompilers/conf1.o
Executing: /usr/bin/ranlib -c /tmp/petsc-m5p55c3k/config.setCompilers/libconf1.a
stdout: /usr/bin/ranlib: invalid option -- 'c'
Possible ERROR while running ranlib:exit code 0
stderr:
/usr/bin/ranlib: invalid option -- 'c'
          Ranlib is not functional with your archiver.  Try --with-ranlib=true if ranlib is unnecessary.
Executing: ar -V
stdout:
GNU ar (GNU Binutils for Ubuntu) 2.42
Copyright (C) 2024 Free Software Foundation, Inc.
This program is free software; you may redistribute it under the terms of
the GNU General Public License version 3 or (at your option) any later version.
This program has absolutely no warranty.
Executing: ar -V
stdout:
GNU ar (GNU Binutils for Ubuntu) 2.42
Copyright (C) 2024 Free Software Foundation, Inc.
This program is free software; you may redistribute it under the terms of
the GNU General Public License version 3 or (at your option) any later version.
This program has absolutely no warranty.
                Defined make macro "FAST_AR_FLAGS" to "Scq"
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers   /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
int foo(int a) {
  return a+1;
}


    Checking for program /opt/intel/oneapi/mpi/2021.14/bin/ar...not found
    Checking for program /opt/intel/oneapi/mkl/2025.0/bin/ar...not found
    Checking for program /opt/intel/oneapi/dpcpp-ct/2025.0/bin/ar...not found
    Checking for program /opt/intel/oneapi/dev-utilities/2025.0/bin/ar...not found
    Checking for program /opt/intel/oneapi/debugger/2025.0/opt/debugger/bin/ar...not found
    Checking for program /opt/intel/oneapi/compiler/2025.0/bin/ar...not found
    Checking for program /usr/local/sbin/ar...not found
    Checking for program /usr/local/bin/ar...not found
    Checking for program /usr/sbin/ar...not found
    Checking for program /usr/bin/ar...found
              Defined make macro "AR" to "/usr/bin/ar"
    Checking for program /opt/intel/oneapi/mpi/2021.14/bin/ranlib...not found
    Checking for program /opt/intel/oneapi/mkl/2025.0/bin/ranlib...not found
    Checking for program /opt/intel/oneapi/dpcpp-ct/2025.0/bin/ranlib...not found
    Checking for program /opt/intel/oneapi/dev-utilities/2025.0/bin/ranlib...not found
    Checking for program /opt/intel/oneapi/debugger/2025.0/opt/debugger/bin/ranlib...not found
    Checking for program /opt/intel/oneapi/compiler/2025.0/bin/ranlib...not found
    Checking for program /usr/local/sbin/ranlib...not found
    Checking for program /usr/local/bin/ranlib...not found
    Checking for program /usr/sbin/ranlib...not found
    Checking for program /usr/bin/ranlib...found
              Defined make macro "RANLIB" to "/usr/bin/ranlib"
Executing: /usr/bin/ar cr /tmp/petsc-m5p55c3k/config.setCompilers/libconf1.a /tmp/petsc-m5p55c3k/config.setCompilers/conf1.o
Executing: /usr/bin/ranlib /tmp/petsc-m5p55c3k/config.setCompilers/libconf1.a
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers   /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
extern int foo(int);

int main(void) {
  int b = foo(1);  (void)b;
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest    /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -L/tmp/petsc-m5p55c3k/config.setCompilers -lconf1 
            Defined make macro "AR_FLAGS" to "cr"
            Defined make macro "AR_LIB_SUFFIX" to "a"
=============================================================================================
TESTING: checkArchiverRecipeArgfile from config.setCompilers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/setCompilers.py:2322)
  Checks if AR handles @ notation
Executing: /usr/bin/ar cr checkRecipeArgfile.a @checkRecipeArgfile.args
            Defined make macro "AR_ARGFILE" to "yes"
=============================================================================================
TESTING: checkSharedLinker from config.setCompilers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/setCompilers.py:2404)
  Check that the linker can produce shared libraries
          Checking shared linker mpiicc -cc=icx using flags ['-qmkshrobj']
    Checking for program /opt/intel/oneapi/mpi/2021.14/bin/mpiicc...found
              Defined make macro "LD_SHARED" to "mpiicc -cc=icx"
Executing: mpiicc -cc=icx --help | head -n 20 
stdout:
OVERVIEW: Intel(R) oneAPI DPC++/C++ Compiler
USAGE: icx [options] file...
OPTIONS:
  -###                    Print (but do not run) the commands to run for this compilation
  -#x                     Show commands to run and use verbose output
  -#                      Print (but do not run) the commands to run for this compilation
  -align                  Align doubles to two words in structs (x86 only)
  --amdgpu-arch-tool=<value>
                          Tool used for detecting AMD GPU arch in the system.
  --analyzer-output <value>
                          Static analyzer report output format (html|plist|plist-multi-file|plist-html|sarif|sarif-html|text).
  --analyze               Run the static analyzer
  -ansi-alias             enable use of ANSI aliasing rules optimizations user asserts that the program adheres to these rules
  -arcmt-migrate-emit-errors
                          Emit ARC errors even if the migrator can fix them
  -arcmt-migrate-report-output <value>
                          Output path for the plist report
  -ax<codes>              generate multiple, processor-specific, auto-dispatched code paths for Intel® processors, specified by <codes>, if there is a performance benefit
Executing: mpiicc -cc=icx --help
stdout:
OVERVIEW: Intel(R) oneAPI DPC++/C++ Compiler
USAGE: icx [options] file...
OPTIONS:
  -###                    Print (but do not run) the commands to run for this compilation
  -#x                     Show commands to run and use verbose output
  -#                      Print (but do not run) the commands to run for this compilation
  -align                  Align doubles to two words in structs (x86 only)
  --amdgpu-arch-tool=<value>
                          Tool used for detecting AMD GPU arch in the system.
  --analyzer-output <value>
                          Static analyzer report output format (html|plist|plist-multi-file|plist-html|sarif|sarif-html|text).
  --analyze               Run the static analyzer
  -ansi-alias             enable use of ANSI aliasing rules optimizations user asserts that the program adheres to these rules
  -arcmt-migrate-emit-errors
                          Emit ARC errors even if the migrator can fix them
  -arcmt-migrate-report-output <value>
                          Output path for the plist report
  -ax<codes>              generate multiple, processor-specific, auto-dispatched code paths for Intel® processors, specified by <codes>, if there is a performance benefit
  -B <prefix>             Search $prefix$file for executables, libraries, and data files. If $prefix is a directory, search $prefix/$file
  -b <arg>                Pass -b <arg> to the linker on AIX
  -CC                     Include comments from within macros in preprocessed output
  -cl-denorms-are-zero    OpenCL only. Allow denormals to be flushed to zero.
  -cl-ext=<value>         OpenCL only. Enable or disable OpenCL extensions/optional features. The argument is a comma-separated sequence of one or more extension names, each prefixed by '+' or '-'.
  -cl-fast-relaxed-math   OpenCL only. Sets -cl-finite-math-only and -cl-unsafe-math-optimizations, and defines __FAST_RELAXED_MATH__.
  -cl-finite-math-only    OpenCL only. Allow floating-point optimizations that assume arguments and results are not NaNs or +-Inf.
  -cl-fp32-correctly-rounded-divide-sqrt
                          OpenCL only. Specify that single precision floating-point divide and sqrt used in the program source are correctly rounded.
  -cl-kernel-arg-info     OpenCL only. Generate kernel argument metadata.
  -cl-mad-enable          OpenCL only. Allow use of less precise MAD computations in the generated binary.
  -cl-no-signed-zeros     OpenCL only. Allow use of less precise no signed zeros computations in the generated binary.
  -cl-no-stdinc           OpenCL only. Disables all standard includes containing non-native compiler types and functions.
  -cl-opt-disable         OpenCL only. This option disables all optimizations. By default optimizations are enabled.
  -cl-single-precision-constant
                          OpenCL only. Treat double precision floating-point constant as single precision constant.
  -cl-std=<value>         OpenCL language standard to compile for.
  -cl-strict-aliasing     OpenCL only. This option is added for compatibility with OpenCL 1.0.
  -cl-uniform-work-group-size
                          OpenCL only. Defines that the global work-size be a multiple of the work-group size specified to clEnqueueNDRangeKernel
  -cl-unsafe-math-optimizations
                          OpenCL only. Allow unsafe floating-point optimizations.  Also implies -cl-no-signed-zeros and -cl-mad-enable.
  --config=<file>         Specify configuration file
  --cuda-compile-host-device
                          Compile CUDA code for both host and device (default). Has no effect on non-CUDA compilations.
  --cuda-device-only      Compile CUDA code for device only
  --cuda-feature=<value>  Manually specify the CUDA feature to use
  --cuda-host-only        Compile CUDA code for host only. Has no effect on non-CUDA compilations.
  --cuda-include-ptx=<value>
                          Include PTX for the following GPU architecture (e.g. sm_35) or 'all'. May be specified more than once.
  --cuda-noopt-device-debug
                          Enable device-side debug info generation. Disables ptxas optimizations.
  --cuda-path-ignore-env  Ignore environment variables to detect CUDA installation
  --cuda-path=<value>     CUDA installation path
  -cuid=<value>           An ID for compilation unit, which should be the same for the same compilation unit but different for different compilation units. It is used to externalize device-side static variables for single source offloading languages CUDA and HIP so that they can be accessed by the host code of the same compilation unit.
  -cxx-isystem <directory>
                          Add directory to the C++ SYSTEM include search path
  -C                      Include comments in preprocessed output
  -c                      Only run preprocess, compile, and assemble steps
  -daal=<value>           Link Intel(R) Data Analytics Acceleration Library (Intel(R) DAAL) libraries and bring in the associated headers (parallel)
  -darwin-target-variant-triple <value>
                          Specify the darwin target variant triple
  -darwin-target-variant <value>
                          Generate code for an additional runtime variant of the deployment target
  -dD                     Print macro definitions in -E mode in addition to normal output
  -debug=<value>          Enable debug information. Valid args: none, all, full, minimal
  -dependency-dot <value> Filename to write DOT-formatted header dependencies to
  -dependency-file <value>
                          Filename (or -) to write dependency output to
  -device-math-lib=<value>
                          Control the addition of device math libraries when compiling for other devices.  Valid arguments are fp64, fp32
  -dI                     Print include directives in -E mode in addition to normal output
  -dM                     Print macro definitions in -E mode instead of normal output
  -dryrun                 Print (but do not run) the commands to run for this compilation
  -dsym-dir <dir>         Directory to output dSYM's (if any) to
  -dumpdir <dumppfx>      Use <dumpfpx> as a prefix to form auxiliary and dump file names
  -dumpmachine            Display the compiler's target processor
  -dumpversion            Display the version of the compiler
  -D <macro>=<value>      Define <macro> to <value> (or 1 if <value> omitted)
  --embed-dir=<dir>       Add directory to embed search path
  -emit-ast               Emit Clang AST files for source inputs
  --emit-extension-symbol-graphs
                          Generate additional symbol graphs for extended modules.
  -emit-interface-stubs   Generate Interface Stub Files.
  -emit-llvm              Use the LLVM representation for assembler and object files
  -emit-merged-ifs        Generate Interface Stub Files, emit merged text not binary.
  --emit-static-lib       Enable linker job to emit a static library.
  -emit-symbol-graph      Generate Extract API information as a side effect of compilation.
  --end-no-unused-arguments
                          Start emitting warnings for unused driver arguments
  -EP                     Preprocess to stdout, omitting #line directives.
  --extract-api-ignores=<value>
                          Comma separated list of files containing a new line separated list of API symbols to ignore when extracting API information.
  -extract-api            Extract API information
  -E                      Only run the preprocessor
  -faapcs-bitfield-load   Follows the AAPCS standard that all volatile bit-field write generates at least one load. (ARM only).
  -faapcs-bitfield-width  Follow the AAPCS standard requirement stating that volatile bit-field width is dictated by the field container type. (ARM only).
  -faddrsig               Emit an address-significance table
  -falign-functions=<value>
                          Align the start of functions on a 2 (DEFAULT) or <n> byte boundary where <n> is a power of 2.
  -falign-functions       align the start of functions to an optimal machine-dependent value.
  -falign-loops=<N>       N must be a power of two. Align loops to the boundary
  -falign-stack=assume-16-byte
                          Assume the stack is aligned on 16-byte boundaries
  -falign-stack=assume-4-byte
                          Assume the stack is aligned on 4-byte boundaries
  -falign-stack=maintain-16-byte
                          Do not assume any alignment, but maintain alignment in case the stack is already aligned
  -faligned-allocation    Enable C++17 aligned allocation functions
  -fallow-editor-placeholders
                          Treat editor placeholders as valid source code
  -faltivec-src-compat=<value>
                          Source-level compatibility for Altivec vectors (for PowerPC targets). This includes results of vector comparison (scalar for 'xl', vector for 'gcc') as well as behavior when initializing with a scalar (splatting for 'xl', element zero only for 'gcc'). For 'mixed', the compatibility is as 'gcc' for 'vector bool/vector pixel' and as 'xl' for other types. Current default is 'mixed'.
  -fansi-escape-codes     Use ANSI escape codes for diagnostics
  -fapinotes-modules      Enable module-based external API notes support
  -fapinotes-swift-version=<version>
                          Specify the Swift version to use when filtering API notes
  -fapinotes              Enable external API notes support
  -fapple-kext            Use Apple's kernel extensions ABI
  -fapple-link-rtlib      Force linking the clang builtins runtime library
  -fapple-pragma-pack     Enable Apple gcc-compatible #pragma pack handling
  -fapplication-extension Restrict code to those available for App Extensions
  -fapprox-func           Allow certain math function calls to be replaced with an approximately equivalent calculation
  -fargument-noalias      Enables 'noalias' attribute for all pointer-type arguments
  -fassume-nothrow-exception-dtor
                          Assume that exception objects' destructors are non-throwing
  -fasync-exceptions      Enable EH Asynchronous exceptions
  -fauto-import           MinGW specific. Enable code generation support for automatic dllimport, and enable support for it in the linker. Enabled by default.
  -fbasic-block-address-map
                          Emit the basic block address map section.
  -fbasic-block-sections=<value>
                          Place each function's basic blocks in unique sections (ELF Only)
  -fbinutils-version=<major.minor>
                          Produced object files can use all ELF features supported by this binutils version and newer. If -fno-integrated-as is specified, the generated assembly will consider GNU as support. 'none' means that all ELF features can be used, regardless of binutils support. Defaults to 2.26.
  -fblocks                Enable the 'blocks' language feature
  -fborland-extensions    Accept non-standard constructs supported by the Borland compiler
  -fbuild-session-file=<file>
                          Use the last modification time of <file> as the build session timestamp
  -fbuild-session-timestamp=<time since Epoch in seconds>
                          Time when the current build session started
  -fbuiltin-module-map    Load the clang builtins module map file.
  -fc++-abi=<value>       C++ ABI to use. This will override the target C++ ABI.
  -fcall-saved-x10        Make the x10 register call-saved (AArch64 only)
  -fcall-saved-x11        Make the x11 register call-saved (AArch64 only)
  -fcall-saved-x12        Make the x12 register call-saved (AArch64 only)
  -fcall-saved-x13        Make the x13 register call-saved (AArch64 only)
  -fcall-saved-x14        Make the x14 register call-saved (AArch64 only)
  -fcall-saved-x15        Make the x15 register call-saved (AArch64 only)
  -fcall-saved-x18        Make the x18 register call-saved (AArch64 only)
  -fcall-saved-x8         Make the x8 register call-saved (AArch64 only)
  -fcall-saved-x9         Make the x9 register call-saved (AArch64 only)
  -fcaret-diagnostics-max-lines=<value>
                          Set the maximum number of source lines to show in a caret diagnostic (0 = no limit).
  -fcf-protection=<value> Instrument control-flow architecture protection
  -fcf-protection         Enable cf-protection in 'full' mode
  -fchar8_t               Enable C++ builtin type char8_t
  -fcheck-new             Do not assume C++ operator new may not return NULL
  -fclang-abi-compat=<version>
                          Attempt to match the ABI of Clang <version>
  -fclangir               Use the ClangIR pipeline to compile
  -fcolor-diagnostics     Enable colors in diagnostics
  -fcomment-block-commands=<arg>
                          Treat each comma separated argument in <arg> as a documentation comment block command
  -fcommon                Place uninitialized global variables in a common block
  -fcomplete-member-pointers
                          Require member pointer base types to be complete if they would be significant under the Microsoft ABI
  -fconstexpr-backtrace-limit=<value>
                          Set the maximum number of entries to print in a constexpr evaluation backtrace (0 = no limit)
  -fconstexpr-depth=<value>
                          Set the maximum depth of recursive constexpr function calls
  -fconstexpr-steps=<value>
                          Set the maximum number of steps in constexpr function evaluation
  -fcoro-aligned-allocation
                          Prefer aligned allocation for C++ Coroutines
  -fcoroutines            Enable support for the C++ Coroutines
  -fcoverage-compilation-dir=<value>
                          The compilation directory to embed in the coverage mapping.
  -fcoverage-mapping      Generate coverage mapping to enable code coverage analysis
  -fcoverage-mcdc         Enable MC/DC criteria when generating code coverage
  -fcoverage-prefix-map=<old>=<new>
                          remap file source paths <old> to <new> in coverage mapping. If there are multiple options, prefix replacement is applied in reverse order starting from the last one
  -fcrash-diagnostics-dir=<dir>
                          Put crash-report files in <dir>
  -fcrash-diagnostics=<value>
                          Set level of crash diagnostic reporting, (option: off, compiler, all)
  -fcrash-diagnostics     Enable crash diagnostic reporting (default)
  -fcs-profile-generate=<directory>
                          Generate instrumented code to collect context sensitive execution counts into <directory>/default.profraw (overridden by LLVM_PROFILE_FILE env var)
  -fcs-profile-generate   Generate instrumented code to collect context sensitive execution counts into default.profraw (overridden by LLVM_PROFILE_FILE env var)
  -fcuda-prec-sqrt        Specify that sqrt is correctly rounded (for CUDA devices)
  -fcuda-short-ptr        Use 32-bit pointers for accessing const/local/shared address spaces
  -fcx-fortran-rules      Range reduction is enabled for complex arithmetic operations.
  -fcx-limited-range      Basic algebraic expansions of complex arithmetic operations involving are enabled.
  -fcxx-exceptions        Enable C++ exceptions
  -fcxx-modules           Enable modules for C++
  -fdata-sections         Place each data in its own section
  -fdebug-compilation-dir=<value>
                          The compilation directory to embed in the debug info
  -fdebug-default-version=<value>
                          Default DWARF version to use, if a -g option caused DWARF debug info to be produced
  -fdebug-info-for-profiling
                          Emit extra debug info to make sample profile more accurate
  -fdebug-macro           Emit macro debug information
  -fdebug-prefix-map=<old>=<new>
                          For paths in debug info, remap directory <old> to <new>. If multiple options match a path, the last option wins
  -fdebug-ranges-base-address
                          Use DWARF base address selection entries in .debug_ranges
  -fdebug-types-section   Place debug types in their own section (ELF Only)
  -fdeclspec              Allow __declspec as a keyword
  -fdefine-target-os-macros
                          Enable predefined target OS macros
  -fdelayed-template-parsing
                          Parse templated function definitions at the end of the translation unit
  -fdelete-null-pointer-checks
                          Treat usage of null pointers as undefined behavior (default)
  -fdiagnostics-absolute-paths
                          Print absolute paths in diagnostics
  -fdiagnostics-hotness-threshold=<value>
                          Prevent optimization remarks from being output if they do not have at least this profile count. Use 'auto' to apply the threshold from profile summary
  -fdiagnostics-misexpect-tolerance=<value>
                          Prevent misexpect diagnostics from being output if the profile counts are within N% of the expected. 
  -fdiagnostics-parseable-fixits
                          Print fix-its in machine parseable form
  -fdiagnostics-print-source-range-info
                          Print source range spans in numeric form
  -fdiagnostics-show-hotness
                          Enable profile hotness information in diagnostic line
  -fdiagnostics-show-note-include-stack
                          Display include stacks for diagnostic notes
  -fdiagnostics-show-option
                          Print option name with mappable diagnostics
  -fdiagnostics-show-template-tree
                          Print a template comparison tree for differing templates
  -fdigraphs              Enable alternative token representations '<:', ':>', '<%', '%>', '%:', '%:%:' (default)
  -fdirect-access-external-data
                          Don't use GOT indirection to reference external data symbols
  -fdisable-block-signature-string
                          Disable block signature string)
  -fdiscard-value-names   Discard value names in LLVM IR
  -fdollars-in-identifiers
                          Allow '$' in identifiers
  -fdriver-only           Only run the driver.
  -fdwarf-exceptions      Use DWARF style exceptions
  -feliminate-unused-debug-types
                          Do not emit  debug info for defined but unused types
  -fembed-bitcode-marker  Embed placeholder LLVM IR data as a marker
  -fembed-bitcode=<option>
                          Embed LLVM bitcode
  -fembed-bitcode         Embed LLVM IR bitcode as data
  -fembed-offload-object=<value>
                          Embed Offloading device-side binary into host object file as a section.
  -femit-all-decls        Emit all declarations, even if unused
  -femit-class-debug-always
                          Emit debug information for a C++ class into each object file where the class is used. This flag is useful for tools which are unable to resolve incomplete type descriptions.  Using this option may cause a large increase in the size of the debug information
  -femit-compact-unwind-non-canonical
                          Try emitting Compact-Unwind for non-canonical entries. Maybe overriden by other constraints
  -femit-dwarf-unwind=<value>
                          When to emit DWARF unwind (EH frame) info
  -femulated-tls          Use emutls functions to access thread_local variables
  -fenable-matrix         Enable matrix data type and related builtin functions
  -fexceptions            Enable support for exception handling
  -fexcess-precision=<value>
                          Allows control over excess precision on targets where native support for the precision types is not available. By default, excess precision is used to calculate intermediate results following the rules specified in ISO C99.
  -fexperimental-late-parse-attributes
                          Enable experimental late parsing of attributes
  -fexperimental-library  Control whether unstable and experimental library features are enabled. This option enables various library features that are either experimental (also known as TSes), or have been but are not stable yet in the selected Standard Library implementation. It is not recommended to use this option in production code, since neither ABI nor API stability are guaranteed. This is intended to provide a preview of features that will ship in the future for experimentation purposes
  -fexperimental-modules-reduced-bmi
                          Generate the reduced BMI
  -fexperimental-new-constant-interpreter
                          Enable the experimental new constant interpreter
  -fexperimental-openacc-macro-override <value>
                          Overrides the _OPENACC macro value for experimental testing during OpenACC support development
  -fexperimental-relative-c++-abi-vtables
                          Use the experimental C++ class ABI for classes with virtual tables
  -fexperimental-sanitize-metadata-ignorelist=<value>
                          Disable sanitizer metadata for modules and functions that match the provided special case list
  -fexperimental-sanitize-metadata=<value>
                          Specify the type of metadata to emit for binary analysis sanitizers
  -fexperimental-strict-floating-point
                          Enables the use of non-default rounding modes and non-default exception handling on targets that are not currently ready.
  -fextend-arguments=<value>
                          Controls how scalar integer arguments are extended in calls to unprototyped and varargs functions
  -ffast-math             Allow aggressive, lossy floating-point optimizations
  -ffat-lto-objects       Enable fat LTO object support
  -ffile-compilation-dir=<value>
                          The compilation directory to embed in the debug info and coverage mapping.
  -ffile-prefix-map=<value>
                          remap file source paths in debug info, predefined preprocessor macros and __builtin_FILE(). Implies -ffile-reproducible.
  -ffile-reproducible     Use the target's platform-specific path separator character when expanding the __FILE__ macro
  -ffine-grained-bitfield-accesses
                          Use separate accesses for consecutive bitfield runs with legal widths and alignments.
  -ffinite-loops          Assume all non-trivial loops are finite.
  -ffinite-math-only      Allow floating-point optimizations that assume arguments and results are not NaNs or +-inf. This defines the \_\_FINITE\_MATH\_ONLY\_\_ preprocessor macro.
  -ffixed-a0              Reserve the a0 register (M68k only)
  -ffixed-a1              Reserve the a1 register (M68k only)
  -ffixed-a2              Reserve the a2 register (M68k only)
  -ffixed-a3              Reserve the a3 register (M68k only)
  -ffixed-a4              Reserve the a4 register (M68k only)
  -ffixed-a5              Reserve the a5 register (M68k only)
  -ffixed-a6              Reserve the a6 register (M68k only)
  -ffixed-d0              Reserve the d0 register (M68k only)
  -ffixed-d1              Reserve the d1 register (M68k only)
  -ffixed-d2              Reserve the d2 register (M68k only)
  -ffixed-d3              Reserve the d3 register (M68k only)
  -ffixed-d4              Reserve the d4 register (M68k only)
  -ffixed-d5              Reserve the d5 register (M68k only)
  -ffixed-d6              Reserve the d6 register (M68k only)
  -ffixed-d7              Reserve the d7 register (M68k only)
  -ffixed-g1              Reserve the G1 register (SPARC only)
  -ffixed-g2              Reserve the G2 register (SPARC only)
  -ffixed-g3              Reserve the G3 register (SPARC only)
  -ffixed-g4              Reserve the G4 register (SPARC only)
  -ffixed-g5              Reserve the G5 register (SPARC only)
  -ffixed-g6              Reserve the G6 register (SPARC only)
  -ffixed-g7              Reserve the G7 register (SPARC only)
  -ffixed-i0              Reserve the I0 register (SPARC only)
  -ffixed-i1              Reserve the I1 register (SPARC only)
  -ffixed-i2              Reserve the I2 register (SPARC only)
  -ffixed-i3              Reserve the I3 register (SPARC only)
  -ffixed-i4              Reserve the I4 register (SPARC only)
  -ffixed-i5              Reserve the I5 register (SPARC only)
  -ffixed-l0              Reserve the L0 register (SPARC only)
  -ffixed-l1              Reserve the L1 register (SPARC only)
  -ffixed-l2              Reserve the L2 register (SPARC only)
  -ffixed-l3              Reserve the L3 register (SPARC only)
  -ffixed-l4              Reserve the L4 register (SPARC only)
  -ffixed-l5              Reserve the L5 register (SPARC only)
  -ffixed-l6              Reserve the L6 register (SPARC only)
  -ffixed-l7              Reserve the L7 register (SPARC only)
  -ffixed-o0              Reserve the O0 register (SPARC only)
  -ffixed-o1              Reserve the O1 register (SPARC only)
  -ffixed-o2              Reserve the O2 register (SPARC only)
  -ffixed-o3              Reserve the O3 register (SPARC only)
  -ffixed-o4              Reserve the O4 register (SPARC only)
  -ffixed-o5              Reserve the O5 register (SPARC only)
  -ffixed-point           Enable fixed point types
  -ffixed-r19             Reserve register r19 (Hexagon only)
  -ffixed-r9              Reserve the r9 register (ARM only)
  -ffixed-x10             Reserve the x10 register (AArch64/RISC-V only)
  -ffixed-x11             Reserve the x11 register (AArch64/RISC-V only)
  -ffixed-x12             Reserve the x12 register (AArch64/RISC-V only)
  -ffixed-x13             Reserve the x13 register (AArch64/RISC-V only)
  -ffixed-x14             Reserve the x14 register (AArch64/RISC-V only)
  -ffixed-x15             Reserve the x15 register (AArch64/RISC-V only)
  -ffixed-x16             Reserve the x16 register (AArch64/RISC-V only)
  -ffixed-x17             Reserve the x17 register (AArch64/RISC-V only)
  -ffixed-x18             Reserve the x18 register (AArch64/RISC-V only)
  -ffixed-x19             Reserve the x19 register (AArch64/RISC-V only)
  -ffixed-x1              Reserve the x1 register (AArch64/RISC-V only)
  -ffixed-x20             Reserve the x20 register (AArch64/RISC-V only)
  -ffixed-x21             Reserve the x21 register (AArch64/RISC-V only)
  -ffixed-x22             Reserve the x22 register (AArch64/RISC-V only)
  -ffixed-x23             Reserve the x23 register (AArch64/RISC-V only)
  -ffixed-x24             Reserve the x24 register (AArch64/RISC-V only)
  -ffixed-x25             Reserve the x25 register (AArch64/RISC-V only)
  -ffixed-x26             Reserve the x26 register (AArch64/RISC-V only)
  -ffixed-x27             Reserve the x27 register (AArch64/RISC-V only)
  -ffixed-x28             Reserve the x28 register (AArch64/RISC-V only)
  -ffixed-x29             Reserve the x29 register (AArch64/RISC-V only)
  -ffixed-x2              Reserve the x2 register (AArch64/RISC-V only)
  -ffixed-x30             Reserve the x30 register (AArch64/RISC-V only)
  -ffixed-x31             Reserve the x31 register (AArch64/RISC-V only)
  -ffixed-x3              Reserve the x3 register (AArch64/RISC-V only)
  -ffixed-x4              Reserve the x4 register (AArch64/RISC-V only)
  -ffixed-x5              Reserve the x5 register (AArch64/RISC-V only)
  -ffixed-x6              Reserve the x6 register (AArch64/RISC-V only)
  -ffixed-x7              Reserve the x7 register (AArch64/RISC-V only)
  -ffixed-x8              Reserve the x8 register (AArch64/RISC-V only)
  -ffixed-x9              Reserve the x9 register (AArch64/RISC-V only)
  -fforce-check-cxx20-modules-input-files
                          Check the input source files from C++20 modules explicitly
  -fforce-dwarf-frame     Always emit a debug frame section
  -fforce-emit-vtables    Emits more virtual tables to improve devirtualization
  -fforce-enable-int128   Enable support for int128_t type
  -ffp-accuracy=<value>   Specifies the required accuracy for floating-point operations and library calls.
  -ffp-contract=<value>   Form fused FP ops (e.g. FMAs)
  -ffp-eval-method=<value>
                          Specifies the evaluation method to use for floating-point arithmetic.
  -ffp-exception-behavior=<value>
                          Specifies the exception behavior of floating-point operations.
  -ffp-model=<value>      Controls the semantics of floating-point calculations.
  -ffreestanding          Assert that the compilation takes place in a freestanding environment
  -ffuchsia-api-level=<value>
                          Set Fuchsia API level
  -ffunction-sections     Place each function in its own section
  -fglobal-isel           Enables the global instruction selector
  -fgnu-keywords          Allow GNU-extension keywords regardless of language standard
  -fgnu-runtime           Generate output compatible with the standard GNU Objective-C runtime
  -fgnu89-inline          Use the gnu89 inline semantics
  -fgnuc-version=<value>  Sets various macros to claim compatibility with the given GCC version (default is 4.2.1)
  -fgpu-allow-device-init Allow device side init function in HIP (experimental)
  -fgpu-approx-transcendentals
                          Use approximate transcendental functions
  -fgpu-default-stream=<value>
                          Specify default stream. The default value is 'legacy'. (CUDA/HIP only)
  -fgpu-defer-diag        Defer host/device related diagnostic messages for CUDA/HIP
  -fgpu-flush-denormals-to-zero
                          Flush denormal floating point values to zero in CUDA/HIP device mode.
  -fgpu-rdc               Generate relocatable device code, also known as separate compilation mode
  -fgpu-sanitize          Enable sanitizer for supported offloading devices
  -fhelp                  Display available options
  -fhip-emit-relocatable  Compile HIP source to relocatable
  -fhip-fp32-correctly-rounded-divide-sqrt
                          Specify that single precision floating-point divide and sqrt used in the program source are correctly rounded (HIP device compilation only)
  -fhip-kernel-arg-name   Specify that kernel argument names are preserved (HIP only)
  -fhip-new-launch-api    Use new kernel launching API for HIP
  -fhlsl-strict-availability
                          Enables strict availability diagnostic mode for HLSL built-in functions.
  -fhls                   Enable Intel FPGA High Level Synthesis extensions
  -fhonor-infinities      Specify that floating-point optimizations are not allowed that assume arguments and results are not +-inf.
  -fhonor-nan-compares    Honor NaN compares with fast math
  -fhonor-nans            Specify that floating-point optimizations are not allowed that assume arguments and results are not NANs.
  -fignore-exceptions     Enable support for ignoring exception handling constructs
  -fimf-absolute-error=<value>
                          Define the maximum allowable absolute error for math library function results
  -fimf-accuracy-bits=<value>
                          Define the relative error, measured by the number of correct bits,for math library function results
  -fimf-arch-consistency=<value>
                          Ensures that the math library functions produce consistent results across different implementations of the same architecture
  -fimf-domain-exclusion=<value>
                          Indicates the input arguments domain on which math functions must provide correct results.
  -fimf-max-error=<value> defines the maximum allowable relative error, measured in ulps, for math library function results
  -fimf-precision=<value> Defines the accuracy (precision) for math library functions.
  -fimf-use-svml=<value>  Instruct the compiler to implement math library functions using the Short Vector Math Library(SVML)
  -fimplicit-module-maps  Implicitly search the file system for module map files.
  -fincremental-extensions
                          Enable incremental processing extensions such as processingstatements on the global scope.
  -finline-functions      Inline suitable functions
  -finline-hint-functions Inline functions which are (explicitly or implicitly) marked inline
  -finline-max-stacksize=<value>
                          Suppress inlining of functions whose stack size exceeds the given value
  -finput-charset=<value> Specify the default character set for source files
  -finstrument-function-entry-bare
                          Instrument function entry only, after inlining, without arguments to the instrumentation call
  -finstrument-functions-after-inlining
                          Like -finstrument-functions, but insert the calls after inlining
  -finstrument-functions  Generate calls to instrument function entry and exit
  -fintegrated-as         Enable the integrated assembler
  -fintegrated-cc1        Run cc1 in-process
  -fintegrated-objemitter Use internal machine object code emitter.
  -fintel-long-double-size=<value>
                          Overrides the size of long double from the architecture/OS defaults.
  -fintelfpga             Perform ahead-of-time compilation for FPGA
  -fiopenmp-simd          Same as -qopenmp-simd
  -fiopenmp               Same as -qopenmp
  -fjmc                   Enable just-my-code debugging
  -fjump-tables           Use jump tables for lowering switches
  -fkeep-persistent-storage-variables
                          Enable keeping all variables that have a persistent storage duration, including global, static and thread-local variables, to guarantee that they can be directly addressed
  -fkeep-static-consts    Keep static const variables even if unused
  -fkeep-system-includes  Instead of expanding system headers when emitting preprocessor output, preserve the #include directive. Useful when producing preprocessed output for test case reduction. May produce incorrect output if preprocessor symbols that control the included content (e.g. _XOPEN_SOURCE) are defined in the including source file. The portability of the resulting source to other compilation environments is not guaranteed.
                          
                          Only valid with -E.
  -flax-vector-conversions=<value>
                          Enable implicit vector bit-casts
  -flink-huge-device-code Generate and use a custom linker script for huge device code sections
  -flto-jobs=<value>      Controls the backend parallelism of -flto=thin (default of 0 means the number of threads will be derived from the number of CPUs detected)
  -flto=auto              Enable LTO in 'full' mode
  -flto=jobserver         Enable LTO in 'full' mode
  -flto=<value>           Set LTO mode
  -flto                   Enable LTO in 'full' mode
  -fmacro-backtrace-limit=<value>
                          Set the maximum number of entries to print in a macro expansion backtrace (0 = no limit)
  -fmacro-prefix-map=<value>
                          remap file source paths in predefined preprocessor macros and __builtin_FILE(). Implies -ffile-reproducible.
  -fmaintain-32-byte-stack-align
                          Do not assume any alignment, but maintain alignment in case the stack is already aligned
  -fmath-errno            Require math functions to indicate errors by setting errno
  -fmax-tokens=<value>    Max total number of preprocessed tokens for -Wmax-tokens.
  -fmax-type-align=<value>
                          Specify the maximum alignment to enforce on pointers lacking an explicit alignment
  -fma                    Enable the combining of floating point multiples and add/subtract operations.
  -fmemory-profile-use=<pathname>
                          Use memory profile for profile-guided memory optimization
  -fmemory-profile=<directory>
                          Enable heap memory profiling and dump results into <directory>
  -fmemory-profile        Enable heap memory profiling
  -fmerge-all-constants   Allow merging of constants
  -fmerge-debug-strings   Merge identical debug strings in different object files.
  -fmessage-length=<value>
                          Format message diagnostics so that they fit within N columns
  -fminimize-whitespace   Ignore the whitespace from the input file when emitting preprocessor output. It will only contain whitespace when necessary, e.g. to keep two minus signs from merging into to an increment operator. Useful with the -P option to normalize whitespace such that two files with only formatting changes are equal.
                          
                          Only valid with -E on C-like inputs and incompatible with -traditional-cpp.
  -fmodule-file=[<name>=]<file>
                          Specify the mapping of module name to precompiled module file, or load a module file if name is omitted.
  -fmodule-header=<kind>  Build a C++20 Header Unit from a header that should be found in the user (fmodule-header=user) or system (fmodule-header=system) search path.
  -fmodule-header         Build a C++20 Header Unit from a header
  -fmodule-map-file=<file>
                          Load this module map file
  -fmodule-name=<name>    Specify the name of the module to build
  -fmodule-output=<value> Save intermediate module file results when compiling a standard C++ module unit.
  -fmodule-output         Save intermediate module file results when compiling a standard C++ module unit.
  -fmodules-cache-path=<directory>
                          Specify the module cache path
  -fmodules-decluse       Require declaration of modules used within a module
  -fmodules-disable-diagnostic-validation
                          Disable validation of the diagnostic options when loading the module
  -fmodules-ignore-macro=<value>
                          Ignore the definition of the given macro when building and loading modules
  -fmodules-prune-after=<seconds>
                          Specify the interval (in seconds) after which a module file will be considered unused
  -fmodules-prune-interval=<seconds>
                          Specify the interval (in seconds) between attempts to prune the module cache
  -fmodules-search-all    Search even non-imported modules to resolve references
  -fmodules-strict-decluse
                          Like -fmodules-decluse but requires all headers to be in modules
  -fmodules-user-build-path <directory>
                          Specify the module user build path
  -fmodules-validate-input-files-content
                          Validate PCM input files based on content if mtime differs
  -fmodules-validate-once-per-build-session
                          Don't verify input files for the modules if the module has been successfully validated or loaded during this build session
  -fmodules-validate-system-headers
                          Validate the system headers that a module depends on when loading the module
  -fmodules               Enable the 'modules' language feature
  -fms-compatibility-version=<value>
                          Dot-separated value representing the Microsoft compiler version number to report in _MSC_VER (0 = don't define it (default))
  -fms-compatibility      Enable full Microsoft Visual C++ compatibility
  -fms-define-stdc        Define '__STDC__' to '1' in MSVC Compatibility mode
  -fms-extensions         Accept some non-standard constructs supported by the Microsoft compiler
  -fms-hotpatch           Ensure that all functions can be hotpatched at runtime
  -fms-runtime-lib=<value>
                          Select Windows run-time library
  -fms-volatile           Volatile loads and stores have acquire and release semantics
  -fmsc-version=<value>   Microsoft compiler version number to report in _MSC_VER (0 = don't define it (default))
  -fnew-alignment=<align> Specifies the largest alignment guaranteed by '::operator new(size_t)'
  -fnew-infallible        Enable treating throwing global C++ operator new as always returning valid memory (annotates with __attribute__((returns_nonnull)) and throw()). This is detectable in source.
  -fno-aapcs-bitfield-width
                          Do not follow the AAPCS standard requirement stating that volatile bit-field width is dictated by the field container type. (ARM only).
  -fno-access-control     Disable C++ access control
  -fno-addrsig            Don't emit an address-significance table
  -fno-alias              Enables 'noalias' attribute for all pointer-type arguments
  -fno-align-functions    Aligns on a 2-byte boundary
  -fno-apinotes-modules   Disable module-based external API notes support
  -fno-apinotes           Disable external API notes support
  -fno-assume-sane-operator-new
                          Don't assume that C++'s global operator new can't alias any pointer
  -fno-assume-unique-vtables
                          Disable optimizations based on vtable pointer identity
  -fno-assumptions        Disable codegen and compile-time checks for C++23's [[assume]] attribute
  -fno-auto-import        MinGW specific. Disable support for automatic dllimport in code generation and linking
  -fno-autolink           Disable generation of linker directives for automatic library linking
  -fno-builtin-<value>    Disable implicit builtin knowledge of a specific function
  -fno-builtin            Disable implicit builtin knowledge of functions
  -fno-bundle-offload-arch
                          Specify that the offload bundler should not identify a bundle with specific arch. For example, the bundle for `nvptx64-nvidia-cuda-sm_80` uses the bundle tag `nvptx64-nvidia-cuda` when used. This allows .o files to contain .bc bundles that are unspecific to a particular arch version.
  -fno-c++-static-destructors
                          Disable C++ static destructor registration
  -fno-char8_t            Disable C++ builtin type char8_t
  -fno-clangir            Use the AST -> LLVM pipeline to compile
  -fno-color-diagnostics  Disable colors in diagnostics
  -fno-common             Compile common globals like normal definitions
  -fno-complete-member-pointers
                          Do not require member pointer base types to be complete if they would be significant under the Microsoft ABI
  -fno-constant-cfstrings Disable creation of CodeFoundation-type constant strings
  -fno-convergent-functions
                          Assume all functions may be convergent.
  -fno-coverage-mapping   Disable code coverage analysis
  -fno-coverage-mcdc      Disable MC/DC coverage criteria
  -fno-crash-diagnostics  Disable auto-generation of preprocessed source files and a script for reproduction during a clang crash
  -fno-cuda-prec-sqrt     Don't specify that sqrt is correctly rounded (for CUDA devices)
  -fno-cx-fortran-rules   Range reduction is disabled for complex arithmetic operations
  -fno-cx-limited-range   Basic algebraic expansions of complex arithmetic operations involving are disabled.
  -fno-cxx-modules        Disable modules for C++
  -fno-debug-macro        Do not emit macro debug information
  -fno-declspec           Disallow __declspec as a keyword
  -fno-define-target-os-macros
                          Disable predefined target OS macros
  -fno-delayed-template-parsing
                          Disable delayed template parsing
  -fno-delete-null-pointer-checks
                          Do not treat usage of null pointers as undefined behavior
  -fno-diagnostics-fixit-info
                          Do not include fixit information in diagnostics
  -fno-diagnostics-show-line-numbers
                          Show line numbers in diagnostic code snippets
  -fno-digraphs           Disallow alternative token representations '<:', ':>', '<%', '%>', '%:', '%:%:'
  -fno-direct-access-external-data
                          Use GOT indirection to reference external data symbols
  -fno-disable-block-signature-string
                          Don't disable block signature string)
  -fno-discard-value-names
                          Do not discard value names in LLVM IR
  -fno-dollars-in-identifiers
                          Disallow '$' in identifiers
  -fno-elide-constructors Disable C++ copy constructor elision
  -fno-elide-type         Do not elide types when printing diagnostics
  -fno-eliminate-unused-debug-types
                          Emit  debug info for defined but unused types
  -fno-emit-class-debug-always
                          Emit debug information for a C++ class in only one object file
  -fno-exceptions         Disable support for exception handling
  -fno-experimental-late-parse-attributes
                          Disable experimental late parsing of attributes
  -fno-experimental-relative-c++-abi-vtables
                          Do not use the experimental C++ class ABI for classes with virtual tables
  -fno-experimental-sanitize-metadata=<value>
                          Disable emitting metadata for binary analysis sanitizers
  -fno-fat-lto-objects    Disable fat LTO object support
  -fno-file-reproducible  Use the host's platform-specific path separator character when expanding the __FILE__ macro
  -fno-fine-grained-bitfield-accesses
                          Use large-integer access for consecutive bitfield runs.
  -fno-finite-loops       Do not assume that any loop is finite.
  -fno-fixed-point        Disable fixed point types
  -fno-force-enable-int128
                          Disable support for int128_t type
  -fno-global-isel        Disables the global instruction selector
  -fno-gnu-inline-asm     Disable GNU style inline asm
  -fno-gpu-allow-device-init
                          Don't allow device side init function in HIP (experimental)
  -fno-gpu-approx-transcendentals
                          Don't use approximate transcendental functions
  -fno-gpu-defer-diag     Don't defer host/device related diagnostic messages for CUDA/HIP
  -fno-hip-emit-relocatable
                          Do not override toolchain to compile HIP source to relocatable
  -fno-hip-fp32-correctly-rounded-divide-sqrt
                          Don't specify that single precision floating-point divide and sqrt used in the program source are correctly rounded (HIP device compilation only)
  -fno-hip-kernel-arg-name
                          Don't specify that kernel argument names are preserved (HIP only)
  -fno-hip-new-launch-api Don't use new kernel launching API for HIP
  -fno-honor-nan-compares Do not honor NaN compares with fast math
  -fno-integrated-as      Disable the integrated assembler
  -fno-integrated-cc1     Spawn a separate process for each cc1
  -fno-integrated-objemitter
                          Use external machine object code emitter.
  -fno-jump-tables        Do not use jump tables for lowering switches
  -fno-keep-persistent-storage-variables
                          Disable keeping all variables that have a persistent storage duration, including global, static and thread-local variables, to guarantee that they can be directly addressed
  -fno-keep-static-consts Don't keep static const variables even if unused
  -fno-knr-functions      Disable support for K&R C function declarations
  -fno-link-huge-device-code
                          Do not generate or use a custom linker script for huge device code sections (default)
  -fno-lto                Disable LTO mode (default)
  -fno-memory-profile     Disable heap memory profiling
  -fno-merge-all-constants
                          Disallow merging of constants
  -fno-merge-debug-strings
                           Do not mergeidentical debug strings in different object files.
  -fno-modules-check-relocated<value>
                          Skip checks for relocated modules when loading PCM files
  -fno-modules-validate-textual-header-includes
                          Do not enforce -fmodules-decluse and private header restrictions for textual headers. This flag will be removed in a future Clang release.
  -fno-new-infallible     Disable treating throwing global C++ operator new as always returning valid memory (annotates with __attribute__((returns_nonnull)) and throw()). This is detectable in source.
  -fno-objc-avoid-heapify-local-blocks
                          Don't try to avoid heapifying local blocks
  -fno-objc-infer-related-result-type
                          do not infer Objective-C related result type based on method family
  -fno-offload-lto        Disable LTO mode (default) for offload compilation
  -fno-offload-uniform-block
                          Don't assume that kernels are launched with uniform block sizes (default true for CUDA/HIP and false otherwise)
  -fno-openmp-device-lib=<value>
                          Control exclusion of device libraries from device binary linkage. Valid arguments are libc, libm-fp32, libm-fp64, all
  -fno-openmp-extensions  Disable all Clang extensions for OpenMP directives and clauses
  -fno-operator-names     Do not treat C++ operator name keywords as synonyms for operators
  -fno-optimize-sibling-calls
                          Disable tail call optimization, keeping the call stack accurate
  -fno-pch-codegen        Do not generate code for uses of this PCH that assumes an explicit object file will be built for the PCH
  -fno-pch-debuginfo      Do not generate debug info for types in an object file built from this PCH and do not generate them elsewhere
  -fno-plt                Use GOT indirection instead of PLT to make external function calls (x86 only)
  -fno-preserve-as-comments
                          Do not preserve comments in inline assembly
  -fno-profile-generate   Disable generation of profile instrumentation.
  -fno-profile-instr-generate
                          Disable generation of profile instrumentation.
  -fno-profile-instr-use  Disable using instrumentation data for profile-guided optimization
  -fno-pseudo-probe-for-profiling
                          Do not emit pseudo probes for sample profiling
  -fno-raw-string-literals
                          Disable raw string literals
  -fno-register-global-dtors-with-atexit
                          Don't use atexit or __cxa_atexit to register global destructors
  -fno-relaxed-template-template-args
                          Disable C++17 relaxed template template argument matching
  -fno-rtlib-add-rpath    Do not add -rpath with architecture-specific resource directory to the linker flags. When --hip-link is specified, do not add -rpath with HIP runtime library directory to the linker flags
  -fno-rtlib-defaultlib   On Windows, do not emit /defaultlib: directives to link compiler-rt libraries
  -fno-rtti-data          Disable generation of RTTI data
  -fno-rtti               Disable generation of rtti information
  -fno-sanitize-address-globals-dead-stripping
                          Disable linker dead stripping of globals in AddressSanitizer
  -fno-sanitize-address-outline-instrumentation
                          Use default code inlining logic for the address sanitizer
  -fno-sanitize-address-poison-custom-array-cookie
                          Disable poisoning array cookies when using custom operator new[] in AddressSanitizer
  -fno-sanitize-address-use-after-scope
                          Disable use-after-scope detection in AddressSanitizer
  -fno-sanitize-address-use-odr-indicator
                          Disable ODR indicator globals
  -fno-sanitize-cfi-canonical-jump-tables
                          Do not make the jump table addresses canonical in the symbol table
  -fno-sanitize-cfi-cross-dso
                          Disable control flow integrity (CFI) checks for cross-DSO calls.
  -fno-sanitize-coverage=<value>
                          Disable features of coverage instrumentation for Sanitizers
  -fno-sanitize-hwaddress-experimental-aliasing
                          Disable aliasing mode in HWAddressSanitizer
  -fno-sanitize-ignorelist
                          Don't use ignorelist file for sanitizers
  -fno-sanitize-memory-param-retval
                          Disable detection of uninitialized parameters and return values
  -fno-sanitize-memory-track-origins
                          Disable origins tracking in MemorySanitizer
  -fno-sanitize-memory-use-after-dtor
                          Disable use-after-destroy detection in MemorySanitizer
  -fno-sanitize-recover=<value>
                          Disable recovery for specified sanitizers
  -fno-sanitize-stable-abi
                          Conventional ABI instrumentation for sanitizer runtime. Default: Conventional
  -fno-sanitize-stats     Disable sanitizer statistics gathering.
  -fno-sanitize-thread-atomics
                          Disable atomic operations instrumentation in ThreadSanitizer
  -fno-sanitize-thread-func-entry-exit
                          Disable function entry/exit instrumentation in ThreadSanitizer
  -fno-sanitize-thread-memory-access
                          Disable memory access instrumentation in ThreadSanitizer
  -fno-sanitize-trap=<value>
                          Disable trapping for specified sanitizers
  -fno-sanitize-trap      Disable trapping for all sanitizers
  -fno-short-wchar        Force wchar_t to be an unsigned int
  -fno-show-column        Do not include column number on diagnostics
  -fno-show-source-location
                          Do not include source location information with diagnostics
  -fno-signed-char        char is unsigned
  -fno-signed-zeros       Allow optimizations that ignore the sign of floating point zeros
  -fno-skip-odr-check-in-gmf
                          Perform ODR checks for decls in the global module fragment.
  -fno-spell-checking     Disable spell-checking
  -fno-split-machine-functions
                          Disable late function splitting using profile information (x86 ELF/COFF)
  -fno-split-stack        Wouldn't use segmented stack
  -fno-stack-clash-protection
                          Disable stack clash protection
  -fno-stack-protector    Disable the use of stack protectors
  -fno-standalone-debug   Limit debug information produced to reduce size of debug binary
  -fno-strict-aliasing    Disable optimizations based on strict aliasing rules
  -fno-strict-float-cast-overflow
                          Relax language rules and try to match the behavior of the target's native float-to-int conversion instructions
  -fno-strict-return      Don't treat control flow paths that fall off the end of a non-void function as unreachable
  -fno-sycl-add-default-spec-consts-image
                          Turns off generation of device image where all specialization constant usages are replaced with default values.
  -fno-sycl-allow-device-dependencies
                          Do not allow dependencies between device code images (default)
  -fno-sycl-dead-args-optimization
                          Disables elimination of DPC++ dead kernel arguments
  -fno-sycl-decompose-functor
                          Do not decompose SYCL functor if possible (experimental, CUDA only)
  -fno-sycl-device-code-split-esimd
                          do not split ESIMD and SYCL device code into separate device binary images. Has effect only for SPIR-based targets. (experimental)
  -fno-sycl-device-lib-jit-link
                          Disables sycl device library jit link (experimental)
  -fno-sycl-device-lib=<value>
                          Control exclusion of device libraries from device binary linkage. Valid arguments are libc, libm-fp32, libm-fp64, all
  -fno-sycl-early-optimizations
                          Disable standard optimization pipeline for SYCL device compiler
  -fno-sycl-esimd-force-stateless-mem
                          Do not enforce using stateless memory accesses.
  -fno-sycl-explicit-simd Disable SYCL explicit SIMD extension. (deprecated)
  -fno-sycl-force-inline-kernel-lambda
                          Disallow force inline SYCL kernels lambda in entry point
  -fno-sycl-id-queries-fit-in-int
                          Do not assume that SYCL ID queries fit within MAX_INT.
  -fno-sycl-instrument-device-code
                          Do not add Instrumentation and Tracing Technology (ITT) instrumentation intrinsics calls (experimental)
  -fno-sycl-libspirv      Disable check for libspirv
  -fno-sycl-link-spirv    Disable adding of the default (spir64) triple when discovered in user specified objects and archives.
  -fno-sycl-pstl-offload  Disable offloading of C++ standard parallel algorithms.
  -fno-sycl-rdc           Generate relocatable device code during SYCL offload target compilation. Use of ‘-fno-sycl-rdc’ in combination with ‘-c’ will produce final device binaries within the generated fat object. When using this option, each kernel must be self-contained within its translation unit (source file).  Therefore, the use of SYCL_EXTERNAL is disallowed when this option is enabled.
  -fno-sycl-remove-unused-external-funcs
                          Prevent removal of unused `SYCL_EXTERNAL` functions
  -fno-sycl-unnamed-lambda
                          Disallow unnamed SYCL lambda kernels
  -fno-sycl-use-bitcode   Use SPIR-V instead of LLVM bitcode in fat objects (deprecated)
  -fno-sycl-use-footer    Disable usage of the integration footer during SYCL enabled compilations.
  -fno-sycl               Disables SYCL kernels compilation for device
  -fno-system-debug       Do not emit debug information for declarations in system headers
  -fno-temp-file          Directly create compilation output files. This may lead to incorrect incremental builds if the compiler crashes
  -fno-threadsafe-statics Do not emit code to make initialization of local statics thread safe
  -fno-trigraphs          Do not process trigraph sequences
  -fno-unified-lto        Use distinct LTO pipelines
  -fno-unique-section-names
                          Don't use unique names for text and data sections
  -fno-unroll-loops       Turn off loop unroller
  -fno-use-cxa-atexit     Don't use __cxa_atexit for calling destructors
  -fno-use-init-array     Use .ctors/.dtors instead of .init_array/.fini_array
  -fno-vec-allow-scalar-stores
                          When this option is set, an explicit simd loop (for example, one set with #pragma omp simd) will not be vectorized if it contains a store to a scalar variable that is not marked as private, lastprivate, or reduction.
  -fno-vec-peel-loops     Disable peel loop vectorization.
  -fno-vec-remainder-loops
                          Disable remainder loop vectorization.
  -fno-vec-with-mask      Disable vectorization for short trip-count loops with masking.
  -fno-verify-intermediate-code
                          Disable verification of LLVM IR
  -fno-visibility-inlines-hidden-static-local-var
                          Disables -fvisibility-inlines-hidden-static-local-var (this is the default on non-darwin targets)
  -fno-xray-function-index
                          Omit function index section at the expense of single-function patching performance
  -fno-zero-initialized-in-bss
                          Don't place zero initialized data in BSS
  -fobjc-arc-exceptions   Use EH-safe code when synthesizing retains and releases in -fobjc-arc
  -fobjc-arc              Synthesize retain and release calls for Objective-C pointers
  -fobjc-avoid-heapify-local-blocks
                          Try to avoid heapifying local blocks
  -fobjc-disable-direct-methods-for-testing
                          Ignore attribute objc_direct so that direct methods can be tested
  -fobjc-encode-cxx-class-template-spec
                          Fully encode c++ class template specialization
  -fobjc-exceptions       Enable Objective-C exceptions
  -fobjc-runtime=<value>  Specify the target Objective-C runtime kind and version
  -fobjc-weak             Enable ARC-style weak references in Objective-C
  -foffload-implicit-host-device-templates
                          Template functions or specializations without host, device and global attributes have implicit host device attributes (CUDA/HIP only)
  -foffload-lto=<value>   Set LTO mode for offload compilation
  -foffload-lto           Enable LTO in 'full' mode for offload compilation
  -foffload-uniform-block Assume that kernels are launched with uniform block sizes (default true for CUDA/HIP and false otherwise)
  -fomit-frame-pointer    Omit the frame pointer from functions that don't need it. Some stack unwinding cases, such as profilers and sanitizers, may prefer specifying -fno-omit-frame-pointer. On many targets, -O1 and higher omit the frame pointer by default. -m[no-]omit-leaf-frame-pointer takes precedence for leaf functions
  -fopenacc               Enable OpenACC
  -fopenmp-concurrent-host-device-compile<value>
                          Enable parallel compilation of host and device compilation steps when performing OpenMP offload compiles using -fopenmp-targets. (experimental)
  -fopenmp-declare-target-scalar-defaultmap=<value>
                          Assume that a scalar declare target variable with implicit data-mapping referenced in a 'target' construct has the same value in the host and device environment
  -fopenmp-device-lib=<value>
                          Control inclusion of device libraries into device binary linkage. Valid arguments are libc, libm-fp32, libm-fp64, all
  -fopenmp-device-link    Perform device link during compilation step instead of link step (-c compilations).  Use for offload compilations to produce final device binaries within the generated fat object.
  -fopenmp-extensions     Enable all Clang extensions for OpenMP directives and clauses
  -fopenmp-force-usm      Force behvaior as if the user specified pragma omp requires unified_shared_memory.
  -fopenmp-offload-mandatory
                          Do not create a host fallback if offloading to the device fails.
  -fopenmp-simd           Emit OpenMP code only for SIMD-based constructs. Advanced users who prefer to use OpenMP* as it is implemented by the LLVM community can get most of that functionality by using -fopenmp-simd.
  -fopenmp-target-buffers=<value>
                          Allow access to target objects of 4GB or larger in target code.
  -fopenmp-target-debug   Enable debugging in the OpenMP offloading device RTL
  -fopenmp-target-default-sub-group-size=<value>
                          Specify the default sub-group size of SPMD kernels generated for OpenMP target constructs for SPIR64
  -fopenmp-target-jit     Emit code that can be JIT compiled for OpenMP offloading. Implies -foffload-lto=full
  -fopenmp-targets=<value>
                          Specify comma-separated list of triples that correspond to OpenMP offloading targets to be supported.  Valid triples include spir64_gen, spir64_x86_64 and spir64
  -fopenmp-version=<value>
                          Set OpenMP version (e.g. 45 for OpenMP 4.5, 51 for OpenMP 5.1). Default value is 51 for Clang
  -fopenmp                Parse OpenMP pragmas and generate parallel code. Advanced users who prefer to use OpenMP* as it is implemented by the LLVM community can get most of that functionality by using -fopenmp.
  -foperator-arrow-depth=<value>
                          Maximum number of 'operator->'s to call for a member access
  -foptimization-record-file=<file>
                          Specify the output name of the file containing the optimization remarks. Implies -fsave-optimization-record. On Darwin platforms, this cannot be used with multiple -arch <arch> options.
  -foptimization-record-passes=<regex>
                          Only include passes which match a specified regular expression in the generated optimization record (by default, include all passes)
  -forder-file-instrumentation
                          Generate instrumented code to collect order file into default.profraw file (overridden by '=' form of option or LLVM_PROFILE_FILE env var)
  -fortlib                Allow for Fortran generated objects to be mixed and matched and linked in with the C/C++ compiler to pull in the needed libraries.
  -fp-model=<value>       Controls the semantics of floating-point calculations.
  -fp-speculation=<value> Specifies the exception behavior of floating-point operations.
  -fpack-struct=<value>   Specify the default maximum struct packing alignment
  -fpascal-strings        Recognize and construct Pascal-style string literals
  -fpass-plugin=<dsopath> Load pass plugin from a dynamic shared object file (only with new pass manager).
  -fpatchable-function-entry=<N,M>
                          Generate M NOPs before function entry and N-M NOPs after function entry
  -fpcc-struct-return     Override the default ABI to return all structs on the stack
  -fpch-codegen           Generate code for uses of this PCH that assumes an explicit object file will be built for the PCH
  -fpch-debuginfo         Generate debug info for types in an object file built from this PCH and do not generate them elsewhere
  -fpch-instantiate-templates
                          Instantiate templates already while building a PCH
  -fpch-validate-input-files-content
                          Validate PCH input files based on content if mtime differs
  -fplugin-arg-<name>-<arg>
                          Pass <arg> to plugin <name>
  -fplugin=<dsopath>      Load the named plugin (dynamic shared object)
  -fprebuilt-implicit-modules
                          Look up implicit modules in the prebuilt module path
  -fprebuilt-module-path=<directory>
                          Specify the prebuilt module path
  -fpreview-breaking-changes
                          When specified, it informs the compiler driver and compilation phases that it is allowed to break backward compatibility. When this option is specified the compiler will also set the macro __INTEL_PREVIEW_BREAKING_CHANGES.
                          When this option is used in conjunction with -fsycl, the driver will link against an alternate form of libsycl, libsycl-preview.
  -fproc-stat-report=<value>
                          Save subprocess statistics to the given file
  -fproc-stat-report<value>
                          Print subprocess statistics
  -fprofile-arcs          Instrument code to produce gcov data files (*.gcda)
  -fprofile-dwo-dir=<value>
                          Directory to store .dwo files when using -fprofile-sample-generate and -gsplit-dwarf. (experimental)
  -fprofile-exclude-files=<value>
                          Instrument only functions from files where names don't match all the regexes separated by a semi-colon
  -fprofile-filter-files=<value>
                          Instrument only functions from files where names match any regex separated by a semi-colon
  -fprofile-function-groups=<N>
                          Partition functions into N groups and select only functions in group i to be instrumented using -fprofile-selected-function-group
  -fprofile-generate=<directory>
                          Generate instrumented code to collect execution counts into <directory>/default.profraw (overridden by LLVM_PROFILE_FILE env var)
  -fprofile-generate      Generate instrumented code to collect execution counts into default.profraw (overridden by LLVM_PROFILE_FILE env var)
  -fprofile-instr-generate=<file>
                          Generate instrumented code to collect execution counts into <file> (overridden by LLVM_PROFILE_FILE env var)
  -fprofile-instr-generate
                          Generate instrumented code to collect execution counts into default.profraw file (overridden by '=' form of option or LLVM_PROFILE_FILE env var)
  -fprofile-instr-use=<value>
                          Use instrumentation data for profile-guided optimization
  -fprofile-list=<value>  Filename defining the list of functions/files to instrument. The file uses the sanitizer special case list format.
  -fprofile-ml-use        Use pre-trained machine learning model for profile guided optimizations.(deprecated)
  -fprofile-remapping-file=<file>
                          Use the remappings described in <file> to match the profile data against names in the program
  -fprofile-sample-accurate
                          Specifies that the sample profile is accurate
  -fprofile-sample-generate=<value>
                          Enable compiler and linker generating information and adjusting optimizations for Sample-based Profile Guided Optimizations (SPGO). Vaild arguments are none, keep-all-opt, med-fidelity, max-fidelity. (experimental)
  -fprofile-sample-use=<value>
                          Enable compiler and linker using information for Sample-based Profile Guided Optimizations (SPGO). (experimental)
  -fprofile-selected-function-group=<i>
                          Partition functions into N groups using -fprofile-function-groups and select only functions in group i to be instrumented. The valid range is 0 to N-1 inclusive
  -fprofile-update=<method>
                          Set update method of profile counters
  -fprofile-use=<pathname>
                          Use instrumentation data for profile-guided optimization. If pathname is a directory, it reads from <pathname>/default.profdata. Otherwise, it reads from file <pathname>.
  -fprotect-parens        Determines whether the optimizer honors parentheses when floating-point expressions are evaluated
  -fpseudo-probe-for-profiling
                          Emit pseudo probes for sample profiling
  -fptrauth-auth-traps    Enable traps on authentication failures
  -fptrauth-calls         Enable signing and authentication of all indirect calls
  -fptrauth-function-pointer-type-discrimination
                          Enable type discrimination on C function pointers
  -fptrauth-init-fini     Enable signing of function pointers in init/fini arrays
  -fptrauth-intrinsics    Enable pointer authentication intrinsics
  -fptrauth-returns       Enable signing and authentication of return addresses
  -fptrauth-vtable-pointer-address-discrimination
                          Enable address discrimination of vtable pointers
  -fptrauth-vtable-pointer-type-discrimination
                          Enable type discrimination of vtable pointers
  -frandomize-layout-seed-file=<file>
                          File holding the seed used by the randomize structure layout feature
  -frandomize-layout-seed=<seed>
                          The seed used by the randomize structure layout feature
  -fraw-string-literals   Enable raw string literals
  -freciprocal-math       Allow division operations to be reassociated
  -freg-struct-return     Override the default ABI to return small structs in registers
  -fregister-global-dtors-with-atexit
                          Use atexit or __cxa_atexit to register global destructors
  -frelaxed-template-template-args
                          Enable C++17 relaxed template template argument matching
  -fropi                  Generate read-only position independent code (ARM only)
  -frounding-math         Disable floating point optimizations that assume the default rounding mode.
  -frtlib-add-rpath       Add -rpath with architecture-specific resource directory to the linker flags. When --hip-link is specified, also add -rpath with HIP runtime library directory to the linker flags
  -frtlib-defaultlib      On Windows, emit /defaultlib: directives to link compiler-rt libraries (default)
  -frwpi                  Generate read-write position independent code (ARM only)
  -fsafe-buffer-usage-suggestions
                          Display suggestions to update code associated with -Wunsafe-buffer-usage warnings
  -fsample-profile-use-profi
                          Use profi to infer block and edge counts
  -fsanitize-address-destructor=<value>
                          Set the kind of module destructors emitted by AddressSanitizer instrumentation. These destructors are emitted to unregister instrumented global variables when code is unloaded (e.g. via `dlclose()`).
  -fsanitize-address-field-padding=<value>
                          Level of field padding for AddressSanitizer
  -fsanitize-address-globals-dead-stripping
                          Enable linker dead stripping of globals in AddressSanitizer
  -fsanitize-address-outline-instrumentation
                          Always generate function calls for address sanitizer instrumentation
  -fsanitize-address-poison-custom-array-cookie
                          Enable poisoning array cookies when using custom operator new[] in AddressSanitizer
  -fsanitize-address-use-after-return=<mode>
                          Select the mode of detecting stack use-after-return in AddressSanitizer
  -fsanitize-address-use-after-scope
                          Enable use-after-scope detection in AddressSanitizer
  -fsanitize-address-use-odr-indicator
                          Enable ODR indicator globals to avoid false ODR violation reports in partially sanitized programs at the cost of an increase in binary size
  -fsanitize-cfi-canonical-jump-tables
                          Make the jump table addresses canonical in the symbol table
  -fsanitize-cfi-cross-dso
                          Enable control flow integrity (CFI) checks for cross-DSO calls.
  -fsanitize-cfi-icall-experimental-normalize-integers
                          Normalize integers in CFI indirect call type signature checks
  -fsanitize-cfi-icall-generalize-pointers
                          Generalize pointers in CFI indirect call type signature checks
  -fsanitize-coverage-allowlist=<value>
                          Restrict sanitizer coverage instrumentation exclusively to modules and functions that match the provided special case list, except the blocked ones
  -fsanitize-coverage-ignorelist=<value>
                          Disable sanitizer coverage instrumentation for modules and functions that match the provided special case list, even the allowed ones
  -fsanitize-coverage=<value>
                          Specify the type of coverage instrumentation for Sanitizers
  -fsanitize-hwaddress-abi=<value>
                          Select the HWAddressSanitizer ABI to target (interceptor or platform, default interceptor). This option is currently unused.
  -fsanitize-hwaddress-experimental-aliasing
                          Enable aliasing mode in HWAddressSanitizer
  -fsanitize-ignorelist=<value>
                          Path to ignorelist file for sanitizers
  -fsanitize-memory-param-retval
                          Enable detection of uninitialized parameters and return values
  -fsanitize-memory-track-origins=<value>
                          Enable origins tracking in MemorySanitizer
  -fsanitize-memory-track-origins
                          Enable origins tracking in MemorySanitizer
  -fsanitize-memory-use-after-dtor
                          Enable use-after-destroy detection in MemorySanitizer
  -fsanitize-memtag-mode=<value>
                          Set default MTE mode to 'sync' (default) or 'async'
  -fsanitize-recover=<value>
                          Enable recovery for specified sanitizers
  -fsanitize-stable-abi   Stable  ABI instrumentation for sanitizer runtime. Default: Conventional
  -fsanitize-stats        Enable sanitizer statistics gathering.
  -fsanitize-system-ignorelist=<value>
                          Path to system ignorelist file for sanitizers
  -fsanitize-thread-atomics
                          Enable atomic operations instrumentation in ThreadSanitizer (default)
  -fsanitize-thread-func-entry-exit
                          Enable function entry/exit instrumentation in ThreadSanitizer (default)
  -fsanitize-thread-memory-access
                          Enable memory access instrumentation in ThreadSanitizer (default)
  -fsanitize-trap=<value> Enable trapping for specified sanitizers
  -fsanitize-trap         Enable trapping for all sanitizers
  -fsanitize-undefined-strip-path-components=<number>
                          Strip (or keep only, if negative) a given number of path components when emitting check metadata.
  -fsanitize=<check>      Turn on runtime checks for various forms of undefined or suspicious behavior. See user manual for available checks
  -fsave-optimization-record=<format>
                          Generate an optimization record file in a specific format
  -fsave-optimization-record
                          Generate a YAML optimization record file
  -fseh-exceptions        Use SEH style exceptions
  -fseparate-named-sections
                          Use separate unique sections for named sections (ELF Only)
  -fshort-enums           Allocate to an enum type only as many bytes as it needs for the declared range of possible values
  -fshort-wchar           Force wchar_t to be a short unsigned int
  -fshow-overloads=<value>
                          Which overload candidates to show when overload resolution fails. Defaults to 'all'
  -fshow-skipped-includes Show skipped includes in -H output.
  -fsigned-char           char is signed
  -fsized-deallocation    Enable C++14 sized global deallocation functions
  -fsjlj-exceptions       Use SjLj style exceptions
  -fskip-odr-check-in-gmf Skip ODR checks for decls in the global module fragment.
  -fslp-vectorize         Enable the superword-level parallelism vectorization passes
  -fspell-checking-limit=<value>
                          Set the maximum number of times to perform spell checking on unrecognized identifiers (0 = no limit)
  -fsplit-dwarf-inlining  Provide minimal debug info in the object/executable to facilitate online symbolication/stack traces in the absence of .dwo/.dwp files when using Split DWARF
  -fsplit-lto-unit        Enables splitting of the LTO unit
  -fsplit-machine-functions
                          Enable late function splitting using profile information (x86 ELF/COFF)
  -fsplit-stack           Use segmented stack
  -fstack-clash-protection
                          Enable stack clash protection
  -fstack-limit-register=<value>
                          Limits the stack register size
  -fstack-protector-all   Enable stack protectors for all functions
  -fstack-protector-strong
                          Enable stack protectors for some functions vulnerable to stack smashing. Compared to -fstack-protector, this uses a stronger heuristic that includes functions containing arrays of any size (and any type), as well as any calls to alloca or the taking of an address from a local variable
  -fstack-protector       Enable stack protectors for some functions vulnerable to stack smashing. This uses a loose heuristic which considers functions vulnerable if they contain a char (or 8bit integer) array or constant sized calls to alloca , which are of greater size than ssp-buffer-size (default: 8 bytes). All variable sized calls to alloca are considered vulnerable. A function with a stack protector has a guard value added to the stack frame that is checked on function exit. The guard value must be positioned in the stack frame such that a buffer overflow from a vulnerable variable will overwrite the guard value before overwriting the function's return address. The reference stack guard value is stored in a global variable.
  -fstack-security-check  Enable overflow security checks
  -fstack-size-section    Emit section containing metadata on function stack sizes
  -fstack-usage           Emit .su file containing information on function stack sizes
  -fstandalone-debug      Emit full debug info for all types used by the program
  -fstrict-aliasing       Enable optimizations based on strict aliasing rules
  -fstrict-enums          Enable optimizations based on the strict definition of an enum's value range
  -fstrict-flex-arrays=<n>
                          Enable optimizations based on the strict definition of flexible arrays
  -fstrict-float-cast-overflow
                          Assume that overflowing float-to-int casts are undefined (default)
  -fstrict-vtable-pointers
                          Enable optimizations based on the strict rules for overwriting polymorphic C++ objects
  -fswift-async-fp=<option>
                          Control emission of Swift async extended frame info
  -fsycl-add-default-spec-consts-image
                          Generates a copy of every device image that uses a specialization constant and replaces all usages of specialization constant with default values specified by specialization_id. If a device image doesn't use a specialization constant at all then no copy is generated. This option is only useful if used in conjunction with Ahead of Time Compilation (-fsycl-target command line option).
  -fsycl-allow-device-dependencies
                          Allow dependencies between device code images
  -fsycl-dead-args-optimization
                          Enables elimination of DPC++ dead kernel arguments
  -fsycl-decompose-functor
                          Do decompose SYCL functor if possible (experimental, CUDA only)
  -fsycl-default-sub-group-size <value>
                          Set the default sub group size for SYCL kernels
  -fsycl-device-code-split-esimd
                          split ESIMD device code from SYCL into a separate device binary image (default). Has effect only for SPIR-based targets. (experimental)
  -fsycl-device-code-split=<value>
                          Perform SYCL device code split: per_kernel (device code module is created for each SYCL kernel) | per_source (device code module is created for each source (translation unit)) | off (no device code split). | auto (use heuristic to select the best way of splitting device code). Default is 'auto' - use heuristic to distribute device code across modules
  -fsycl-device-code-split
                          Perform SYCL device code split in the 'auto' mode, i.e. use heuristic to distribute device code across modules
  -fsycl-device-lib-jit-link
                          Enables sycl device library jit link (experimental)
  -fsycl-device-lib=<value>
                          Control inclusion of device libraries into device binary linkage. Valid arguments are libc, libm-fp32, libm-fp64, libimf-fp32, libimf-fp64, libimf-bf16, all
  -fsycl-device-obj=<value>
                          Specify format of device code stored in the resulting object. Valid values are: spirv, llvmir (default)
  -fsycl-device-only      Compile SYCL kernels for device
  -fsycl-disable-range-rounding
                          Deprecated: please use -fsycl-range-rounding=disable instead.
  -fsycl-dump-device-code=<value>
                          Dump device code into the user provided directory.
  -fsycl-early-optimizations
                          Enable standard optimization pipeline for SYCL device compiler
  -fsycl-embed-ir         Embed LLVM IR for runtime kernel fusion
  -fsycl-enable-function-pointers
                          Experimental Feature: Enables function pointers and support for virtual functions for DPC++ kernels and device functions.
  -fsycl-esimd-force-stateless-mem
                          Enforce using stateless memory accesses. Convert stateful accesses via SYCL accessors to stateless within ESIMD kernels. Enabled by default.
  -fsycl-exp-range-rounding
                          Use experimental range rounding.
  -fsycl-explicit-simd    Enable SYCL explicit SIMD extension. (deprecated)
  -fsycl-footer-path=<value>
                          Specify the location of the temporary source file with the included integration footer.
  -fsycl-force-inline-kernel-lambda
                          Allow force inline SYCL kernels lambda in entry point
  -fsycl-force-target=<value>
                          Force the usage of the given triple when extracting device code from any given objects on the command line
  -fsycl-fp32-prec-sqrt   SYCL only. Specify that single precision floating-point sqrt is correctly rounded.
  -fsycl-fp64-conv-emu    Enable fp64 partial emulation for kernels with only fp64 conversion operations and no fp64 computation operations (requires Intel GPU backend supporting fp64 partial emulation).
  -fsycl-help=<value>     Emit help information from the related offline compilation tool. Valid values: all, fpga, gen, x86_64.
  -fsycl-help             Emit help information from all of the offline compilation tools
  -fsycl-host-compiler-options=<value>
                          When performing the host compilation with -fsycl-host-compiler specified, use the given options during that compile. Options are expected to be a quoted list of space separated options.
  -fsycl-host-compiler=<value>
                          Specify C++ compiler binary to perform host compilation with during SYCL offload compiles.
  -fsycl-id-queries-fit-in-int
                          Assume that SYCL ID queries fit within MAX_INT.
  -fsycl-instrument-device-code
                          Add Instrumentation and Tracing Technology (ITT) instrumentation intrinsics calls (experimental)
  -fsycl-libspirv-path=<value>
                          Path to libspirv library
  -fsycl-link=<value>     Generate partially linked device and host object to be used at various stages of compilation
  -fsycl-link             Generate partially linked device object to be used with the host link
  -fsycl-max-parallel-link-jobs=<value>
                          Experimental feature: Controls the maximum parallelism of actions performed on SYCL device code post-link, i.e. the generation of SPIR-V device images or AOT compilation of each device image.
  -fsycl-optimize-non-user-code
                          Option used in conjunction with -O0 to optimize SYCL framework utility functions and leave user's kernel code unoptimized. (experimental)
  -fsycl-pstl-offload=<value>
                          Enable offloading of C++ standard parallel algorithms. Valid arguments are gpu and cpu.
  -fsycl-pstl-offload     Enable offloading of C++ standard parallel algorithms.
  -fsycl-range-rounding=<value>
                          Options for range rounding of SYCL range kernels: disable (do not generate range rounded kernels) force (only generate range rounded kernels) on (generate range rounded kernels as well as unrounded kernels). Default is 'on'
  -fsycl-remove-unused-external-funcs
                          Allow removal of unused `SYCL_EXTERNAL` functions (default)
  -fsycl-targets=<value>  Specify comma-separated list of triples that correspond to SYCL offloading targets to be supported. Valid triples include spir64_gen, spir64_x86_64, spir64_fpga and spir64
  -fsycl-unnamed-lambda   Allow unnamed SYCL lambda kernels
  -fsycl-use-bitcode      Use LLVM bitcode instead of SPIR-V in fat objects (deprecated)
  -fsycl                  Enables SYCL kernels compilation for device
  -fsyntax-only           Run the preprocessor, parser and semantic analysis stages
  -fsystem-debug          Emit debug information for declarations in system headers
  -fsystem-module         Build this module as a system module. Only used with -emit-module
  -ftarget-compile-fast   Experimental feature: Reduce target compilation time, with potential runtime performance trade-off.
  -ftarget-export-symbols Expose exported symbols in a generated target library to allow for visibilty to other modules.
  -ftarget-register-alloc-mode=<value>
                          Specify a register allocation mode for specific hardware for use by supported target backends.
  -ftemplate-backtrace-limit=<value>
                          Set the maximum number of entries to print in a template instantiation backtrace (0 = no limit)
  -ftemplate-depth=<value>
                          Set the maximum depth of recursive template instantiation
  -ftest-coverage         Produce gcov notes files (*.gcno)
  -fthin-link-bitcode=<value>
                          Write minimized bitcode to <file> for the ThinLTO thin link only
  -fthinlto-index=<value> Perform ThinLTO importing using provided function summary index
  -ftime-report=<value>   (For new pass manager) 'per-pass': one report for each pass; 'per-pass-run': one report for each pass invocation
  -ftime-trace-granularity=<value>
                          Minimum time granularity (in microseconds) traced by time profiler
  -ftime-trace=<value>    Similar to -ftime-trace. Specify the JSON file or a directory which will contain the JSON file
  -ftime-trace            Turn on time profiler. Generates JSON file based on output filename.
  -ftrap-function=<value> Issue call to specified function rather than a trap instruction
  -ftrapv-handler=<function name>
                          Specify the function to be called on overflow
  -ftrapv                 Trap on integer overflow
  -ftrigraphs             Process trigraph sequences
  -ftrivial-auto-var-init-max-size=<value>
                          Stop initializing trivial automatic stack variables if var size exceeds the specified number of instances (in bytes)
  -ftrivial-auto-var-init-stop-after=<value>
                          Stop initializing trivial automatic stack variables after the specified number of instances
  -ftrivial-auto-var-init=<value>
                          Initialize trivial automatic stack variables. Defaults to 'uninitialized'
  -ftz                    Enable flush denormal results to zero
  -funified-lto           Use the unified LTO pipeline
  -funique-basic-block-section-names
                          Use unique names for basic block sections (ELF Only)
  -funique-internal-linkage-names
                          Uniqueify Internal Linkage Symbol Names by appending the MD5 hash of the module path
  -funroll-loops          Turn on loop unroller
  -funsafe-math-optimizations
                          Allow unsafe floating-point math optimizations which may decrease precision
  -fuse-complex-intrinsics
                          Determines whether to lower _Complex operations to LLVM complex intrinsics
  -fuse-cuid=<value>      Method to generate ID's for compilation units for single source offloading languages CUDA and HIP: 'hash' (ID's generated by hashing file path and command line options) | 'random' (ID's generated as random numbers) | 'none' (disabled). Default is 'hash'. This option will be overridden by option '-cuid=[ID]' if it is specified.
  -fuse-line-directives   Use #line in preprocessed output
  -fvalidate-ast-input-files-content
                          Compute and store the hash of input files used to build an AST. Files with mismatching mtime's are considered valid if both contents is identical
  -fvec-allow-scalar-stores
                          When this option is set, an explicit simd loop (for example, one set with #pragma omp simd) will be vectorized even if it contains a store to a scalar variable that is not marked as private, lastprivate, or reduction.
  -fvec-peel-loops        Enable peel loop vectorization.
  -fvec-remainder-loops   Enable remainder loop vectorization.
  -fvec-with-mask         Enable vectorization for short trip-count loops with masking.
  -fveclib=<value>        Use the given vector functions library
  -fvectorize             Enable the loop vectorization passes
  -fverbose-asm           Generate verbose assembly output
  -fverify-intermediate-code
                          Enable verification of LLVM IR
  -fvirtual-function-elimination
                          Enables dead virtual function elimination optimization. Requires -flto=full
  -fvisibility-dllexport=<value>
                          The visibility for dllexport definitions. If Keep is specified the visibility is not adjusted [-fvisibility-from-dllstorageclass]
  -fvisibility-externs-dllimport=<value>
                          The visibility for dllimport external declarations. If Keep is specified the visibility is not adjusted [-fvisibility-from-dllstorageclass]
  -fvisibility-externs-nodllstorageclass=<value>
                          The visibility for external declarations without an explicit DLL storage class. If Keep is specified the visibility is not adjusted [-fvisibility-from-dllstorageclass]
  -fvisibility-from-dllstorageclass
                          Override the visibility of globals based on their final DLL storage class.
  -fvisibility-global-new-delete-hidden
                          Give global C++ operator new and delete declarations hidden visibility
  -fvisibility-global-new-delete=<value>
                          The visibility for global C++ operator new and delete declarations. If 'source' is specified the visibility is not adjusted
  -fvisibility-inlines-hidden-static-local-var
                          When -fvisibility-inlines-hidden is enabled, static variables in inline C++ member functions will also be given hidden visibility by default
  -fvisibility-inlines-hidden
                          Give inline C++ member functions hidden visibility by default
  -fvisibility-ms-compat  Give global types 'default' visibility and global functions and variables 'hidden' visibility by default
  -fvisibility-nodllstorageclass=<value>
                          The visibility for definitions without an explicit DLL storage class. If Keep is specified the visibility is not adjusted [-fvisibility-from-dllstorageclass]
  -fvisibility=<value>    Set the default symbol visibility for all global definitions
  -fwasm-exceptions       Use WebAssembly style exceptions
  -fwhole-program-vtables Enables whole-program vtable optimization. Requires -flto
  -fwrapv                 Treat signed integer overflow as two's complement
  -fwritable-strings      Store string literals as writable data
  -fxl-pragma-pack        Enable IBM XL #pragma pack handling
  -fxray-always-emit-customevents
                          Always emit __xray_customevent(...) calls even if the containing function is not always instrumented
  -fxray-always-emit-typedevents
                          Always emit __xray_typedevent(...) calls even if the containing function is not always instrumented
  -fxray-always-instrument=<value>
                          DEPRECATED: Filename defining the whitelist for imbuing the 'always instrument' XRay attribute.
  -fxray-attr-list=<value>
                          Filename defining the list of functions/types for imbuing XRay attributes.
  -fxray-function-groups=<value>
                          Only instrument 1 of N groups
  -fxray-ignore-loops     Don't instrument functions with loops unless they also meet the minimum function size
  -fxray-instruction-threshold=<value>
                          Sets the minimum function size to instrument with XRay
  -fxray-instrumentation-bundle=<value>
                          Select which XRay instrumentation points to emit. Options: all, none, function-entry, function-exit, function, custom. Default is 'all'.  'function' includes both 'function-entry' and 'function-exit'.
  -fxray-instrument       Generate XRay instrumentation sleds on function entry and exit
  -fxray-link-deps        Link XRay runtime library when -fxray-instrument is specified (default)
  -fxray-modes=<value>    List of modes to link in by default into XRay instrumented binaries.
  -fxray-never-instrument=<value>
                          DEPRECATED: Filename defining the whitelist for imbuing the 'never instrument' XRay attribute.
  -fxray-selected-function-group=<value>
                          When using -fxray-function-groups, select which group of functions to instrument. Valid range is 0 to fxray-function-groups - 1
  -fzero-call-used-regs=<value>
                          Clear call-used registers upon function return (AArch64/x86 only)
  -fzvector               Enable System z vector language extension
  -F <value>              Add directory to framework include search path
  --gcc-install-dir=<value>
                          Use GCC installation in the specified directory. The directory ends with path components like 'lib{,32,64}/gcc{,-cross}/$triple/$version'. Note: executables (e.g. ld) used by the compiler are not overridden by the selected GCC installation
  --gcc-toolchain=<value> Specify a directory where Clang can find 'include' and 'lib{,32,64}/gcc{,-cross}/$triple/$version'. Clang will use the GCC installation with the largest version
  --gcc-triple=<value>    Search for the GCC installation with the specified triple.
  -gcodeview-command-line Emit compiler path and command line into CodeView debug information
  -gcodeview-ghash        Emit type record hashes in a .debug$H section
  -gcodeview              Generate CodeView debug information
  -gdwarf-2               Generate source-level debug information with dwarf version 2
  -gdwarf-3               Generate source-level debug information with dwarf version 3
  -gdwarf-4               Generate source-level debug information with dwarf version 4
  -gdwarf-5               Generate source-level debug information with dwarf version 5
  -gdwarf32               Enables DWARF32 format for ELF binaries, if debug information emission is enabled.
  -gdwarf64               Enables DWARF64 format for ELF binaries, if debug information emission is enabled.
  -gdwarf                 Generate source-level debug information with the default dwarf version
  -gembed-source          Embed source text in DWARF debug sections
  -gen-reproducer=<value> Emit reproducer on (option: off, crash (default), error, always)
  -gintel-sti             Generate Intel STI debug information
  -gline-directives-only  Emit debug line info directives only
  -gline-tables-only      Emit debug line number tables only
  -global-hoist           Enable external globals are load safe (default)
  -gmodules               Generate debug info with external references to clang modules or precompiled headers
  -gno-codeview-command-line
                          Don't emit compiler path and command line into CodeView debug information
  -gno-embed-source       Restore the default behavior of not embedding source text in DWARF debug sections
  -gno-inline-line-tables Don't emit inline line tables.
  --gpu-bundle-output     Bundle output files of HIP device compilation
  --gpu-instrument-lib=<value>
                          Instrument device library for HIP, which is a LLVM bitcode containing __cyg_profile_func_enter and __cyg_profile_func_exit
  --gpu-max-threads-per-block=<value>
                          Default max threads per block for kernel launch bounds for HIP
  -gpulibc                Link the LLVM C Library for GPUs
  -gsplit-dwarf=<value>   Set DWARF fission mode
  -gstrict-dwarf          Restrict DWARF features to those defined in the specified version, avoiding features from later versions.
  -gz=<value>             DWARF debug sections compression type
  -G <size>               Put objects of at most <size> bytes into small data section (MIPS / Hexagon)
  -g                      Generate source-level debug information
  --help-hidden           Display help for hidden options
  -help                   Display available options
  --hip-device-lib=<value>
                          HIP device library
  --hip-link              Link clang-offload-bundler bundles for HIP
  --hip-path=<value>      HIP runtime installation path, used for finding HIP version and adding HIP include path.
  --hip-version=<value>   HIP version in the format of major.minor.patch
  --hipspv-pass-plugin=<dsopath>
                          path to a pass plugin for HIP to SPIR-V passes.
  --hipstdpar-interpose-alloc
                          Replace all memory allocation / deallocation calls with hipManagedMalloc / hipFree equivalents
  --hipstdpar-path=<value>
                          HIP Standard Parallel Algorithm Acceleration library path, used for finding and implicitly including the library header
  --hipstdpar-prim-path=<value>
                          rocPrim path, required by the HIP Standard Parallel Algorithm Acceleration library, used to implicitly include the rocPrim library
  --hipstdpar-thrust-path=<value>
                          rocThrust path, required by the HIP Standard Parallel Algorithm Acceleration library, used to implicitly include the rocThrust library
  --hipstdpar             Enable HIP acceleration for standard parallel algorithms
  -H                      Show header includes and nesting depth
  -I-                     Restrict all prior -I flags to double-quoted inclusion and remove current directory from include path
  -iapinotes-modules <directory>
                          Add directory to the API notes search path referenced by module name
  -ibuiltininc            Enable builtin #include directories even when -nostdinc is used before or after -ibuiltininc. Using -nobuiltininc after the option disables it
  -idirafter <value>      Add directory to AFTER include search path
  -iframeworkwithsysroot <directory>
                          Add directory to SYSTEM framework search path, absolute paths are relative to -isysroot
  -iframework <value>     Add directory to SYSTEM framework search path
  -imacros <file>         Include macros from file before parsing
  -include-pch <file>     Include precompiled header file
  -include <file>         Include file before parsing
  -index-header-map       Make the next included directory (-I or -F) an indexer header map
  -inline-forceinline     Treat inline routines as forceinline
  -inline-level=<value>   Set function inlining level where: 0 is disable, 1 is inline marked functions and 2 is inline at compilers discretion
  --intel                 Run in Intel Compiler mode
  -ipo                    Enable LTO in 'full' mode
  -ipp-link=<value>       Link Intel(R) IPP libraries in requested manner (static,dynamic,shared)
  -ipp=<value>            Link commonly used Intel(R) Integrated Performace Primitives (Intel(R) IPP) libraries and bring in the associated headers (common,crypto,nonpic,nonpic_crypto)
  -iprefix <dir>          Set the -iwithprefix/-iwithprefixbefore prefix
  -iquote <directory>     Add directory to QUOTE include search path
  -isysroot <dir>         Set the system root directory (usually /)
  -isystem-after <directory>
                          Add directory to end of the SYSTEM include search path
  -isystem <directory>    Add directory to SYSTEM include search path
  -ivfsoverlay-lib <value>
                          Load the virtual filesystem from shared library
  -ivfsoverlay <value>    Overlay the virtual filesystem described by file over the real file system
  -iwithprefixbefore <dir>
                          Set directory to include search path with prefix
  -iwithprefix <dir>      Set directory to SYSTEM include search path with prefix
  -iwithsysroot <directory>
                          Add directory to SYSTEM include search path, absolute paths are relative to -isysroot
  -I <dir>                Add directory to the end of the list of include search paths
  --libomptarget-amdgcn-bc-path=<value>
                          Path to libomptarget-amdgcn bitcode library
  --libomptarget-amdgpu-bc-path=<value>
                          Path to libomptarget-amdgcn bitcode library
  --libomptarget-nvptx-bc-path=<value>
                          Path to libomptarget-nvptx bitcode library
  -L <dir>                Add directory to library search path
  -mabi=quadword-atomics  Enable quadword atomics ABI on AIX (AIX PPC64 only). Uses lqarx/stqcx. instructions.
  -mabicalls              Enable SVR4-style position-independent code (Mips only)
  -maix-shared-lib-tls-model-opt
                          For shared library loaded with the main program, change local-dynamic access(es) to initial-exec access(es) at the function level (AIX 64-bit only).
  -maix-small-local-dynamic-tls
                          Produce a faster access sequence for local-dynamic TLS variables where the offset from the TLS base is encoded as an immediate operand (AIX 64-bit only). This access sequence is not used for variables larger than 32KB.
  -maix-small-local-exec-tls
                          Produce a faster access sequence for local-exec TLS variables where the offset from the TLS base is encoded as an immediate operand (AIX 64-bit only). This access sequence is not used for variables larger than 32KB.
  -maix-struct-return     Return all structs in memory (PPC32 only)
  -malign-branch-boundary=<value>
                          Specify the boundary's size to align branches
  -malign-branch=<value>  Specify types of branches to align
  -malign-double          Align doubles to two words in structs (x86 only)
  -maltivec               Enable AltiVec vector initializer syntax
  -mamdgpu-ieee           Sets the IEEE bit in the expected default floating point  mode register. Floating point opcodes that support exception flag gathering quiet and propagate signaling NaN inputs per IEEE 754-2008. This option changes the ABI. (AMDGPU only)
  -mamdgpu-precise-memory-op
                          Enable precise memory mode (AMDGPU only)
  -mapx-features=<value>  Enable features of APX
  -mapx-inline-asm-use-gpr32
                          Enable use of GPR32 in inline assembly for APX
  -march=<value>          For a list of available architectures for the target use '-mcpu=help'
  -marm64x<value>         Link as a hybrid ARM64X image
  -mauto-arch=<codes>     generate multiple, processor-specific, auto-dispatched code paths for X86 processors, specified by <codes>, if there is a performance benefit
  -mbackchain             Link stack frames through backchain on System Z
  -mbranch-protection=<value>
                          Enforce targets of indirect branches and function returns
  -mbranches-within-32B-boundaries
                          Align selected branches (fused, jcc, jmp) within 32-byte boundary
  -mcabac                 Enable CABAC instructions
  -mcmse                  Allow use of CMSE (Armv8-M Security Extensions)
  -mcode-object-version=<value>
                          Specify code object ABI version. Defaults to 5. (AMDGPU only)
  -mconstructor-aliases   Enable emitting complete constructors and destructors as aliases when possible
  -mcpu=<value>           For a list of available CPUs for the target use '-mcpu=help'
  -mcrbits                Control the CR-bit tracking feature on PowerPC. ``-mcrbits`` (the enablement of CR-bit tracking support) is the default for POWER8 and above, as well as for all other CPUs when optimization is applied (-O2 and above).
  -mcrc                   Allow use of CRC instructions (ARM/Mips only)
  -mcumode                Specify CU wavefront execution mode (AMDGPU only)
  -mdaz-ftz               Globally set the denormals-are-zero (DAZ) and flush-to-zero (FTZ) bits in the floating-point control register on program startup
  -mdebug-line-version=<value>
                          Set debug line version used when generating debug information
  -mdefault-visibility-export-mapping=<value>
                          Mapping between default visibility and export
  -mdouble=<n             Force double to be <n> bits
  -MD                     Write a depfile containing user and system headers
  -meabi <value>          Set EABI type. Default depends on triple)
  -membedded-data         Place constants in the .rodata section instead of the .sdata section even if they meet the -G <size> threshold (MIPS)
  -menable-experimental-extensions
                          Enable use of experimental RISC-V extensions.
  -mexec-model=<value>    Execution model (WebAssembly only)
  -mexecute-only          Disallow generation of data access to code sections (ARM only)
  -mextern-sdata          Assume that externally defined data is in the small data if it meets the -G <size> threshold (MIPS)
  -mfentry                Insert calls to fentry at function entry (x86/SystemZ only)
  -mfix-cmse-cve-2021-35465
                          Work around VLLDM erratum CVE-2021-35465 (ARM only)
  -mfix-cortex-a53-835769 Workaround Cortex-A53 erratum 835769 (AArch64 only)
  -mfix-cortex-a57-aes-1742098
                          Work around Cortex-A57 Erratum 1742098 (ARM only)
  -mfix-cortex-a72-aes-1655431
                          Work around Cortex-A72 Erratum 1655431 (ARM only)
  -mforced-sw-shadow-stack
                          Force using software shadow stack when shadow-stack enabled
  -mfp32                  Use 32-bit floating point registers (MIPS only)
  -mfp64                  Use 64-bit floating point registers (MIPS only)
  -mframe-chain=<value>   Select the frame chain model used to emit frame records (Arm only).
  -mfunction-return=<value>
                          Replace returns with jumps to ``__x86_return_thunk`` (x86 only, error otherwise)
  -MF <file>              Write depfile output from -MMD, -MD, -MM, or -M to <file>
  -mgeneral-regs-only     Generate code which only uses the general purpose registers (AArch64/x86 only)
  -mglobal-merge          Enable merging of globals
  -mgpopt                 Use GP relative accesses for symbols known to be in a small data section (MIPS)
  -mguard=<value>         Enable or disable Control Flow Guard checks and guard tables emission
  -MG                     Add missing headers to depfile
  -mharden-sls=<value>    Select straight-line speculation hardening scope (ARM/AArch64/X86 only). <arg> must be: all, none, retbr(ARM/AArch64), blr(ARM/AArch64), comdat(ARM/AArch64), nocomdat(ARM/AArch64), return(X86), indirect-jmp(X86)
  -mhvx-ieee-fp           Enable Hexagon HVX IEEE floating-point
  -mhvx-length=<value>    Set Hexagon Vector Length
  -mhvx-qfloat            Enable Hexagon HVX QFloat instructions
  -mhvx=<value>           Enable Hexagon Vector eXtensions
  -mhvx                   Enable Hexagon Vector eXtensions
  -miamcu                 Use Intel MCU ABI
  -mignore-xcoff-visibility
                          Not emit the visibility attribute for asm in AIX OS or give all symbols 'unspecified' visibility in XCOFF object file
  --migrate               Run the migrator
  -mincremental-linker-compatible
                          (integrated-as) Emit an object file which can be used with an incremental linker
  -mindirect-branch-cs-prefix
                          Add cs prefix to call and jmp to indirect thunk
  -mindirect-jump=<value> Change indirect jump instructions to inhibit speculation
  -mintrinsic-promote     Force certain functions using intrinsics to promote their architectures and make the intrinsic headers included by default
  -mios-version-min=<value>
                          Set iOS deployment target
  -MJ <value>             Write a compilation database entry per input
  -mlasx                  Enable Loongson Advanced SIMD Extension (LASX).
  -mlink-builtin-bitcode-postopt
                          Link builtin bitcodes after the optimization pipeline
  -mllvm-lto <value>      Additional arguments to forward to LLVM's option processing. Similar to -mllvm, but will also pass the given argument to the LTO step when appropriate.
  -mllvm=<arg>            Alias for -mllvm
  -mllvm <value>          Additional arguments to forward to LLVM's option processing
  -mlocal-sdata           Extend the -G behaviour to object local data (MIPS)
  -mlong-calls            Generate branches with extended addressability, usually via indirect jumps.
  -mlong-double-128       Force long double to be 128 bits
  -mlong-double-64        Force long double to be 64 bits
  -mlong-double-80        Force long double to be 80 bits, padded to 128 bits for storage
  -mlr-for-calls-only     Do not allocate the LR register for general purpose usage, only for calls. (AArch64 only)
  -mlsx                   Enable Loongson SIMD Extension (LSX).
  -mlvi-cfi               Enable only control-flow mitigations for Load Value Injection (LVI)
  -mlvi-hardening         Enable all mitigations for Load Value Injection (LVI)
  -mmacos-version-min=<value>
                          Set macOS deployment target
  -mmadd4                 Enable the generation of 4-operand madd.s, madd.d and related instructions.
  -mmark-bti-property     Add .note.gnu.property with BTI to assembly files (AArch64 only)
  -MMD                    Write a depfile containing user headers
  -mmemops                Enable generation of memop instructions
  -mmlir <value>          Additional arguments to forward to MLIR's option processing
  -mms-bitfields          Set the default structure layout to be compatible with the Microsoft compiler standard
  -mmsa                   Enable MSA ASE (MIPS only)
  -mmt                    Enable MT ASE (MIPS only)
  -MM                     Like -MMD, but also implies -E and writes to stdout by default
  -mno-abicalls           Disable SVR4-style position-independent code (Mips only)
  -mno-amdgpu-precise-memory-op
                          Disable precise memory mode (AMDGPU only)
  -mno-apx-features=<value>
                          Disable features of APX
  -mno-bti-at-return-twice
                          Do not add a BTI instruction after a setjmp or other return-twice construct (Arm/AArch64 only)
  -mno-constructor-aliases
                          Disable emitting complete constructors and destructors as aliases when possible
  -mno-crc                Disallow use of CRC instructions (Mips only)
  -mno-cumode             Specify WGP wavefront execution mode (AMDGPU only)
  -mno-daz-ftz            Do not globally set the denormals-are-zero (DAZ) and flush-to-zero (FTZ) bits in the floating-point control register on program startup
  -mno-embedded-data      Do not place constants in the .rodata section instead of the .sdata if they meet the -G <size> threshold (MIPS)
  -mno-execute-only       Allow generation of data access to code sections (ARM only)
  -mno-extern-sdata       Do not assume that externally defined data is in the small data if it meets the -G <size> threshold (MIPS)
  -mno-fix-cmse-cve-2021-35465
                          Don't work around VLLDM erratum CVE-2021-35465 (ARM only)
  -mno-fix-cortex-a53-835769
                          Don't workaround Cortex-A53 erratum 835769 (AArch64 only)
  -mno-fix-cortex-a57-aes-1742098
                          Don't work around Cortex-A57 Erratum 1742098 (ARM only)
  -mno-fix-cortex-a72-aes-1655431
                          Don't work around Cortex-A72 Erratum 1655431 (ARM only)
  -mno-fmv                Disable function multiversioning
  -mno-forced-sw-shadow-stack
                          Not force using software shadow stack when shadow-stack enabled
  -mno-gather             Disable generation of gather instructions in auto-vectorization(x86 only)
  -mno-global-merge       Disable merging of globals
  -mno-gpopt              Do not use GP relative accesses for symbols known to be in a small data section (MIPS)
  -mno-hvx-ieee-fp        Disable Hexagon HVX IEEE floating-point
  -mno-hvx-qfloat         Disable Hexagon HVX QFloat instructions
  -mno-hvx                Disable Hexagon Vector eXtensions
  -mno-implicit-float     Don't generate implicit floating point or vector instructions
  -mno-incremental-linker-compatible
                          (integrated-as) Emit an object file which cannot be used with an incremental linker
  -mno-lasx               Disable Loongson Advanced SIMD Extension (LASX).
  -mno-local-sdata        Do not extend the -G behaviour to object local data (MIPS)
  -mno-long-calls         Restore the default behaviour of not generating long calls
  -mno-lsx                Disable Loongson SIMD Extension (LSX).
  -mno-lvi-cfi            Disable control-flow mitigations for Load Value Injection (LVI)
  -mno-lvi-hardening      Disable mitigations for Load Value Injection (LVI)
  -mno-madd4              Disable the generation of 4-operand madd.s, madd.d and related instructions.
  -mno-memops             Disable generation of memop instructions
  -mno-movt               Disallow use of movt/movw pairs (ARM only)
  -mno-ms-bitfields       Do not set the default structure layout to be compatible with the Microsoft compiler standard
  -mno-msa                Disable MSA ASE (MIPS only)
  -mno-mt                 Disable MT ASE (MIPS only)
  -mno-neg-immediates     Disallow converting instructions with negative immediates to their negation or inversion.
  -mno-nvj                Disable generation of new-value jumps
  -mno-nvs                Disable generation of new-value stores
  -mno-outline-atomics    Don't generate local calls to out-of-line atomic operations
  -mno-outline            Disable function outlining (AArch64 only)
  -mno-packets            Disable generation of instruction packets
  -mno-pic-data-is-text-relative
                          Don't assume data segments are relative to text segment
  -mno-regnames           Use only register numbers when writing assembly output
  -mno-relax              Disable linker relaxation
  -mno-restrict-it        Allow generation of complex IT blocks.
  -mno-save-restore       Disable using library calls for save and restore
  -mno-scalar-strict-align
                          Allow scalar memory accesses to be unaligned (RISC-V only)
  -mno-scatter            Disable generation of scatter instructions in auto-vectorization(x86 only)
  -mno-seses              Disable speculative execution side effect suppression (SESES)
  -mno-stack-arg-probe    Disable stack probes which are enabled by default
  -mno-strict-align       Allow memory accesses to be unaligned (AArch64/LoongArch/RISC-V only)
  -mno-tgsplit            Disable threadgroup split execution mode (AMDGPU only)
  -mno-tls-direct-seg-refs
                          Disable direct TLS access through segment registers
  -mno-tocdata=<value>    Specifies a list of variables to be exempt from the TOC datatransformation.
  -mno-tocdata            This is the default. TOC data transformation is not applied to anyvariables. Only variables specified explicitly in -mtocdata= willhave the TOC data transformation.
  -mno-unaligned-access   Force all memory accesses to be aligned (AArch32/MIPSr6 only)
  -mno-unaligned-symbols  Expect external char-aligned symbols to be without ABI alignment (SystemZ only)
  -mno-vector-strict-align
                          Allow vector memory accesses to be unaligned (RISC-V only)
  -mno-wavefrontsize64    Specify wavefront size 32 mode (AMDGPU only)
  -mnocrc                 Disallow use of CRC instructions (ARM only)
  -mnop-mcount            Generate mcount/__fentry__ calls as nops. To activate they need to be patched in.
  -mnvj                   Enable generation of new-value jumps
  -mnvs                   Enable generation of new-value stores
  -module-dependency-dir <value>
                          Directory to dump module dependencies to
  -module-file-info       Provide information about a particular module file
  -momit-leaf-frame-pointer
                          Omit frame pointer setup for leaf functions
  -moutline-atomics       Generate local calls to out-of-line atomic operations
  -moutline               Enable function outlining (AArch64 only)
  -mpacked-stack          Use packed stack layout (SystemZ only).
  -mpackets               Enable generation of instruction packets
  -mpad-max-prefix-size=<value>
                          Specify maximum number of prefixes to use for padding
  -mpic-data-is-text-relative
                          Assume data segments are relative to text segment
  -mprefer-vector-width=<value>
                          Specifies preferred vector width for auto-vectorization. Defaults to 'none' which allows target specific decisions.
  -mprintf-kind=<value>   Specify the printf lowering scheme (AMDGPU only), allowed values are "hostcall"(printing happens during kernel execution, this scheme relies on hostcalls which require system to support pcie atomics) and "buffered"(printing happens after all kernel threads exit, this uses a printf buffer and does not rely on pcie atomic support)
  -MP                     Create phony target for each dependency (other than main file)
  -mqdsp6-compat          Enable hexagon-qdsp6 backward compatibility
  -MQ <value>             Specify name of main file output to quote in depfile
  -mrecip=<value>         Control use of approximate reciprocal and reciprocal square root instructions followed by <n> iterations of Newton-Raphson refinement. <value> = ( ['!'] ['vec-'] ('rcp'|'sqrt') [('h'|'s'|'d')] [':'<n>] ) | 'all' | 'default' | 'none'
  -mrecip                 Equivalent to '-mrecip=all'
  -mrecord-mcount         Generate a __mcount_loc section entry for each __fentry__ call.
  -mregnames              Use full register names when writing assembly output
  -mrelax-all             (integrated-as) Relax all machine instructions
  -mrelax                 Enable linker relaxation
  -mrestrict-it           Disallow generation of complex IT blocks. It is off by default.
  -mrtd                   Make StdCall calling convention the default
  -mrvv-vector-bits=<value>
                          Specify the size in bits of an RVV vector register
  -msave-restore          Enable using library calls for save and restore
  -mscalar-strict-align   Force all scalar memory accesses to be aligned (RISC-V only)
  -mseses                 Enable speculative execution side effect suppression (SESES). Includes LVI control flow integrity mitigations
  -msign-return-address=<value>
                          Select return address signing scope
  -msimd=<value>          Select the SIMD extension(s) to be enabled in LoongArch either 'none', 'lsx', 'lasx'.
  -mskip-rax-setup        Skip setting up RAX register when passing variable arguments (x86 only)
  -msmall-data-limit=<value>
                          Put global and static data smaller than the limit into a special section
  -msoft-float            Use software floating point
  -msse2avx               Specify that the assembler should encode SSE instructions with VEX prefix
  -mstack-alignment=<value>
                          Set the stack alignment
  -mstack-arg-probe       Enable stack probes
  -mstack-probe-size=<value>
                          Set the stack probe size
  -mstack-protector-guard-offset=<value>
                          Use the given offset for addressing the stack-protector guard
  -mstack-protector-guard-reg=<value>
                          Use the given reg for addressing the stack-protector guard
  -mstack-protector-guard-symbol=<value>
                          Use the given symbol for addressing the stack-protector guard
  -mstack-protector-guard=<value>
                          Use the given guard (global, tls) for addressing the stack-protector guard
  -mstackrealignext       Force realign the stack at entry to every external function
  -mstackrealign          Force realign the stack at entry to every function
  -mstrict-align          Force all memory accesses to be aligned (AArch64/LoongArch/RISC-V only)
  -msve-vector-bits=<value>
                          Specify the size in bits of an SVE vector register. Defaults to the vector length agnostic value of "scalable". (AArch64 only)
  -msvr4-struct-return    Return small structs in registers (PPC32 only)
  -mtargetos=<value>      Set the deployment target to be the specified OS and OS version
  -mtgsplit               Enable threadgroup split execution mode (AMDGPU only)
  -mthread-model <value>  The thread model to use. Defaults to 'posix')
  -mtls-dialect=<value>   Which thread-local storage dialect to use for dynamic accesses of TLS variables
  -mtls-direct-seg-refs   Enable direct TLS access through segment registers (default)
  -mtls-size=<value>      Specify bit size of immediate TLS offsets (AArch64 ELF only): 12 (for 4KB) | 24 (for 16MB, default) | 32 (for 4GB) | 48 (for 256TB, needs -mcmodel=large)
  -mtocdata=<value>       Specifies a list of variables to which the TOC data transformationwill be applied.
  -mtocdata               All suitable variables will have the TOC data transformation applied
  -mtp=<value>            Thread pointer access method. For AArch32: 'soft' uses a function call, or 'tpidrurw', 'tpidruro' or 'tpidrprw' use the three CP15 registers. 'cp15' is an alias for 'tpidruro'. For AArch64: 'tpidr_el0', 'tpidr_el1', 'tpidr_el2', 'tpidr_el3' or 'tpidrro_el0' use the five system registers. 'elN' is an alias for 'tpidr_elN'.
  -mtune=<value>          Only supported on AArch64, PowerPC, RISC-V, SPARC, SystemZ, and X86
  -MT <value>             Specify name of main file output in depfile
  -munaligned-access      Allow memory accesses to be unaligned (AArch32/MIPSr6 only)
  -munaligned-symbols     Expect external char-aligned symbols to be without ABI alignment (SystemZ only)
  -munsafe-fp-atomics     Enable generation of unsafe floating point atomic instructions. May generate more efficient code, but may not respect rounding and denormal modes, and may give incorrect results for certain memory destinations. (AMDGPU only)
  -mvector-strict-align   Force all vector memory accesses to be aligned (RISC-V only)
  -mvevpu                 Emit VPU instructions for VE
  -MV                     Use NMake/Jom format for the depfile
  -mwavefrontsize64       Specify wavefront size 64 mode (AMDGPU only)
  -mxcoff-build-id=<0xHEXSTRING>
                          On AIX, request creation of a build-id string, "0xHEXSTRING", in the string table of the loader section inside the linked binary
  -mxcoff-roptr           Place constant objects with relocatable address values in the RO data section and add -bforceimprw to the linker flags (AIX only)
  -mzos-hlq-clang=<ClangHLQ>
                          High level qualifier for z/OS C++RT side deck datasets
  -mzos-hlq-csslib=<CsslibHLQ>
                          High level qualifier for z/OS CSSLIB dataset
  -mzos-hlq-le=<LeHLQ>    High level qualifier for z/OS Language Environment datasets
  -mzos-sys-include=<SysInclude>
                          Path to system headers on z/OS
  -M                      Like -MD, but also implies -E and writes to stdout by default
  -no-ansi-alias          disable use of ANSI aliasing rules optimizations
  --no-cuda-include-ptx=<value>
                          Do not include PTX for the following GPU architecture (e.g. sm_35) or 'all'. May be specified more than once.
  --no-cuda-version-check Don't error out if the detected version of the CUDA install is too low for the requested CUDA gpu architecture.
  --no-default-config     Disable loading default configuration files
  -no-fma                 Disable the combining of floating point multiples and add/subtract operations.
  -no-ftz                 Disable flush denormal results to zero
  -no-global-hoist        Disable external globals are load safe
  --no-gpu-bundle-output  Do not bundle output files of HIP device compilation
  -no-hip-rt              Do not link against HIP runtime libraries
  -no-intel-lib=<value>   Restrict linking of Intel specific libraries. Valid arguments are libirc, libimf, libirng, libsvml
  -no-intel-lib           Restrict linking of all Intel specific libraries.
  -no-ipo                 Disable LTO mode (default)
  --no-offload-arch=<value>
                          Remove CUDA/HIP offloading device architecture (e.g. sm_35, gfx906) from the list of devices to compile for. 'all' resets the list to its default value.
  --no-offload-new-driver Don't Use the new driver for offloading compilation.
  -no-parallel-source-info
                          Disable emission of source location information for parallel code generation.
  -no-sox                 Disable saving of compiler options in the executable
  --no-system-header-prefix=<prefix>
                          Treat all #include paths starting with <prefix> as not including a system header.
  -no-vec                 Disable the loop vectorization passes
  --no-wasm-opt           Disable the wasm-opt optimizer
  -nobuiltininc           Disable builtin #include directories
  -nogpuinc               Do not add include paths for CUDA/HIP and do not include the default CUDA/HIP wrapper headers
  -nogpulib               Do not link device library for CUDA/HIP device compilation
  -nohipwrapperinc        Do not include the default HIP wrapper headers and include paths
  -nolib-inline           disable inline expansion of intrinsic functions
  -nolibsycl              Do not link SYCL runtime library
  -nostdinc++             Disable standard #include directories for the C++ standard library
  --nvptx-arch-tool=<value>
                          Tool used for detecting NVIDIA GPU arch in the system.
  -ObjC++                 Treat source input files as Objective-C++ inputs
  -objcmt-allowlist-dir-path=<value>
                          Only modify files with a filename contained in the provided directory path
  -objcmt-atomic-property Make migration to 'atomic' properties
  -objcmt-migrate-all     Enable migration to modern ObjC
  -objcmt-migrate-annotation
                          Enable migration to property and method annotations
  -objcmt-migrate-designated-init
                          Enable migration to infer NS_DESIGNATED_INITIALIZER for initializer methods
  -objcmt-migrate-instancetype
                          Enable migration to infer instancetype for method result type
  -objcmt-migrate-literals
                          Enable migration to modern ObjC literals
  -objcmt-migrate-ns-macros
                          Enable migration to NS_ENUM/NS_OPTIONS macros
  -objcmt-migrate-property-dot-syntax
                          Enable migration of setter/getter messages to property-dot syntax
  -objcmt-migrate-property
                          Enable migration to modern ObjC property
  -objcmt-migrate-protocol-conformance
                          Enable migration to add protocol conformance on classes
  -objcmt-migrate-readonly-property
                          Enable migration to modern ObjC readonly property
  -objcmt-migrate-readwrite-property
                          Enable migration to modern ObjC readwrite property
  -objcmt-migrate-subscripting
                          Enable migration to modern ObjC subscripting
  -objcmt-ns-nonatomic-iosonly
                          Enable migration to use NS_NONATOMIC_IOSONLY macro for setting property's 'atomic' attribute
  -objcmt-returns-innerpointer-property
                          Enable migration to annotate property with NS_RETURNS_INNER_POINTER
  -objcmt-whitelist-dir-path=<value>
                          Alias for -objcmt-allowlist-dir-path
  -ObjC                   Treat source input files as Objective-C inputs
  -object-file-name=<file>
                          Set the output <file> for debug infos
  --offload-arch=<value>  Specify an offloading device architecture for CUDA, HIP, or OpenMP. (e.g. sm_35). If 'native' is used the compiler will detect locally installed architectures. For HIP offloading, the device architecture can be followed by target ID features delimited by a colon (e.g. gfx908:xnack+:sramecc-). May be specified more than once.
  --offload-compress      Compress offload device binaries (HIP only)
  --offload-device-only   Only compile for the offloading device.
  --offload-host-device   Compile for both the offloading host and device (default).
  --offload-host-only     Only compile for the offloading host.
  --offload-link          Use the new offloading linker to perform the link job.
  --offload-new-driver    Use the new driver for offloading compilation.
  --offload=<value>       Specify comma-separated list of offloading target triples (CUDA and HIP only)
  -o <file>               Write output to <file>
  -parallel-source-info=<value>
                          Emit source location information for parallel code generation with OpenMP and auto-parallelization.
  -pch-use <file>         Include precompiled header file
  -pc <value>             Initialize X87 floating point precision to single, double or double extended. Valid values of 32, 64 and 80
  -pedantic               Warn on language extensions
  -pg                     Enable mcount instrumentation
  -pipe                   Use pipes between commands, when possible
  --precompile            Only precompile the input
  --pretty-sgf            Emit pretty printed symbol graphs
  -print-diagnostic-options
                          Print all of Clang's warning options
  -print-effective-triple Print the effective target triple
  -print-enabled-extensions
                          Print the extensions enabled by the given target and -march/-mcpu options. (AArch64 and RISC-V only)
  -print-file-name=<file> Print the full library path of <file>
  -print-ivar-layout      Enable Objective-C Ivar layout bitmap print trace
  -print-libgcc-file-name Print the library path for the currently used compiler runtime library ("libgcc.a" or "libclang_rt.builtins.*.a")
  -print-library-module-manifest-path
                          Print the path for the C++ Standard library module manifest
  -print-multi-flags-experimental
                          Print the flags used for selecting multilibs (experimental)
  -print-prog-name=<name> Print the full program path of <name>
  -print-resource-dir     Print the resource directory pathname
  -print-rocm-search-dirs Print the paths used for finding ROCm installation
  -print-runtime-dir      Print the directory pathname containing Clang's runtime libraries
  -print-search-dirs      Print the paths used for finding libraries and programs
  -print-supported-cpus   Print supported cpu models for the given target (if target is not specified, it will print the supported cpus for the default target)
  -print-supported-extensions
                          Print supported -march extensions (RISC-V, AArch64 and ARM only)
  -print-target-triple    Print the normalized target triple
  -print-targets          Print the registered targets
  -pthread                Support POSIX threads in generated code
  --ptxas-path=<value>    Path to ptxas (used for compiling CUDA code)
  -P                      Disable linemarker output in -E mode
  -p                      Enable mcount instrumentation with prof
  -qactypes               Enable compile and link support for the Algorithmic C Data-types (AC types)
  -qdaal=<value>          Link Intel(R) Data Analytics Acceleration Library (Intel(R) DAAL) libraries and bring in the associated headers (parallel)
  -qipp-link=<value>      Link Intel(R) IPP libraries in requested manner (static,dynamic,shared)
  -qipp=<value>           Link commonly used Intel(R) Integrated Performace Primitives (Intel(R) IPP) libraries and bring in the associated headers (common,crypto,nonpic,nonpic_crypto)
  -qmkl-ilp64=<value>     Link commonly used Intel(R) Math Kernel ILP64 Variant Library (Intel(R) MKL) and bring in the associated headers (parallel,sequential,cluster)("cluster" is not supported in DPC++)
  -qmkl-sycl-impl=<value> Limit linking of SYCL-specific implementations of the Intel(R) Math Kernel Library to specified in argument. Valid arguments: blas, lapack, dft, sparse, rng, stats, vm.
  -qmkl=<value>           Link commonly used Intel(R) Math Kernel Library (Intel(R) MKL) and bring in the associated headers (parallel,sequential,cluster)("cluster" is not supported in DPC++)
  -qno-actypes            Disable the compile and link support for the Algorithmic C Data-types (AC types)
  -qno-openmp             Disable OpenMP support
  -qno-opt-dynamic-align  Disable peeling to optimize alignment for vectorization.
  -qno-opt-jump-tables    Do not use jump tables for lowering switches
  -qno-opt-matmul         Disables compiler-generated Matrix Multiply (matmul) library call
  -qno-opt-mem-layout-trans
                          Disable memory layout transformations
  -qno-opt-multiple-gather-scatter-by-shuffles
                          Disables the optimization for multiple adjacent gather/scatter type vector memory references
  -qno-opt-prefetch       Disable prefetching.
  -Qn                     Do not emit metadata containing compiler name and version
  -qopenmp-link=<value>   Choose whether to link with the static or dynamic OpenMP libraries. Default is dynamic.
  -qopenmp-simd           Emit OpenMP code only for SIMD-based constructs.
  -qopenmp-stubs          enables the user to compile OpenMP programs in sequential mode. The OpenMP directives are ignored and a stub OpenMP library is linked.
  -qopenmp-threadprivate=<value>
                          Choose which threadprivate implementation to use: compat or legacy.
  -qopenmp                Parse OpenMP pragmas and generate parallel code.
  -qopt-assume-no-loop-carried-dep=<value>
                          Set a level of performance tuning for loops.  0 - The compiler does not assume there is loop-carried dependencies (default).  1 - Assume there are no loop-carried dependencies for innermost loops.  2 - Assume there are no loop-carried dependencies for all loop levels.
  -qopt-dword-index-for-array-of-structs=<value>
                          When specified allows the compiler to use dword indexes to access elements of arrays of structs which in size do not exceed val bytes. The arrays in question should contain no more than INT_MAX / sizeof(element) elements. Allowed values for val are: 16, 32, default is 16.
  -qopt-dynamic-align     Enable peeling to optimize alignment for vectorization.
  -qopt-for-throughput=<value>
                          Optimize for throughput performance, assuming multiple jobs are running.  The memory optimizations for single job versus multiple jobs can be tuned in different ways by the compiler. Valid arguments: multi-job, single-job
  -qopt-jump-tables       Control the generation of jump tables
  -qopt-matmul            Enables compiler-generated Matrix Multiply (matmul) library call
  -qopt-mem-layout-trans=<value>
                          Control the level of memory layout transformations performed by the compiler
  -qopt-multiple-gather-scatter-by-shuffles
                          Enables the optimization for multiple adjacent gather/scatter type vector memory references
  -qopt-prefetch-distance=<value>
                          Specify the prefetch distance to be used for compiler generated prefetches inside loops. Value indicates distance from memory to L2 cache.
  -qopt-prefetch-loads-only
                          Only insert prefetches based on the loads inside the loop. Stores are ignored.
  -qopt-prefetch=<value>  Enable levels of prefetch insertion, where 0 disables.  Values of 1 - 5 are available.  Default is 2.
  -qopt-prefetch          Enable prefetch insertion.  Same as -qopt-prefetch=2.
  -qopt-report-file=<value>
                          Specify the filename or output stream (stdout, stderr) for the generated optimization report
  -qopt-report-names=<value>
                          Specifies whether mangled or unmangled names should appear in the optimization report.
  -qopt-report-phase=<value>
                          Specify one or more phases for which optimization reports are generated
  -qopt-report-stdout     Specify the generated optimization report should be directed to stdout
  -qopt-report=<value>    Generate an optimization report, min, med or max.
  -qopt-streaming-stores=<value>
                          Specifies whether streaming stores are generated.
  -qopt-zmm-usage=<value> Specifies the level of zmm registers usage, low or high
  -Qoption,<arg>           Qoption,<tool>,<args> to pass the comma separated arguments to the <tool>; <tool> can be asm for assembler (or) link/ld for linker (or) preprocessor for preprocessor (or) compiler for compiler
  -qoverride-limits       enables the user to skip throttling of loops in framework and DD.
  -qtbb                   Link Intel(R) Threading Building Blocks (Intel(R) TBB) libraries and bring in the associated headers
  -Qunused-arguments      Don't emit warning for unused driver arguments
  -Qy                     Emit metadata containing compiler name and version
  -regcall4               Set __regcall4 as a default calling convention to respect __regcall ABI v.4
  -regcall                Set __regcall as a default calling convention
  -relocatable-pch        Whether to build a relocatable precompiled header
  -reuse-exe=<exe>        Speed up FPGA aoc compile if the device code in <exe> is unchanged.
  -rewrite-legacy-objc    Rewrite Legacy Objective-C source to C++
  -rewrite-objc           Rewrite Objective-C source to C++
  --rocm-device-lib-path=<value>
                          ROCm device library path. Alternative to rocm-path.
  --rocm-path=<value>     ROCm installation path, used for finding and automatically linking required bitcode libraries.
  -Rpass-analysis=<value> Report transformation analysis from optimization passes whose name matches the given POSIX regular expression
  -Rpass-missed=<value>   Report missed transformations by optimization passes whose name matches the given POSIX regular expression
  -Rpass=<value>          Report transformations performed by optimization passes whose name matches the given POSIX regular expression
  -rtlib=<value>          Compiler runtime library to use
  -R<remark>              Enable the specified remark
  -save-stats=<value>     Save llvm statistics.
  -save-stats             Save llvm statistics.
  -save-temps=<value>     Save intermediate compilation results. <arg> can be set to 'cwd' for current working directory, or 'obj' which will save temporary files in the same directory as the final output file
  -save-temps             Alias for --save-temps=cwd
  -serialize-diagnostics <value>
                          Serialize compiler diagnostics to a file
  -shared-intel           link Intel provided libraries dynamically
  -shared-libsan          Dynamically link the sanitizer runtime
  -sox=<value>            Enable saving of compiler options, version and additional information in the executable.  Use -no-sox to disable (DEFAULT). Valid arguments: profile - Includes data when profile was used for functions that were compiled with PGO enabling options such as -fprofile-use and -fprofile-instr-use, inline - Includes a list of the functions that were inlined in each object, secure - Strip out directory names and options that use them.
  -sox                    Enable saving of compiler options in the executable
  --start-no-unused-arguments
                          Don't emit warnings about unused arguments for the following arguments
  -static-intel           link Intel provided libraries statically
  -static-libsan          Statically link the sanitizer runtime (Not supported for ASan, TSan or UBSan on darwin)
  -static-openmp          Use the static host OpenMP runtime while linking.
  -std=<value>            Language standard to compile for
  -stdlib++-isystem <directory>
                          Use directory as the C++ standard library include path
  -stdlib=<value>         C++ standard library to use
  -strict-ansi            strict ANSI conformance dialect
  -sycl-std=<value>       SYCL language standard to compile for.
  --symbol-graph-dir=<value>
                          Directory in which to emit symbol graphs.
  --system-header-prefix=<prefix>
                          Treat all #include paths starting with <prefix> as including a system header.
  -S                      Only run preprocess and compilation steps
  --target=<value>        Generate code for the given target
  -tbb                    Link Intel(R) Threading Building Blocks (Intel(R) TBB) libraries and bring in the associated headers
  -time                   Time individual commands
  -traceback              Generate traceback debug information
  -traditional-cpp        Enable some traditional CPP emulation
  -trigraphs              Process trigraph sequences
  -T <script>             Specify <script> as linker script
  -undef                  undef all system defines
  -unroll<value>          Set maximum number of times to unroll loops.  Omit n to use default heuristics.  Use 0 to disable the loop unroller.
  -unwindlib=<value>      Unwind library to use
  -use-msasm              enables the use of blocks and entire functions of assembly code within a C or C++ file
  -U <macro>              Undefine macro <macro>
  -vec-threshold<value>   Sets a threshold for the vectorization of loops based on the probability of profitable execution of the vectorized loop in parallel.
  -vecabi=<value>         Determines which vector function ABI the compiler uses to create or call vector functions. The 'gcc' (default) argument enforces compatibility with gcc. The 'cmdtarget' argument uses an extended set of vector functions.
  -vec                    Enable the loop vectorization passes
  --verify-debug-info     Verify the binary representation of debug output
  -verify-pch             Load and verify that a pre-compiled header file is not stale
  --version               Print version information
  -vfsoverlay <value>     Overlay the virtual filesystem described by file over the real file system. Additionally, pass this overlay file to the linker if it supports it
  -v                      Show commands to run and use verbose output
  -Wa,<arg>               Pass the comma separated arguments in <arg> to the assembler
  --wasm-opt              Enable the wasm-opt optimizer (default)
  -Wcheck-unicode-security
                          Enable detection and warn about Unicode constructs that can be exploited by using bi-directional formatting codes, zero-width characters in strings and use of zero-width characters and homoglyphs in identifiers. Done by using clang-tidy
  -Wdeprecated            Enable warnings for deprecated constructs and define __DEPRECATED
  -Winvalid-constexpr     Enable checking of constexpr function bodies for validity within a constant expression context
  -Wl,<arg>               Pass the comma separated arguments in <arg> to the linker
  -Wno-invalid-constexpr  Disable checking of constexpr function bodies for validity within a constant expression context
  -Wno-sycl-strict        Disable warnings which enforce strict SYCL language compatibility.
  -working-directory <value>
                          Resolve file paths relative to the specified directory
  -Wp,<arg>               Pass the comma separated arguments in <arg> to the preprocessor
  -W<warning>             Enable the specified warning
  -w                      Suppress all warnings
  -Xanalyzer <arg>        Pass <arg> to the static analyzer
  -Xarch_device <arg>     Pass <arg> to the CUDA/HIP device compilation
  -Xarch_host <arg>       Pass <arg> to the CUDA/HIP host compilation
  -Xassembler <arg>       Pass <arg> to the assembler
  -Xclang=<arg>           Alias for -Xclang
  -Xclang <arg>           Pass <arg> to clang -cc1
  -Xcuda-fatbinary <arg>  Pass <arg> to fatbinary invocation
  -Xcuda-ptxas <arg>      Pass <arg> to the ptxas assembler
  -Xlinker <arg>          Pass <arg> to the linker
  -Xoffload-linker<triple> <arg>
                          Pass <arg> to the offload linkers or the ones idenfied by -<triple>
  -Xopenmp-target-backend=<triple> <arg>
                          Pass <arg> to the OpenMP based backend identified by <triple>. Depending on the triple (spir64, spir64_gen, spir64_x86_64), the arg passed will be interpreted by the corresponding AOT tool or runtime consumer.
  -Xopenmp-target-backend <arg>
                          Pass <arg> to the OpenMP based target backend.
  -Xopenmp-target-frontend=<value>
                          Pass <arg> to the OpenMP based target frontend identified by <triple>.
  -Xopenmp-target-frontend <value>
                          Pass <arg> to the OpenMP based target frontend.
  -Xopenmp-target-linker=<triple> <arg>
                          Pass <arg> to the SYCL based target linker identified by <triple>.
  -Xopenmp-target-linker <arg>
                          Pass <arg> to the SYCL based target linker.
  -Xopenmp-target=<triple> <arg>
                          Pass <arg> to the target offloading toolchain identified by <triple>.
  -Xopenmp-target <arg>   Pass <arg> to the target offloading toolchain.
  -Xpreprocessor <arg>    Pass <arg> to the preprocessor
  -Xsycl-target-backend=<triple> <arg>
                          Pass <arg> to the SYCL based backend identified by <triple>. Depending on the triple (spir64, spir64_gen, spir64_x86_64, spir64_fpga), the arg passed will be interpreted by the corresponding AOT tool or runtime consumer.
  -Xsycl-target-backend <arg>
                          Pass <arg> to the SYCL based target backend.
  -Xsycl-target-frontend=<triple> <arg>
                          Pass <arg> to the SYCL based target frontend identified by <triple>.
  -Xsycl-target-frontend <arg>
                          Pass <arg> to the SYCL based target frontend.
  -Xsycl-target-linker=<triple> <arg>
                          Pass <arg> to the SYCL based target linker identified by <triple>.
  -Xsycl-target-linker <arg>
                          Pass <arg> to the SYCL based target linker.
  -Xs <arg>               Pass <arg> to the offline compiler.
  -Xs<arg>                Pass <arg> to the offline compiler, adding the option specifier '-' to the <arg>.
  -x <language>           Treat subsequent input files as having type <language>
  -x<code>                Generate specialized code to run exclusively on processors indicated by <code>.
  -z <arg>                Pass -z <arg> to the linker
dxc compatibility options.:
  --dxv-path=<value>  DXIL validator installation path
  -fspv-target-env=<value>
                      Specify the target environment
  -hlsl-entry <value> Entry point name for hlsl
Executing: mpiicc -cc=icx -qversion
stdout: icx: error: unknown argument '-qversion'; did you mean '--version'?
Executing: mpiicc -cc=icx -show
stdout: icx -I"/opt/intel/oneapi/mpi/2021.14/include" -L"/opt/intel/oneapi/mpi/2021.14/lib" -L"/opt/intel/oneapi/mpi/2021.14/lib" -Xlinker --enable-new-dtags -Xlinker -rpath -Xlinker "/opt/intel/oneapi/mpi/2021.14/lib" -Xlinker -rpath -Xlinker "/opt/intel/oneapi/mpi/2021.14/lib" -lmpifort -lmpi -ldl -lrt -lpthread
          Trying C compiler flag -PIC
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers  -PIC   /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
stdout: icx: error: unknown argument '-PIC'; did you mean '-fPIC'?
Possible ERROR while running compiler: exit code 1
stderr:
icx: error: unknown argument '-PIC'; did you mean '-fPIC'?
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

              Output from compiling with  -PIC 
icx: error: unknown argument '-PIC'; did you mean '-fPIC'?

PETSc Error: No output file produced
              Rejecting compiler flag -PIC  due to nonzero status from link
          Rejected C compiler flag -PIC because it was not compatible with shared linker mpiicc -cc=icx using flags ['-qmkshrobj']
          Trying C compiler flag -qPIC
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers  -qPIC   /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
stdout: icx: error: unknown argument '-qPIC'; did you mean '-fPIC'?
Possible ERROR while running compiler: exit code 1
stderr:
icx: error: unknown argument '-qPIC'; did you mean '-fPIC'?
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

              Output from compiling with  -qPIC 
icx: error: unknown argument '-qPIC'; did you mean '-fPIC'?

PETSc Error: No output file produced
              Rejecting compiler flag -qPIC  due to nonzero status from link
          Rejected C compiler flag -qPIC because it was not compatible with shared linker mpiicc -cc=icx using flags ['-qmkshrobj']
          Trying C compiler flag -KPIC
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers  -KPIC   /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
stdout: icx: error: unknown argument '-KPIC'; did you mean '-fPIC'?
Possible ERROR while running compiler: exit code 1
stderr:
icx: error: unknown argument '-KPIC'; did you mean '-fPIC'?
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

              Output from compiling with  -KPIC 
icx: error: unknown argument '-KPIC'; did you mean '-fPIC'?

PETSc Error: No output file produced
              Rejecting compiler flag -KPIC  due to nonzero status from link
          Rejected C compiler flag -KPIC because it was not compatible with shared linker mpiicc -cc=icx using flags ['-qmkshrobj']
          Trying C compiler flag -fPIC
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers  -fPIC   /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

              Output from compiling with  -fPIC 

Added C compiler flag -fPIC
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers  -fPIC  /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest  -qmkshrobj   -fPIC /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o 
stdout: icx: error: unknown argument: '-qmkshrobj'
Possible ERROR while running linker: exit code 1
stderr:
icx: error: unknown argument: '-qmkshrobj'
            Rejecting linker flag -qmkshrobj due to nonzero status from link
            Rejecting C linker flag -qmkshrobj due to 

icx: error: unknown argument: '-qmkshrobj'

Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers  -fPIC  /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <stdio.h>
int (*fprintf_ptr)(FILE*,const char*,...) = fprintf;
int  foo(void){
  fprintf_ptr(stdout,"hello");
  return 0;
}
void bar(void){foo();}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.setCompilers/libconftest.so    -fPIC /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o 
stdout:
/usr/bin/ld: /lib/x86_64-linux-gnu/Scrt1.o: in function `_start':
(.text+0x1b): undefined reference to `main'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Possible ERROR while running linker: exit code 1
stderr:
/usr/bin/ld: /lib/x86_64-linux-gnu/Scrt1.o: in function `_start':
(.text+0x1b): undefined reference to `main'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
          Rejected C compiler flag -fPIC because it was not compatible with shared linker mpiicc -cc=icx using flags ['-qmkshrobj']
          Trying C compiler flag -fpic
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers  -fpic   /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

              Output from compiling with  -fpic 

Added C compiler flag -fpic
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers  -fpic  /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest  -qmkshrobj   -fpic /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o 
stdout: icx: error: unknown argument: '-qmkshrobj'
Possible ERROR while running linker: exit code 1
stderr:
icx: error: unknown argument: '-qmkshrobj'
            Rejecting linker flag -qmkshrobj due to nonzero status from link
            Rejecting C linker flag -qmkshrobj due to 

icx: error: unknown argument: '-qmkshrobj'

Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers  -fpic  /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <stdio.h>
int (*fprintf_ptr)(FILE*,const char*,...) = fprintf;
int  foo(void){
  fprintf_ptr(stdout,"hello");
  return 0;
}
void bar(void){foo();}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.setCompilers/libconftest.so    -fpic /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o 
stdout:
/usr/bin/ld: /lib/x86_64-linux-gnu/Scrt1.o: in function `_start':
(.text+0x1b): undefined reference to `main'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Possible ERROR while running linker: exit code 1
stderr:
/usr/bin/ld: /lib/x86_64-linux-gnu/Scrt1.o: in function `_start':
(.text+0x1b): undefined reference to `main'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
          Rejected C compiler flag -fpic because it was not compatible with shared linker mpiicc -cc=icx using flags ['-qmkshrobj']
          Trying C compiler flag 
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers     /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

              Output from compiling with   

Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers   /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest  -qmkshrobj   /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o 
stdout: icx: error: unknown argument: '-qmkshrobj'
Possible ERROR while running linker: exit code 1
stderr:
icx: error: unknown argument: '-qmkshrobj'
            Rejecting linker flag -qmkshrobj due to nonzero status from link
            Rejecting C linker flag -qmkshrobj due to 

icx: error: unknown argument: '-qmkshrobj'

Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers   /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <stdio.h>
int (*fprintf_ptr)(FILE*,const char*,...) = fprintf;
int  foo(void){
  fprintf_ptr(stdout,"hello");
  return 0;
}
void bar(void){foo();}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.setCompilers/libconftest.so    /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o 
stdout:
/usr/bin/ld: /lib/x86_64-linux-gnu/Scrt1.o: in function `_start':
(.text+0x1b): undefined reference to `main'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Possible ERROR while running linker: exit code 1
stderr:
/usr/bin/ld: /lib/x86_64-linux-gnu/Scrt1.o: in function `_start':
(.text+0x1b): undefined reference to `main'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
          Rejected C compiler flag  because it was not compatible with shared linker mpiicc -cc=icx using flags ['-qmkshrobj']
            Deleting "LD_SHARED"
          Checking shared linker mpiicc -cc=icx using flags ['-shared']
    Checking for program /opt/intel/oneapi/mpi/2021.14/bin/mpiicc...found
              Defined make macro "LD_SHARED" to "mpiicc -cc=icx"
Executing: mpiicc -cc=icx --help | head -n 20 
stdout:
OVERVIEW: Intel(R) oneAPI DPC++/C++ Compiler
USAGE: icx [options] file...
OPTIONS:
  -###                    Print (but do not run) the commands to run for this compilation
  -#x                     Show commands to run and use verbose output
  -#                      Print (but do not run) the commands to run for this compilation
  -align                  Align doubles to two words in structs (x86 only)
  --amdgpu-arch-tool=<value>
                          Tool used for detecting AMD GPU arch in the system.
  --analyzer-output <value>
                          Static analyzer report output format (html|plist|plist-multi-file|plist-html|sarif|sarif-html|text).
  --analyze               Run the static analyzer
  -ansi-alias             enable use of ANSI aliasing rules optimizations user asserts that the program adheres to these rules
  -arcmt-migrate-emit-errors
                          Emit ARC errors even if the migrator can fix them
  -arcmt-migrate-report-output <value>
                          Output path for the plist report
  -ax<codes>              generate multiple, processor-specific, auto-dispatched code paths for Intel® processors, specified by <codes>, if there is a performance benefit
Executing: mpiicc -cc=icx --help
stdout:
OVERVIEW: Intel(R) oneAPI DPC++/C++ Compiler
USAGE: icx [options] file...
OPTIONS:
  -###                    Print (but do not run) the commands to run for this compilation
  -#x                     Show commands to run and use verbose output
  -#                      Print (but do not run) the commands to run for this compilation
  -align                  Align doubles to two words in structs (x86 only)
  --amdgpu-arch-tool=<value>
                          Tool used for detecting AMD GPU arch in the system.
  --analyzer-output <value>
                          Static analyzer report output format (html|plist|plist-multi-file|plist-html|sarif|sarif-html|text).
  --analyze               Run the static analyzer
  -ansi-alias             enable use of ANSI aliasing rules optimizations user asserts that the program adheres to these rules
  -arcmt-migrate-emit-errors
                          Emit ARC errors even if the migrator can fix them
  -arcmt-migrate-report-output <value>
                          Output path for the plist report
  -ax<codes>              generate multiple, processor-specific, auto-dispatched code paths for Intel® processors, specified by <codes>, if there is a performance benefit
  -B <prefix>             Search $prefix$file for executables, libraries, and data files. If $prefix is a directory, search $prefix/$file
  -b <arg>                Pass -b <arg> to the linker on AIX
  -CC                     Include comments from within macros in preprocessed output
  -cl-denorms-are-zero    OpenCL only. Allow denormals to be flushed to zero.
  -cl-ext=<value>         OpenCL only. Enable or disable OpenCL extensions/optional features. The argument is a comma-separated sequence of one or more extension names, each prefixed by '+' or '-'.
  -cl-fast-relaxed-math   OpenCL only. Sets -cl-finite-math-only and -cl-unsafe-math-optimizations, and defines __FAST_RELAXED_MATH__.
  -cl-finite-math-only    OpenCL only. Allow floating-point optimizations that assume arguments and results are not NaNs or +-Inf.
  -cl-fp32-correctly-rounded-divide-sqrt
                          OpenCL only. Specify that single precision floating-point divide and sqrt used in the program source are correctly rounded.
  -cl-kernel-arg-info     OpenCL only. Generate kernel argument metadata.
  -cl-mad-enable          OpenCL only. Allow use of less precise MAD computations in the generated binary.
  -cl-no-signed-zeros     OpenCL only. Allow use of less precise no signed zeros computations in the generated binary.
  -cl-no-stdinc           OpenCL only. Disables all standard includes containing non-native compiler types and functions.
  -cl-opt-disable         OpenCL only. This option disables all optimizations. By default optimizations are enabled.
  -cl-single-precision-constant
                          OpenCL only. Treat double precision floating-point constant as single precision constant.
  -cl-std=<value>         OpenCL language standard to compile for.
  -cl-strict-aliasing     OpenCL only. This option is added for compatibility with OpenCL 1.0.
  -cl-uniform-work-group-size
                          OpenCL only. Defines that the global work-size be a multiple of the work-group size specified to clEnqueueNDRangeKernel
  -cl-unsafe-math-optimizations
                          OpenCL only. Allow unsafe floating-point optimizations.  Also implies -cl-no-signed-zeros and -cl-mad-enable.
  --config=<file>         Specify configuration file
  --cuda-compile-host-device
                          Compile CUDA code for both host and device (default). Has no effect on non-CUDA compilations.
  --cuda-device-only      Compile CUDA code for device only
  --cuda-feature=<value>  Manually specify the CUDA feature to use
  --cuda-host-only        Compile CUDA code for host only. Has no effect on non-CUDA compilations.
  --cuda-include-ptx=<value>
                          Include PTX for the following GPU architecture (e.g. sm_35) or 'all'. May be specified more than once.
  --cuda-noopt-device-debug
                          Enable device-side debug info generation. Disables ptxas optimizations.
  --cuda-path-ignore-env  Ignore environment variables to detect CUDA installation
  --cuda-path=<value>     CUDA installation path
  -cuid=<value>           An ID for compilation unit, which should be the same for the same compilation unit but different for different compilation units. It is used to externalize device-side static variables for single source offloading languages CUDA and HIP so that they can be accessed by the host code of the same compilation unit.
  -cxx-isystem <directory>
                          Add directory to the C++ SYSTEM include search path
  -C                      Include comments in preprocessed output
  -c                      Only run preprocess, compile, and assemble steps
  -daal=<value>           Link Intel(R) Data Analytics Acceleration Library (Intel(R) DAAL) libraries and bring in the associated headers (parallel)
  -darwin-target-variant-triple <value>
                          Specify the darwin target variant triple
  -darwin-target-variant <value>
                          Generate code for an additional runtime variant of the deployment target
  -dD                     Print macro definitions in -E mode in addition to normal output
  -debug=<value>          Enable debug information. Valid args: none, all, full, minimal
  -dependency-dot <value> Filename to write DOT-formatted header dependencies to
  -dependency-file <value>
                          Filename (or -) to write dependency output to
  -device-math-lib=<value>
                          Control the addition of device math libraries when compiling for other devices.  Valid arguments are fp64, fp32
  -dI                     Print include directives in -E mode in addition to normal output
  -dM                     Print macro definitions in -E mode instead of normal output
  -dryrun                 Print (but do not run) the commands to run for this compilation
  -dsym-dir <dir>         Directory to output dSYM's (if any) to
  -dumpdir <dumppfx>      Use <dumpfpx> as a prefix to form auxiliary and dump file names
  -dumpmachine            Display the compiler's target processor
  -dumpversion            Display the version of the compiler
  -D <macro>=<value>      Define <macro> to <value> (or 1 if <value> omitted)
  --embed-dir=<dir>       Add directory to embed search path
  -emit-ast               Emit Clang AST files for source inputs
  --emit-extension-symbol-graphs
                          Generate additional symbol graphs for extended modules.
  -emit-interface-stubs   Generate Interface Stub Files.
  -emit-llvm              Use the LLVM representation for assembler and object files
  -emit-merged-ifs        Generate Interface Stub Files, emit merged text not binary.
  --emit-static-lib       Enable linker job to emit a static library.
  -emit-symbol-graph      Generate Extract API information as a side effect of compilation.
  --end-no-unused-arguments
                          Start emitting warnings for unused driver arguments
  -EP                     Preprocess to stdout, omitting #line directives.
  --extract-api-ignores=<value>
                          Comma separated list of files containing a new line separated list of API symbols to ignore when extracting API information.
  -extract-api            Extract API information
  -E                      Only run the preprocessor
  -faapcs-bitfield-load   Follows the AAPCS standard that all volatile bit-field write generates at least one load. (ARM only).
  -faapcs-bitfield-width  Follow the AAPCS standard requirement stating that volatile bit-field width is dictated by the field container type. (ARM only).
  -faddrsig               Emit an address-significance table
  -falign-functions=<value>
                          Align the start of functions on a 2 (DEFAULT) or <n> byte boundary where <n> is a power of 2.
  -falign-functions       align the start of functions to an optimal machine-dependent value.
  -falign-loops=<N>       N must be a power of two. Align loops to the boundary
  -falign-stack=assume-16-byte
                          Assume the stack is aligned on 16-byte boundaries
  -falign-stack=assume-4-byte
                          Assume the stack is aligned on 4-byte boundaries
  -falign-stack=maintain-16-byte
                          Do not assume any alignment, but maintain alignment in case the stack is already aligned
  -faligned-allocation    Enable C++17 aligned allocation functions
  -fallow-editor-placeholders
                          Treat editor placeholders as valid source code
  -faltivec-src-compat=<value>
                          Source-level compatibility for Altivec vectors (for PowerPC targets). This includes results of vector comparison (scalar for 'xl', vector for 'gcc') as well as behavior when initializing with a scalar (splatting for 'xl', element zero only for 'gcc'). For 'mixed', the compatibility is as 'gcc' for 'vector bool/vector pixel' and as 'xl' for other types. Current default is 'mixed'.
  -fansi-escape-codes     Use ANSI escape codes for diagnostics
  -fapinotes-modules      Enable module-based external API notes support
  -fapinotes-swift-version=<version>
                          Specify the Swift version to use when filtering API notes
  -fapinotes              Enable external API notes support
  -fapple-kext            Use Apple's kernel extensions ABI
  -fapple-link-rtlib      Force linking the clang builtins runtime library
  -fapple-pragma-pack     Enable Apple gcc-compatible #pragma pack handling
  -fapplication-extension Restrict code to those available for App Extensions
  -fapprox-func           Allow certain math function calls to be replaced with an approximately equivalent calculation
  -fargument-noalias      Enables 'noalias' attribute for all pointer-type arguments
  -fassume-nothrow-exception-dtor
                          Assume that exception objects' destructors are non-throwing
  -fasync-exceptions      Enable EH Asynchronous exceptions
  -fauto-import           MinGW specific. Enable code generation support for automatic dllimport, and enable support for it in the linker. Enabled by default.
  -fbasic-block-address-map
                          Emit the basic block address map section.
  -fbasic-block-sections=<value>
                          Place each function's basic blocks in unique sections (ELF Only)
  -fbinutils-version=<major.minor>
                          Produced object files can use all ELF features supported by this binutils version and newer. If -fno-integrated-as is specified, the generated assembly will consider GNU as support. 'none' means that all ELF features can be used, regardless of binutils support. Defaults to 2.26.
  -fblocks                Enable the 'blocks' language feature
  -fborland-extensions    Accept non-standard constructs supported by the Borland compiler
  -fbuild-session-file=<file>
                          Use the last modification time of <file> as the build session timestamp
  -fbuild-session-timestamp=<time since Epoch in seconds>
                          Time when the current build session started
  -fbuiltin-module-map    Load the clang builtins module map file.
  -fc++-abi=<value>       C++ ABI to use. This will override the target C++ ABI.
  -fcall-saved-x10        Make the x10 register call-saved (AArch64 only)
  -fcall-saved-x11        Make the x11 register call-saved (AArch64 only)
  -fcall-saved-x12        Make the x12 register call-saved (AArch64 only)
  -fcall-saved-x13        Make the x13 register call-saved (AArch64 only)
  -fcall-saved-x14        Make the x14 register call-saved (AArch64 only)
  -fcall-saved-x15        Make the x15 register call-saved (AArch64 only)
  -fcall-saved-x18        Make the x18 register call-saved (AArch64 only)
  -fcall-saved-x8         Make the x8 register call-saved (AArch64 only)
  -fcall-saved-x9         Make the x9 register call-saved (AArch64 only)
  -fcaret-diagnostics-max-lines=<value>
                          Set the maximum number of source lines to show in a caret diagnostic (0 = no limit).
  -fcf-protection=<value> Instrument control-flow architecture protection
  -fcf-protection         Enable cf-protection in 'full' mode
  -fchar8_t               Enable C++ builtin type char8_t
  -fcheck-new             Do not assume C++ operator new may not return NULL
  -fclang-abi-compat=<version>
                          Attempt to match the ABI of Clang <version>
  -fclangir               Use the ClangIR pipeline to compile
  -fcolor-diagnostics     Enable colors in diagnostics
  -fcomment-block-commands=<arg>
                          Treat each comma separated argument in <arg> as a documentation comment block command
  -fcommon                Place uninitialized global variables in a common block
  -fcomplete-member-pointers
                          Require member pointer base types to be complete if they would be significant under the Microsoft ABI
  -fconstexpr-backtrace-limit=<value>
                          Set the maximum number of entries to print in a constexpr evaluation backtrace (0 = no limit)
  -fconstexpr-depth=<value>
                          Set the maximum depth of recursive constexpr function calls
  -fconstexpr-steps=<value>
                          Set the maximum number of steps in constexpr function evaluation
  -fcoro-aligned-allocation
                          Prefer aligned allocation for C++ Coroutines
  -fcoroutines            Enable support for the C++ Coroutines
  -fcoverage-compilation-dir=<value>
                          The compilation directory to embed in the coverage mapping.
  -fcoverage-mapping      Generate coverage mapping to enable code coverage analysis
  -fcoverage-mcdc         Enable MC/DC criteria when generating code coverage
  -fcoverage-prefix-map=<old>=<new>
                          remap file source paths <old> to <new> in coverage mapping. If there are multiple options, prefix replacement is applied in reverse order starting from the last one
  -fcrash-diagnostics-dir=<dir>
                          Put crash-report files in <dir>
  -fcrash-diagnostics=<value>
                          Set level of crash diagnostic reporting, (option: off, compiler, all)
  -fcrash-diagnostics     Enable crash diagnostic reporting (default)
  -fcs-profile-generate=<directory>
                          Generate instrumented code to collect context sensitive execution counts into <directory>/default.profraw (overridden by LLVM_PROFILE_FILE env var)
  -fcs-profile-generate   Generate instrumented code to collect context sensitive execution counts into default.profraw (overridden by LLVM_PROFILE_FILE env var)
  -fcuda-prec-sqrt        Specify that sqrt is correctly rounded (for CUDA devices)
  -fcuda-short-ptr        Use 32-bit pointers for accessing const/local/shared address spaces
  -fcx-fortran-rules      Range reduction is enabled for complex arithmetic operations.
  -fcx-limited-range      Basic algebraic expansions of complex arithmetic operations involving are enabled.
  -fcxx-exceptions        Enable C++ exceptions
  -fcxx-modules           Enable modules for C++
  -fdata-sections         Place each data in its own section
  -fdebug-compilation-dir=<value>
                          The compilation directory to embed in the debug info
  -fdebug-default-version=<value>
                          Default DWARF version to use, if a -g option caused DWARF debug info to be produced
  -fdebug-info-for-profiling
                          Emit extra debug info to make sample profile more accurate
  -fdebug-macro           Emit macro debug information
  -fdebug-prefix-map=<old>=<new>
                          For paths in debug info, remap directory <old> to <new>. If multiple options match a path, the last option wins
  -fdebug-ranges-base-address
                          Use DWARF base address selection entries in .debug_ranges
  -fdebug-types-section   Place debug types in their own section (ELF Only)
  -fdeclspec              Allow __declspec as a keyword
  -fdefine-target-os-macros
                          Enable predefined target OS macros
  -fdelayed-template-parsing
                          Parse templated function definitions at the end of the translation unit
  -fdelete-null-pointer-checks
                          Treat usage of null pointers as undefined behavior (default)
  -fdiagnostics-absolute-paths
                          Print absolute paths in diagnostics
  -fdiagnostics-hotness-threshold=<value>
                          Prevent optimization remarks from being output if they do not have at least this profile count. Use 'auto' to apply the threshold from profile summary
  -fdiagnostics-misexpect-tolerance=<value>
                          Prevent misexpect diagnostics from being output if the profile counts are within N% of the expected. 
  -fdiagnostics-parseable-fixits
                          Print fix-its in machine parseable form
  -fdiagnostics-print-source-range-info
                          Print source range spans in numeric form
  -fdiagnostics-show-hotness
                          Enable profile hotness information in diagnostic line
  -fdiagnostics-show-note-include-stack
                          Display include stacks for diagnostic notes
  -fdiagnostics-show-option
                          Print option name with mappable diagnostics
  -fdiagnostics-show-template-tree
                          Print a template comparison tree for differing templates
  -fdigraphs              Enable alternative token representations '<:', ':>', '<%', '%>', '%:', '%:%:' (default)
  -fdirect-access-external-data
                          Don't use GOT indirection to reference external data symbols
  -fdisable-block-signature-string
                          Disable block signature string)
  -fdiscard-value-names   Discard value names in LLVM IR
  -fdollars-in-identifiers
                          Allow '$' in identifiers
  -fdriver-only           Only run the driver.
  -fdwarf-exceptions      Use DWARF style exceptions
  -feliminate-unused-debug-types
                          Do not emit  debug info for defined but unused types
  -fembed-bitcode-marker  Embed placeholder LLVM IR data as a marker
  -fembed-bitcode=<option>
                          Embed LLVM bitcode
  -fembed-bitcode         Embed LLVM IR bitcode as data
  -fembed-offload-object=<value>
                          Embed Offloading device-side binary into host object file as a section.
  -femit-all-decls        Emit all declarations, even if unused
  -femit-class-debug-always
                          Emit debug information for a C++ class into each object file where the class is used. This flag is useful for tools which are unable to resolve incomplete type descriptions.  Using this option may cause a large increase in the size of the debug information
  -femit-compact-unwind-non-canonical
                          Try emitting Compact-Unwind for non-canonical entries. Maybe overriden by other constraints
  -femit-dwarf-unwind=<value>
                          When to emit DWARF unwind (EH frame) info
  -femulated-tls          Use emutls functions to access thread_local variables
  -fenable-matrix         Enable matrix data type and related builtin functions
  -fexceptions            Enable support for exception handling
  -fexcess-precision=<value>
                          Allows control over excess precision on targets where native support for the precision types is not available. By default, excess precision is used to calculate intermediate results following the rules specified in ISO C99.
  -fexperimental-late-parse-attributes
                          Enable experimental late parsing of attributes
  -fexperimental-library  Control whether unstable and experimental library features are enabled. This option enables various library features that are either experimental (also known as TSes), or have been but are not stable yet in the selected Standard Library implementation. It is not recommended to use this option in production code, since neither ABI nor API stability are guaranteed. This is intended to provide a preview of features that will ship in the future for experimentation purposes
  -fexperimental-modules-reduced-bmi
                          Generate the reduced BMI
  -fexperimental-new-constant-interpreter
                          Enable the experimental new constant interpreter
  -fexperimental-openacc-macro-override <value>
                          Overrides the _OPENACC macro value for experimental testing during OpenACC support development
  -fexperimental-relative-c++-abi-vtables
                          Use the experimental C++ class ABI for classes with virtual tables
  -fexperimental-sanitize-metadata-ignorelist=<value>
                          Disable sanitizer metadata for modules and functions that match the provided special case list
  -fexperimental-sanitize-metadata=<value>
                          Specify the type of metadata to emit for binary analysis sanitizers
  -fexperimental-strict-floating-point
                          Enables the use of non-default rounding modes and non-default exception handling on targets that are not currently ready.
  -fextend-arguments=<value>
                          Controls how scalar integer arguments are extended in calls to unprototyped and varargs functions
  -ffast-math             Allow aggressive, lossy floating-point optimizations
  -ffat-lto-objects       Enable fat LTO object support
  -ffile-compilation-dir=<value>
                          The compilation directory to embed in the debug info and coverage mapping.
  -ffile-prefix-map=<value>
                          remap file source paths in debug info, predefined preprocessor macros and __builtin_FILE(). Implies -ffile-reproducible.
  -ffile-reproducible     Use the target's platform-specific path separator character when expanding the __FILE__ macro
  -ffine-grained-bitfield-accesses
                          Use separate accesses for consecutive bitfield runs with legal widths and alignments.
  -ffinite-loops          Assume all non-trivial loops are finite.
  -ffinite-math-only      Allow floating-point optimizations that assume arguments and results are not NaNs or +-inf. This defines the \_\_FINITE\_MATH\_ONLY\_\_ preprocessor macro.
  -ffixed-a0              Reserve the a0 register (M68k only)
  -ffixed-a1              Reserve the a1 register (M68k only)
  -ffixed-a2              Reserve the a2 register (M68k only)
  -ffixed-a3              Reserve the a3 register (M68k only)
  -ffixed-a4              Reserve the a4 register (M68k only)
  -ffixed-a5              Reserve the a5 register (M68k only)
  -ffixed-a6              Reserve the a6 register (M68k only)
  -ffixed-d0              Reserve the d0 register (M68k only)
  -ffixed-d1              Reserve the d1 register (M68k only)
  -ffixed-d2              Reserve the d2 register (M68k only)
  -ffixed-d3              Reserve the d3 register (M68k only)
  -ffixed-d4              Reserve the d4 register (M68k only)
  -ffixed-d5              Reserve the d5 register (M68k only)
  -ffixed-d6              Reserve the d6 register (M68k only)
  -ffixed-d7              Reserve the d7 register (M68k only)
  -ffixed-g1              Reserve the G1 register (SPARC only)
  -ffixed-g2              Reserve the G2 register (SPARC only)
  -ffixed-g3              Reserve the G3 register (SPARC only)
  -ffixed-g4              Reserve the G4 register (SPARC only)
  -ffixed-g5              Reserve the G5 register (SPARC only)
  -ffixed-g6              Reserve the G6 register (SPARC only)
  -ffixed-g7              Reserve the G7 register (SPARC only)
  -ffixed-i0              Reserve the I0 register (SPARC only)
  -ffixed-i1              Reserve the I1 register (SPARC only)
  -ffixed-i2              Reserve the I2 register (SPARC only)
  -ffixed-i3              Reserve the I3 register (SPARC only)
  -ffixed-i4              Reserve the I4 register (SPARC only)
  -ffixed-i5              Reserve the I5 register (SPARC only)
  -ffixed-l0              Reserve the L0 register (SPARC only)
  -ffixed-l1              Reserve the L1 register (SPARC only)
  -ffixed-l2              Reserve the L2 register (SPARC only)
  -ffixed-l3              Reserve the L3 register (SPARC only)
  -ffixed-l4              Reserve the L4 register (SPARC only)
  -ffixed-l5              Reserve the L5 register (SPARC only)
  -ffixed-l6              Reserve the L6 register (SPARC only)
  -ffixed-l7              Reserve the L7 register (SPARC only)
  -ffixed-o0              Reserve the O0 register (SPARC only)
  -ffixed-o1              Reserve the O1 register (SPARC only)
  -ffixed-o2              Reserve the O2 register (SPARC only)
  -ffixed-o3              Reserve the O3 register (SPARC only)
  -ffixed-o4              Reserve the O4 register (SPARC only)
  -ffixed-o5              Reserve the O5 register (SPARC only)
  -ffixed-point           Enable fixed point types
  -ffixed-r19             Reserve register r19 (Hexagon only)
  -ffixed-r9              Reserve the r9 register (ARM only)
  -ffixed-x10             Reserve the x10 register (AArch64/RISC-V only)
  -ffixed-x11             Reserve the x11 register (AArch64/RISC-V only)
  -ffixed-x12             Reserve the x12 register (AArch64/RISC-V only)
  -ffixed-x13             Reserve the x13 register (AArch64/RISC-V only)
  -ffixed-x14             Reserve the x14 register (AArch64/RISC-V only)
  -ffixed-x15             Reserve the x15 register (AArch64/RISC-V only)
  -ffixed-x16             Reserve the x16 register (AArch64/RISC-V only)
  -ffixed-x17             Reserve the x17 register (AArch64/RISC-V only)
  -ffixed-x18             Reserve the x18 register (AArch64/RISC-V only)
  -ffixed-x19             Reserve the x19 register (AArch64/RISC-V only)
  -ffixed-x1              Reserve the x1 register (AArch64/RISC-V only)
  -ffixed-x20             Reserve the x20 register (AArch64/RISC-V only)
  -ffixed-x21             Reserve the x21 register (AArch64/RISC-V only)
  -ffixed-x22             Reserve the x22 register (AArch64/RISC-V only)
  -ffixed-x23             Reserve the x23 register (AArch64/RISC-V only)
  -ffixed-x24             Reserve the x24 register (AArch64/RISC-V only)
  -ffixed-x25             Reserve the x25 register (AArch64/RISC-V only)
  -ffixed-x26             Reserve the x26 register (AArch64/RISC-V only)
  -ffixed-x27             Reserve the x27 register (AArch64/RISC-V only)
  -ffixed-x28             Reserve the x28 register (AArch64/RISC-V only)
  -ffixed-x29             Reserve the x29 register (AArch64/RISC-V only)
  -ffixed-x2              Reserve the x2 register (AArch64/RISC-V only)
  -ffixed-x30             Reserve the x30 register (AArch64/RISC-V only)
  -ffixed-x31             Reserve the x31 register (AArch64/RISC-V only)
  -ffixed-x3              Reserve the x3 register (AArch64/RISC-V only)
  -ffixed-x4              Reserve the x4 register (AArch64/RISC-V only)
  -ffixed-x5              Reserve the x5 register (AArch64/RISC-V only)
  -ffixed-x6              Reserve the x6 register (AArch64/RISC-V only)
  -ffixed-x7              Reserve the x7 register (AArch64/RISC-V only)
  -ffixed-x8              Reserve the x8 register (AArch64/RISC-V only)
  -ffixed-x9              Reserve the x9 register (AArch64/RISC-V only)
  -fforce-check-cxx20-modules-input-files
                          Check the input source files from C++20 modules explicitly
  -fforce-dwarf-frame     Always emit a debug frame section
  -fforce-emit-vtables    Emits more virtual tables to improve devirtualization
  -fforce-enable-int128   Enable support for int128_t type
  -ffp-accuracy=<value>   Specifies the required accuracy for floating-point operations and library calls.
  -ffp-contract=<value>   Form fused FP ops (e.g. FMAs)
  -ffp-eval-method=<value>
                          Specifies the evaluation method to use for floating-point arithmetic.
  -ffp-exception-behavior=<value>
                          Specifies the exception behavior of floating-point operations.
  -ffp-model=<value>      Controls the semantics of floating-point calculations.
  -ffreestanding          Assert that the compilation takes place in a freestanding environment
  -ffuchsia-api-level=<value>
                          Set Fuchsia API level
  -ffunction-sections     Place each function in its own section
  -fglobal-isel           Enables the global instruction selector
  -fgnu-keywords          Allow GNU-extension keywords regardless of language standard
  -fgnu-runtime           Generate output compatible with the standard GNU Objective-C runtime
  -fgnu89-inline          Use the gnu89 inline semantics
  -fgnuc-version=<value>  Sets various macros to claim compatibility with the given GCC version (default is 4.2.1)
  -fgpu-allow-device-init Allow device side init function in HIP (experimental)
  -fgpu-approx-transcendentals
                          Use approximate transcendental functions
  -fgpu-default-stream=<value>
                          Specify default stream. The default value is 'legacy'. (CUDA/HIP only)
  -fgpu-defer-diag        Defer host/device related diagnostic messages for CUDA/HIP
  -fgpu-flush-denormals-to-zero
                          Flush denormal floating point values to zero in CUDA/HIP device mode.
  -fgpu-rdc               Generate relocatable device code, also known as separate compilation mode
  -fgpu-sanitize          Enable sanitizer for supported offloading devices
  -fhelp                  Display available options
  -fhip-emit-relocatable  Compile HIP source to relocatable
  -fhip-fp32-correctly-rounded-divide-sqrt
                          Specify that single precision floating-point divide and sqrt used in the program source are correctly rounded (HIP device compilation only)
  -fhip-kernel-arg-name   Specify that kernel argument names are preserved (HIP only)
  -fhip-new-launch-api    Use new kernel launching API for HIP
  -fhlsl-strict-availability
                          Enables strict availability diagnostic mode for HLSL built-in functions.
  -fhls                   Enable Intel FPGA High Level Synthesis extensions
  -fhonor-infinities      Specify that floating-point optimizations are not allowed that assume arguments and results are not +-inf.
  -fhonor-nan-compares    Honor NaN compares with fast math
  -fhonor-nans            Specify that floating-point optimizations are not allowed that assume arguments and results are not NANs.
  -fignore-exceptions     Enable support for ignoring exception handling constructs
  -fimf-absolute-error=<value>
                          Define the maximum allowable absolute error for math library function results
  -fimf-accuracy-bits=<value>
                          Define the relative error, measured by the number of correct bits,for math library function results
  -fimf-arch-consistency=<value>
                          Ensures that the math library functions produce consistent results across different implementations of the same architecture
  -fimf-domain-exclusion=<value>
                          Indicates the input arguments domain on which math functions must provide correct results.
  -fimf-max-error=<value> defines the maximum allowable relative error, measured in ulps, for math library function results
  -fimf-precision=<value> Defines the accuracy (precision) for math library functions.
  -fimf-use-svml=<value>  Instruct the compiler to implement math library functions using the Short Vector Math Library(SVML)
  -fimplicit-module-maps  Implicitly search the file system for module map files.
  -fincremental-extensions
                          Enable incremental processing extensions such as processingstatements on the global scope.
  -finline-functions      Inline suitable functions
  -finline-hint-functions Inline functions which are (explicitly or implicitly) marked inline
  -finline-max-stacksize=<value>
                          Suppress inlining of functions whose stack size exceeds the given value
  -finput-charset=<value> Specify the default character set for source files
  -finstrument-function-entry-bare
                          Instrument function entry only, after inlining, without arguments to the instrumentation call
  -finstrument-functions-after-inlining
                          Like -finstrument-functions, but insert the calls after inlining
  -finstrument-functions  Generate calls to instrument function entry and exit
  -fintegrated-as         Enable the integrated assembler
  -fintegrated-cc1        Run cc1 in-process
  -fintegrated-objemitter Use internal machine object code emitter.
  -fintel-long-double-size=<value>
                          Overrides the size of long double from the architecture/OS defaults.
  -fintelfpga             Perform ahead-of-time compilation for FPGA
  -fiopenmp-simd          Same as -qopenmp-simd
  -fiopenmp               Same as -qopenmp
  -fjmc                   Enable just-my-code debugging
  -fjump-tables           Use jump tables for lowering switches
  -fkeep-persistent-storage-variables
                          Enable keeping all variables that have a persistent storage duration, including global, static and thread-local variables, to guarantee that they can be directly addressed
  -fkeep-static-consts    Keep static const variables even if unused
  -fkeep-system-includes  Instead of expanding system headers when emitting preprocessor output, preserve the #include directive. Useful when producing preprocessed output for test case reduction. May produce incorrect output if preprocessor symbols that control the included content (e.g. _XOPEN_SOURCE) are defined in the including source file. The portability of the resulting source to other compilation environments is not guaranteed.
                          
                          Only valid with -E.
  -flax-vector-conversions=<value>
                          Enable implicit vector bit-casts
  -flink-huge-device-code Generate and use a custom linker script for huge device code sections
  -flto-jobs=<value>      Controls the backend parallelism of -flto=thin (default of 0 means the number of threads will be derived from the number of CPUs detected)
  -flto=auto              Enable LTO in 'full' mode
  -flto=jobserver         Enable LTO in 'full' mode
  -flto=<value>           Set LTO mode
  -flto                   Enable LTO in 'full' mode
  -fmacro-backtrace-limit=<value>
                          Set the maximum number of entries to print in a macro expansion backtrace (0 = no limit)
  -fmacro-prefix-map=<value>
                          remap file source paths in predefined preprocessor macros and __builtin_FILE(). Implies -ffile-reproducible.
  -fmaintain-32-byte-stack-align
                          Do not assume any alignment, but maintain alignment in case the stack is already aligned
  -fmath-errno            Require math functions to indicate errors by setting errno
  -fmax-tokens=<value>    Max total number of preprocessed tokens for -Wmax-tokens.
  -fmax-type-align=<value>
                          Specify the maximum alignment to enforce on pointers lacking an explicit alignment
  -fma                    Enable the combining of floating point multiples and add/subtract operations.
  -fmemory-profile-use=<pathname>
                          Use memory profile for profile-guided memory optimization
  -fmemory-profile=<directory>
                          Enable heap memory profiling and dump results into <directory>
  -fmemory-profile        Enable heap memory profiling
  -fmerge-all-constants   Allow merging of constants
  -fmerge-debug-strings   Merge identical debug strings in different object files.
  -fmessage-length=<value>
                          Format message diagnostics so that they fit within N columns
  -fminimize-whitespace   Ignore the whitespace from the input file when emitting preprocessor output. It will only contain whitespace when necessary, e.g. to keep two minus signs from merging into to an increment operator. Useful with the -P option to normalize whitespace such that two files with only formatting changes are equal.
                          
                          Only valid with -E on C-like inputs and incompatible with -traditional-cpp.
  -fmodule-file=[<name>=]<file>
                          Specify the mapping of module name to precompiled module file, or load a module file if name is omitted.
  -fmodule-header=<kind>  Build a C++20 Header Unit from a header that should be found in the user (fmodule-header=user) or system (fmodule-header=system) search path.
  -fmodule-header         Build a C++20 Header Unit from a header
  -fmodule-map-file=<file>
                          Load this module map file
  -fmodule-name=<name>    Specify the name of the module to build
  -fmodule-output=<value> Save intermediate module file results when compiling a standard C++ module unit.
  -fmodule-output         Save intermediate module file results when compiling a standard C++ module unit.
  -fmodules-cache-path=<directory>
                          Specify the module cache path
  -fmodules-decluse       Require declaration of modules used within a module
  -fmodules-disable-diagnostic-validation
                          Disable validation of the diagnostic options when loading the module
  -fmodules-ignore-macro=<value>
                          Ignore the definition of the given macro when building and loading modules
  -fmodules-prune-after=<seconds>
                          Specify the interval (in seconds) after which a module file will be considered unused
  -fmodules-prune-interval=<seconds>
                          Specify the interval (in seconds) between attempts to prune the module cache
  -fmodules-search-all    Search even non-imported modules to resolve references
  -fmodules-strict-decluse
                          Like -fmodules-decluse but requires all headers to be in modules
  -fmodules-user-build-path <directory>
                          Specify the module user build path
  -fmodules-validate-input-files-content
                          Validate PCM input files based on content if mtime differs
  -fmodules-validate-once-per-build-session
                          Don't verify input files for the modules if the module has been successfully validated or loaded during this build session
  -fmodules-validate-system-headers
                          Validate the system headers that a module depends on when loading the module
  -fmodules               Enable the 'modules' language feature
  -fms-compatibility-version=<value>
                          Dot-separated value representing the Microsoft compiler version number to report in _MSC_VER (0 = don't define it (default))
  -fms-compatibility      Enable full Microsoft Visual C++ compatibility
  -fms-define-stdc        Define '__STDC__' to '1' in MSVC Compatibility mode
  -fms-extensions         Accept some non-standard constructs supported by the Microsoft compiler
  -fms-hotpatch           Ensure that all functions can be hotpatched at runtime
  -fms-runtime-lib=<value>
                          Select Windows run-time library
  -fms-volatile           Volatile loads and stores have acquire and release semantics
  -fmsc-version=<value>   Microsoft compiler version number to report in _MSC_VER (0 = don't define it (default))
  -fnew-alignment=<align> Specifies the largest alignment guaranteed by '::operator new(size_t)'
  -fnew-infallible        Enable treating throwing global C++ operator new as always returning valid memory (annotates with __attribute__((returns_nonnull)) and throw()). This is detectable in source.
  -fno-aapcs-bitfield-width
                          Do not follow the AAPCS standard requirement stating that volatile bit-field width is dictated by the field container type. (ARM only).
  -fno-access-control     Disable C++ access control
  -fno-addrsig            Don't emit an address-significance table
  -fno-alias              Enables 'noalias' attribute for all pointer-type arguments
  -fno-align-functions    Aligns on a 2-byte boundary
  -fno-apinotes-modules   Disable module-based external API notes support
  -fno-apinotes           Disable external API notes support
  -fno-assume-sane-operator-new
                          Don't assume that C++'s global operator new can't alias any pointer
  -fno-assume-unique-vtables
                          Disable optimizations based on vtable pointer identity
  -fno-assumptions        Disable codegen and compile-time checks for C++23's [[assume]] attribute
  -fno-auto-import        MinGW specific. Disable support for automatic dllimport in code generation and linking
  -fno-autolink           Disable generation of linker directives for automatic library linking
  -fno-builtin-<value>    Disable implicit builtin knowledge of a specific function
  -fno-builtin            Disable implicit builtin knowledge of functions
  -fno-bundle-offload-arch
                          Specify that the offload bundler should not identify a bundle with specific arch. For example, the bundle for `nvptx64-nvidia-cuda-sm_80` uses the bundle tag `nvptx64-nvidia-cuda` when used. This allows .o files to contain .bc bundles that are unspecific to a particular arch version.
  -fno-c++-static-destructors
                          Disable C++ static destructor registration
  -fno-char8_t            Disable C++ builtin type char8_t
  -fno-clangir            Use the AST -> LLVM pipeline to compile
  -fno-color-diagnostics  Disable colors in diagnostics
  -fno-common             Compile common globals like normal definitions
  -fno-complete-member-pointers
                          Do not require member pointer base types to be complete if they would be significant under the Microsoft ABI
  -fno-constant-cfstrings Disable creation of CodeFoundation-type constant strings
  -fno-convergent-functions
                          Assume all functions may be convergent.
  -fno-coverage-mapping   Disable code coverage analysis
  -fno-coverage-mcdc      Disable MC/DC coverage criteria
  -fno-crash-diagnostics  Disable auto-generation of preprocessed source files and a script for reproduction during a clang crash
  -fno-cuda-prec-sqrt     Don't specify that sqrt is correctly rounded (for CUDA devices)
  -fno-cx-fortran-rules   Range reduction is disabled for complex arithmetic operations
  -fno-cx-limited-range   Basic algebraic expansions of complex arithmetic operations involving are disabled.
  -fno-cxx-modules        Disable modules for C++
  -fno-debug-macro        Do not emit macro debug information
  -fno-declspec           Disallow __declspec as a keyword
  -fno-define-target-os-macros
                          Disable predefined target OS macros
  -fno-delayed-template-parsing
                          Disable delayed template parsing
  -fno-delete-null-pointer-checks
                          Do not treat usage of null pointers as undefined behavior
  -fno-diagnostics-fixit-info
                          Do not include fixit information in diagnostics
  -fno-diagnostics-show-line-numbers
                          Show line numbers in diagnostic code snippets
  -fno-digraphs           Disallow alternative token representations '<:', ':>', '<%', '%>', '%:', '%:%:'
  -fno-direct-access-external-data
                          Use GOT indirection to reference external data symbols
  -fno-disable-block-signature-string
                          Don't disable block signature string)
  -fno-discard-value-names
                          Do not discard value names in LLVM IR
  -fno-dollars-in-identifiers
                          Disallow '$' in identifiers
  -fno-elide-constructors Disable C++ copy constructor elision
  -fno-elide-type         Do not elide types when printing diagnostics
  -fno-eliminate-unused-debug-types
                          Emit  debug info for defined but unused types
  -fno-emit-class-debug-always
                          Emit debug information for a C++ class in only one object file
  -fno-exceptions         Disable support for exception handling
  -fno-experimental-late-parse-attributes
                          Disable experimental late parsing of attributes
  -fno-experimental-relative-c++-abi-vtables
                          Do not use the experimental C++ class ABI for classes with virtual tables
  -fno-experimental-sanitize-metadata=<value>
                          Disable emitting metadata for binary analysis sanitizers
  -fno-fat-lto-objects    Disable fat LTO object support
  -fno-file-reproducible  Use the host's platform-specific path separator character when expanding the __FILE__ macro
  -fno-fine-grained-bitfield-accesses
                          Use large-integer access for consecutive bitfield runs.
  -fno-finite-loops       Do not assume that any loop is finite.
  -fno-fixed-point        Disable fixed point types
  -fno-force-enable-int128
                          Disable support for int128_t type
  -fno-global-isel        Disables the global instruction selector
  -fno-gnu-inline-asm     Disable GNU style inline asm
  -fno-gpu-allow-device-init
                          Don't allow device side init function in HIP (experimental)
  -fno-gpu-approx-transcendentals
                          Don't use approximate transcendental functions
  -fno-gpu-defer-diag     Don't defer host/device related diagnostic messages for CUDA/HIP
  -fno-hip-emit-relocatable
                          Do not override toolchain to compile HIP source to relocatable
  -fno-hip-fp32-correctly-rounded-divide-sqrt
                          Don't specify that single precision floating-point divide and sqrt used in the program source are correctly rounded (HIP device compilation only)
  -fno-hip-kernel-arg-name
                          Don't specify that kernel argument names are preserved (HIP only)
  -fno-hip-new-launch-api Don't use new kernel launching API for HIP
  -fno-honor-nan-compares Do not honor NaN compares with fast math
  -fno-integrated-as      Disable the integrated assembler
  -fno-integrated-cc1     Spawn a separate process for each cc1
  -fno-integrated-objemitter
                          Use external machine object code emitter.
  -fno-jump-tables        Do not use jump tables for lowering switches
  -fno-keep-persistent-storage-variables
                          Disable keeping all variables that have a persistent storage duration, including global, static and thread-local variables, to guarantee that they can be directly addressed
  -fno-keep-static-consts Don't keep static const variables even if unused
  -fno-knr-functions      Disable support for K&R C function declarations
  -fno-link-huge-device-code
                          Do not generate or use a custom linker script for huge device code sections (default)
  -fno-lto                Disable LTO mode (default)
  -fno-memory-profile     Disable heap memory profiling
  -fno-merge-all-constants
                          Disallow merging of constants
  -fno-merge-debug-strings
                           Do not mergeidentical debug strings in different object files.
  -fno-modules-check-relocated<value>
                          Skip checks for relocated modules when loading PCM files
  -fno-modules-validate-textual-header-includes
                          Do not enforce -fmodules-decluse and private header restrictions for textual headers. This flag will be removed in a future Clang release.
  -fno-new-infallible     Disable treating throwing global C++ operator new as always returning valid memory (annotates with __attribute__((returns_nonnull)) and throw()). This is detectable in source.
  -fno-objc-avoid-heapify-local-blocks
                          Don't try to avoid heapifying local blocks
  -fno-objc-infer-related-result-type
                          do not infer Objective-C related result type based on method family
  -fno-offload-lto        Disable LTO mode (default) for offload compilation
  -fno-offload-uniform-block
                          Don't assume that kernels are launched with uniform block sizes (default true for CUDA/HIP and false otherwise)
  -fno-openmp-device-lib=<value>
                          Control exclusion of device libraries from device binary linkage. Valid arguments are libc, libm-fp32, libm-fp64, all
  -fno-openmp-extensions  Disable all Clang extensions for OpenMP directives and clauses
  -fno-operator-names     Do not treat C++ operator name keywords as synonyms for operators
  -fno-optimize-sibling-calls
                          Disable tail call optimization, keeping the call stack accurate
  -fno-pch-codegen        Do not generate code for uses of this PCH that assumes an explicit object file will be built for the PCH
  -fno-pch-debuginfo      Do not generate debug info for types in an object file built from this PCH and do not generate them elsewhere
  -fno-plt                Use GOT indirection instead of PLT to make external function calls (x86 only)
  -fno-preserve-as-comments
                          Do not preserve comments in inline assembly
  -fno-profile-generate   Disable generation of profile instrumentation.
  -fno-profile-instr-generate
                          Disable generation of profile instrumentation.
  -fno-profile-instr-use  Disable using instrumentation data for profile-guided optimization
  -fno-pseudo-probe-for-profiling
                          Do not emit pseudo probes for sample profiling
  -fno-raw-string-literals
                          Disable raw string literals
  -fno-register-global-dtors-with-atexit
                          Don't use atexit or __cxa_atexit to register global destructors
  -fno-relaxed-template-template-args
                          Disable C++17 relaxed template template argument matching
  -fno-rtlib-add-rpath    Do not add -rpath with architecture-specific resource directory to the linker flags. When --hip-link is specified, do not add -rpath with HIP runtime library directory to the linker flags
  -fno-rtlib-defaultlib   On Windows, do not emit /defaultlib: directives to link compiler-rt libraries
  -fno-rtti-data          Disable generation of RTTI data
  -fno-rtti               Disable generation of rtti information
  -fno-sanitize-address-globals-dead-stripping
                          Disable linker dead stripping of globals in AddressSanitizer
  -fno-sanitize-address-outline-instrumentation
                          Use default code inlining logic for the address sanitizer
  -fno-sanitize-address-poison-custom-array-cookie
                          Disable poisoning array cookies when using custom operator new[] in AddressSanitizer
  -fno-sanitize-address-use-after-scope
                          Disable use-after-scope detection in AddressSanitizer
  -fno-sanitize-address-use-odr-indicator
                          Disable ODR indicator globals
  -fno-sanitize-cfi-canonical-jump-tables
                          Do not make the jump table addresses canonical in the symbol table
  -fno-sanitize-cfi-cross-dso
                          Disable control flow integrity (CFI) checks for cross-DSO calls.
  -fno-sanitize-coverage=<value>
                          Disable features of coverage instrumentation for Sanitizers
  -fno-sanitize-hwaddress-experimental-aliasing
                          Disable aliasing mode in HWAddressSanitizer
  -fno-sanitize-ignorelist
                          Don't use ignorelist file for sanitizers
  -fno-sanitize-memory-param-retval
                          Disable detection of uninitialized parameters and return values
  -fno-sanitize-memory-track-origins
                          Disable origins tracking in MemorySanitizer
  -fno-sanitize-memory-use-after-dtor
                          Disable use-after-destroy detection in MemorySanitizer
  -fno-sanitize-recover=<value>
                          Disable recovery for specified sanitizers
  -fno-sanitize-stable-abi
                          Conventional ABI instrumentation for sanitizer runtime. Default: Conventional
  -fno-sanitize-stats     Disable sanitizer statistics gathering.
  -fno-sanitize-thread-atomics
                          Disable atomic operations instrumentation in ThreadSanitizer
  -fno-sanitize-thread-func-entry-exit
                          Disable function entry/exit instrumentation in ThreadSanitizer
  -fno-sanitize-thread-memory-access
                          Disable memory access instrumentation in ThreadSanitizer
  -fno-sanitize-trap=<value>
                          Disable trapping for specified sanitizers
  -fno-sanitize-trap      Disable trapping for all sanitizers
  -fno-short-wchar        Force wchar_t to be an unsigned int
  -fno-show-column        Do not include column number on diagnostics
  -fno-show-source-location
                          Do not include source location information with diagnostics
  -fno-signed-char        char is unsigned
  -fno-signed-zeros       Allow optimizations that ignore the sign of floating point zeros
  -fno-skip-odr-check-in-gmf
                          Perform ODR checks for decls in the global module fragment.
  -fno-spell-checking     Disable spell-checking
  -fno-split-machine-functions
                          Disable late function splitting using profile information (x86 ELF/COFF)
  -fno-split-stack        Wouldn't use segmented stack
  -fno-stack-clash-protection
                          Disable stack clash protection
  -fno-stack-protector    Disable the use of stack protectors
  -fno-standalone-debug   Limit debug information produced to reduce size of debug binary
  -fno-strict-aliasing    Disable optimizations based on strict aliasing rules
  -fno-strict-float-cast-overflow
                          Relax language rules and try to match the behavior of the target's native float-to-int conversion instructions
  -fno-strict-return      Don't treat control flow paths that fall off the end of a non-void function as unreachable
  -fno-sycl-add-default-spec-consts-image
                          Turns off generation of device image where all specialization constant usages are replaced with default values.
  -fno-sycl-allow-device-dependencies
                          Do not allow dependencies between device code images (default)
  -fno-sycl-dead-args-optimization
                          Disables elimination of DPC++ dead kernel arguments
  -fno-sycl-decompose-functor
                          Do not decompose SYCL functor if possible (experimental, CUDA only)
  -fno-sycl-device-code-split-esimd
                          do not split ESIMD and SYCL device code into separate device binary images. Has effect only for SPIR-based targets. (experimental)
  -fno-sycl-device-lib-jit-link
                          Disables sycl device library jit link (experimental)
  -fno-sycl-device-lib=<value>
                          Control exclusion of device libraries from device binary linkage. Valid arguments are libc, libm-fp32, libm-fp64, all
  -fno-sycl-early-optimizations
                          Disable standard optimization pipeline for SYCL device compiler
  -fno-sycl-esimd-force-stateless-mem
                          Do not enforce using stateless memory accesses.
  -fno-sycl-explicit-simd Disable SYCL explicit SIMD extension. (deprecated)
  -fno-sycl-force-inline-kernel-lambda
                          Disallow force inline SYCL kernels lambda in entry point
  -fno-sycl-id-queries-fit-in-int
                          Do not assume that SYCL ID queries fit within MAX_INT.
  -fno-sycl-instrument-device-code
                          Do not add Instrumentation and Tracing Technology (ITT) instrumentation intrinsics calls (experimental)
  -fno-sycl-libspirv      Disable check for libspirv
  -fno-sycl-link-spirv    Disable adding of the default (spir64) triple when discovered in user specified objects and archives.
  -fno-sycl-pstl-offload  Disable offloading of C++ standard parallel algorithms.
  -fno-sycl-rdc           Generate relocatable device code during SYCL offload target compilation. Use of ‘-fno-sycl-rdc’ in combination with ‘-c’ will produce final device binaries within the generated fat object. When using this option, each kernel must be self-contained within its translation unit (source file).  Therefore, the use of SYCL_EXTERNAL is disallowed when this option is enabled.
  -fno-sycl-remove-unused-external-funcs
                          Prevent removal of unused `SYCL_EXTERNAL` functions
  -fno-sycl-unnamed-lambda
                          Disallow unnamed SYCL lambda kernels
  -fno-sycl-use-bitcode   Use SPIR-V instead of LLVM bitcode in fat objects (deprecated)
  -fno-sycl-use-footer    Disable usage of the integration footer during SYCL enabled compilations.
  -fno-sycl               Disables SYCL kernels compilation for device
  -fno-system-debug       Do not emit debug information for declarations in system headers
  -fno-temp-file          Directly create compilation output files. This may lead to incorrect incremental builds if the compiler crashes
  -fno-threadsafe-statics Do not emit code to make initialization of local statics thread safe
  -fno-trigraphs          Do not process trigraph sequences
  -fno-unified-lto        Use distinct LTO pipelines
  -fno-unique-section-names
                          Don't use unique names for text and data sections
  -fno-unroll-loops       Turn off loop unroller
  -fno-use-cxa-atexit     Don't use __cxa_atexit for calling destructors
  -fno-use-init-array     Use .ctors/.dtors instead of .init_array/.fini_array
  -fno-vec-allow-scalar-stores
                          When this option is set, an explicit simd loop (for example, one set with #pragma omp simd) will not be vectorized if it contains a store to a scalar variable that is not marked as private, lastprivate, or reduction.
  -fno-vec-peel-loops     Disable peel loop vectorization.
  -fno-vec-remainder-loops
                          Disable remainder loop vectorization.
  -fno-vec-with-mask      Disable vectorization for short trip-count loops with masking.
  -fno-verify-intermediate-code
                          Disable verification of LLVM IR
  -fno-visibility-inlines-hidden-static-local-var
                          Disables -fvisibility-inlines-hidden-static-local-var (this is the default on non-darwin targets)
  -fno-xray-function-index
                          Omit function index section at the expense of single-function patching performance
  -fno-zero-initialized-in-bss
                          Don't place zero initialized data in BSS
  -fobjc-arc-exceptions   Use EH-safe code when synthesizing retains and releases in -fobjc-arc
  -fobjc-arc              Synthesize retain and release calls for Objective-C pointers
  -fobjc-avoid-heapify-local-blocks
                          Try to avoid heapifying local blocks
  -fobjc-disable-direct-methods-for-testing
                          Ignore attribute objc_direct so that direct methods can be tested
  -fobjc-encode-cxx-class-template-spec
                          Fully encode c++ class template specialization
  -fobjc-exceptions       Enable Objective-C exceptions
  -fobjc-runtime=<value>  Specify the target Objective-C runtime kind and version
  -fobjc-weak             Enable ARC-style weak references in Objective-C
  -foffload-implicit-host-device-templates
                          Template functions or specializations without host, device and global attributes have implicit host device attributes (CUDA/HIP only)
  -foffload-lto=<value>   Set LTO mode for offload compilation
  -foffload-lto           Enable LTO in 'full' mode for offload compilation
  -foffload-uniform-block Assume that kernels are launched with uniform block sizes (default true for CUDA/HIP and false otherwise)
  -fomit-frame-pointer    Omit the frame pointer from functions that don't need it. Some stack unwinding cases, such as profilers and sanitizers, may prefer specifying -fno-omit-frame-pointer. On many targets, -O1 and higher omit the frame pointer by default. -m[no-]omit-leaf-frame-pointer takes precedence for leaf functions
  -fopenacc               Enable OpenACC
  -fopenmp-concurrent-host-device-compile<value>
                          Enable parallel compilation of host and device compilation steps when performing OpenMP offload compiles using -fopenmp-targets. (experimental)
  -fopenmp-declare-target-scalar-defaultmap=<value>
                          Assume that a scalar declare target variable with implicit data-mapping referenced in a 'target' construct has the same value in the host and device environment
  -fopenmp-device-lib=<value>
                          Control inclusion of device libraries into device binary linkage. Valid arguments are libc, libm-fp32, libm-fp64, all
  -fopenmp-device-link    Perform device link during compilation step instead of link step (-c compilations).  Use for offload compilations to produce final device binaries within the generated fat object.
  -fopenmp-extensions     Enable all Clang extensions for OpenMP directives and clauses
  -fopenmp-force-usm      Force behvaior as if the user specified pragma omp requires unified_shared_memory.
  -fopenmp-offload-mandatory
                          Do not create a host fallback if offloading to the device fails.
  -fopenmp-simd           Emit OpenMP code only for SIMD-based constructs. Advanced users who prefer to use OpenMP* as it is implemented by the LLVM community can get most of that functionality by using -fopenmp-simd.
  -fopenmp-target-buffers=<value>
                          Allow access to target objects of 4GB or larger in target code.
  -fopenmp-target-debug   Enable debugging in the OpenMP offloading device RTL
  -fopenmp-target-default-sub-group-size=<value>
                          Specify the default sub-group size of SPMD kernels generated for OpenMP target constructs for SPIR64
  -fopenmp-target-jit     Emit code that can be JIT compiled for OpenMP offloading. Implies -foffload-lto=full
  -fopenmp-targets=<value>
                          Specify comma-separated list of triples that correspond to OpenMP offloading targets to be supported.  Valid triples include spir64_gen, spir64_x86_64 and spir64
  -fopenmp-version=<value>
                          Set OpenMP version (e.g. 45 for OpenMP 4.5, 51 for OpenMP 5.1). Default value is 51 for Clang
  -fopenmp                Parse OpenMP pragmas and generate parallel code. Advanced users who prefer to use OpenMP* as it is implemented by the LLVM community can get most of that functionality by using -fopenmp.
  -foperator-arrow-depth=<value>
                          Maximum number of 'operator->'s to call for a member access
  -foptimization-record-file=<file>
                          Specify the output name of the file containing the optimization remarks. Implies -fsave-optimization-record. On Darwin platforms, this cannot be used with multiple -arch <arch> options.
  -foptimization-record-passes=<regex>
                          Only include passes which match a specified regular expression in the generated optimization record (by default, include all passes)
  -forder-file-instrumentation
                          Generate instrumented code to collect order file into default.profraw file (overridden by '=' form of option or LLVM_PROFILE_FILE env var)
  -fortlib                Allow for Fortran generated objects to be mixed and matched and linked in with the C/C++ compiler to pull in the needed libraries.
  -fp-model=<value>       Controls the semantics of floating-point calculations.
  -fp-speculation=<value> Specifies the exception behavior of floating-point operations.
  -fpack-struct=<value>   Specify the default maximum struct packing alignment
  -fpascal-strings        Recognize and construct Pascal-style string literals
  -fpass-plugin=<dsopath> Load pass plugin from a dynamic shared object file (only with new pass manager).
  -fpatchable-function-entry=<N,M>
                          Generate M NOPs before function entry and N-M NOPs after function entry
  -fpcc-struct-return     Override the default ABI to return all structs on the stack
  -fpch-codegen           Generate code for uses of this PCH that assumes an explicit object file will be built for the PCH
  -fpch-debuginfo         Generate debug info for types in an object file built from this PCH and do not generate them elsewhere
  -fpch-instantiate-templates
                          Instantiate templates already while building a PCH
  -fpch-validate-input-files-content
                          Validate PCH input files based on content if mtime differs
  -fplugin-arg-<name>-<arg>
                          Pass <arg> to plugin <name>
  -fplugin=<dsopath>      Load the named plugin (dynamic shared object)
  -fprebuilt-implicit-modules
                          Look up implicit modules in the prebuilt module path
  -fprebuilt-module-path=<directory>
                          Specify the prebuilt module path
  -fpreview-breaking-changes
                          When specified, it informs the compiler driver and compilation phases that it is allowed to break backward compatibility. When this option is specified the compiler will also set the macro __INTEL_PREVIEW_BREAKING_CHANGES.
                          When this option is used in conjunction with -fsycl, the driver will link against an alternate form of libsycl, libsycl-preview.
  -fproc-stat-report=<value>
                          Save subprocess statistics to the given file
  -fproc-stat-report<value>
                          Print subprocess statistics
  -fprofile-arcs          Instrument code to produce gcov data files (*.gcda)
  -fprofile-dwo-dir=<value>
                          Directory to store .dwo files when using -fprofile-sample-generate and -gsplit-dwarf. (experimental)
  -fprofile-exclude-files=<value>
                          Instrument only functions from files where names don't match all the regexes separated by a semi-colon
  -fprofile-filter-files=<value>
                          Instrument only functions from files where names match any regex separated by a semi-colon
  -fprofile-function-groups=<N>
                          Partition functions into N groups and select only functions in group i to be instrumented using -fprofile-selected-function-group
  -fprofile-generate=<directory>
                          Generate instrumented code to collect execution counts into <directory>/default.profraw (overridden by LLVM_PROFILE_FILE env var)
  -fprofile-generate      Generate instrumented code to collect execution counts into default.profraw (overridden by LLVM_PROFILE_FILE env var)
  -fprofile-instr-generate=<file>
                          Generate instrumented code to collect execution counts into <file> (overridden by LLVM_PROFILE_FILE env var)
  -fprofile-instr-generate
                          Generate instrumented code to collect execution counts into default.profraw file (overridden by '=' form of option or LLVM_PROFILE_FILE env var)
  -fprofile-instr-use=<value>
                          Use instrumentation data for profile-guided optimization
  -fprofile-list=<value>  Filename defining the list of functions/files to instrument. The file uses the sanitizer special case list format.
  -fprofile-ml-use        Use pre-trained machine learning model for profile guided optimizations.(deprecated)
  -fprofile-remapping-file=<file>
                          Use the remappings described in <file> to match the profile data against names in the program
  -fprofile-sample-accurate
                          Specifies that the sample profile is accurate
  -fprofile-sample-generate=<value>
                          Enable compiler and linker generating information and adjusting optimizations for Sample-based Profile Guided Optimizations (SPGO). Vaild arguments are none, keep-all-opt, med-fidelity, max-fidelity. (experimental)
  -fprofile-sample-use=<value>
                          Enable compiler and linker using information for Sample-based Profile Guided Optimizations (SPGO). (experimental)
  -fprofile-selected-function-group=<i>
                          Partition functions into N groups using -fprofile-function-groups and select only functions in group i to be instrumented. The valid range is 0 to N-1 inclusive
  -fprofile-update=<method>
                          Set update method of profile counters
  -fprofile-use=<pathname>
                          Use instrumentation data for profile-guided optimization. If pathname is a directory, it reads from <pathname>/default.profdata. Otherwise, it reads from file <pathname>.
  -fprotect-parens        Determines whether the optimizer honors parentheses when floating-point expressions are evaluated
  -fpseudo-probe-for-profiling
                          Emit pseudo probes for sample profiling
  -fptrauth-auth-traps    Enable traps on authentication failures
  -fptrauth-calls         Enable signing and authentication of all indirect calls
  -fptrauth-function-pointer-type-discrimination
                          Enable type discrimination on C function pointers
  -fptrauth-init-fini     Enable signing of function pointers in init/fini arrays
  -fptrauth-intrinsics    Enable pointer authentication intrinsics
  -fptrauth-returns       Enable signing and authentication of return addresses
  -fptrauth-vtable-pointer-address-discrimination
                          Enable address discrimination of vtable pointers
  -fptrauth-vtable-pointer-type-discrimination
                          Enable type discrimination of vtable pointers
  -frandomize-layout-seed-file=<file>
                          File holding the seed used by the randomize structure layout feature
  -frandomize-layout-seed=<seed>
                          The seed used by the randomize structure layout feature
  -fraw-string-literals   Enable raw string literals
  -freciprocal-math       Allow division operations to be reassociated
  -freg-struct-return     Override the default ABI to return small structs in registers
  -fregister-global-dtors-with-atexit
                          Use atexit or __cxa_atexit to register global destructors
  -frelaxed-template-template-args
                          Enable C++17 relaxed template template argument matching
  -fropi                  Generate read-only position independent code (ARM only)
  -frounding-math         Disable floating point optimizations that assume the default rounding mode.
  -frtlib-add-rpath       Add -rpath with architecture-specific resource directory to the linker flags. When --hip-link is specified, also add -rpath with HIP runtime library directory to the linker flags
  -frtlib-defaultlib      On Windows, emit /defaultlib: directives to link compiler-rt libraries (default)
  -frwpi                  Generate read-write position independent code (ARM only)
  -fsafe-buffer-usage-suggestions
                          Display suggestions to update code associated with -Wunsafe-buffer-usage warnings
  -fsample-profile-use-profi
                          Use profi to infer block and edge counts
  -fsanitize-address-destructor=<value>
                          Set the kind of module destructors emitted by AddressSanitizer instrumentation. These destructors are emitted to unregister instrumented global variables when code is unloaded (e.g. via `dlclose()`).
  -fsanitize-address-field-padding=<value>
                          Level of field padding for AddressSanitizer
  -fsanitize-address-globals-dead-stripping
                          Enable linker dead stripping of globals in AddressSanitizer
  -fsanitize-address-outline-instrumentation
                          Always generate function calls for address sanitizer instrumentation
  -fsanitize-address-poison-custom-array-cookie
                          Enable poisoning array cookies when using custom operator new[] in AddressSanitizer
  -fsanitize-address-use-after-return=<mode>
                          Select the mode of detecting stack use-after-return in AddressSanitizer
  -fsanitize-address-use-after-scope
                          Enable use-after-scope detection in AddressSanitizer
  -fsanitize-address-use-odr-indicator
                          Enable ODR indicator globals to avoid false ODR violation reports in partially sanitized programs at the cost of an increase in binary size
  -fsanitize-cfi-canonical-jump-tables
                          Make the jump table addresses canonical in the symbol table
  -fsanitize-cfi-cross-dso
                          Enable control flow integrity (CFI) checks for cross-DSO calls.
  -fsanitize-cfi-icall-experimental-normalize-integers
                          Normalize integers in CFI indirect call type signature checks
  -fsanitize-cfi-icall-generalize-pointers
                          Generalize pointers in CFI indirect call type signature checks
  -fsanitize-coverage-allowlist=<value>
                          Restrict sanitizer coverage instrumentation exclusively to modules and functions that match the provided special case list, except the blocked ones
  -fsanitize-coverage-ignorelist=<value>
                          Disable sanitizer coverage instrumentation for modules and functions that match the provided special case list, even the allowed ones
  -fsanitize-coverage=<value>
                          Specify the type of coverage instrumentation for Sanitizers
  -fsanitize-hwaddress-abi=<value>
                          Select the HWAddressSanitizer ABI to target (interceptor or platform, default interceptor). This option is currently unused.
  -fsanitize-hwaddress-experimental-aliasing
                          Enable aliasing mode in HWAddressSanitizer
  -fsanitize-ignorelist=<value>
                          Path to ignorelist file for sanitizers
  -fsanitize-memory-param-retval
                          Enable detection of uninitialized parameters and return values
  -fsanitize-memory-track-origins=<value>
                          Enable origins tracking in MemorySanitizer
  -fsanitize-memory-track-origins
                          Enable origins tracking in MemorySanitizer
  -fsanitize-memory-use-after-dtor
                          Enable use-after-destroy detection in MemorySanitizer
  -fsanitize-memtag-mode=<value>
                          Set default MTE mode to 'sync' (default) or 'async'
  -fsanitize-recover=<value>
                          Enable recovery for specified sanitizers
  -fsanitize-stable-abi   Stable  ABI instrumentation for sanitizer runtime. Default: Conventional
  -fsanitize-stats        Enable sanitizer statistics gathering.
  -fsanitize-system-ignorelist=<value>
                          Path to system ignorelist file for sanitizers
  -fsanitize-thread-atomics
                          Enable atomic operations instrumentation in ThreadSanitizer (default)
  -fsanitize-thread-func-entry-exit
                          Enable function entry/exit instrumentation in ThreadSanitizer (default)
  -fsanitize-thread-memory-access
                          Enable memory access instrumentation in ThreadSanitizer (default)
  -fsanitize-trap=<value> Enable trapping for specified sanitizers
  -fsanitize-trap         Enable trapping for all sanitizers
  -fsanitize-undefined-strip-path-components=<number>
                          Strip (or keep only, if negative) a given number of path components when emitting check metadata.
  -fsanitize=<check>      Turn on runtime checks for various forms of undefined or suspicious behavior. See user manual for available checks
  -fsave-optimization-record=<format>
                          Generate an optimization record file in a specific format
  -fsave-optimization-record
                          Generate a YAML optimization record file
  -fseh-exceptions        Use SEH style exceptions
  -fseparate-named-sections
                          Use separate unique sections for named sections (ELF Only)
  -fshort-enums           Allocate to an enum type only as many bytes as it needs for the declared range of possible values
  -fshort-wchar           Force wchar_t to be a short unsigned int
  -fshow-overloads=<value>
                          Which overload candidates to show when overload resolution fails. Defaults to 'all'
  -fshow-skipped-includes Show skipped includes in -H output.
  -fsigned-char           char is signed
  -fsized-deallocation    Enable C++14 sized global deallocation functions
  -fsjlj-exceptions       Use SjLj style exceptions
  -fskip-odr-check-in-gmf Skip ODR checks for decls in the global module fragment.
  -fslp-vectorize         Enable the superword-level parallelism vectorization passes
  -fspell-checking-limit=<value>
                          Set the maximum number of times to perform spell checking on unrecognized identifiers (0 = no limit)
  -fsplit-dwarf-inlining  Provide minimal debug info in the object/executable to facilitate online symbolication/stack traces in the absence of .dwo/.dwp files when using Split DWARF
  -fsplit-lto-unit        Enables splitting of the LTO unit
  -fsplit-machine-functions
                          Enable late function splitting using profile information (x86 ELF/COFF)
  -fsplit-stack           Use segmented stack
  -fstack-clash-protection
                          Enable stack clash protection
  -fstack-limit-register=<value>
                          Limits the stack register size
  -fstack-protector-all   Enable stack protectors for all functions
  -fstack-protector-strong
                          Enable stack protectors for some functions vulnerable to stack smashing. Compared to -fstack-protector, this uses a stronger heuristic that includes functions containing arrays of any size (and any type), as well as any calls to alloca or the taking of an address from a local variable
  -fstack-protector       Enable stack protectors for some functions vulnerable to stack smashing. This uses a loose heuristic which considers functions vulnerable if they contain a char (or 8bit integer) array or constant sized calls to alloca , which are of greater size than ssp-buffer-size (default: 8 bytes). All variable sized calls to alloca are considered vulnerable. A function with a stack protector has a guard value added to the stack frame that is checked on function exit. The guard value must be positioned in the stack frame such that a buffer overflow from a vulnerable variable will overwrite the guard value before overwriting the function's return address. The reference stack guard value is stored in a global variable.
  -fstack-security-check  Enable overflow security checks
  -fstack-size-section    Emit section containing metadata on function stack sizes
  -fstack-usage           Emit .su file containing information on function stack sizes
  -fstandalone-debug      Emit full debug info for all types used by the program
  -fstrict-aliasing       Enable optimizations based on strict aliasing rules
  -fstrict-enums          Enable optimizations based on the strict definition of an enum's value range
  -fstrict-flex-arrays=<n>
                          Enable optimizations based on the strict definition of flexible arrays
  -fstrict-float-cast-overflow
                          Assume that overflowing float-to-int casts are undefined (default)
  -fstrict-vtable-pointers
                          Enable optimizations based on the strict rules for overwriting polymorphic C++ objects
  -fswift-async-fp=<option>
                          Control emission of Swift async extended frame info
  -fsycl-add-default-spec-consts-image
                          Generates a copy of every device image that uses a specialization constant and replaces all usages of specialization constant with default values specified by specialization_id. If a device image doesn't use a specialization constant at all then no copy is generated. This option is only useful if used in conjunction with Ahead of Time Compilation (-fsycl-target command line option).
  -fsycl-allow-device-dependencies
                          Allow dependencies between device code images
  -fsycl-dead-args-optimization
                          Enables elimination of DPC++ dead kernel arguments
  -fsycl-decompose-functor
                          Do decompose SYCL functor if possible (experimental, CUDA only)
  -fsycl-default-sub-group-size <value>
                          Set the default sub group size for SYCL kernels
  -fsycl-device-code-split-esimd
                          split ESIMD device code from SYCL into a separate device binary image (default). Has effect only for SPIR-based targets. (experimental)
  -fsycl-device-code-split=<value>
                          Perform SYCL device code split: per_kernel (device code module is created for each SYCL kernel) | per_source (device code module is created for each source (translation unit)) | off (no device code split). | auto (use heuristic to select the best way of splitting device code). Default is 'auto' - use heuristic to distribute device code across modules
  -fsycl-device-code-split
                          Perform SYCL device code split in the 'auto' mode, i.e. use heuristic to distribute device code across modules
  -fsycl-device-lib-jit-link
                          Enables sycl device library jit link (experimental)
  -fsycl-device-lib=<value>
                          Control inclusion of device libraries into device binary linkage. Valid arguments are libc, libm-fp32, libm-fp64, libimf-fp32, libimf-fp64, libimf-bf16, all
  -fsycl-device-obj=<value>
                          Specify format of device code stored in the resulting object. Valid values are: spirv, llvmir (default)
  -fsycl-device-only      Compile SYCL kernels for device
  -fsycl-disable-range-rounding
                          Deprecated: please use -fsycl-range-rounding=disable instead.
  -fsycl-dump-device-code=<value>
                          Dump device code into the user provided directory.
  -fsycl-early-optimizations
                          Enable standard optimization pipeline for SYCL device compiler
  -fsycl-embed-ir         Embed LLVM IR for runtime kernel fusion
  -fsycl-enable-function-pointers
                          Experimental Feature: Enables function pointers and support for virtual functions for DPC++ kernels and device functions.
  -fsycl-esimd-force-stateless-mem
                          Enforce using stateless memory accesses. Convert stateful accesses via SYCL accessors to stateless within ESIMD kernels. Enabled by default.
  -fsycl-exp-range-rounding
                          Use experimental range rounding.
  -fsycl-explicit-simd    Enable SYCL explicit SIMD extension. (deprecated)
  -fsycl-footer-path=<value>
                          Specify the location of the temporary source file with the included integration footer.
  -fsycl-force-inline-kernel-lambda
                          Allow force inline SYCL kernels lambda in entry point
  -fsycl-force-target=<value>
                          Force the usage of the given triple when extracting device code from any given objects on the command line
  -fsycl-fp32-prec-sqrt   SYCL only. Specify that single precision floating-point sqrt is correctly rounded.
  -fsycl-fp64-conv-emu    Enable fp64 partial emulation for kernels with only fp64 conversion operations and no fp64 computation operations (requires Intel GPU backend supporting fp64 partial emulation).
  -fsycl-help=<value>     Emit help information from the related offline compilation tool. Valid values: all, fpga, gen, x86_64.
  -fsycl-help             Emit help information from all of the offline compilation tools
  -fsycl-host-compiler-options=<value>
                          When performing the host compilation with -fsycl-host-compiler specified, use the given options during that compile. Options are expected to be a quoted list of space separated options.
  -fsycl-host-compiler=<value>
                          Specify C++ compiler binary to perform host compilation with during SYCL offload compiles.
  -fsycl-id-queries-fit-in-int
                          Assume that SYCL ID queries fit within MAX_INT.
  -fsycl-instrument-device-code
                          Add Instrumentation and Tracing Technology (ITT) instrumentation intrinsics calls (experimental)
  -fsycl-libspirv-path=<value>
                          Path to libspirv library
  -fsycl-link=<value>     Generate partially linked device and host object to be used at various stages of compilation
  -fsycl-link             Generate partially linked device object to be used with the host link
  -fsycl-max-parallel-link-jobs=<value>
                          Experimental feature: Controls the maximum parallelism of actions performed on SYCL device code post-link, i.e. the generation of SPIR-V device images or AOT compilation of each device image.
  -fsycl-optimize-non-user-code
                          Option used in conjunction with -O0 to optimize SYCL framework utility functions and leave user's kernel code unoptimized. (experimental)
  -fsycl-pstl-offload=<value>
                          Enable offloading of C++ standard parallel algorithms. Valid arguments are gpu and cpu.
  -fsycl-pstl-offload     Enable offloading of C++ standard parallel algorithms.
  -fsycl-range-rounding=<value>
                          Options for range rounding of SYCL range kernels: disable (do not generate range rounded kernels) force (only generate range rounded kernels) on (generate range rounded kernels as well as unrounded kernels). Default is 'on'
  -fsycl-remove-unused-external-funcs
                          Allow removal of unused `SYCL_EXTERNAL` functions (default)
  -fsycl-targets=<value>  Specify comma-separated list of triples that correspond to SYCL offloading targets to be supported. Valid triples include spir64_gen, spir64_x86_64, spir64_fpga and spir64
  -fsycl-unnamed-lambda   Allow unnamed SYCL lambda kernels
  -fsycl-use-bitcode      Use LLVM bitcode instead of SPIR-V in fat objects (deprecated)
  -fsycl                  Enables SYCL kernels compilation for device
  -fsyntax-only           Run the preprocessor, parser and semantic analysis stages
  -fsystem-debug          Emit debug information for declarations in system headers
  -fsystem-module         Build this module as a system module. Only used with -emit-module
  -ftarget-compile-fast   Experimental feature: Reduce target compilation time, with potential runtime performance trade-off.
  -ftarget-export-symbols Expose exported symbols in a generated target library to allow for visibilty to other modules.
  -ftarget-register-alloc-mode=<value>
                          Specify a register allocation mode for specific hardware for use by supported target backends.
  -ftemplate-backtrace-limit=<value>
                          Set the maximum number of entries to print in a template instantiation backtrace (0 = no limit)
  -ftemplate-depth=<value>
                          Set the maximum depth of recursive template instantiation
  -ftest-coverage         Produce gcov notes files (*.gcno)
  -fthin-link-bitcode=<value>
                          Write minimized bitcode to <file> for the ThinLTO thin link only
  -fthinlto-index=<value> Perform ThinLTO importing using provided function summary index
  -ftime-report=<value>   (For new pass manager) 'per-pass': one report for each pass; 'per-pass-run': one report for each pass invocation
  -ftime-trace-granularity=<value>
                          Minimum time granularity (in microseconds) traced by time profiler
  -ftime-trace=<value>    Similar to -ftime-trace. Specify the JSON file or a directory which will contain the JSON file
  -ftime-trace            Turn on time profiler. Generates JSON file based on output filename.
  -ftrap-function=<value> Issue call to specified function rather than a trap instruction
  -ftrapv-handler=<function name>
                          Specify the function to be called on overflow
  -ftrapv                 Trap on integer overflow
  -ftrigraphs             Process trigraph sequences
  -ftrivial-auto-var-init-max-size=<value>
                          Stop initializing trivial automatic stack variables if var size exceeds the specified number of instances (in bytes)
  -ftrivial-auto-var-init-stop-after=<value>
                          Stop initializing trivial automatic stack variables after the specified number of instances
  -ftrivial-auto-var-init=<value>
                          Initialize trivial automatic stack variables. Defaults to 'uninitialized'
  -ftz                    Enable flush denormal results to zero
  -funified-lto           Use the unified LTO pipeline
  -funique-basic-block-section-names
                          Use unique names for basic block sections (ELF Only)
  -funique-internal-linkage-names
                          Uniqueify Internal Linkage Symbol Names by appending the MD5 hash of the module path
  -funroll-loops          Turn on loop unroller
  -funsafe-math-optimizations
                          Allow unsafe floating-point math optimizations which may decrease precision
  -fuse-complex-intrinsics
                          Determines whether to lower _Complex operations to LLVM complex intrinsics
  -fuse-cuid=<value>      Method to generate ID's for compilation units for single source offloading languages CUDA and HIP: 'hash' (ID's generated by hashing file path and command line options) | 'random' (ID's generated as random numbers) | 'none' (disabled). Default is 'hash'. This option will be overridden by option '-cuid=[ID]' if it is specified.
  -fuse-line-directives   Use #line in preprocessed output
  -fvalidate-ast-input-files-content
                          Compute and store the hash of input files used to build an AST. Files with mismatching mtime's are considered valid if both contents is identical
  -fvec-allow-scalar-stores
                          When this option is set, an explicit simd loop (for example, one set with #pragma omp simd) will be vectorized even if it contains a store to a scalar variable that is not marked as private, lastprivate, or reduction.
  -fvec-peel-loops        Enable peel loop vectorization.
  -fvec-remainder-loops   Enable remainder loop vectorization.
  -fvec-with-mask         Enable vectorization for short trip-count loops with masking.
  -fveclib=<value>        Use the given vector functions library
  -fvectorize             Enable the loop vectorization passes
  -fverbose-asm           Generate verbose assembly output
  -fverify-intermediate-code
                          Enable verification of LLVM IR
  -fvirtual-function-elimination
                          Enables dead virtual function elimination optimization. Requires -flto=full
  -fvisibility-dllexport=<value>
                          The visibility for dllexport definitions. If Keep is specified the visibility is not adjusted [-fvisibility-from-dllstorageclass]
  -fvisibility-externs-dllimport=<value>
                          The visibility for dllimport external declarations. If Keep is specified the visibility is not adjusted [-fvisibility-from-dllstorageclass]
  -fvisibility-externs-nodllstorageclass=<value>
                          The visibility for external declarations without an explicit DLL storage class. If Keep is specified the visibility is not adjusted [-fvisibility-from-dllstorageclass]
  -fvisibility-from-dllstorageclass
                          Override the visibility of globals based on their final DLL storage class.
  -fvisibility-global-new-delete-hidden
                          Give global C++ operator new and delete declarations hidden visibility
  -fvisibility-global-new-delete=<value>
                          The visibility for global C++ operator new and delete declarations. If 'source' is specified the visibility is not adjusted
  -fvisibility-inlines-hidden-static-local-var
                          When -fvisibility-inlines-hidden is enabled, static variables in inline C++ member functions will also be given hidden visibility by default
  -fvisibility-inlines-hidden
                          Give inline C++ member functions hidden visibility by default
  -fvisibility-ms-compat  Give global types 'default' visibility and global functions and variables 'hidden' visibility by default
  -fvisibility-nodllstorageclass=<value>
                          The visibility for definitions without an explicit DLL storage class. If Keep is specified the visibility is not adjusted [-fvisibility-from-dllstorageclass]
  -fvisibility=<value>    Set the default symbol visibility for all global definitions
  -fwasm-exceptions       Use WebAssembly style exceptions
  -fwhole-program-vtables Enables whole-program vtable optimization. Requires -flto
  -fwrapv                 Treat signed integer overflow as two's complement
  -fwritable-strings      Store string literals as writable data
  -fxl-pragma-pack        Enable IBM XL #pragma pack handling
  -fxray-always-emit-customevents
                          Always emit __xray_customevent(...) calls even if the containing function is not always instrumented
  -fxray-always-emit-typedevents
                          Always emit __xray_typedevent(...) calls even if the containing function is not always instrumented
  -fxray-always-instrument=<value>
                          DEPRECATED: Filename defining the whitelist for imbuing the 'always instrument' XRay attribute.
  -fxray-attr-list=<value>
                          Filename defining the list of functions/types for imbuing XRay attributes.
  -fxray-function-groups=<value>
                          Only instrument 1 of N groups
  -fxray-ignore-loops     Don't instrument functions with loops unless they also meet the minimum function size
  -fxray-instruction-threshold=<value>
                          Sets the minimum function size to instrument with XRay
  -fxray-instrumentation-bundle=<value>
                          Select which XRay instrumentation points to emit. Options: all, none, function-entry, function-exit, function, custom. Default is 'all'.  'function' includes both 'function-entry' and 'function-exit'.
  -fxray-instrument       Generate XRay instrumentation sleds on function entry and exit
  -fxray-link-deps        Link XRay runtime library when -fxray-instrument is specified (default)
  -fxray-modes=<value>    List of modes to link in by default into XRay instrumented binaries.
  -fxray-never-instrument=<value>
                          DEPRECATED: Filename defining the whitelist for imbuing the 'never instrument' XRay attribute.
  -fxray-selected-function-group=<value>
                          When using -fxray-function-groups, select which group of functions to instrument. Valid range is 0 to fxray-function-groups - 1
  -fzero-call-used-regs=<value>
                          Clear call-used registers upon function return (AArch64/x86 only)
  -fzvector               Enable System z vector language extension
  -F <value>              Add directory to framework include search path
  --gcc-install-dir=<value>
                          Use GCC installation in the specified directory. The directory ends with path components like 'lib{,32,64}/gcc{,-cross}/$triple/$version'. Note: executables (e.g. ld) used by the compiler are not overridden by the selected GCC installation
  --gcc-toolchain=<value> Specify a directory where Clang can find 'include' and 'lib{,32,64}/gcc{,-cross}/$triple/$version'. Clang will use the GCC installation with the largest version
  --gcc-triple=<value>    Search for the GCC installation with the specified triple.
  -gcodeview-command-line Emit compiler path and command line into CodeView debug information
  -gcodeview-ghash        Emit type record hashes in a .debug$H section
  -gcodeview              Generate CodeView debug information
  -gdwarf-2               Generate source-level debug information with dwarf version 2
  -gdwarf-3               Generate source-level debug information with dwarf version 3
  -gdwarf-4               Generate source-level debug information with dwarf version 4
  -gdwarf-5               Generate source-level debug information with dwarf version 5
  -gdwarf32               Enables DWARF32 format for ELF binaries, if debug information emission is enabled.
  -gdwarf64               Enables DWARF64 format for ELF binaries, if debug information emission is enabled.
  -gdwarf                 Generate source-level debug information with the default dwarf version
  -gembed-source          Embed source text in DWARF debug sections
  -gen-reproducer=<value> Emit reproducer on (option: off, crash (default), error, always)
  -gintel-sti             Generate Intel STI debug information
  -gline-directives-only  Emit debug line info directives only
  -gline-tables-only      Emit debug line number tables only
  -global-hoist           Enable external globals are load safe (default)
  -gmodules               Generate debug info with external references to clang modules or precompiled headers
  -gno-codeview-command-line
                          Don't emit compiler path and command line into CodeView debug information
  -gno-embed-source       Restore the default behavior of not embedding source text in DWARF debug sections
  -gno-inline-line-tables Don't emit inline line tables.
  --gpu-bundle-output     Bundle output files of HIP device compilation
  --gpu-instrument-lib=<value>
                          Instrument device library for HIP, which is a LLVM bitcode containing __cyg_profile_func_enter and __cyg_profile_func_exit
  --gpu-max-threads-per-block=<value>
                          Default max threads per block for kernel launch bounds for HIP
  -gpulibc                Link the LLVM C Library for GPUs
  -gsplit-dwarf=<value>   Set DWARF fission mode
  -gstrict-dwarf          Restrict DWARF features to those defined in the specified version, avoiding features from later versions.
  -gz=<value>             DWARF debug sections compression type
  -G <size>               Put objects of at most <size> bytes into small data section (MIPS / Hexagon)
  -g                      Generate source-level debug information
  --help-hidden           Display help for hidden options
  -help                   Display available options
  --hip-device-lib=<value>
                          HIP device library
  --hip-link              Link clang-offload-bundler bundles for HIP
  --hip-path=<value>      HIP runtime installation path, used for finding HIP version and adding HIP include path.
  --hip-version=<value>   HIP version in the format of major.minor.patch
  --hipspv-pass-plugin=<dsopath>
                          path to a pass plugin for HIP to SPIR-V passes.
  --hipstdpar-interpose-alloc
                          Replace all memory allocation / deallocation calls with hipManagedMalloc / hipFree equivalents
  --hipstdpar-path=<value>
                          HIP Standard Parallel Algorithm Acceleration library path, used for finding and implicitly including the library header
  --hipstdpar-prim-path=<value>
                          rocPrim path, required by the HIP Standard Parallel Algorithm Acceleration library, used to implicitly include the rocPrim library
  --hipstdpar-thrust-path=<value>
                          rocThrust path, required by the HIP Standard Parallel Algorithm Acceleration library, used to implicitly include the rocThrust library
  --hipstdpar             Enable HIP acceleration for standard parallel algorithms
  -H                      Show header includes and nesting depth
  -I-                     Restrict all prior -I flags to double-quoted inclusion and remove current directory from include path
  -iapinotes-modules <directory>
                          Add directory to the API notes search path referenced by module name
  -ibuiltininc            Enable builtin #include directories even when -nostdinc is used before or after -ibuiltininc. Using -nobuiltininc after the option disables it
  -idirafter <value>      Add directory to AFTER include search path
  -iframeworkwithsysroot <directory>
                          Add directory to SYSTEM framework search path, absolute paths are relative to -isysroot
  -iframework <value>     Add directory to SYSTEM framework search path
  -imacros <file>         Include macros from file before parsing
  -include-pch <file>     Include precompiled header file
  -include <file>         Include file before parsing
  -index-header-map       Make the next included directory (-I or -F) an indexer header map
  -inline-forceinline     Treat inline routines as forceinline
  -inline-level=<value>   Set function inlining level where: 0 is disable, 1 is inline marked functions and 2 is inline at compilers discretion
  --intel                 Run in Intel Compiler mode
  -ipo                    Enable LTO in 'full' mode
  -ipp-link=<value>       Link Intel(R) IPP libraries in requested manner (static,dynamic,shared)
  -ipp=<value>            Link commonly used Intel(R) Integrated Performace Primitives (Intel(R) IPP) libraries and bring in the associated headers (common,crypto,nonpic,nonpic_crypto)
  -iprefix <dir>          Set the -iwithprefix/-iwithprefixbefore prefix
  -iquote <directory>     Add directory to QUOTE include search path
  -isysroot <dir>         Set the system root directory (usually /)
  -isystem-after <directory>
                          Add directory to end of the SYSTEM include search path
  -isystem <directory>    Add directory to SYSTEM include search path
  -ivfsoverlay-lib <value>
                          Load the virtual filesystem from shared library
  -ivfsoverlay <value>    Overlay the virtual filesystem described by file over the real file system
  -iwithprefixbefore <dir>
                          Set directory to include search path with prefix
  -iwithprefix <dir>      Set directory to SYSTEM include search path with prefix
  -iwithsysroot <directory>
                          Add directory to SYSTEM include search path, absolute paths are relative to -isysroot
  -I <dir>                Add directory to the end of the list of include search paths
  --libomptarget-amdgcn-bc-path=<value>
                          Path to libomptarget-amdgcn bitcode library
  --libomptarget-amdgpu-bc-path=<value>
                          Path to libomptarget-amdgcn bitcode library
  --libomptarget-nvptx-bc-path=<value>
                          Path to libomptarget-nvptx bitcode library
  -L <dir>                Add directory to library search path
  -mabi=quadword-atomics  Enable quadword atomics ABI on AIX (AIX PPC64 only). Uses lqarx/stqcx. instructions.
  -mabicalls              Enable SVR4-style position-independent code (Mips only)
  -maix-shared-lib-tls-model-opt
                          For shared library loaded with the main program, change local-dynamic access(es) to initial-exec access(es) at the function level (AIX 64-bit only).
  -maix-small-local-dynamic-tls
                          Produce a faster access sequence for local-dynamic TLS variables where the offset from the TLS base is encoded as an immediate operand (AIX 64-bit only). This access sequence is not used for variables larger than 32KB.
  -maix-small-local-exec-tls
                          Produce a faster access sequence for local-exec TLS variables where the offset from the TLS base is encoded as an immediate operand (AIX 64-bit only). This access sequence is not used for variables larger than 32KB.
  -maix-struct-return     Return all structs in memory (PPC32 only)
  -malign-branch-boundary=<value>
                          Specify the boundary's size to align branches
  -malign-branch=<value>  Specify types of branches to align
  -malign-double          Align doubles to two words in structs (x86 only)
  -maltivec               Enable AltiVec vector initializer syntax
  -mamdgpu-ieee           Sets the IEEE bit in the expected default floating point  mode register. Floating point opcodes that support exception flag gathering quiet and propagate signaling NaN inputs per IEEE 754-2008. This option changes the ABI. (AMDGPU only)
  -mamdgpu-precise-memory-op
                          Enable precise memory mode (AMDGPU only)
  -mapx-features=<value>  Enable features of APX
  -mapx-inline-asm-use-gpr32
                          Enable use of GPR32 in inline assembly for APX
  -march=<value>          For a list of available architectures for the target use '-mcpu=help'
  -marm64x<value>         Link as a hybrid ARM64X image
  -mauto-arch=<codes>     generate multiple, processor-specific, auto-dispatched code paths for X86 processors, specified by <codes>, if there is a performance benefit
  -mbackchain             Link stack frames through backchain on System Z
  -mbranch-protection=<value>
                          Enforce targets of indirect branches and function returns
  -mbranches-within-32B-boundaries
                          Align selected branches (fused, jcc, jmp) within 32-byte boundary
  -mcabac                 Enable CABAC instructions
  -mcmse                  Allow use of CMSE (Armv8-M Security Extensions)
  -mcode-object-version=<value>
                          Specify code object ABI version. Defaults to 5. (AMDGPU only)
  -mconstructor-aliases   Enable emitting complete constructors and destructors as aliases when possible
  -mcpu=<value>           For a list of available CPUs for the target use '-mcpu=help'
  -mcrbits                Control the CR-bit tracking feature on PowerPC. ``-mcrbits`` (the enablement of CR-bit tracking support) is the default for POWER8 and above, as well as for all other CPUs when optimization is applied (-O2 and above).
  -mcrc                   Allow use of CRC instructions (ARM/Mips only)
  -mcumode                Specify CU wavefront execution mode (AMDGPU only)
  -mdaz-ftz               Globally set the denormals-are-zero (DAZ) and flush-to-zero (FTZ) bits in the floating-point control register on program startup
  -mdebug-line-version=<value>
                          Set debug line version used when generating debug information
  -mdefault-visibility-export-mapping=<value>
                          Mapping between default visibility and export
  -mdouble=<n             Force double to be <n> bits
  -MD                     Write a depfile containing user and system headers
  -meabi <value>          Set EABI type. Default depends on triple)
  -membedded-data         Place constants in the .rodata section instead of the .sdata section even if they meet the -G <size> threshold (MIPS)
  -menable-experimental-extensions
                          Enable use of experimental RISC-V extensions.
  -mexec-model=<value>    Execution model (WebAssembly only)
  -mexecute-only          Disallow generation of data access to code sections (ARM only)
  -mextern-sdata          Assume that externally defined data is in the small data if it meets the -G <size> threshold (MIPS)
  -mfentry                Insert calls to fentry at function entry (x86/SystemZ only)
  -mfix-cmse-cve-2021-35465
                          Work around VLLDM erratum CVE-2021-35465 (ARM only)
  -mfix-cortex-a53-835769 Workaround Cortex-A53 erratum 835769 (AArch64 only)
  -mfix-cortex-a57-aes-1742098
                          Work around Cortex-A57 Erratum 1742098 (ARM only)
  -mfix-cortex-a72-aes-1655431
                          Work around Cortex-A72 Erratum 1655431 (ARM only)
  -mforced-sw-shadow-stack
                          Force using software shadow stack when shadow-stack enabled
  -mfp32                  Use 32-bit floating point registers (MIPS only)
  -mfp64                  Use 64-bit floating point registers (MIPS only)
  -mframe-chain=<value>   Select the frame chain model used to emit frame records (Arm only).
  -mfunction-return=<value>
                          Replace returns with jumps to ``__x86_return_thunk`` (x86 only, error otherwise)
  -MF <file>              Write depfile output from -MMD, -MD, -MM, or -M to <file>
  -mgeneral-regs-only     Generate code which only uses the general purpose registers (AArch64/x86 only)
  -mglobal-merge          Enable merging of globals
  -mgpopt                 Use GP relative accesses for symbols known to be in a small data section (MIPS)
  -mguard=<value>         Enable or disable Control Flow Guard checks and guard tables emission
  -MG                     Add missing headers to depfile
  -mharden-sls=<value>    Select straight-line speculation hardening scope (ARM/AArch64/X86 only). <arg> must be: all, none, retbr(ARM/AArch64), blr(ARM/AArch64), comdat(ARM/AArch64), nocomdat(ARM/AArch64), return(X86), indirect-jmp(X86)
  -mhvx-ieee-fp           Enable Hexagon HVX IEEE floating-point
  -mhvx-length=<value>    Set Hexagon Vector Length
  -mhvx-qfloat            Enable Hexagon HVX QFloat instructions
  -mhvx=<value>           Enable Hexagon Vector eXtensions
  -mhvx                   Enable Hexagon Vector eXtensions
  -miamcu                 Use Intel MCU ABI
  -mignore-xcoff-visibility
                          Not emit the visibility attribute for asm in AIX OS or give all symbols 'unspecified' visibility in XCOFF object file
  --migrate               Run the migrator
  -mincremental-linker-compatible
                          (integrated-as) Emit an object file which can be used with an incremental linker
  -mindirect-branch-cs-prefix
                          Add cs prefix to call and jmp to indirect thunk
  -mindirect-jump=<value> Change indirect jump instructions to inhibit speculation
  -mintrinsic-promote     Force certain functions using intrinsics to promote their architectures and make the intrinsic headers included by default
  -mios-version-min=<value>
                          Set iOS deployment target
  -MJ <value>             Write a compilation database entry per input
  -mlasx                  Enable Loongson Advanced SIMD Extension (LASX).
  -mlink-builtin-bitcode-postopt
                          Link builtin bitcodes after the optimization pipeline
  -mllvm-lto <value>      Additional arguments to forward to LLVM's option processing. Similar to -mllvm, but will also pass the given argument to the LTO step when appropriate.
  -mllvm=<arg>            Alias for -mllvm
  -mllvm <value>          Additional arguments to forward to LLVM's option processing
  -mlocal-sdata           Extend the -G behaviour to object local data (MIPS)
  -mlong-calls            Generate branches with extended addressability, usually via indirect jumps.
  -mlong-double-128       Force long double to be 128 bits
  -mlong-double-64        Force long double to be 64 bits
  -mlong-double-80        Force long double to be 80 bits, padded to 128 bits for storage
  -mlr-for-calls-only     Do not allocate the LR register for general purpose usage, only for calls. (AArch64 only)
  -mlsx                   Enable Loongson SIMD Extension (LSX).
  -mlvi-cfi               Enable only control-flow mitigations for Load Value Injection (LVI)
  -mlvi-hardening         Enable all mitigations for Load Value Injection (LVI)
  -mmacos-version-min=<value>
                          Set macOS deployment target
  -mmadd4                 Enable the generation of 4-operand madd.s, madd.d and related instructions.
  -mmark-bti-property     Add .note.gnu.property with BTI to assembly files (AArch64 only)
  -MMD                    Write a depfile containing user headers
  -mmemops                Enable generation of memop instructions
  -mmlir <value>          Additional arguments to forward to MLIR's option processing
  -mms-bitfields          Set the default structure layout to be compatible with the Microsoft compiler standard
  -mmsa                   Enable MSA ASE (MIPS only)
  -mmt                    Enable MT ASE (MIPS only)
  -MM                     Like -MMD, but also implies -E and writes to stdout by default
  -mno-abicalls           Disable SVR4-style position-independent code (Mips only)
  -mno-amdgpu-precise-memory-op
                          Disable precise memory mode (AMDGPU only)
  -mno-apx-features=<value>
                          Disable features of APX
  -mno-bti-at-return-twice
                          Do not add a BTI instruction after a setjmp or other return-twice construct (Arm/AArch64 only)
  -mno-constructor-aliases
                          Disable emitting complete constructors and destructors as aliases when possible
  -mno-crc                Disallow use of CRC instructions (Mips only)
  -mno-cumode             Specify WGP wavefront execution mode (AMDGPU only)
  -mno-daz-ftz            Do not globally set the denormals-are-zero (DAZ) and flush-to-zero (FTZ) bits in the floating-point control register on program startup
  -mno-embedded-data      Do not place constants in the .rodata section instead of the .sdata if they meet the -G <size> threshold (MIPS)
  -mno-execute-only       Allow generation of data access to code sections (ARM only)
  -mno-extern-sdata       Do not assume that externally defined data is in the small data if it meets the -G <size> threshold (MIPS)
  -mno-fix-cmse-cve-2021-35465
                          Don't work around VLLDM erratum CVE-2021-35465 (ARM only)
  -mno-fix-cortex-a53-835769
                          Don't workaround Cortex-A53 erratum 835769 (AArch64 only)
  -mno-fix-cortex-a57-aes-1742098
                          Don't work around Cortex-A57 Erratum 1742098 (ARM only)
  -mno-fix-cortex-a72-aes-1655431
                          Don't work around Cortex-A72 Erratum 1655431 (ARM only)
  -mno-fmv                Disable function multiversioning
  -mno-forced-sw-shadow-stack
                          Not force using software shadow stack when shadow-stack enabled
  -mno-gather             Disable generation of gather instructions in auto-vectorization(x86 only)
  -mno-global-merge       Disable merging of globals
  -mno-gpopt              Do not use GP relative accesses for symbols known to be in a small data section (MIPS)
  -mno-hvx-ieee-fp        Disable Hexagon HVX IEEE floating-point
  -mno-hvx-qfloat         Disable Hexagon HVX QFloat instructions
  -mno-hvx                Disable Hexagon Vector eXtensions
  -mno-implicit-float     Don't generate implicit floating point or vector instructions
  -mno-incremental-linker-compatible
                          (integrated-as) Emit an object file which cannot be used with an incremental linker
  -mno-lasx               Disable Loongson Advanced SIMD Extension (LASX).
  -mno-local-sdata        Do not extend the -G behaviour to object local data (MIPS)
  -mno-long-calls         Restore the default behaviour of not generating long calls
  -mno-lsx                Disable Loongson SIMD Extension (LSX).
  -mno-lvi-cfi            Disable control-flow mitigations for Load Value Injection (LVI)
  -mno-lvi-hardening      Disable mitigations for Load Value Injection (LVI)
  -mno-madd4              Disable the generation of 4-operand madd.s, madd.d and related instructions.
  -mno-memops             Disable generation of memop instructions
  -mno-movt               Disallow use of movt/movw pairs (ARM only)
  -mno-ms-bitfields       Do not set the default structure layout to be compatible with the Microsoft compiler standard
  -mno-msa                Disable MSA ASE (MIPS only)
  -mno-mt                 Disable MT ASE (MIPS only)
  -mno-neg-immediates     Disallow converting instructions with negative immediates to their negation or inversion.
  -mno-nvj                Disable generation of new-value jumps
  -mno-nvs                Disable generation of new-value stores
  -mno-outline-atomics    Don't generate local calls to out-of-line atomic operations
  -mno-outline            Disable function outlining (AArch64 only)
  -mno-packets            Disable generation of instruction packets
  -mno-pic-data-is-text-relative
                          Don't assume data segments are relative to text segment
  -mno-regnames           Use only register numbers when writing assembly output
  -mno-relax              Disable linker relaxation
  -mno-restrict-it        Allow generation of complex IT blocks.
  -mno-save-restore       Disable using library calls for save and restore
  -mno-scalar-strict-align
                          Allow scalar memory accesses to be unaligned (RISC-V only)
  -mno-scatter            Disable generation of scatter instructions in auto-vectorization(x86 only)
  -mno-seses              Disable speculative execution side effect suppression (SESES)
  -mno-stack-arg-probe    Disable stack probes which are enabled by default
  -mno-strict-align       Allow memory accesses to be unaligned (AArch64/LoongArch/RISC-V only)
  -mno-tgsplit            Disable threadgroup split execution mode (AMDGPU only)
  -mno-tls-direct-seg-refs
                          Disable direct TLS access through segment registers
  -mno-tocdata=<value>    Specifies a list of variables to be exempt from the TOC datatransformation.
  -mno-tocdata            This is the default. TOC data transformation is not applied to anyvariables. Only variables specified explicitly in -mtocdata= willhave the TOC data transformation.
  -mno-unaligned-access   Force all memory accesses to be aligned (AArch32/MIPSr6 only)
  -mno-unaligned-symbols  Expect external char-aligned symbols to be without ABI alignment (SystemZ only)
  -mno-vector-strict-align
                          Allow vector memory accesses to be unaligned (RISC-V only)
  -mno-wavefrontsize64    Specify wavefront size 32 mode (AMDGPU only)
  -mnocrc                 Disallow use of CRC instructions (ARM only)
  -mnop-mcount            Generate mcount/__fentry__ calls as nops. To activate they need to be patched in.
  -mnvj                   Enable generation of new-value jumps
  -mnvs                   Enable generation of new-value stores
  -module-dependency-dir <value>
                          Directory to dump module dependencies to
  -module-file-info       Provide information about a particular module file
  -momit-leaf-frame-pointer
                          Omit frame pointer setup for leaf functions
  -moutline-atomics       Generate local calls to out-of-line atomic operations
  -moutline               Enable function outlining (AArch64 only)
  -mpacked-stack          Use packed stack layout (SystemZ only).
  -mpackets               Enable generation of instruction packets
  -mpad-max-prefix-size=<value>
                          Specify maximum number of prefixes to use for padding
  -mpic-data-is-text-relative
                          Assume data segments are relative to text segment
  -mprefer-vector-width=<value>
                          Specifies preferred vector width for auto-vectorization. Defaults to 'none' which allows target specific decisions.
  -mprintf-kind=<value>   Specify the printf lowering scheme (AMDGPU only), allowed values are "hostcall"(printing happens during kernel execution, this scheme relies on hostcalls which require system to support pcie atomics) and "buffered"(printing happens after all kernel threads exit, this uses a printf buffer and does not rely on pcie atomic support)
  -MP                     Create phony target for each dependency (other than main file)
  -mqdsp6-compat          Enable hexagon-qdsp6 backward compatibility
  -MQ <value>             Specify name of main file output to quote in depfile
  -mrecip=<value>         Control use of approximate reciprocal and reciprocal square root instructions followed by <n> iterations of Newton-Raphson refinement. <value> = ( ['!'] ['vec-'] ('rcp'|'sqrt') [('h'|'s'|'d')] [':'<n>] ) | 'all' | 'default' | 'none'
  -mrecip                 Equivalent to '-mrecip=all'
  -mrecord-mcount         Generate a __mcount_loc section entry for each __fentry__ call.
  -mregnames              Use full register names when writing assembly output
  -mrelax-all             (integrated-as) Relax all machine instructions
  -mrelax                 Enable linker relaxation
  -mrestrict-it           Disallow generation of complex IT blocks. It is off by default.
  -mrtd                   Make StdCall calling convention the default
  -mrvv-vector-bits=<value>
                          Specify the size in bits of an RVV vector register
  -msave-restore          Enable using library calls for save and restore
  -mscalar-strict-align   Force all scalar memory accesses to be aligned (RISC-V only)
  -mseses                 Enable speculative execution side effect suppression (SESES). Includes LVI control flow integrity mitigations
  -msign-return-address=<value>
                          Select return address signing scope
  -msimd=<value>          Select the SIMD extension(s) to be enabled in LoongArch either 'none', 'lsx', 'lasx'.
  -mskip-rax-setup        Skip setting up RAX register when passing variable arguments (x86 only)
  -msmall-data-limit=<value>
                          Put global and static data smaller than the limit into a special section
  -msoft-float            Use software floating point
  -msse2avx               Specify that the assembler should encode SSE instructions with VEX prefix
  -mstack-alignment=<value>
                          Set the stack alignment
  -mstack-arg-probe       Enable stack probes
  -mstack-probe-size=<value>
                          Set the stack probe size
  -mstack-protector-guard-offset=<value>
                          Use the given offset for addressing the stack-protector guard
  -mstack-protector-guard-reg=<value>
                          Use the given reg for addressing the stack-protector guard
  -mstack-protector-guard-symbol=<value>
                          Use the given symbol for addressing the stack-protector guard
  -mstack-protector-guard=<value>
                          Use the given guard (global, tls) for addressing the stack-protector guard
  -mstackrealignext       Force realign the stack at entry to every external function
  -mstackrealign          Force realign the stack at entry to every function
  -mstrict-align          Force all memory accesses to be aligned (AArch64/LoongArch/RISC-V only)
  -msve-vector-bits=<value>
                          Specify the size in bits of an SVE vector register. Defaults to the vector length agnostic value of "scalable". (AArch64 only)
  -msvr4-struct-return    Return small structs in registers (PPC32 only)
  -mtargetos=<value>      Set the deployment target to be the specified OS and OS version
  -mtgsplit               Enable threadgroup split execution mode (AMDGPU only)
  -mthread-model <value>  The thread model to use. Defaults to 'posix')
  -mtls-dialect=<value>   Which thread-local storage dialect to use for dynamic accesses of TLS variables
  -mtls-direct-seg-refs   Enable direct TLS access through segment registers (default)
  -mtls-size=<value>      Specify bit size of immediate TLS offsets (AArch64 ELF only): 12 (for 4KB) | 24 (for 16MB, default) | 32 (for 4GB) | 48 (for 256TB, needs -mcmodel=large)
  -mtocdata=<value>       Specifies a list of variables to which the TOC data transformationwill be applied.
  -mtocdata               All suitable variables will have the TOC data transformation applied
  -mtp=<value>            Thread pointer access method. For AArch32: 'soft' uses a function call, or 'tpidrurw', 'tpidruro' or 'tpidrprw' use the three CP15 registers. 'cp15' is an alias for 'tpidruro'. For AArch64: 'tpidr_el0', 'tpidr_el1', 'tpidr_el2', 'tpidr_el3' or 'tpidrro_el0' use the five system registers. 'elN' is an alias for 'tpidr_elN'.
  -mtune=<value>          Only supported on AArch64, PowerPC, RISC-V, SPARC, SystemZ, and X86
  -MT <value>             Specify name of main file output in depfile
  -munaligned-access      Allow memory accesses to be unaligned (AArch32/MIPSr6 only)
  -munaligned-symbols     Expect external char-aligned symbols to be without ABI alignment (SystemZ only)
  -munsafe-fp-atomics     Enable generation of unsafe floating point atomic instructions. May generate more efficient code, but may not respect rounding and denormal modes, and may give incorrect results for certain memory destinations. (AMDGPU only)
  -mvector-strict-align   Force all vector memory accesses to be aligned (RISC-V only)
  -mvevpu                 Emit VPU instructions for VE
  -MV                     Use NMake/Jom format for the depfile
  -mwavefrontsize64       Specify wavefront size 64 mode (AMDGPU only)
  -mxcoff-build-id=<0xHEXSTRING>
                          On AIX, request creation of a build-id string, "0xHEXSTRING", in the string table of the loader section inside the linked binary
  -mxcoff-roptr           Place constant objects with relocatable address values in the RO data section and add -bforceimprw to the linker flags (AIX only)
  -mzos-hlq-clang=<ClangHLQ>
                          High level qualifier for z/OS C++RT side deck datasets
  -mzos-hlq-csslib=<CsslibHLQ>
                          High level qualifier for z/OS CSSLIB dataset
  -mzos-hlq-le=<LeHLQ>    High level qualifier for z/OS Language Environment datasets
  -mzos-sys-include=<SysInclude>
                          Path to system headers on z/OS
  -M                      Like -MD, but also implies -E and writes to stdout by default
  -no-ansi-alias          disable use of ANSI aliasing rules optimizations
  --no-cuda-include-ptx=<value>
                          Do not include PTX for the following GPU architecture (e.g. sm_35) or 'all'. May be specified more than once.
  --no-cuda-version-check Don't error out if the detected version of the CUDA install is too low for the requested CUDA gpu architecture.
  --no-default-config     Disable loading default configuration files
  -no-fma                 Disable the combining of floating point multiples and add/subtract operations.
  -no-ftz                 Disable flush denormal results to zero
  -no-global-hoist        Disable external globals are load safe
  --no-gpu-bundle-output  Do not bundle output files of HIP device compilation
  -no-hip-rt              Do not link against HIP runtime libraries
  -no-intel-lib=<value>   Restrict linking of Intel specific libraries. Valid arguments are libirc, libimf, libirng, libsvml
  -no-intel-lib           Restrict linking of all Intel specific libraries.
  -no-ipo                 Disable LTO mode (default)
  --no-offload-arch=<value>
                          Remove CUDA/HIP offloading device architecture (e.g. sm_35, gfx906) from the list of devices to compile for. 'all' resets the list to its default value.
  --no-offload-new-driver Don't Use the new driver for offloading compilation.
  -no-parallel-source-info
                          Disable emission of source location information for parallel code generation.
  -no-sox                 Disable saving of compiler options in the executable
  --no-system-header-prefix=<prefix>
                          Treat all #include paths starting with <prefix> as not including a system header.
  -no-vec                 Disable the loop vectorization passes
  --no-wasm-opt           Disable the wasm-opt optimizer
  -nobuiltininc           Disable builtin #include directories
  -nogpuinc               Do not add include paths for CUDA/HIP and do not include the default CUDA/HIP wrapper headers
  -nogpulib               Do not link device library for CUDA/HIP device compilation
  -nohipwrapperinc        Do not include the default HIP wrapper headers and include paths
  -nolib-inline           disable inline expansion of intrinsic functions
  -nolibsycl              Do not link SYCL runtime library
  -nostdinc++             Disable standard #include directories for the C++ standard library
  --nvptx-arch-tool=<value>
                          Tool used for detecting NVIDIA GPU arch in the system.
  -ObjC++                 Treat source input files as Objective-C++ inputs
  -objcmt-allowlist-dir-path=<value>
                          Only modify files with a filename contained in the provided directory path
  -objcmt-atomic-property Make migration to 'atomic' properties
  -objcmt-migrate-all     Enable migration to modern ObjC
  -objcmt-migrate-annotation
                          Enable migration to property and method annotations
  -objcmt-migrate-designated-init
                          Enable migration to infer NS_DESIGNATED_INITIALIZER for initializer methods
  -objcmt-migrate-instancetype
                          Enable migration to infer instancetype for method result type
  -objcmt-migrate-literals
                          Enable migration to modern ObjC literals
  -objcmt-migrate-ns-macros
                          Enable migration to NS_ENUM/NS_OPTIONS macros
  -objcmt-migrate-property-dot-syntax
                          Enable migration of setter/getter messages to property-dot syntax
  -objcmt-migrate-property
                          Enable migration to modern ObjC property
  -objcmt-migrate-protocol-conformance
                          Enable migration to add protocol conformance on classes
  -objcmt-migrate-readonly-property
                          Enable migration to modern ObjC readonly property
  -objcmt-migrate-readwrite-property
                          Enable migration to modern ObjC readwrite property
  -objcmt-migrate-subscripting
                          Enable migration to modern ObjC subscripting
  -objcmt-ns-nonatomic-iosonly
                          Enable migration to use NS_NONATOMIC_IOSONLY macro for setting property's 'atomic' attribute
  -objcmt-returns-innerpointer-property
                          Enable migration to annotate property with NS_RETURNS_INNER_POINTER
  -objcmt-whitelist-dir-path=<value>
                          Alias for -objcmt-allowlist-dir-path
  -ObjC                   Treat source input files as Objective-C inputs
  -object-file-name=<file>
                          Set the output <file> for debug infos
  --offload-arch=<value>  Specify an offloading device architecture for CUDA, HIP, or OpenMP. (e.g. sm_35). If 'native' is used the compiler will detect locally installed architectures. For HIP offloading, the device architecture can be followed by target ID features delimited by a colon (e.g. gfx908:xnack+:sramecc-). May be specified more than once.
  --offload-compress      Compress offload device binaries (HIP only)
  --offload-device-only   Only compile for the offloading device.
  --offload-host-device   Compile for both the offloading host and device (default).
  --offload-host-only     Only compile for the offloading host.
  --offload-link          Use the new offloading linker to perform the link job.
  --offload-new-driver    Use the new driver for offloading compilation.
  --offload=<value>       Specify comma-separated list of offloading target triples (CUDA and HIP only)
  -o <file>               Write output to <file>
  -parallel-source-info=<value>
                          Emit source location information for parallel code generation with OpenMP and auto-parallelization.
  -pch-use <file>         Include precompiled header file
  -pc <value>             Initialize X87 floating point precision to single, double or double extended. Valid values of 32, 64 and 80
  -pedantic               Warn on language extensions
  -pg                     Enable mcount instrumentation
  -pipe                   Use pipes between commands, when possible
  --precompile            Only precompile the input
  --pretty-sgf            Emit pretty printed symbol graphs
  -print-diagnostic-options
                          Print all of Clang's warning options
  -print-effective-triple Print the effective target triple
  -print-enabled-extensions
                          Print the extensions enabled by the given target and -march/-mcpu options. (AArch64 and RISC-V only)
  -print-file-name=<file> Print the full library path of <file>
  -print-ivar-layout      Enable Objective-C Ivar layout bitmap print trace
  -print-libgcc-file-name Print the library path for the currently used compiler runtime library ("libgcc.a" or "libclang_rt.builtins.*.a")
  -print-library-module-manifest-path
                          Print the path for the C++ Standard library module manifest
  -print-multi-flags-experimental
                          Print the flags used for selecting multilibs (experimental)
  -print-prog-name=<name> Print the full program path of <name>
  -print-resource-dir     Print the resource directory pathname
  -print-rocm-search-dirs Print the paths used for finding ROCm installation
  -print-runtime-dir      Print the directory pathname containing Clang's runtime libraries
  -print-search-dirs      Print the paths used for finding libraries and programs
  -print-supported-cpus   Print supported cpu models for the given target (if target is not specified, it will print the supported cpus for the default target)
  -print-supported-extensions
                          Print supported -march extensions (RISC-V, AArch64 and ARM only)
  -print-target-triple    Print the normalized target triple
  -print-targets          Print the registered targets
  -pthread                Support POSIX threads in generated code
  --ptxas-path=<value>    Path to ptxas (used for compiling CUDA code)
  -P                      Disable linemarker output in -E mode
  -p                      Enable mcount instrumentation with prof
  -qactypes               Enable compile and link support for the Algorithmic C Data-types (AC types)
  -qdaal=<value>          Link Intel(R) Data Analytics Acceleration Library (Intel(R) DAAL) libraries and bring in the associated headers (parallel)
  -qipp-link=<value>      Link Intel(R) IPP libraries in requested manner (static,dynamic,shared)
  -qipp=<value>           Link commonly used Intel(R) Integrated Performace Primitives (Intel(R) IPP) libraries and bring in the associated headers (common,crypto,nonpic,nonpic_crypto)
  -qmkl-ilp64=<value>     Link commonly used Intel(R) Math Kernel ILP64 Variant Library (Intel(R) MKL) and bring in the associated headers (parallel,sequential,cluster)("cluster" is not supported in DPC++)
  -qmkl-sycl-impl=<value> Limit linking of SYCL-specific implementations of the Intel(R) Math Kernel Library to specified in argument. Valid arguments: blas, lapack, dft, sparse, rng, stats, vm.
  -qmkl=<value>           Link commonly used Intel(R) Math Kernel Library (Intel(R) MKL) and bring in the associated headers (parallel,sequential,cluster)("cluster" is not supported in DPC++)
  -qno-actypes            Disable the compile and link support for the Algorithmic C Data-types (AC types)
  -qno-openmp             Disable OpenMP support
  -qno-opt-dynamic-align  Disable peeling to optimize alignment for vectorization.
  -qno-opt-jump-tables    Do not use jump tables for lowering switches
  -qno-opt-matmul         Disables compiler-generated Matrix Multiply (matmul) library call
  -qno-opt-mem-layout-trans
                          Disable memory layout transformations
  -qno-opt-multiple-gather-scatter-by-shuffles
                          Disables the optimization for multiple adjacent gather/scatter type vector memory references
  -qno-opt-prefetch       Disable prefetching.
  -Qn                     Do not emit metadata containing compiler name and version
  -qopenmp-link=<value>   Choose whether to link with the static or dynamic OpenMP libraries. Default is dynamic.
  -qopenmp-simd           Emit OpenMP code only for SIMD-based constructs.
  -qopenmp-stubs          enables the user to compile OpenMP programs in sequential mode. The OpenMP directives are ignored and a stub OpenMP library is linked.
  -qopenmp-threadprivate=<value>
                          Choose which threadprivate implementation to use: compat or legacy.
  -qopenmp                Parse OpenMP pragmas and generate parallel code.
  -qopt-assume-no-loop-carried-dep=<value>
                          Set a level of performance tuning for loops.  0 - The compiler does not assume there is loop-carried dependencies (default).  1 - Assume there are no loop-carried dependencies for innermost loops.  2 - Assume there are no loop-carried dependencies for all loop levels.
  -qopt-dword-index-for-array-of-structs=<value>
                          When specified allows the compiler to use dword indexes to access elements of arrays of structs which in size do not exceed val bytes. The arrays in question should contain no more than INT_MAX / sizeof(element) elements. Allowed values for val are: 16, 32, default is 16.
  -qopt-dynamic-align     Enable peeling to optimize alignment for vectorization.
  -qopt-for-throughput=<value>
                          Optimize for throughput performance, assuming multiple jobs are running.  The memory optimizations for single job versus multiple jobs can be tuned in different ways by the compiler. Valid arguments: multi-job, single-job
  -qopt-jump-tables       Control the generation of jump tables
  -qopt-matmul            Enables compiler-generated Matrix Multiply (matmul) library call
  -qopt-mem-layout-trans=<value>
                          Control the level of memory layout transformations performed by the compiler
  -qopt-multiple-gather-scatter-by-shuffles
                          Enables the optimization for multiple adjacent gather/scatter type vector memory references
  -qopt-prefetch-distance=<value>
                          Specify the prefetch distance to be used for compiler generated prefetches inside loops. Value indicates distance from memory to L2 cache.
  -qopt-prefetch-loads-only
                          Only insert prefetches based on the loads inside the loop. Stores are ignored.
  -qopt-prefetch=<value>  Enable levels of prefetch insertion, where 0 disables.  Values of 1 - 5 are available.  Default is 2.
  -qopt-prefetch          Enable prefetch insertion.  Same as -qopt-prefetch=2.
  -qopt-report-file=<value>
                          Specify the filename or output stream (stdout, stderr) for the generated optimization report
  -qopt-report-names=<value>
                          Specifies whether mangled or unmangled names should appear in the optimization report.
  -qopt-report-phase=<value>
                          Specify one or more phases for which optimization reports are generated
  -qopt-report-stdout     Specify the generated optimization report should be directed to stdout
  -qopt-report=<value>    Generate an optimization report, min, med or max.
  -qopt-streaming-stores=<value>
                          Specifies whether streaming stores are generated.
  -qopt-zmm-usage=<value> Specifies the level of zmm registers usage, low or high
  -Qoption,<arg>           Qoption,<tool>,<args> to pass the comma separated arguments to the <tool>; <tool> can be asm for assembler (or) link/ld for linker (or) preprocessor for preprocessor (or) compiler for compiler
  -qoverride-limits       enables the user to skip throttling of loops in framework and DD.
  -qtbb                   Link Intel(R) Threading Building Blocks (Intel(R) TBB) libraries and bring in the associated headers
  -Qunused-arguments      Don't emit warning for unused driver arguments
  -Qy                     Emit metadata containing compiler name and version
  -regcall4               Set __regcall4 as a default calling convention to respect __regcall ABI v.4
  -regcall                Set __regcall as a default calling convention
  -relocatable-pch        Whether to build a relocatable precompiled header
  -reuse-exe=<exe>        Speed up FPGA aoc compile if the device code in <exe> is unchanged.
  -rewrite-legacy-objc    Rewrite Legacy Objective-C source to C++
  -rewrite-objc           Rewrite Objective-C source to C++
  --rocm-device-lib-path=<value>
                          ROCm device library path. Alternative to rocm-path.
  --rocm-path=<value>     ROCm installation path, used for finding and automatically linking required bitcode libraries.
  -Rpass-analysis=<value> Report transformation analysis from optimization passes whose name matches the given POSIX regular expression
  -Rpass-missed=<value>   Report missed transformations by optimization passes whose name matches the given POSIX regular expression
  -Rpass=<value>          Report transformations performed by optimization passes whose name matches the given POSIX regular expression
  -rtlib=<value>          Compiler runtime library to use
  -R<remark>              Enable the specified remark
  -save-stats=<value>     Save llvm statistics.
  -save-stats             Save llvm statistics.
  -save-temps=<value>     Save intermediate compilation results. <arg> can be set to 'cwd' for current working directory, or 'obj' which will save temporary files in the same directory as the final output file
  -save-temps             Alias for --save-temps=cwd
  -serialize-diagnostics <value>
                          Serialize compiler diagnostics to a file
  -shared-intel           link Intel provided libraries dynamically
  -shared-libsan          Dynamically link the sanitizer runtime
  -sox=<value>            Enable saving of compiler options, version and additional information in the executable.  Use -no-sox to disable (DEFAULT). Valid arguments: profile - Includes data when profile was used for functions that were compiled with PGO enabling options such as -fprofile-use and -fprofile-instr-use, inline - Includes a list of the functions that were inlined in each object, secure - Strip out directory names and options that use them.
  -sox                    Enable saving of compiler options in the executable
  --start-no-unused-arguments
                          Don't emit warnings about unused arguments for the following arguments
  -static-intel           link Intel provided libraries statically
  -static-libsan          Statically link the sanitizer runtime (Not supported for ASan, TSan or UBSan on darwin)
  -static-openmp          Use the static host OpenMP runtime while linking.
  -std=<value>            Language standard to compile for
  -stdlib++-isystem <directory>
                          Use directory as the C++ standard library include path
  -stdlib=<value>         C++ standard library to use
  -strict-ansi            strict ANSI conformance dialect
  -sycl-std=<value>       SYCL language standard to compile for.
  --symbol-graph-dir=<value>
                          Directory in which to emit symbol graphs.
  --system-header-prefix=<prefix>
                          Treat all #include paths starting with <prefix> as including a system header.
  -S                      Only run preprocess and compilation steps
  --target=<value>        Generate code for the given target
  -tbb                    Link Intel(R) Threading Building Blocks (Intel(R) TBB) libraries and bring in the associated headers
  -time                   Time individual commands
  -traceback              Generate traceback debug information
  -traditional-cpp        Enable some traditional CPP emulation
  -trigraphs              Process trigraph sequences
  -T <script>             Specify <script> as linker script
  -undef                  undef all system defines
  -unroll<value>          Set maximum number of times to unroll loops.  Omit n to use default heuristics.  Use 0 to disable the loop unroller.
  -unwindlib=<value>      Unwind library to use
  -use-msasm              enables the use of blocks and entire functions of assembly code within a C or C++ file
  -U <macro>              Undefine macro <macro>
  -vec-threshold<value>   Sets a threshold for the vectorization of loops based on the probability of profitable execution of the vectorized loop in parallel.
  -vecabi=<value>         Determines which vector function ABI the compiler uses to create or call vector functions. The 'gcc' (default) argument enforces compatibility with gcc. The 'cmdtarget' argument uses an extended set of vector functions.
  -vec                    Enable the loop vectorization passes
  --verify-debug-info     Verify the binary representation of debug output
  -verify-pch             Load and verify that a pre-compiled header file is not stale
  --version               Print version information
  -vfsoverlay <value>     Overlay the virtual filesystem described by file over the real file system. Additionally, pass this overlay file to the linker if it supports it
  -v                      Show commands to run and use verbose output
  -Wa,<arg>               Pass the comma separated arguments in <arg> to the assembler
  --wasm-opt              Enable the wasm-opt optimizer (default)
  -Wcheck-unicode-security
                          Enable detection and warn about Unicode constructs that can be exploited by using bi-directional formatting codes, zero-width characters in strings and use of zero-width characters and homoglyphs in identifiers. Done by using clang-tidy
  -Wdeprecated            Enable warnings for deprecated constructs and define __DEPRECATED
  -Winvalid-constexpr     Enable checking of constexpr function bodies for validity within a constant expression context
  -Wl,<arg>               Pass the comma separated arguments in <arg> to the linker
  -Wno-invalid-constexpr  Disable checking of constexpr function bodies for validity within a constant expression context
  -Wno-sycl-strict        Disable warnings which enforce strict SYCL language compatibility.
  -working-directory <value>
                          Resolve file paths relative to the specified directory
  -Wp,<arg>               Pass the comma separated arguments in <arg> to the preprocessor
  -W<warning>             Enable the specified warning
  -w                      Suppress all warnings
  -Xanalyzer <arg>        Pass <arg> to the static analyzer
  -Xarch_device <arg>     Pass <arg> to the CUDA/HIP device compilation
  -Xarch_host <arg>       Pass <arg> to the CUDA/HIP host compilation
  -Xassembler <arg>       Pass <arg> to the assembler
  -Xclang=<arg>           Alias for -Xclang
  -Xclang <arg>           Pass <arg> to clang -cc1
  -Xcuda-fatbinary <arg>  Pass <arg> to fatbinary invocation
  -Xcuda-ptxas <arg>      Pass <arg> to the ptxas assembler
  -Xlinker <arg>          Pass <arg> to the linker
  -Xoffload-linker<triple> <arg>
                          Pass <arg> to the offload linkers or the ones idenfied by -<triple>
  -Xopenmp-target-backend=<triple> <arg>
                          Pass <arg> to the OpenMP based backend identified by <triple>. Depending on the triple (spir64, spir64_gen, spir64_x86_64), the arg passed will be interpreted by the corresponding AOT tool or runtime consumer.
  -Xopenmp-target-backend <arg>
                          Pass <arg> to the OpenMP based target backend.
  -Xopenmp-target-frontend=<value>
                          Pass <arg> to the OpenMP based target frontend identified by <triple>.
  -Xopenmp-target-frontend <value>
                          Pass <arg> to the OpenMP based target frontend.
  -Xopenmp-target-linker=<triple> <arg>
                          Pass <arg> to the SYCL based target linker identified by <triple>.
  -Xopenmp-target-linker <arg>
                          Pass <arg> to the SYCL based target linker.
  -Xopenmp-target=<triple> <arg>
                          Pass <arg> to the target offloading toolchain identified by <triple>.
  -Xopenmp-target <arg>   Pass <arg> to the target offloading toolchain.
  -Xpreprocessor <arg>    Pass <arg> to the preprocessor
  -Xsycl-target-backend=<triple> <arg>
                          Pass <arg> to the SYCL based backend identified by <triple>. Depending on the triple (spir64, spir64_gen, spir64_x86_64, spir64_fpga), the arg passed will be interpreted by the corresponding AOT tool or runtime consumer.
  -Xsycl-target-backend <arg>
                          Pass <arg> to the SYCL based target backend.
  -Xsycl-target-frontend=<triple> <arg>
                          Pass <arg> to the SYCL based target frontend identified by <triple>.
  -Xsycl-target-frontend <arg>
                          Pass <arg> to the SYCL based target frontend.
  -Xsycl-target-linker=<triple> <arg>
                          Pass <arg> to the SYCL based target linker identified by <triple>.
  -Xsycl-target-linker <arg>
                          Pass <arg> to the SYCL based target linker.
  -Xs <arg>               Pass <arg> to the offline compiler.
  -Xs<arg>                Pass <arg> to the offline compiler, adding the option specifier '-' to the <arg>.
  -x <language>           Treat subsequent input files as having type <language>
  -x<code>                Generate specialized code to run exclusively on processors indicated by <code>.
  -z <arg>                Pass -z <arg> to the linker
dxc compatibility options.:
  --dxv-path=<value>  DXIL validator installation path
  -fspv-target-env=<value>
                      Specify the target environment
  -hlsl-entry <value> Entry point name for hlsl
Executing: mpiicc -cc=icx -qversion
stdout: icx: error: unknown argument '-qversion'; did you mean '--version'?
Executing: mpiicc -cc=icx -show
stdout: icx -I"/opt/intel/oneapi/mpi/2021.14/include" -L"/opt/intel/oneapi/mpi/2021.14/lib" -L"/opt/intel/oneapi/mpi/2021.14/lib" -Xlinker --enable-new-dtags -Xlinker -rpath -Xlinker "/opt/intel/oneapi/mpi/2021.14/lib" -Xlinker -rpath -Xlinker "/opt/intel/oneapi/mpi/2021.14/lib" -lmpifort -lmpi -ldl -lrt -lpthread
          Trying C compiler flag -PIC
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers  -PIC   /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
stdout: icx: error: unknown argument '-PIC'; did you mean '-fPIC'?
Possible ERROR while running compiler: exit code 1
stderr:
icx: error: unknown argument '-PIC'; did you mean '-fPIC'?
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

              Output from compiling with  -PIC 
icx: error: unknown argument '-PIC'; did you mean '-fPIC'?

PETSc Error: No output file produced
              Rejecting compiler flag -PIC  due to nonzero status from link
          Rejected C compiler flag -PIC because it was not compatible with shared linker mpiicc -cc=icx using flags ['-shared']
          Trying C compiler flag -qPIC
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers  -qPIC   /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
stdout: icx: error: unknown argument '-qPIC'; did you mean '-fPIC'?
Possible ERROR while running compiler: exit code 1
stderr:
icx: error: unknown argument '-qPIC'; did you mean '-fPIC'?
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

              Output from compiling with  -qPIC 
icx: error: unknown argument '-qPIC'; did you mean '-fPIC'?

PETSc Error: No output file produced
              Rejecting compiler flag -qPIC  due to nonzero status from link
          Rejected C compiler flag -qPIC because it was not compatible with shared linker mpiicc -cc=icx using flags ['-shared']
          Trying C compiler flag -KPIC
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers  -KPIC   /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
stdout: icx: error: unknown argument '-KPIC'; did you mean '-fPIC'?
Possible ERROR while running compiler: exit code 1
stderr:
icx: error: unknown argument '-KPIC'; did you mean '-fPIC'?
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

              Output from compiling with  -KPIC 
icx: error: unknown argument '-KPIC'; did you mean '-fPIC'?

PETSc Error: No output file produced
              Rejecting compiler flag -KPIC  due to nonzero status from link
          Rejected C compiler flag -KPIC because it was not compatible with shared linker mpiicc -cc=icx using flags ['-shared']
          Trying C compiler flag -fPIC
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers  -fPIC   /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

              Output from compiling with  -fPIC 

Added C compiler flag -fPIC
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers  -fPIC  /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest  -shared   -fPIC /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o 
            Valid C linker flag -shared
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers  -fPIC  /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <stdio.h>
int (*fprintf_ptr)(FILE*,const char*,...) = fprintf;
int  foo(void){
  fprintf_ptr(stdout,"hello");
  return 0;
}
void bar(void){foo();}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.setCompilers/libconftest.so  -shared  -fPIC /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o 
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers  -fPIC  /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
int foo(void);

int main(void) {
int ret = foo();
if (ret) {}

  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest    -fPIC /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o  -L/tmp/petsc-m5p55c3k/config.setCompilers -lconftest
          Using shared linker mpiicc -cc=icx with flags ['-shared'] and library extension so
=============================================================================================
TESTING: checkPIC from config.setCompilers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/setCompilers.py:2098)
  Determine the PIC option for each compiler
Executing: mpiifort -fc=ifx --help | head -n 20 
stdout:
Intel(R) Fortran Compiler Help
                         ==============================
  Intel(R) Compiler includes compiler options that optimize for instruction
  sets that are available in both Intel(R) and non-Intel microprocessors, but
  may perform additional optimizations for Intel microprocessors than for
  non-Intel microprocessors. In addition, certain compiler options for
  Intel(R) Compiler are reserved for Intel microprocessors.
  For a detailed description of these compiler options, including the
  instructions they implicate, please refer to "Intel(R) Fortran Compiler
  Classic and Intel(R) Fortran Compiler Developer Guide and Reference >
  Compiler Reference > Compiler Options."
  usage: ifx [options] file1 [file2 ...]
     where options represents zero or more compiler options
     fileN is a Fortran source (.f .for .ftn .f90 .fpp .F .FOR .F90 .i .i90),
     assembly (.s .S), object (.o), static library (.a), or other
     linkable file
     Commonly used options may be placed in the ifx.cfg file.
   Some options listed are only available on a specific system
   i32 indicates the feature is available on systems based on IA-32
          architecture
Executing: mpiifort -fc=ifx --help
stdout:
Intel(R) Fortran Compiler Help
                         ==============================
  Intel(R) Compiler includes compiler options that optimize for instruction
  sets that are available in both Intel(R) and non-Intel microprocessors, but
  may perform additional optimizations for Intel microprocessors than for
  non-Intel microprocessors. In addition, certain compiler options for
  Intel(R) Compiler are reserved for Intel microprocessors.
  For a detailed description of these compiler options, including the
  instructions they implicate, please refer to "Intel(R) Fortran Compiler
  Classic and Intel(R) Fortran Compiler Developer Guide and Reference >
  Compiler Reference > Compiler Options."
  usage: ifx [options] file1 [file2 ...]
     where options represents zero or more compiler options
     fileN is a Fortran source (.f .for .ftn .f90 .fpp .F .FOR .F90 .i .i90),
     assembly (.s .S), object (.o), static library (.a), or other
     linkable file
     Commonly used options may be placed in the ifx.cfg file.
   Some options listed are only available on a specific system
   i32 indicates the feature is available on systems based on IA-32
          architecture
   i64em indicates the feature is available on systems using Intel(R) 64
          architecture
   (*0) indicates non-customer options (stripped from production build)
                             Compiler Option List
                             --------------------
Optimization
------------
-O1       optimize for maximum speed, but disable some optimizations which
          increase code size for a small speed benefit
-O2       optimize for maximum speed (DEFAULT)
-O3       optimize for maximum speed and enable more aggressive optimizations
          that may not improve performance on some programs
-O        same as -O2
-Os       enable speed optimizations, but disable some optimizations which
          increase code size for small speed benefit 
-O0       disable optimizations
-Ofast    enable -O3 -no-prec-div -fp-model fast=2 optimizations
-fno-alias
          assume no aliasing in program
-nolib-inline
          disable inline expansion of intrinsic functions
-f[no-]optimize-sibling-calls
          Optimize sibling and tail recursive calls.
          Enabled at levels -O2, -O3, -Os.
Code Generation
---------------
-m64      generate code for Intel(R) 64 architecture
-x<code>  generate specialized code to run exclusively on processors
          indicated by <code> as described below
            SSE3 May generate Intel(R) SSE3, SSE2, and SSE instructions for
                    Intel processors. Optimizes for the enhanced Pentium(R) M
                    processor microarchitecture and Intel NetBurst(R)
                    microarchitecture.
            SSSE3 May generate Intel(R) SSSE3, SSE3, SSE2, and SSE
                    instructions for Intel processors. Optimizes for the
                    Intel(R) Core(TM) microarchitecture.
            SSE4.1 May generate Intel(R) SSE4 Vectorizing Compiler and Media
                    Accelerator instructions for Intel processors. May
                    generate Intel(R) SSSE3, SSE3, SSE2, and SSE instructions
                    and it may optimize for Intel(R) 45nm Hi-k next generation
                    Intel Core(TM) microarchitecture.
            SSE4.2 May generate Intel(R) SSE4 Efficient Accelerated String
                    and Text Processing instructions supported by Intel(R)
                    Core(TM) i7 processors. May generate Intel(R) SSE4
                    Vectorizing Compiler and Media Accelerator, Intel(R) SSSE3,
                    SSE3, SSE2, and SSE instructions and it may optimize for
                    the Intel(R) Core(TM) processor family.
            AVX May generate Intel(R) Advanced Vector Extensions (Intel(R)
                    AVX), Intel(R) SSE4.2, SSE4.1, SSSE3, SSE3,
                    SSE2, and SSE instructions for Intel(R) processors.
            CORE-AVX2
                    May generate Intel(R) Advanced Vector Extensions 2
                    (Intel(R) AVX2), Intel(R) AVX, SSE4.2, SSE4.1, SSSE3, SSE3,
                    SSE2, and SSE instructions for Intel(R) processors.
            CORE-AVX-I
                    May generate Intel(R) Advanced Vector Extensions (Intel(R)
                    AVX), including instructions in Intel(R) Core 2(TM)
                    processors in process technology smaller than 32nm,
                    Intel(R) SSE4.2, SSE4.1, SSSE3, SSE3, SSE2, and SSE
                    instructions for Intel(R) processors.
            ATOM_SSE4.2
                    May generate MOVBE instructions for Intel(R) processors,
                    depending on the setting of option -minstruction.
                    May also generate Intel(R) SSE4.2, SSE3, SSE2, and SSE
                    instructions for Intel processors. Optimizes for Intel(R)
                    Atom(TM) processors that support Intel(R) SSE4.2 and MOVBE
                    instructions.
            ATOM_SSSE3
                    May generate MOVBE instructions for Intel(R) processors,
                    depending on the setting of option -minstruction.
                    May also generate Intel(R) SSSE3, SSE3, SSE2, and SSE
                    instructions for Intel processors. Optimizes for the
                    Intel(R) Atom(TM) processor that support Intel(R) SSE
                    and MOVBE instructions.
            CORE-AVX512
                    May generate Intel(R) Advanced Vector Extensions 512
                    (Intel(R) AVX-512) Foundation instructions, Intel(R)
                    AVX-512 Conflict Detection instructions, Intel(R) AVX-512
                    Doubleword and Quadword instructions, Intel(R) AVX-512
                    Byte and Word instructions and Intel(R) AVX-512 Vector
                    Length Extensions for Intel(R) processors, and the
                    instructions enabled with CORE-AVX2. Optimizes for Intel(R)
                    processors that support Intel(R) AVX-512 instructions.
            COMMON-AVX512
                    May generate Intel(R) Advanced Vector Extensions 512
                    (Intel(R) AVX-512) Foundation instructions, Intel(R)
                    AVX-512 Conflict Detection instructions, as well as the
                    instructions enabled with CORE-AVX2. Optimizes for Intel(R)
                    processors that support Intel(R) AVX-512 instructions.
            BROADWELL
            CANNONLAKE
            HASWELL
            ICELAKE-CLIENT (or ICELAKE)
            ICELAKE-SERVER
            IVYBRIDGE
            SANDYBRIDGE
            SILVERMONT
            GOLDMONT
            GOLDMONT-PLUS
            TREMONT
            SKYLAKE
            SKYLAKE-AVX512
            CASCADELAKE
            KABYLAKE
            COFFEELAKE
            AMBERLAKE
            WHISKEYLAKE
            TIGERLAKE
            SAPPHIRERAPIDS
                    May generate instructions for processors that support the
                    specified Intel(R) microarchitecture code name. Optimizes
                    for Intel(R) processors that support the specified Intel(R)
                    microarchitecture code name.
                    Keyword SILVERMONT is only available on Windows*
                    and Linux* systems.
-xHost    generate instructions for the highest instruction set and processor
          available on the compilation host machine
-ax<code1>[,<code2>,...]
          generate multiple, processor-specific, auto-dispatched code paths
          for Intel(R) processors, specified by <codes>, if there is a
          performance benefit.
          <codes> includes one or more of the following:
            SSE3 May generate Intel(R) SSE3, SSE2, and SSE instructions for
                    Intel processors.
            SSSE3 May generate Intel(R) SSSE3, SSE3, SSE2, and SSE
                    instructions for Intel processors.
            SSE4.1 May generate Intel(R) SSE4.1, SSSE3, SSE3, SSE2, and SSE
                    instructions for Intel processors.
            SSE4.2 May generate Intel(R) SSE4.2, SSE4.1, SSSE3, SSE3, SSE2,
                    and SSE instructions for Intel processors.
            AVX May generate Intel(R) Advanced Vector Extensions
                   (Intel(R) AVX), Intel(R) SSE4.2, SSE4.1, SSSE3, SSE3,
                    SSE2, and SSE instructions for Intel(R) processors.
            CORE-AVX-I
                    May generate Intel(R) Advanced Vector Extensions
                    (Intel(R) AVX), including instructions in
                    Intel(R) Core 2(TM) processors in process technology
                    smaller than 32nm, Intel(R) SSE4.2, SSE4.1, SSSE3, SSE3,
                    SSE2, and SSE instructions for Intel(R) processors.
            CORE-AVX2
                    May generate Intel(R) Advanced Vector Extensions 2
                    (Intel(R) AVX2), Intel(R) AVX, SSE4.2, SSE4.1, SSSE3, SSE3,
                    SSE2, and SSE instructions for Intel(R) processors.
            CORE-AVX512
                    May generate Intel(R) Advanced Vector Extensions 512
                    (Intel(R) AVX-512) Foundation instructions, Intel(R)
                    AVX-512 Conflict Detection instructions, Intel(R) AVX-512
                    Doubleword and Quadword instructions, Intel(R) AVX-512
                    Byte and Word instructions and Intel(R) AVX-512 Vector
                    Length Extensions for Intel(R) processors, and the
                    instructions enabled with CORE-AVX2.
            COMMON-AVX512
                    May generate Intel(R) Advanced Vector Extensions 512
                    (Intel(R) AVX-512) Foundation instructions,
                    Intel(R) AVX-512 Conflict Detection Instructions (CDI),
                    as well as the instructions enabled with CORE-AVX2.
            ALDERLAKE
            AMBERLAKE
            BROADWELL
            CANNONLAKE
            CASCADELAKE
            COFFEELAKE
            COOPERLAKE
            GOLDMONT
            GOLDMONT-PLUS
            HASWELL
            ICELAKE-CLIENT (or ICELAKE)
            ICELAKE-SERVER
            IVYBRIDGE
            KABYLAKE
            ROCKETLAKE
            SANDYBRIDGE
            SAPPHIRERAPIDS
            SILVERMONT
            SKYLAKE
            SKYLAKE-AVX512
            TIGERLAKE
            TREMONT
            WHISKEYLAKE
                    May generate instructions for processors that support the
                    specified Intel(R) microarchitecture code name. Optimizes
                    for Intel(R) processors that support the specified Intel(R)
                    microarchitecture code name.
-mauto-arch=<code1>[,<code2>,...]
          generate multiple, processor-specific, auto-dispatched code paths
          for X86 architecture processors, specified by <codes>, if there is a
          performance benefit. The accepted arguments are the same as those of
          option '-ax'
-arch <code>
          generate specialized code to optimize for processors indicated by
          <code> as described below
            BROADWELL
            CANNONLAKE
            HASWELL
            ICELAKE-CLIENT (or ICELAKE)
            ICELAKE-SERVER
            IVYBRIDGE
            SANDYBRIDGE
            SILVERMONT
            GOLDMONT
            GOLDMONT-PLUS
            TREMONT
            SKYLAKE-AVX512
            SKYLAKE
            CASCADELAKE
            KABYLAKE
            COFFEELAKE
            AMBERLAKE
            WHISKEYLAKE
            TIGERLAKE
            SAPPHIRERAPIDS
                       May generate instructions for processors that support
                       the specified Intel(R) microarchitecture code name
            CORE-AVX2 May generate Intel(R) Advanced Vector Extensions 2
                       (Intel(R) AVX2), Intel(R) AVX, SSE4.2, SSE4.1, SSE3,
                       SSE2, SSE, and SSSE3 instructions
            CORE-AVX-I May generate Float-16 conversion instructions and the
                       RDRND instruction, Intel(R) Advanced Vector Extensions
                       (Intel(R) AVX), Intel(R) SSE4.2, SSE4.1, SSE3, SSE2,
                       SSE, and SSSE3 instructions
            AVX May generate Intel(R) AVX, SSE4.2, SSE4.1, SSSE3, SSE3,
                       SSE2 and SSE instructions
            SSE4.2 May generate Intel(R) SSE4.2, SSE4.1, SSSE3, SSE3, SSE2
                       and SSE instructions
            SSE4.1 May generate Intel(R) SSE4.1, SSSE3, SSE3, SSE2 and SSE
                       instructions
            SSSE3 May generate Intel(R) SSSE3, SSE3, SSE2 and SSE
                       instructions
            SSE3 May generate Intel(R) SSE3, SSE2 and SSE instructions
-mcpu=<cpu>
          same as -mtune=<cpu>
-mtune=<cpu>
          optimize for a specific <cpu>
            generic - Optimizes code for the compiler's default behavior
            broadwell
            haswell
            ivybridge
            knl
            knm
            sandybridge
            silvermont
            cannonlake
            icelake
            skylake-avx512
            skylake - Optimizes code for processors that support the
                         specified Intel(R) microarchitecture code name.
                         knl and silvermont are only available on Windows* and
                         Linux* systems
            core-avx2 - Optimizes code for processors that support Intel(R)
                         Advanced Vector Extensions 2 (Intel(R) AVX2), Intel(R)
                         AVX, SSE4.2 SSE4.1, SSE3, SSE2, SSE, and SSSE3
                         instructions
            core-avx-i - Optimizes code for processors that support Float-16
                         conversion instructions and the RDRND instruction,
                         Intel(R) Advanced Vector Extensions (Intel(R) AVX),
                         Intel(R) SSE4.2, SSE4.1, SSE3, SSE2, SSE, and SSSE3
                         instructions
            corei7-avx - Optimizes code for processors that support Intel(R)
                         Advanced Vector Extensions (Intel(R) AVX), Intel(R)
                         SSE4.2, SSE4.1, SSE3, SSE2, SSE, and SSSE3
                         instructions
            corei7 - Optimizes code for processors that support Intel(R)
                         SSE4 Efficient Accelerated String and Text Processing
                         instructions. May also generate code for Intel(R) SSE4
                         Vectorizing Compiler and Media Accelerator, Intel(R)
                         SSE3, SSE2, SSE, and SSSE3 instructions
            atom - Optimizes code for processors that support MOVBE
                         instructions, depending on the setting of option
                         -minstruction (Linux and macOS*) or /Qinstruction
                         (Windows). May also generate code for SSSE3
                         instructions and Intel(R) SSE3, SSE2, and SSE
                         instructions
            core2 - Optimizes for the Intel(R) Core(TM) 2 processor
                         family, including support for MMX(TM), Intel(R) SSE,
                         SSE2, SSE3, and SSSE3 instruction sets.
            pentium-mmx - Optimizes for Intel(R) Pentium(R) with MMX technology
            pentiumpro - Optimizes for Intel(R) Pentium(R) Pro, Intel Pentium
                         II, and Intel Pentium III processors
            pentium4m - Optimizes for Intel(R) Pentium(R) 4 processors with
                         MMX technology
            pentium-m
            pentium4
            pentium3
            pentium - Optimizes code for Intel(R) Pentium(R) processors.
                         Value pentium3 is only available on Linux systems
-march=<cpu>
          generate code exclusively for a given <cpu>
            broadwell
            cannonlake
            haswell
            icelake
            ivybridge
            knl
            knm
            sandybridge
            silvermont
            skylake-avx512
            skylake - Generates code for processors that support the
                         specified Intel(R) microarchitecture code name.
                         Keywords knl and silvermont are only available on
                         Linux* systems.
            core-avx2 - Generates code for processors that support Intel(R)
                         Advanced Vector Extensions 2 (Intel(R) AVX2), Intel(R)
                         AVX, SSE4.2 SSE4.1, SSE3, SSE2, SSE, and SSSE3
                         instructions
            core-avx-i - Generates code for processors that support Float-16
                         conversion instructions and the RDRND instruction,
                         Intel(R) Advanced Vector Extensions (Intel(R) AVX),
                         Intel(R) SSE4.2, SSE4.1, SSE3, SSE2, SSE, and SSSE3
                         instructions
            corei7-avx - Generates code for processors that support Intel(R)
                         Advanced Vector Extensions (Intel(R) AVX), Intel(R)
                         SSE4.2, SSE4.1, SSE3, SSE2, SSE, and SSSE3
                         instructions
            corei7 - Generates code for processors that support Intel(R)
                         SSE4 Efficient Accelerated String and Text Processing
                         instructions. May also generate code for Intel(R) SSE4
                         Vectorizing Compiler and Media Accelerator, Intel(R)
                         SSE3, SSE2, SSE, and SSSE3 instructions
            atom - Generates code for processors that support MOVBE
                         instructions, depending on the setting of option
                         -minstruction (Linux and macOS*) or /Qinstruction
                         (Windows). May also generate code for SSSE3
                         instructions and Intel(R) SSE3, SSE2, and SSE
                         instructions
            core2 - Generates for the Intel(R) Core(TM) 2 processor
                         family
            pentium4m - Generates for Intel(R) Pentium(R) 4 processors with
                         MMX technology
            pentium-m
            pentium4
            pentium3
            pentium - Generates code for Intel(R) Pentium(R) processors.
                         Value pentium3 is only available on Linux systems
-msse3    May generate Intel(R) SSE3, SSE2, and SSE instructions
-mssse3   May generate Intel(R) SSSE3, SSE3, SSE2, and SSE instructions
-msse4    Enable -msse4.2
-msse4.1  May generate Intel(R) SSE4.1, SSSE3, SSE3, SSE2, and SSE instructions
-msse4.2  May generate Intel(R) SSE4.2, SSE4.1, SSSE3, SSE3, SSE2, and SSE
          instructions
-mavx     May generate Intel(R) AVX, SSE4.2, SSE4.1, SSSE3, SSE3, SSE2, and SSE
          instructions
-masm=<dialect>
          generate asm instructions specified by <dialect>, which may be
          att (DEFAULT) or intel
-m[no-]apx-features=<arg>[,<arg2>,...]
         Enable/disable feature of APX, args can be: egpr, push2pop2, ppx,
         ndd, ccmp, nf, cf.
-f[no-]omit-frame-pointer
          enable(DEFAULT)/disable use of EBP as general purpose register.
          -fno-omit-frame-pointer replaces -fp
-f[no-]exceptions
          enable/disable(DEFAULT) exception handling, primarily
          for mixed-language programming with C/C++
-mno-sse  disable the generation of SSE instructions
-fasynchronous-unwind-tables
          determines whether unwind information is precise at an instruction
          boundary or at a call boundary. -fno-asynchronous-unwind-tables is
          the default for IA-32 architecture.
-m[no-]omit-leaf-frame-pointer
          determines whether the frame pointer is omitted or kept in leaf
          functions
-m80387   Specify whether the compiler can use x87 instructions.
          Use -mno-80387 to disable.
-mx87     Same as -m80387
-mspeculative-load-hardening
          protects against information leaks by tracking the speculation state
          and masks values when branch prediction selects the incorrect path
-fcf-protection[=<arg>]
          Enables Control-flow Enforcement Technology (CET) protection, which
          defends your program from certain attacks that exploit
          vulnerabilities.
            branch - do control-flow instrumentation for indirect branches
            return - do control-flow instrumentation for function returns
            full - alias to specify both branch and return (same as no <arg>)
            none - turn off instrumentation
-mno-gather
          Disable generation of gather instructions in auto-vectorization.
-mno-scatter
          Disable generation of scatter instructions in auto-vectorization.
Interprocedural Optimization (IPO)
----------------------------------
-ipo[n]   enable multi-file IP optimization between files
Advanced Optimizations
----------------------
-unroll[n]
          set maximum number of times to unroll loops. Omit n to use default
          heuristics. Use n=0 to disable the loop unroller
-funroll-loops
          unroll loops based on default heuristics
-[no]pad  enable/disable(DEFAULT) changing variable and array memory layout
-safe-cray-ptr
          Cray pointers do not alias with other variables
-[no-]ansi-alias
          enable(DEFAULT)/disable use of ANSI aliasing rules optimizations;
          user asserts that the program adheres to these rules
-reentrancy <keyword>
          specify whether the threaded, reentrant run-time support should be
          used
          Keywords: none (same as -noreentrancy), threaded(DEFAULT), async
-noreentrancy
          do not use threaded, reentrant run-time support
-heap-arrays [n]
          temporary arrays of minimum size n (in kilobytes) are allocated in
          heap memory rather than on the stack. If n is not specified,
          all temporary arrays are allocated in heap memory.
-no-heap-arrays
          temporary arrays are allocated on the stack (DEFAULT)
-[no-]vec
          enables(DEFAULT)/disables vectorization
-vec-threshold[n]
          sets a threshold for the vectorization of loops based on the
          probability of profitable execution of the vectorized loop in
          parallel
-vecabi=<arg>
          select vector function ABI
            legacy - use the legacy vector function ABI
            compat - use the compatibility vector function ABI (DEFAULT)
            cmdtarget - generate an extended set of vector functions
            gcc - use GCC compatible ABI
-f[no-]vec-with-mask
          Enable vectorization for short trip-count loops with masking
-f[no-]vec-peel-loops
          Enable peel loop vectorization
-f[no-]vec-remainder-loops
          Enable remainder loop vectorization
-q[no-]opt-jump-tables
          control the generation of jump tables
-fno-jump-tables
          do not generate jump tables for switches and if-then-else statements
-qopt-streaming-stores=<arg>
          specifies whether streaming stores are generated
            always - enables generation of streaming stores under the
                     assumption that the application is memory bound. Also,
                     the user is responsible for inserting the right memory
                     fences for synchronization
            auto - compiler decides when streaming stores are used (DEFAULT)
            never - disables generation of streaming stores
-qmkl[=<arg>]
          link to the Intel(R) Math Kernel Library (Intel(R) MKL) and bring
          in the associated headers
            parallel - link using the threaded Intel(R) MKL libraries. This
                         is the default when -qmkl is specified
            sequential - link using the non-threaded Intel(R) MKL libraries
            cluster - link using the Intel(R) MKL Cluster libraries plus
                         the sequential Intel(R) MKL libraries
-qmkl-ilp64[=<arg>]
          link to the Intel(R) Math Kernel ILP64 variant Libraries
          (Intel(R) MKL) and bring in the associated headers
            parallel - link using the threaded Intel(R) MKL libraries. This
                         is the default when -qmkl-ilp64 is specified
            sequential - link using the non-threaded Intel(R) MKL libraries
            cluster - link using the Intel(R) MKL Cluster libraries plus
                         the sequential Intel(R) MKL libraries
-qmkl-sycl-impl=<arg>[,<arg>,...]
          Limit linking of SYCL-specific implementations of the Intel(R) Math
          Kernel Library to specified in argument. Valid arguments:
            blas, lapack, dft, sparse, rng, stats, vm
-coarray[=<keyword>]
          enable/disable(DEFAULT) coarray syntax for data parallel
          programming, and set the relationship between the coarray
          images.
          keywords: shared - default if keyword is omitted
                    single - overrides any other keyword
                    distributed
-coarray-num-images=n
          set default number of coarray images
-qopt-mem-layout-trans[=<level>]
          controls the level of memory layout transformations performed by the
          compiler
           0 - disable memory layout transformations (same as
               -qno-opt-mem-layout-trans)
           1 - enable basic memory layout transformations
           2 - enable more memory layout transformations (DEFAULT when the
               option is specified)
           3 - enable aggressive memory layout transformations
-qopt-prefetch[=n]
          enable levels of prefetch insertion, where 0 disables.
          n may be 0 through 5 inclusive. Default is 2.
-qopt-prefetch-distance=n1
          specify the prefetch distance to be used for compiler generated
          prefetches inside loops. n1 indicates distance from memory to L2
          cache.
-qopt-prefetch-loads-only
          Only insert prefetches based on the loads inside the loop. Stores
          are ignored.
-qopt-dynamic-align
          enable dynamic data alignment optimizations. Specify
          -qno-opt-dynamic-align to disable(DEFAULT)
-qopt-zmm-usage=<keyword>
          Specifies the level of zmm registers usage. You can specify one of
          the following:
            low - Tells the compiler that the compiled program is unlikely to
                   benefit from zmm registers usage. It specifies that the
                   compiler should avoid using zmm registers unless it can
                   prove the gain from their usage.
            high - Tells the compiler to generate zmm code without restrictions
-qoverride-limits
          provides a way to override certain internal compiler limits that are
          intended to prevent excessive memory usage or compile times for very
          large, complex compilation units.
-q[no-]opt-multiple-gather-scatter-by-shuffles
          Enables or disables the optimization for multiple adjacent
          gather/scatter type vector memory references.
-m[no-]branches-within-32B-boundaries
          align branches and fused branches on 32 byte boundaries
-malign-branch-prefix-size=<size>
          align branches with prefix of <size>.
-malign-branch=<arg>
          specify types of branches to align,
          where <arg> can be: fused, jcc, jmp, call, ret, indirect.
-malign-branch-boundary=<arg>
          align branches and fused branches on 32 byte boundaries
-qopt-for-throughput=<arg>
          Using 'multi-job', which is the default, the compiler will optimize
          for throughput performance, assuming multiple jobs are running.
          The memory optimizations for single job versus multiple jobs can be
          tuned in different ways by the compiler.
-qopt-dword-index-for-array-of-structs[=<val>]
          When specified allows the compiler to use dword indexes to access
          elements of arrays of structs which in size do not exceed val bytes.
          The arrays in question should contain no more than
          INT_MAX / sizeof(element) elements.
          Allowed values for val are: 16, 32, default is 16.
-f[no-]vec-allow-scalar-stores
          When this option is set, an explicit simd loop (for example, one
          set with #pragma omp simd) will be vectorized even if it contains a
          store to a scalar variable that is not marked as private,
          lastprivate, or reduction.
Profile Guided Optimization (PGO)
---------------------------------
-fprofile-ml-use
          Use pre-trained machine learning model for profile guided
          optimizations. (deprecated)
-p        compile and link for function profiling with UNIX gprof tool
          On IA32 and Intel(r)64, -pg is also valid
-f[no-]instrument-functions
          determine whether function entry and exit points are instrumented
-f[no-]instrument-functions-after-inlining
          Like -finstrument-functions, but insert the calls after inlining
Optimization Reports
--------------------
-qopt-report[=n]
          generate an optimization report. Default destination is
          <target>.optrpt. Levels of 0 - 5 are valid.
          Please see documentation for additional details of
          information provided by phase per level.
            0 disable optimization report output
            2 DEFAULT when enabled
-qopt-report-file=[stdout | stderr | <file>]
          specify the filename or output stream for the generated report
-qopt-report-stdout
          specify the generated report should be directed to stdout
-qopt-report-phase=<phase>[,<phase>,...]
          Specify one or more phases for which optimization reports
          are generated
              cg - The phase for code generation
              ipo - The phase for Interprocedural optimization
              loop - The Phase for loop nest optimization
              openmp - The phase for openmp
              pgo - The phase for profile guided optimization
              vec - The phase for vectorization
              all - All optimizer phases. (this is default if
                                           nothing is passed)
-qopt-report-names=<keyword>
          Specifies whether mangled or unmangled names should appear in the
          optimization report.
            mangled - use mangled names
            unmangled - use unmangled names (DEFAULT)
OpenMP* and Parallel Processing
------------------------------
-qopenmp  enable the compiler to generate multi-threaded code based on the
          OpenMP* directives (same as -fopenmp)
          Use -qno-openmp to disable
-qopenmp-stubs
          enables the user to compile OpenMP programs in sequential mode. The
          OpenMP directives are ignored and a stub OpenMP library is linked
          (sequential)
-qopenmp-link=<library>
          choose whether to link with the static or dynamic OpenMP
          libraries. Default is dynamic.
-qopenmp-threadprivate=<ver>
          choose which threadprivate implementation to use
            compat - use the GNU compatible thread local storage
            legacy - use the Intel compatible implementation
                     (DEFAULT)
-parallel
          enable the auto-parallelizer to generate multi-threaded code for
          loops that can be safely executed in parallel
-parallel-source-info[=n]
          enable(DEFAULT)/disable the emission of source location information
          for parallel code generation with OpenMP and auto-parallelization
            0 - disable (same as -no-parallel-source-info)
            1 - emit routine name and line information (DEFAULT)
            2 - emit path, file, routine name and line information
-qopenmp-simd
          Enables OpenMP* SIMD compilation. Enabled by default with
          -qopenmp. Use -qno-openmp-simd to disable.
-fopenmp-offload-mandatory
          Do not create a host fallback if offloading to the device fails
-[no-]device-math-lib=<arg>
          Control the addition of device math libraries when compiling for
          OpenMP* offloading.
            fp64 - FP64 based libraries
            fp32 - FP32 based libraries
-fopenmp-concurrent-host-device-compile
          Enable parallel compilation of host and device compilation steps
          when performing OpenMP offload compiles using -fopenmp-targets. (experimental)
Floating Point
--------------
-fp-model=<name>
          enable <name> floating point model variation
            fast - enables more aggressive floating point optimizations
            precise - allows value-safe optimizations
                          also enables -prec-div
            strict - enables -fp-model=precise, disables
                          contractions and enables pragma stdc fenv_access
-fp-speculation=<mode>
          enable floating point speculations with the following <mode>
          conditions:
            fast - speculate floating point operations (DEFAULT)
            safe - speculate only when safe
            strict - same as off
            off - disables speculation of floating-point operations
-pc32     set internal FPU precision to 24 bit significand
-pc64     set internal FPU precision to 53 bit significand
-pc80     set internal FPU precision to 64 bit significand (DEFAULT)
-[no-]prec-div
          improve precision of FP divides (some speed impact)
          also enabled by -fp-model=precise
-rounding-mode chopped
          set internal FPU rounding control to truncate
-[no-]ftz
          enable/disable flush denormal results to zero
-fpe{0|1|3}
          specifies program-wide behavior on floating point exceptions
-fpe-all={0|1|3}
          specifies floating point exception behavior on all functions
          and subroutines. Also sets -assume ieee_fpe_flags
-[no]fltconsistency
          specify that improved floating-point consistency should be used
-[no-]fma
          enable/disable the combining of floating point multiplies and
          add/subtract operations
-[no]recursive
          compile all procedures for possible recursive execution
-fimf-absolute-error=value
          define the maximum allowable absolute error for math library
          function results
            value - a positive, floating-point number conforming to the
                       format [digits][.digits][{e|E}[sign]digits]
-fimf-accuracy-bits=bits
          define the relative error, measured by the number of correct bits,
          for math library function results
            bits - a positive, floating-point number
-fimf-arch-consistency=value
          ensures that the math library functions produce consistent results
          across different implementations of the same architecture
            value - true or false
-fimf-max-error=ulps
          defines the maximum allowable relative error, measured in ulps, for
          math library function results
            ulps - a positive, floating-point number conforming to the
                       format [digits][.digits][{e|E}[sign]digits]
-fimf-precision=value
          defines the accuracy (precision) for math library functions
            value - defined as one of the following values
                       high - equivalent to max-error = 1.0
                       medium - equivalent to max-error = 4 (DEFAULT)
                       low - equivalent to accuracy-bits = 11 (single
                                precision); accuracy-bits = 26 (double
                                precision)
                       reference - equivalent to 'high' accuracy with correct
                                signaling of exceptional conditions through
                                the errno and status flags settings. This
                                setting is initially available only on Linux*
                                systems
-fimf-domain-exclusion=classlist
          indicates the input arguments domain on which math functions
          must provide correct results.
            classlist - defined as one of the following values:
                          nans, infinities, denormals, zeros
                          all, none, common
-ffinite-math-only
          Allow optimizations for floating point arithmetic that assume
          arguments and results are not NaNs or Infinities
Inlining
--------
-inline-level=<n>
          control inline expansion:
            n=0 disable inlining 
            n=1 inline functions declared with ATTRIBUTES INLINE or
                   FORCEINLINE
            n=2 inline any function, at the compiler's discretion
-f[no-]inline-functions
          inline any function at the compiler's discretion
-inline-forceinline
          treat inline routines as forceinline
Output, Debug, PCH
------------------
-c        compile to object (.o) only, do not link
-S        compile to assembly (.s) only, do not link
-f[no-]verbose-asm
          produce assembly file with compiler comments (DEFAULT) (requires -S)
-use-msasm
          support Microsoft* style assembly language insertion using MASM style
          syntax
-Fa[file]
          name assembly file (or directory for multiple files; i.e. /FaMYDIR\)
-Fo[file]
          name object file (or directory for multiple files; i.e. /FoMYDIR\)
-o <file>
          name output file
-list[=<filename>]
          specify that a listing file should be generated
-list-line-len=#
          overrides the default line length (80) in a listing file
-list-page-len=#
          overrides the default page length (66) in a listing file
-show <keyword>
          controls the contents of the listing file
          keywords: all, none, [no]include, [no]map, [no]options
-g[level]
          Produce symbolic debug information.
          Valid [level] values:
             0 - Disable generation of symbolic debug information.
             1 - Emit minimal debug information for performing stack traces.
             2 - Emit complete debug information. (default for -g)
             3 - Emit extra information which may be useful for some tools.
-gdwarf-<version>
          Enable generation of debug information using the specified DWARF
          version. These options may require additional tools such as linkers
          and debuggers which support these formats.
          Valid <version> values:
             2 - DWARF Debug Information Format Version 2.
             3 - DWARF Debug Information Format Version 3. (default for -g)
             4 - DWARF Debug Information Format Version 4.
             5 - DWARF Debug Information Format Version 5.
-gsplit-dwarf
          Generates an additional output file containing most of the debug
          information. This reduces the size of objects processed by the
          linker. The additional output file will be given a .dwo file
          extension. This option may require additional tools which support
          DWARF object files.
-debug offload
          Generate debug information for offload target
-debug-parameters [keyword]
          Control output of debug information for PARAMETERS.
          Valid [keyword] values:
             none - Disables generation of debug information for PARAMETERs.
             used - Generates debug information for referenced PARAMETERs only.
             all - Generates debug information for all PARAMETERs.
-nodebug-parameters
          Same as "-debug-parameters none".
-gcolumn-info
          Include column information when emitting source positions in the
          debug information. Adding the column information may increase
          the size of the debug information.
-ggdb     Emit debug information tailored for the GNU project debugger GDB.
-glldb    Emit debug information tailored for the LLVM project debugger LLDB.
-fstandalone-debug
          Emit full debug information for all types used by the program.
-fno-merge-debug-strings
          Do not merge identical debug strings in different object files.
-[no]d-lines
          compile debug statements (indicated by D in column 1)
-DD       compile debug statements, indicated by D in column 1. This option
          prevents the definition of a macro named D using the command line
          -Dname option (use -Dname=n syntax instead)
-ftrapuv  trap uninitialized variables
-map-opts
          enable option mapping tool
-print-multi-lib
          print information about libraries being used
-f[no-]eliminate-unused-debug-types
          When disabled, debug information for all types present in the
          sources will be emitted. Using this option may cause a large
          increase in the size of the debug information.
Preprocessor
------------
-D<name>[=<text>]
          define macro
-nodefines, -noD
          specifies that any -D macros go to the preprocessor only, and not to
          the compiler
-U<name>  remove predefined macro
-allow nofpp-comments
          If a Fortran end-of-line comment is seen within a #define, treat it
          as part of the definition. Default is allow:fpp-comments
-E        preprocess to stdout
-EP       preprocess to stdout, omitting #line directives
-P        preprocess to file, omitting #line directives
-preprocess-only
          same as -P
-[no]keep  keep/remove preprocessed file generated by preprocessor as input to
           compiler stage. Not affected by -save-temps. Default is -nokeep
-[no]fpp   run Fortran preprocessor on source files prior to compilation
-fpp-name:name
           Name an alternate preprocessor executable. The name can
           include the full path.
-module path
           specify path where mod files should be placed and first location to
           look for mod files
-I<dir>   add directory to include file search path
-idirafter<dir>
          add directory to the second include file search path (after -I)
-isystem<dir>
          add directory to the start of the system include path
-X, -nostdinc
          remove standard directories from include file search path
-B<prefix>
          find libraries, headers and executables in <prefix>
-gen-dep[=filename]
          generate dependency information.
          If no filename is specified, output is to stdout.
           Similar to -MD or -MMD
          If a filename is specified, output is to filename.
           Similar to -MF filename
-no-gen-dep
          do not generate dependency information (default)
-gen-depshow=keyword
          control what dependency information is output.
          [no]intr_mod Intrinsic modules. Default is nointr_mod.
-gen-depformat=keyword
          generate dependency information in the specified format.
          One of: make, nmake
Component Control
-----------------
-Qoption,<tool>,<opts>
          pass options <opts> to tool specified by <tool>
-Qlocation,<tool>,<dir>
          set <dir> as the location of tool specified by <tool>
-Qinstall <dir>
          set <dir> as root of compiler installation
-mllvm <arg>
          pass '-mllvm <arg>' directly to the compiler invocation (*0)
-mllvm-lto <arg>
          pass '-mllvm <arg>' directly to the compiler invocation. This is
          similar to using -mllvm <arg> except using -mllvm-lto will also push
          the <arg> to the LTO step of the compilation. (*0)
Language
--------
-[no]altparam
          specify if alternate form of parameter constant declarations
          (without parenthesis) is recognized. Default is to recognize
-assume <keyword>
          specify assumptions made by the optimizer and code generator
          keywords: none, [no]aligned_dummy_args,
                    [no]byterecl, [no]buffered_io,
                    [no]buffered_stdout,
                    [no]bscc (nobscc same as -nbs),
                    [no]contiguous_assumed_shape, [no]contiguous_pointer,
                    [no]cc_omp, [no]failed_images, [no]minus0,
                    [no]dummy_aliases (same as -common-args),
                    [no]ieee_fpe_flags, [no]ieee_compares,
                    [no]ieee_mode_restore, [no]fpe_summary, [no]nan_compares,
                    [no]old_boz, [no]old_complex_align,
                    [no]old_e0g0_format, [no]old_inquire_recl,
                    [no]old_logical_ldio, [no]old_logical_assign,
                    [no]old_ldout_format, [no]old_ldout_zero,
                    [no]old_maxminloc, [no]old_unit_star, [no]old_xor,
                    [no]protect_allocates,
                    [no]protect_constants, [no]protect_parens,
                    [no]recursion, [no]realloc_lhs, [no]2underscore,
                    [no]underscore (same as -us),
                    [no]std_intent_in, [no]std_minus0_rounding,
                    [no]std_mod_proc_name, [no]std_value, [no]std_expon_output,
                    [no]source_include,
                    [no]split_common, [no]writeable_strings
-ccdefault <keyword>
          specify default carriage control for units 6 and *
          keywords: default, fortran, list or none
-[no]check <keyword>
          check run-time conditions. Default is -nocheck
          keywords: all,
                    none (same as -nocheck),
                    [no]arg_temp_created, [no]bounds (same as -CB),
                    [no]assume, [no]contiguous,
                    [no]format, [no]output_conversion,
                    [no]pointers (same as -CA),
                    [no]shape, [no]stack, [no]teams,
                    [no]udio_iostat, [no]uninit (same as -CU) (Linux only)
-common-args
          assume "by reference" subprogram arguments may alias one
          another. Same as -assume dummy_aliases
-e03      issue errors for language elements that are not standard in
          Fortran 2003 (same as -stand f03 -warn stderrors options)
-e95      issue errors for language elements that are not standard in
          Fortran 95 (same as -stand f95 -warn stderrors options)
-e90      issue errors for language elements that are not standard in
          Fortran 90 (same as -stand f90 -warn stderrors options)
-[no]extend-source [<keyword>]
          specify rightmost column for fixed form sources
          keywords: 72 (same as -noextend-source and -72),
                    80 (same as -80),
                   132 (same as -132. Default if you specify
                        -extend-source without a keyword.)
-fixed    specify source files are in fixed format. Same as -FI 
          -nofixed indicates free format
-free     specify source files are in free format. Same as -FR 
          -nofree indicates fixed format
-fsanitize=<keyword>
          instrument the program with a sanitizer to detect issues at runtime.
          keywords: address - Detect buffer overflows/underflows
                              and memory leaks
                    memory - Detect uninitialized variables
                    thread - Detect data races
-[no]mixed-str-len-arg
          indicate whether hidden lengths are passed after their
          character argument or after all arguments.
-names <keyword>
          specify how source code identifiers and external names are
          interpreted.
          keywords: as_is, lowercase, uppercase
-[no]pad-source
          make compiler acknowledge blanks at the end of a line
-stand [<keyword>]
          specifies level of conformance with ANSI standard to check
          for. If keyword is not specified, level of conformance is f18
          keywords: f90 (same as -std90), f95 (same as -std95),
                    f03 (same as -std03), f08 (same as -std08),
                    f18 (same as -std18), f23 (same as -std23)none (same as -nostand)
                    Also accepted are: f2003, f2008, f2018, f2023
-standard-semantics
          explicitly sets -assume keywords to conform to the semantics
          of the Fortran standard. The specific keywords will vary depending
          on the standard level requested by the user.
          -assume keywords always set by -standard-semantics:
             byterecl, fpe_summary, noold_ldout_format, noold_unit_star,
             noold_xor, protect_parens, and std_mod_proc_name
          - Fortran 2003 or greater adds -assume keywords:
             minus0, noold_ldout_zero, noold_maxminloc, std_minus0_rounding,
             realloc_lhs, and ieee_restore_modes
          - Fortran 2008 or greater adds -assume keyword:
             std_value
          - Fortran 2018 or greater adds -assume keywords:
             failed_images, ieee_compares, noold-e0g0-format, noold_inquire_recl,
             and recursion
          - Fortran 2023 or greater adds -assume keyword:
             std_expon_output
         Note: -standard-semantics also always sets -fpscomp logicals
         Note: If -fp-model=strict or -fp-model=except is set
            then this also sets -assume keyword ieee_fpe_flags
         Note: Using -standard-semantics may result in performance loss.
-[no]standard-realloc-lhs
          explicitly sets assume keyword realloc_lhs to conform to the
          standard, or to override the default. Sets -assume [no]realloc_lhs
-syntax-only
          perform syntax and semantic checking only (no object file produced)
-[no-]wrap-margin
          controls right margin wrapping in list-directed output. By default,
          list-directed output is wrapped at 80 characters.
Compiler Diagnostics
--------------------
-w        disable all warnings
-W<n>     disable warnings (n = 0) or show warnings (n = 1 DEFAULT, same as
          -warn general)
-warn <keyword>
          specifies the level of warning messages issued
            keywords: all, none (same as -nowarn)
                      [no]alignments, [no]declarations,
                      [no]errors, [no]externals,
                      [no]general, [no]ignore_loc, [no]interfaces,
                      [no]shape, [no]stderrors, [no]truncated_source,
                      [no]uncalled, [no]unused, [no]usage
-nowarn   suppress all warning messages
-WB       turn a compile-time bounds check into a warning
-[no]traceback
          specify whether the compiler generates PC correlation data used to
          display a symbolic traceback rather than a hexadecimal traceback at
          runtime failure
-[no]gen-interfaces[:[no]source]
          generate interface blocks for all routines in the file. Can be
          checked using -warn interfaces
          nosource indicates temporary source files should not be saved
-error-limit <size>
          specify the maximum number of error-level or fatal-level compiler
          errors allowed
-noerror-limit
          set no maximum number on error-level or fatal-level error messages
          All diagnostic options (-diag*) are only valid for driver specific
          diagnostics.
-diag-enable=<v1>[,<v2>,...]
          enable the specified diagnostics or diagnostic groups
-diag-disable=<v1>[,<v2>,...]
          disable the specified diagnostics or diagnostic groups
-diag-error=<v1>[,<v2>,...]
          output the specified diagnostics or diagnostic groups as errors
-diag-warning=<v1>[,<v2>,...]
          output the specified diagnostics or diagnostic groups as warnings
-diag-remark=<v1>[,<v2>,...]
          output the the specified diagnostics or diagnostic groups as remarks
-diag-dump
          display the currently enabled diagnostic messages to stdout
-diag-file[=<file>]
          <file> where diagnostics are emitted to. Not specifying this causes
          messages to be output to stderr
-diag-file-append[=<file>]
          <file> where diagnostics are emitted to. When <file> already exists,
          output is appended to the file
-[no-]diag-id-numbers
          enable(DEFAULT)/disable the diagnostic specifiers to be output in
          numeric form
-diag-error-limit=<num>
          specify the maximum number of errors emitted
Miscellaneous
-------------
-[no]logo
          display compiler version information. -nologo disables the output
-V        display compiler version information
-dumpmachine
          display the target machine only
--version
          display GCC style version information
-save-temps
          store the intermediate files in current directory and name them
          based on the source file. Only saves files that are generated by
          default
-dryrun   show driver tool commands but do not execute tools
-v        show driver tool commands and execute tools
-what     display detailed compiler version information
-watch=<keyword>
          tells the driver to output processing information
            keywords: all, none (same as -nowatch), [no]source,
                      [no]cmd (same as -v)
                      [no]offload-cmd
-nowatch  suppress processing information output (DEFAULT)
-Tf<file>
          compile file as Fortran source
-multiple-processes[=<n>]
          create multiple processes that can be used to compile large numbers
          of source files at the same time
-f[no-]openmp-device-lib=<arg>
          Control inclusion of device libraries into device binary linkage.
          Valid arguments are: libc, libm-fp32, libm-fp64, all
-fsycl    Enable SYCL kernel compilation for device. This is for link-time
          only, consuming Fortran and DPC++ objects.
-fsycl-device-code-split=<arg>
          Perform SYCL device code split.
            per_kernel - device code module is created for each SYCL kernel
            per_source - device code module is created for each source
                         (translation unit)
            off - no device code split
            auto - use heuristic to select the best way of splitting
                         device code (DEFAULT)
-f[no-]sycl-device-lib=<arg>
          Control inclusion of device libraries into device binary linkage.
          Valid arguments are: libc, libm-fp32, libm-fp64, all
-f[no-]sycl-instrument-device-code
          Add ITT instrumentation intrinsics calls
-f[no-]sycl-dead-args-optimization
          Enables elimination of DPC++ dead kernel arguments
-nolibsycl
          Do not link the SYCL runtime library
-fopenmp-targets=<arg>
          Enables offloading to a specified GPU target if OpenMP* features have
          been enabled.
            spir64 - offload to SPIR64-based devices
            spir64_x86_64 - offload to Intel(R) CPUs
            spir64_gen - offload to Intel(R) Processor Graphics
-fopenmp-target-buffers=<arg>
          Enables a way to overcome the problem where some OpenMP* offload
          SPIR-V* devices produce incorrect code when a target object is
          larger than 4GB.
            default - use default heuristics
            4GB - Allow access to target objects of 4GB or larger in
                      target code
-fopenmp-default-sub-group-size=<arg>
          Specify the default sub-group size of SPMD kernels generated for
          OpenMP* target constructs for SPIR64.
-f[no]openmp-target-do-concurrent
          Determines whether a DO CONCURRENT construct is automatically
          converted into an OpenMP* TARGET region.
-fopenmp-default-allocator=<arg>
          Sets a default OpenMP allocator to use for all ALLOCATE statements
          in the Fortran program.
             omp_default_mem - use standard Fortran allocation routine
             omp_high_bw_mem - use high-bandwidth memory, if available
             omp_target_shared_mem - use shared memory with offload device
                                     Requires use of -qopenmp
-fopenmp-declare-target-scalar-defaultmap=<arg>
          Assume that a scalar declare target variable with
          implicit data-mapping referenced in a 'target' construct has the
          same value in the host and device environment.
            default - use default heuristics
            firstprivate - Declares the data variables in list to be private
            to the target task and shared by every thread team that runs
            the region.
-ftarget-compile-fast
          Experimental feature: Reduce target compilation time, with potential
          runtime performance trade-off.
-ftarget-register-alloc-mode=<arg>
          Specify a register allocation mode for specific hardware for use by
          supported target backends.
Data
----
-i{2|4|8}
          set default KIND of integer and logical variables to 2, 4, or 8
-integer-size <size>
          specifies the default size of integer and logical variables
            size: 16, 32, 64
-r{8|16}  set default size of real to 8 or 16 bytes
-real-size <size>
          specify the size of REAL and COMPLEX declarations, constants,
          functions, and intrinsics
            size: 32, 64, 128
-autodouble
          same as -real-size 64 or -r8
-double-size <size>
          defines the size of DOUBLE PRECISION and DOUBLE COMPLEX declarations,
          constants, functions, and intrinsics
            size: 64, 128
-[no]fpconstant
          extends the precision of single precision constants assigned to
          double precision variables to double precision
-[no]intconstant
          use Fortran 77 semantics, rather than Fortran 90/95, to determine
          kind of integer constants
-auto     make all local variables AUTOMATIC
-auto-scalar
          make scalar local variables AUTOMATIC (DEFAULT)
-save     save all variables (static allocation) (same as -noauto,
          opposite of -auto)
-[no]zero
          enable/disable(DEFAULT) implicit initialization to zero of local
          scalar variables of intrinsic type INTEGER, REAL, COMPLEX, or
          LOGICAL that are saved and not initialized
-init=<keyword>
          enable/disable(DEFAULT) implicit initialization of local
          variables of intrinsic type INTEGER, REAL, COMPLEX, or
          LOGICAL that are saved and not initialized
          The <keyword> specifies the initial value
            keywords: zero (same as -zero),
                      snan (valid only for floating point variables),
                      infinity, minus_infinity (valid only for floating point)
                      tiny, minus_tiny (valid only for floating point)
                      huge, minus_huge
                      arrays
-dyncom<common1,common2,...>
          make given common blocks dynamically-allocated
-Zp[n]    specify alignment constraint for structures (n=1,2,4,8,16
          -Zp16 DEFAULT)
-[no]align
          analyze and reorder memory layout for variables and arrays
-align <keyword>
          specify how data items are aligned
            keywords: all (same as -align), none (same as -noalign),
                      [no]commons, [no]dcommons,
                      [no]qcommons, [no]zcommons,
                      rec1byte, rec2byte, rec4byte,
                      rec8byte, rec16byte, rec32byte,
                      array8byte, array16byte, array32byte,
                      array64byte, array128byte, array256byte,
                      [no]records, [no]sequence
-fcommon  Enables the compiler to treat common variables as if they were
          defined. That in turn allows the use of gprel addressing of common
          data variables. -fno-common disables
-fstack-security-check
          enable overflow security checks.
          -fno-stack-security-check disables (DEFAULT)
-fstack-protector
          enable stack overflow security checks.
          -fno-stack-protector disables (DEFAULT)
-fstack-protector-strong
          enable stack overflow security checks for routines with any buffer.
          -fno-stack-protector-strong disables (DEFAULT)
-fstack-protector-all
          enable stack overflow security checks including functions.
          -fno-stack-protector-all disables (DEFAULT)
-fpic, -fPIC
          generate position independent code (-fno-pic/-fno-PIC is DEFAULT)
-fpie, -fPIE
          generate position independent code that will be linked into an
          executable (-fno-pie/-fno-PIE is DEFAULT)
-f[no-]keep-static-consts
          enable/disable(DEFAULT) the ability to preserve allocation of
          variables that are not referenced in the source
-fpack-struct
          pack structure members together
-f[no-]math-errno
          set ERRNO after calling standard math library functions
-f[no-]zero-initialized-in-bss
          put explicitly zero initialized variables into the DATA section
          instead of the BSS section
-mcmodel=<size>
          use a specific memory model to generate code and store data
            small - Restricts code and data to the first 2GB of address
                     space (DEFAULT)
            medium - Restricts code to the first 2GB; it places no memory
                     restriction on data
            large - Places no memory restriction on code or data
-convert <keyword>
          specify the format of unformatted files containing numeric data
            keywords: big_endian, cray, ibm, little_endian, native, vaxd, vaxg
-falign-functions=<n>
          align the start of functions on a 2 (DEFAULT) or <n> byte boundary
          where <n> is a power of 2
-falign-functions
          align the start of functions to an optimal machine-dependent value.
          -fno-align-functions (DEFAULT) aligns on a 2-byte boundary
-f[no-]maintain-32-byte-stack-align
          Realign stack to 32-byte if stack alignment is uncertain for
          functions with external linkage, and retain 32-byte alignment
          for other functions
-fvisibility=[extern|default|protected|hidden|internal]
          Global symbols (data and functions) will get the visibility
          attribute given by default. Symbol visibility attributes explicitly
          set in the source code or using the symbol visibility attribute
          file options will override the -fvisibility setting
-fvisibility-inlines-hidden
          mark inline member functions as hidden
-f[no-]strict-overflow
          Instructs the compiler to assume that signed arithmetic overflow of
          addition, subtraction and multiplication wraps around using
          twos-complement representation. (DEFAULT)
Compatibility
-------------
-fpscomp <keyword>
          specify the level of compatibility to adhere to with Fortran
          PowerStation
            keywords: all, none (same as -nofpscomp), [no]filesfromcmd,
                      [no]general, [no]ioformat, [no]ldio_spacing,
                      [no]libs, [no]logicals
-nofpscomp
          no specific level of compatibility with Fortran PowerStation
-f66, -66
          allow extensions that enhance FORTRAN-66 compatibility
-f77rtl   specify that the Fortran 77 specific run-time support should be used
          -nof77rtl disables
-vms      enable VMS I/O statement extensions
-gcc-name=<name>
          name and location of gcc if not where expected
-gxx-name=<name>
          name and location of g++ if not where expected
-gnu-prefix=prefix
          specify a prefix that will be added to the names of GNU utilities
          called from the compiler
Linking/Linker
--------------
-L<dir>   instruct linker to search <dir> for libraries
-l<string>
          instruct the linker to link in the -l<string> library
-shared-intel
          link Intel provided libraries dynamically
-static-intel
          link Intel provided libraries statically
-shared-libgcc
          link libgcc dynamically
-static-libgcc
          link libgcc statically
-static-libstdc++
          link libstdc++ statically
-dynamic-linker<file>
          select dynamic linker other than the default
-cxxlib   link using C++ run-time libraries
-no-cxxlib
          do not link in C++ runtime libraries
-cxxlib[=dir]
          link using C++ run-time libraries provided with gcc dir is an
          optional top-level location for the gcc binaries and libraries
-nodefaultlibs
          do not use standard libraries when linking
-nostartfiles
          do not use standard startup files when linking
-nostdlib
          do not use standard libraries and startup files when linking
-nofor-main
          do not link against Fortran main object. Used when linking Fortran
          objects with C main program
-static   prevents linking with shared libraries
-shared   produce a shared object
-Bstatic  specify following libraries are linked statically
-Bdynamic
          specify following libraries are linked dynamically
-pthread  use POSIX* thread library for multithreading support
          Same as -threads
-cxxlib-<mode>
          tell the compiler which C++ run-time libraries to use
            nostd - do not link in standard C++ library
-T <file>
          direct linker to read link commands from <file>
-Xassembler <val>
          pass <val> directly to the assembler for processing
-Xlinker <val>
          pass <val> directly to the linker for processing
-Wa,<o1>[,<o2>,...]
          pass options o1, o2, etc. to the assembler
-Wl,<o1>[,<o2>,...]
          pass options o1, o2, etc. to the linker for processing
-Wp,<o1>[,<o2>,...]
          pass options o1, o2, etc. to the preprocessor
-threads  specify that multi-threaded libraries should be linked against
          -nothreads disables multi-threaded libraries
-pie,-no_pie
          generate position independent code that will be linked into an
          executable (-pie is DEFAULT for macOS* 10.7 and later)
          -no-pie/-no_pie disables position independent code
-fuse-ld=<arg>
          Use different linker instead of default linker (ld)
            bfd - use bfd linker
            gold - use gold linker
            lld - use lld linker
-no-intel-lib[=<arg>]
          Restrict linking of Intel provided libraries. Arguments can be
          specified via a comma separated list. Valid arguments are:
          libirc, libimf, libsvml, libirng, libipgo
-f[no-]sycl-link-huge-device-code
          Deprecated. Use -flink-huge-device-code instead.
-f[no-]link-huge-device-code
          Place device code later in the linked binary in order to avoid
          precluding 32-bit PC relative relocations between surrounding ELF
          sections when device code is larger than 2GiB. This is disabled by
          default.
Linker Specific Options
-----------------------
These options are specific to the linker. Details can be found in the linker
documentation and man page
-L<dir>
-T<arg>
-h<arg>
-u<arg>
-z<arg>
-i
-r
-s
-N
-Bsymbolic
-Bdynamic
-Bstatic
Deprecated Options
------------------
-use-asm No replacement
-qopt-report [n] use -qopt-report[=n]
-cilk-serialize No replacement
-qcf-protection=shadow_stack use -fcf-protection=return
-qcf-protection=branch_tracking use -fcf-protection=branch
-qcf-protection=[full|none] use -fcf-protection=[full|none]
-march=icelake use -march=icelake-client
-mtune=icelake use -mtune=icelake-client
-mcpu=icelake use -mcpu=icelake-client
-xICELAKE use -xICELAKE-CLIENT
-axICELAKE use -axICELAKE-CLIENT
-mauto-arch=ICELAKE use -mauto-arch=ICELAKE-CLIENT
-f[no-]sycl-link-huge-device-code use -f[no-]link-huge-device-code
-help [category] print full or category help message
Valid categories include
       advanced - Advanced Optimizations
       codegen - Code Generation
       compatibility - Compatibility
       component - Component Control
       data - Data
       deprecated - Deprecated Options
       diagnostics - Compiler Diagnostics
       float - Floating Point
       help - Help
       inline - Inlining
       ipo - Interprocedural Optimization (IPO)
       language - Language
       link - Linking/Linker
       misc - Miscellaneous
       opt - Optimization
       output - Output
       pgo - Profile Guided Optimization (PGO)
       preproc - Preprocessor
       reports - Optimization Reports
       openmp - OpenMP and Parallel Processing
Copyright (C) 1985-2024, Intel Corporation. All rights reserved.
* Other names and brands may be claimed as the property of others.
Executing: mpiifort -fc=ifx -qversion
stdout:
ifx: command line warning #10006: ignoring unknown option '-qversion'
ld: /opt/intel/oneapi/compiler/2025.0/lib/for_main.o: in function `main':
for_main.c:(.text+0x19): undefined reference to `MAIN__'
Executing: mpiifort -fc=ifx -show
stdout: ifx -I"/opt/intel/oneapi/mpi/2021.14/include/mpi" -I"/opt/intel/oneapi/mpi/2021.14/include" -I"/opt/intel/oneapi/mpi/2021.14/include/mpi" -L"/opt/intel/oneapi/mpi/2021.14/lib" -L"/opt/intel/oneapi/mpi/2021.14/lib" -Xlinker --enable-new-dtags -Xlinker -rpath -Xlinker "/opt/intel/oneapi/mpi/2021.14/lib" -Xlinker -rpath -Xlinker "/opt/intel/oneapi/mpi/2021.14/lib" -lmpifort -lmpi -ldl -lrt -lpthread
          Trying FC compiler flag -PIC for PIC code
Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers  -PIC   /tmp/petsc-m5p55c3k/config.setCompilers/conftest.F90 
stdout: ifx: command line warning #10006: ignoring unknown option '-PIC'
Possible ERROR while running compiler:exit code 0
stderr:
ifx: command line warning #10006: ignoring unknown option '-PIC'
Source:
      program main

      end

              Output from compiling with  -PIC 
ifx: command line warning #10006: ignoring unknown option '-PIC'
              Rejecting compiler flag -PIC  due to 
ifx: command line warning #10006: ignoring unknown option '-PIC'
          Rejected FC compiler flag -PIC because shared linker cannot handle it
          Trying FC compiler flag -qPIC for PIC code
Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers  -qPIC   /tmp/petsc-m5p55c3k/config.setCompilers/conftest.F90 
stdout: ifx: command line warning #10006: ignoring unknown option '-qPIC'
Possible ERROR while running compiler:exit code 0
stderr:
ifx: command line warning #10006: ignoring unknown option '-qPIC'
Source:
      program main

      end

              Output from compiling with  -qPIC 
ifx: command line warning #10006: ignoring unknown option '-qPIC'
              Rejecting compiler flag -qPIC  due to 
ifx: command line warning #10006: ignoring unknown option '-qPIC'
          Rejected FC compiler flag -qPIC because shared linker cannot handle it
          Trying FC compiler flag -KPIC for PIC code
Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers  -KPIC   /tmp/petsc-m5p55c3k/config.setCompilers/conftest.F90 
stdout: ifx: command line remark #10148: option '-KPIC' not supported
Possible ERROR while running compiler:exit code 0
stderr:
ifx: command line remark #10148: option '-KPIC' not supported
Source:
      program main

      end

              Output from compiling with  -KPIC 
ifx: command line remark #10148: option '-KPIC' not supported
              Rejecting compiler flag -KPIC  due to 
ifx: command line remark #10148: option '-KPIC' not supported
          Rejected FC compiler flag -KPIC because shared linker cannot handle it
          Trying FC compiler flag -fPIC for PIC code
Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers  -fPIC   /tmp/petsc-m5p55c3k/config.setCompilers/conftest.F90 
Successful compile:
Source:
      program main

      end

              Output from compiling with  -fPIC 

Added FC compiler flag -fPIC
Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers  -fPIC  /tmp/petsc-m5p55c3k/config.setCompilers/conftest.F90 
Successful compile:
Source:
      function foo(a)
      real:: a,x,bar
      common /xx/ x
      x=a
      foo = bar(x)
      end

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.setCompilers/libconftest.so  -shared  -fPIC /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o 
          Accepted FC compiler flag -fPIC for PIC code
Executing: mpiicpc -cxx=icpx --help | head -n 20 
stdout:
OVERVIEW: Intel(R) oneAPI DPC++/C++ Compiler
USAGE: icpx [options] file...
OPTIONS:
  -###                    Print (but do not run) the commands to run for this compilation
  -#x                     Show commands to run and use verbose output
  -#                      Print (but do not run) the commands to run for this compilation
  -align                  Align doubles to two words in structs (x86 only)
  --amdgpu-arch-tool=<value>
                          Tool used for detecting AMD GPU arch in the system.
  --analyzer-output <value>
                          Static analyzer report output format (html|plist|plist-multi-file|plist-html|sarif|sarif-html|text).
  --analyze               Run the static analyzer
  -ansi-alias             enable use of ANSI aliasing rules optimizations user asserts that the program adheres to these rules
  -arcmt-migrate-emit-errors
                          Emit ARC errors even if the migrator can fix them
  -arcmt-migrate-report-output <value>
                          Output path for the plist report
  -ax<codes>              generate multiple, processor-specific, auto-dispatched code paths for Intel® processors, specified by <codes>, if there is a performance benefit
Executing: mpiicpc -cxx=icpx --help
stdout:
OVERVIEW: Intel(R) oneAPI DPC++/C++ Compiler
USAGE: icpx [options] file...
OPTIONS:
  -###                    Print (but do not run) the commands to run for this compilation
  -#x                     Show commands to run and use verbose output
  -#                      Print (but do not run) the commands to run for this compilation
  -align                  Align doubles to two words in structs (x86 only)
  --amdgpu-arch-tool=<value>
                          Tool used for detecting AMD GPU arch in the system.
  --analyzer-output <value>
                          Static analyzer report output format (html|plist|plist-multi-file|plist-html|sarif|sarif-html|text).
  --analyze               Run the static analyzer
  -ansi-alias             enable use of ANSI aliasing rules optimizations user asserts that the program adheres to these rules
  -arcmt-migrate-emit-errors
                          Emit ARC errors even if the migrator can fix them
  -arcmt-migrate-report-output <value>
                          Output path for the plist report
  -ax<codes>              generate multiple, processor-specific, auto-dispatched code paths for Intel® processors, specified by <codes>, if there is a performance benefit
  -B <prefix>             Search $prefix$file for executables, libraries, and data files. If $prefix is a directory, search $prefix/$file
  -b <arg>                Pass -b <arg> to the linker on AIX
  -CC                     Include comments from within macros in preprocessed output
  -cl-denorms-are-zero    OpenCL only. Allow denormals to be flushed to zero.
  -cl-ext=<value>         OpenCL only. Enable or disable OpenCL extensions/optional features. The argument is a comma-separated sequence of one or more extension names, each prefixed by '+' or '-'.
  -cl-fast-relaxed-math   OpenCL only. Sets -cl-finite-math-only and -cl-unsafe-math-optimizations, and defines __FAST_RELAXED_MATH__.
  -cl-finite-math-only    OpenCL only. Allow floating-point optimizations that assume arguments and results are not NaNs or +-Inf.
  -cl-fp32-correctly-rounded-divide-sqrt
                          OpenCL only. Specify that single precision floating-point divide and sqrt used in the program source are correctly rounded.
  -cl-kernel-arg-info     OpenCL only. Generate kernel argument metadata.
  -cl-mad-enable          OpenCL only. Allow use of less precise MAD computations in the generated binary.
  -cl-no-signed-zeros     OpenCL only. Allow use of less precise no signed zeros computations in the generated binary.
  -cl-no-stdinc           OpenCL only. Disables all standard includes containing non-native compiler types and functions.
  -cl-opt-disable         OpenCL only. This option disables all optimizations. By default optimizations are enabled.
  -cl-single-precision-constant
                          OpenCL only. Treat double precision floating-point constant as single precision constant.
  -cl-std=<value>         OpenCL language standard to compile for.
  -cl-strict-aliasing     OpenCL only. This option is added for compatibility with OpenCL 1.0.
  -cl-uniform-work-group-size
                          OpenCL only. Defines that the global work-size be a multiple of the work-group size specified to clEnqueueNDRangeKernel
  -cl-unsafe-math-optimizations
                          OpenCL only. Allow unsafe floating-point optimizations.  Also implies -cl-no-signed-zeros and -cl-mad-enable.
  --config=<file>         Specify configuration file
  --cuda-compile-host-device
                          Compile CUDA code for both host and device (default). Has no effect on non-CUDA compilations.
  --cuda-device-only      Compile CUDA code for device only
  --cuda-feature=<value>  Manually specify the CUDA feature to use
  --cuda-host-only        Compile CUDA code for host only. Has no effect on non-CUDA compilations.
  --cuda-include-ptx=<value>
                          Include PTX for the following GPU architecture (e.g. sm_35) or 'all'. May be specified more than once.
  --cuda-noopt-device-debug
                          Enable device-side debug info generation. Disables ptxas optimizations.
  --cuda-path-ignore-env  Ignore environment variables to detect CUDA installation
  --cuda-path=<value>     CUDA installation path
  -cuid=<value>           An ID for compilation unit, which should be the same for the same compilation unit but different for different compilation units. It is used to externalize device-side static variables for single source offloading languages CUDA and HIP so that they can be accessed by the host code of the same compilation unit.
  -cxx-isystem <directory>
                          Add directory to the C++ SYSTEM include search path
  -C                      Include comments in preprocessed output
  -c                      Only run preprocess, compile, and assemble steps
  -daal=<value>           Link Intel(R) Data Analytics Acceleration Library (Intel(R) DAAL) libraries and bring in the associated headers (parallel)
  -darwin-target-variant-triple <value>
                          Specify the darwin target variant triple
  -darwin-target-variant <value>
                          Generate code for an additional runtime variant of the deployment target
  -dD                     Print macro definitions in -E mode in addition to normal output
  -debug=<value>          Enable debug information. Valid args: none, all, full, minimal
  -dependency-dot <value> Filename to write DOT-formatted header dependencies to
  -dependency-file <value>
                          Filename (or -) to write dependency output to
  -device-math-lib=<value>
                          Control the addition of device math libraries when compiling for other devices.  Valid arguments are fp64, fp32
  -dI                     Print include directives in -E mode in addition to normal output
  -dM                     Print macro definitions in -E mode instead of normal output
  -dryrun                 Print (but do not run) the commands to run for this compilation
  -dsym-dir <dir>         Directory to output dSYM's (if any) to
  -dumpdir <dumppfx>      Use <dumpfpx> as a prefix to form auxiliary and dump file names
  -dumpmachine            Display the compiler's target processor
  -dumpversion            Display the version of the compiler
  -D <macro>=<value>      Define <macro> to <value> (or 1 if <value> omitted)
  --embed-dir=<dir>       Add directory to embed search path
  -emit-ast               Emit Clang AST files for source inputs
  --emit-extension-symbol-graphs
                          Generate additional symbol graphs for extended modules.
  -emit-interface-stubs   Generate Interface Stub Files.
  -emit-llvm              Use the LLVM representation for assembler and object files
  -emit-merged-ifs        Generate Interface Stub Files, emit merged text not binary.
  --emit-static-lib       Enable linker job to emit a static library.
  -emit-symbol-graph      Generate Extract API information as a side effect of compilation.
  --end-no-unused-arguments
                          Start emitting warnings for unused driver arguments
  -EP                     Preprocess to stdout, omitting #line directives.
  --extract-api-ignores=<value>
                          Comma separated list of files containing a new line separated list of API symbols to ignore when extracting API information.
  -extract-api            Extract API information
  -E                      Only run the preprocessor
  -faapcs-bitfield-load   Follows the AAPCS standard that all volatile bit-field write generates at least one load. (ARM only).
  -faapcs-bitfield-width  Follow the AAPCS standard requirement stating that volatile bit-field width is dictated by the field container type. (ARM only).
  -faddrsig               Emit an address-significance table
  -falign-functions=<value>
                          Align the start of functions on a 2 (DEFAULT) or <n> byte boundary where <n> is a power of 2.
  -falign-functions       align the start of functions to an optimal machine-dependent value.
  -falign-loops=<N>       N must be a power of two. Align loops to the boundary
  -falign-stack=assume-16-byte
                          Assume the stack is aligned on 16-byte boundaries
  -falign-stack=assume-4-byte
                          Assume the stack is aligned on 4-byte boundaries
  -falign-stack=maintain-16-byte
                          Do not assume any alignment, but maintain alignment in case the stack is already aligned
  -faligned-allocation    Enable C++17 aligned allocation functions
  -fallow-editor-placeholders
                          Treat editor placeholders as valid source code
  -faltivec-src-compat=<value>
                          Source-level compatibility for Altivec vectors (for PowerPC targets). This includes results of vector comparison (scalar for 'xl', vector for 'gcc') as well as behavior when initializing with a scalar (splatting for 'xl', element zero only for 'gcc'). For 'mixed', the compatibility is as 'gcc' for 'vector bool/vector pixel' and as 'xl' for other types. Current default is 'mixed'.
  -fansi-escape-codes     Use ANSI escape codes for diagnostics
  -fapinotes-modules      Enable module-based external API notes support
  -fapinotes-swift-version=<version>
                          Specify the Swift version to use when filtering API notes
  -fapinotes              Enable external API notes support
  -fapple-kext            Use Apple's kernel extensions ABI
  -fapple-link-rtlib      Force linking the clang builtins runtime library
  -fapple-pragma-pack     Enable Apple gcc-compatible #pragma pack handling
  -fapplication-extension Restrict code to those available for App Extensions
  -fapprox-func           Allow certain math function calls to be replaced with an approximately equivalent calculation
  -fargument-noalias      Enables 'noalias' attribute for all pointer-type arguments
  -fassume-nothrow-exception-dtor
                          Assume that exception objects' destructors are non-throwing
  -fasync-exceptions      Enable EH Asynchronous exceptions
  -fauto-import           MinGW specific. Enable code generation support for automatic dllimport, and enable support for it in the linker. Enabled by default.
  -fbasic-block-address-map
                          Emit the basic block address map section.
  -fbasic-block-sections=<value>
                          Place each function's basic blocks in unique sections (ELF Only)
  -fbinutils-version=<major.minor>
                          Produced object files can use all ELF features supported by this binutils version and newer. If -fno-integrated-as is specified, the generated assembly will consider GNU as support. 'none' means that all ELF features can be used, regardless of binutils support. Defaults to 2.26.
  -fblocks                Enable the 'blocks' language feature
  -fborland-extensions    Accept non-standard constructs supported by the Borland compiler
  -fbuild-session-file=<file>
                          Use the last modification time of <file> as the build session timestamp
  -fbuild-session-timestamp=<time since Epoch in seconds>
                          Time when the current build session started
  -fbuiltin-module-map    Load the clang builtins module map file.
  -fc++-abi=<value>       C++ ABI to use. This will override the target C++ ABI.
  -fcall-saved-x10        Make the x10 register call-saved (AArch64 only)
  -fcall-saved-x11        Make the x11 register call-saved (AArch64 only)
  -fcall-saved-x12        Make the x12 register call-saved (AArch64 only)
  -fcall-saved-x13        Make the x13 register call-saved (AArch64 only)
  -fcall-saved-x14        Make the x14 register call-saved (AArch64 only)
  -fcall-saved-x15        Make the x15 register call-saved (AArch64 only)
  -fcall-saved-x18        Make the x18 register call-saved (AArch64 only)
  -fcall-saved-x8         Make the x8 register call-saved (AArch64 only)
  -fcall-saved-x9         Make the x9 register call-saved (AArch64 only)
  -fcaret-diagnostics-max-lines=<value>
                          Set the maximum number of source lines to show in a caret diagnostic (0 = no limit).
  -fcf-protection=<value> Instrument control-flow architecture protection
  -fcf-protection         Enable cf-protection in 'full' mode
  -fchar8_t               Enable C++ builtin type char8_t
  -fcheck-new             Do not assume C++ operator new may not return NULL
  -fclang-abi-compat=<version>
                          Attempt to match the ABI of Clang <version>
  -fclangir               Use the ClangIR pipeline to compile
  -fcolor-diagnostics     Enable colors in diagnostics
  -fcomment-block-commands=<arg>
                          Treat each comma separated argument in <arg> as a documentation comment block command
  -fcommon                Place uninitialized global variables in a common block
  -fcomplete-member-pointers
                          Require member pointer base types to be complete if they would be significant under the Microsoft ABI
  -fconstexpr-backtrace-limit=<value>
                          Set the maximum number of entries to print in a constexpr evaluation backtrace (0 = no limit)
  -fconstexpr-depth=<value>
                          Set the maximum depth of recursive constexpr function calls
  -fconstexpr-steps=<value>
                          Set the maximum number of steps in constexpr function evaluation
  -fcoro-aligned-allocation
                          Prefer aligned allocation for C++ Coroutines
  -fcoroutines            Enable support for the C++ Coroutines
  -fcoverage-compilation-dir=<value>
                          The compilation directory to embed in the coverage mapping.
  -fcoverage-mapping      Generate coverage mapping to enable code coverage analysis
  -fcoverage-mcdc         Enable MC/DC criteria when generating code coverage
  -fcoverage-prefix-map=<old>=<new>
                          remap file source paths <old> to <new> in coverage mapping. If there are multiple options, prefix replacement is applied in reverse order starting from the last one
  -fcrash-diagnostics-dir=<dir>
                          Put crash-report files in <dir>
  -fcrash-diagnostics=<value>
                          Set level of crash diagnostic reporting, (option: off, compiler, all)
  -fcrash-diagnostics     Enable crash diagnostic reporting (default)
  -fcs-profile-generate=<directory>
                          Generate instrumented code to collect context sensitive execution counts into <directory>/default.profraw (overridden by LLVM_PROFILE_FILE env var)
  -fcs-profile-generate   Generate instrumented code to collect context sensitive execution counts into default.profraw (overridden by LLVM_PROFILE_FILE env var)
  -fcuda-prec-sqrt        Specify that sqrt is correctly rounded (for CUDA devices)
  -fcuda-short-ptr        Use 32-bit pointers for accessing const/local/shared address spaces
  -fcx-fortran-rules      Range reduction is enabled for complex arithmetic operations.
  -fcx-limited-range      Basic algebraic expansions of complex arithmetic operations involving are enabled.
  -fcxx-exceptions        Enable C++ exceptions
  -fcxx-modules           Enable modules for C++
  -fdata-sections         Place each data in its own section
  -fdebug-compilation-dir=<value>
                          The compilation directory to embed in the debug info
  -fdebug-default-version=<value>
                          Default DWARF version to use, if a -g option caused DWARF debug info to be produced
  -fdebug-info-for-profiling
                          Emit extra debug info to make sample profile more accurate
  -fdebug-macro           Emit macro debug information
  -fdebug-prefix-map=<old>=<new>
                          For paths in debug info, remap directory <old> to <new>. If multiple options match a path, the last option wins
  -fdebug-ranges-base-address
                          Use DWARF base address selection entries in .debug_ranges
  -fdebug-types-section   Place debug types in their own section (ELF Only)
  -fdeclspec              Allow __declspec as a keyword
  -fdefine-target-os-macros
                          Enable predefined target OS macros
  -fdelayed-template-parsing
                          Parse templated function definitions at the end of the translation unit
  -fdelete-null-pointer-checks
                          Treat usage of null pointers as undefined behavior (default)
  -fdiagnostics-absolute-paths
                          Print absolute paths in diagnostics
  -fdiagnostics-hotness-threshold=<value>
                          Prevent optimization remarks from being output if they do not have at least this profile count. Use 'auto' to apply the threshold from profile summary
  -fdiagnostics-misexpect-tolerance=<value>
                          Prevent misexpect diagnostics from being output if the profile counts are within N% of the expected. 
  -fdiagnostics-parseable-fixits
                          Print fix-its in machine parseable form
  -fdiagnostics-print-source-range-info
                          Print source range spans in numeric form
  -fdiagnostics-show-hotness
                          Enable profile hotness information in diagnostic line
  -fdiagnostics-show-note-include-stack
                          Display include stacks for diagnostic notes
  -fdiagnostics-show-option
                          Print option name with mappable diagnostics
  -fdiagnostics-show-template-tree
                          Print a template comparison tree for differing templates
  -fdigraphs              Enable alternative token representations '<:', ':>', '<%', '%>', '%:', '%:%:' (default)
  -fdirect-access-external-data
                          Don't use GOT indirection to reference external data symbols
  -fdisable-block-signature-string
                          Disable block signature string)
  -fdiscard-value-names   Discard value names in LLVM IR
  -fdollars-in-identifiers
                          Allow '$' in identifiers
  -fdriver-only           Only run the driver.
  -fdwarf-exceptions      Use DWARF style exceptions
  -feliminate-unused-debug-types
                          Do not emit  debug info for defined but unused types
  -fembed-bitcode-marker  Embed placeholder LLVM IR data as a marker
  -fembed-bitcode=<option>
                          Embed LLVM bitcode
  -fembed-bitcode         Embed LLVM IR bitcode as data
  -fembed-offload-object=<value>
                          Embed Offloading device-side binary into host object file as a section.
  -femit-all-decls        Emit all declarations, even if unused
  -femit-class-debug-always
                          Emit debug information for a C++ class into each object file where the class is used. This flag is useful for tools which are unable to resolve incomplete type descriptions.  Using this option may cause a large increase in the size of the debug information
  -femit-compact-unwind-non-canonical
                          Try emitting Compact-Unwind for non-canonical entries. Maybe overriden by other constraints
  -femit-dwarf-unwind=<value>
                          When to emit DWARF unwind (EH frame) info
  -femulated-tls          Use emutls functions to access thread_local variables
  -fenable-matrix         Enable matrix data type and related builtin functions
  -fexceptions            Enable support for exception handling
  -fexcess-precision=<value>
                          Allows control over excess precision on targets where native support for the precision types is not available. By default, excess precision is used to calculate intermediate results following the rules specified in ISO C99.
  -fexperimental-late-parse-attributes
                          Enable experimental late parsing of attributes
  -fexperimental-library  Control whether unstable and experimental library features are enabled. This option enables various library features that are either experimental (also known as TSes), or have been but are not stable yet in the selected Standard Library implementation. It is not recommended to use this option in production code, since neither ABI nor API stability are guaranteed. This is intended to provide a preview of features that will ship in the future for experimentation purposes
  -fexperimental-modules-reduced-bmi
                          Generate the reduced BMI
  -fexperimental-new-constant-interpreter
                          Enable the experimental new constant interpreter
  -fexperimental-openacc-macro-override <value>
                          Overrides the _OPENACC macro value for experimental testing during OpenACC support development
  -fexperimental-relative-c++-abi-vtables
                          Use the experimental C++ class ABI for classes with virtual tables
  -fexperimental-sanitize-metadata-ignorelist=<value>
                          Disable sanitizer metadata for modules and functions that match the provided special case list
  -fexperimental-sanitize-metadata=<value>
                          Specify the type of metadata to emit for binary analysis sanitizers
  -fexperimental-strict-floating-point
                          Enables the use of non-default rounding modes and non-default exception handling on targets that are not currently ready.
  -fextend-arguments=<value>
                          Controls how scalar integer arguments are extended in calls to unprototyped and varargs functions
  -ffast-math             Allow aggressive, lossy floating-point optimizations
  -ffat-lto-objects       Enable fat LTO object support
  -ffile-compilation-dir=<value>
                          The compilation directory to embed in the debug info and coverage mapping.
  -ffile-prefix-map=<value>
                          remap file source paths in debug info, predefined preprocessor macros and __builtin_FILE(). Implies -ffile-reproducible.
  -ffile-reproducible     Use the target's platform-specific path separator character when expanding the __FILE__ macro
  -ffine-grained-bitfield-accesses
                          Use separate accesses for consecutive bitfield runs with legal widths and alignments.
  -ffinite-loops          Assume all non-trivial loops are finite.
  -ffinite-math-only      Allow floating-point optimizations that assume arguments and results are not NaNs or +-inf. This defines the \_\_FINITE\_MATH\_ONLY\_\_ preprocessor macro.
  -ffixed-a0              Reserve the a0 register (M68k only)
  -ffixed-a1              Reserve the a1 register (M68k only)
  -ffixed-a2              Reserve the a2 register (M68k only)
  -ffixed-a3              Reserve the a3 register (M68k only)
  -ffixed-a4              Reserve the a4 register (M68k only)
  -ffixed-a5              Reserve the a5 register (M68k only)
  -ffixed-a6              Reserve the a6 register (M68k only)
  -ffixed-d0              Reserve the d0 register (M68k only)
  -ffixed-d1              Reserve the d1 register (M68k only)
  -ffixed-d2              Reserve the d2 register (M68k only)
  -ffixed-d3              Reserve the d3 register (M68k only)
  -ffixed-d4              Reserve the d4 register (M68k only)
  -ffixed-d5              Reserve the d5 register (M68k only)
  -ffixed-d6              Reserve the d6 register (M68k only)
  -ffixed-d7              Reserve the d7 register (M68k only)
  -ffixed-g1              Reserve the G1 register (SPARC only)
  -ffixed-g2              Reserve the G2 register (SPARC only)
  -ffixed-g3              Reserve the G3 register (SPARC only)
  -ffixed-g4              Reserve the G4 register (SPARC only)
  -ffixed-g5              Reserve the G5 register (SPARC only)
  -ffixed-g6              Reserve the G6 register (SPARC only)
  -ffixed-g7              Reserve the G7 register (SPARC only)
  -ffixed-i0              Reserve the I0 register (SPARC only)
  -ffixed-i1              Reserve the I1 register (SPARC only)
  -ffixed-i2              Reserve the I2 register (SPARC only)
  -ffixed-i3              Reserve the I3 register (SPARC only)
  -ffixed-i4              Reserve the I4 register (SPARC only)
  -ffixed-i5              Reserve the I5 register (SPARC only)
  -ffixed-l0              Reserve the L0 register (SPARC only)
  -ffixed-l1              Reserve the L1 register (SPARC only)
  -ffixed-l2              Reserve the L2 register (SPARC only)
  -ffixed-l3              Reserve the L3 register (SPARC only)
  -ffixed-l4              Reserve the L4 register (SPARC only)
  -ffixed-l5              Reserve the L5 register (SPARC only)
  -ffixed-l6              Reserve the L6 register (SPARC only)
  -ffixed-l7              Reserve the L7 register (SPARC only)
  -ffixed-o0              Reserve the O0 register (SPARC only)
  -ffixed-o1              Reserve the O1 register (SPARC only)
  -ffixed-o2              Reserve the O2 register (SPARC only)
  -ffixed-o3              Reserve the O3 register (SPARC only)
  -ffixed-o4              Reserve the O4 register (SPARC only)
  -ffixed-o5              Reserve the O5 register (SPARC only)
  -ffixed-point           Enable fixed point types
  -ffixed-r19             Reserve register r19 (Hexagon only)
  -ffixed-r9              Reserve the r9 register (ARM only)
  -ffixed-x10             Reserve the x10 register (AArch64/RISC-V only)
  -ffixed-x11             Reserve the x11 register (AArch64/RISC-V only)
  -ffixed-x12             Reserve the x12 register (AArch64/RISC-V only)
  -ffixed-x13             Reserve the x13 register (AArch64/RISC-V only)
  -ffixed-x14             Reserve the x14 register (AArch64/RISC-V only)
  -ffixed-x15             Reserve the x15 register (AArch64/RISC-V only)
  -ffixed-x16             Reserve the x16 register (AArch64/RISC-V only)
  -ffixed-x17             Reserve the x17 register (AArch64/RISC-V only)
  -ffixed-x18             Reserve the x18 register (AArch64/RISC-V only)
  -ffixed-x19             Reserve the x19 register (AArch64/RISC-V only)
  -ffixed-x1              Reserve the x1 register (AArch64/RISC-V only)
  -ffixed-x20             Reserve the x20 register (AArch64/RISC-V only)
  -ffixed-x21             Reserve the x21 register (AArch64/RISC-V only)
  -ffixed-x22             Reserve the x22 register (AArch64/RISC-V only)
  -ffixed-x23             Reserve the x23 register (AArch64/RISC-V only)
  -ffixed-x24             Reserve the x24 register (AArch64/RISC-V only)
  -ffixed-x25             Reserve the x25 register (AArch64/RISC-V only)
  -ffixed-x26             Reserve the x26 register (AArch64/RISC-V only)
  -ffixed-x27             Reserve the x27 register (AArch64/RISC-V only)
  -ffixed-x28             Reserve the x28 register (AArch64/RISC-V only)
  -ffixed-x29             Reserve the x29 register (AArch64/RISC-V only)
  -ffixed-x2              Reserve the x2 register (AArch64/RISC-V only)
  -ffixed-x30             Reserve the x30 register (AArch64/RISC-V only)
  -ffixed-x31             Reserve the x31 register (AArch64/RISC-V only)
  -ffixed-x3              Reserve the x3 register (AArch64/RISC-V only)
  -ffixed-x4              Reserve the x4 register (AArch64/RISC-V only)
  -ffixed-x5              Reserve the x5 register (AArch64/RISC-V only)
  -ffixed-x6              Reserve the x6 register (AArch64/RISC-V only)
  -ffixed-x7              Reserve the x7 register (AArch64/RISC-V only)
  -ffixed-x8              Reserve the x8 register (AArch64/RISC-V only)
  -ffixed-x9              Reserve the x9 register (AArch64/RISC-V only)
  -fforce-check-cxx20-modules-input-files
                          Check the input source files from C++20 modules explicitly
  -fforce-dwarf-frame     Always emit a debug frame section
  -fforce-emit-vtables    Emits more virtual tables to improve devirtualization
  -fforce-enable-int128   Enable support for int128_t type
  -ffp-accuracy=<value>   Specifies the required accuracy for floating-point operations and library calls.
  -ffp-contract=<value>   Form fused FP ops (e.g. FMAs)
  -ffp-eval-method=<value>
                          Specifies the evaluation method to use for floating-point arithmetic.
  -ffp-exception-behavior=<value>
                          Specifies the exception behavior of floating-point operations.
  -ffp-model=<value>      Controls the semantics of floating-point calculations.
  -ffreestanding          Assert that the compilation takes place in a freestanding environment
  -ffuchsia-api-level=<value>
                          Set Fuchsia API level
  -ffunction-sections     Place each function in its own section
  -fglobal-isel           Enables the global instruction selector
  -fgnu-keywords          Allow GNU-extension keywords regardless of language standard
  -fgnu-runtime           Generate output compatible with the standard GNU Objective-C runtime
  -fgnu89-inline          Use the gnu89 inline semantics
  -fgnuc-version=<value>  Sets various macros to claim compatibility with the given GCC version (default is 4.2.1)
  -fgpu-allow-device-init Allow device side init function in HIP (experimental)
  -fgpu-approx-transcendentals
                          Use approximate transcendental functions
  -fgpu-default-stream=<value>
                          Specify default stream. The default value is 'legacy'. (CUDA/HIP only)
  -fgpu-defer-diag        Defer host/device related diagnostic messages for CUDA/HIP
  -fgpu-flush-denormals-to-zero
                          Flush denormal floating point values to zero in CUDA/HIP device mode.
  -fgpu-rdc               Generate relocatable device code, also known as separate compilation mode
  -fgpu-sanitize          Enable sanitizer for supported offloading devices
  -fhelp                  Display available options
  -fhip-emit-relocatable  Compile HIP source to relocatable
  -fhip-fp32-correctly-rounded-divide-sqrt
                          Specify that single precision floating-point divide and sqrt used in the program source are correctly rounded (HIP device compilation only)
  -fhip-kernel-arg-name   Specify that kernel argument names are preserved (HIP only)
  -fhip-new-launch-api    Use new kernel launching API for HIP
  -fhlsl-strict-availability
                          Enables strict availability diagnostic mode for HLSL built-in functions.
  -fhls                   Enable Intel FPGA High Level Synthesis extensions
  -fhonor-infinities      Specify that floating-point optimizations are not allowed that assume arguments and results are not +-inf.
  -fhonor-nan-compares    Honor NaN compares with fast math
  -fhonor-nans            Specify that floating-point optimizations are not allowed that assume arguments and results are not NANs.
  -fignore-exceptions     Enable support for ignoring exception handling constructs
  -fimf-absolute-error=<value>
                          Define the maximum allowable absolute error for math library function results
  -fimf-accuracy-bits=<value>
                          Define the relative error, measured by the number of correct bits,for math library function results
  -fimf-arch-consistency=<value>
                          Ensures that the math library functions produce consistent results across different implementations of the same architecture
  -fimf-domain-exclusion=<value>
                          Indicates the input arguments domain on which math functions must provide correct results.
  -fimf-max-error=<value> defines the maximum allowable relative error, measured in ulps, for math library function results
  -fimf-precision=<value> Defines the accuracy (precision) for math library functions.
  -fimf-use-svml=<value>  Instruct the compiler to implement math library functions using the Short Vector Math Library(SVML)
  -fimplicit-module-maps  Implicitly search the file system for module map files.
  -fincremental-extensions
                          Enable incremental processing extensions such as processingstatements on the global scope.
  -finline-functions      Inline suitable functions
  -finline-hint-functions Inline functions which are (explicitly or implicitly) marked inline
  -finline-max-stacksize=<value>
                          Suppress inlining of functions whose stack size exceeds the given value
  -finput-charset=<value> Specify the default character set for source files
  -finstrument-function-entry-bare
                          Instrument function entry only, after inlining, without arguments to the instrumentation call
  -finstrument-functions-after-inlining
                          Like -finstrument-functions, but insert the calls after inlining
  -finstrument-functions  Generate calls to instrument function entry and exit
  -fintegrated-as         Enable the integrated assembler
  -fintegrated-cc1        Run cc1 in-process
  -fintegrated-objemitter Use internal machine object code emitter.
  -fintel-long-double-size=<value>
                          Overrides the size of long double from the architecture/OS defaults.
  -fintelfpga             Perform ahead-of-time compilation for FPGA
  -fiopenmp-simd          Same as -qopenmp-simd
  -fiopenmp               Same as -qopenmp
  -fjmc                   Enable just-my-code debugging
  -fjump-tables           Use jump tables for lowering switches
  -fkeep-persistent-storage-variables
                          Enable keeping all variables that have a persistent storage duration, including global, static and thread-local variables, to guarantee that they can be directly addressed
  -fkeep-static-consts    Keep static const variables even if unused
  -fkeep-system-includes  Instead of expanding system headers when emitting preprocessor output, preserve the #include directive. Useful when producing preprocessed output for test case reduction. May produce incorrect output if preprocessor symbols that control the included content (e.g. _XOPEN_SOURCE) are defined in the including source file. The portability of the resulting source to other compilation environments is not guaranteed.
                          
                          Only valid with -E.
  -flax-vector-conversions=<value>
                          Enable implicit vector bit-casts
  -flink-huge-device-code Generate and use a custom linker script for huge device code sections
  -flto-jobs=<value>      Controls the backend parallelism of -flto=thin (default of 0 means the number of threads will be derived from the number of CPUs detected)
  -flto=auto              Enable LTO in 'full' mode
  -flto=jobserver         Enable LTO in 'full' mode
  -flto=<value>           Set LTO mode
  -flto                   Enable LTO in 'full' mode
  -fmacro-backtrace-limit=<value>
                          Set the maximum number of entries to print in a macro expansion backtrace (0 = no limit)
  -fmacro-prefix-map=<value>
                          remap file source paths in predefined preprocessor macros and __builtin_FILE(). Implies -ffile-reproducible.
  -fmaintain-32-byte-stack-align
                          Do not assume any alignment, but maintain alignment in case the stack is already aligned
  -fmath-errno            Require math functions to indicate errors by setting errno
  -fmax-tokens=<value>    Max total number of preprocessed tokens for -Wmax-tokens.
  -fmax-type-align=<value>
                          Specify the maximum alignment to enforce on pointers lacking an explicit alignment
  -fma                    Enable the combining of floating point multiples and add/subtract operations.
  -fmemory-profile-use=<pathname>
                          Use memory profile for profile-guided memory optimization
  -fmemory-profile=<directory>
                          Enable heap memory profiling and dump results into <directory>
  -fmemory-profile        Enable heap memory profiling
  -fmerge-all-constants   Allow merging of constants
  -fmerge-debug-strings   Merge identical debug strings in different object files.
  -fmessage-length=<value>
                          Format message diagnostics so that they fit within N columns
  -fminimize-whitespace   Ignore the whitespace from the input file when emitting preprocessor output. It will only contain whitespace when necessary, e.g. to keep two minus signs from merging into to an increment operator. Useful with the -P option to normalize whitespace such that two files with only formatting changes are equal.
                          
                          Only valid with -E on C-like inputs and incompatible with -traditional-cpp.
  -fmodule-file=[<name>=]<file>
                          Specify the mapping of module name to precompiled module file, or load a module file if name is omitted.
  -fmodule-header=<kind>  Build a C++20 Header Unit from a header that should be found in the user (fmodule-header=user) or system (fmodule-header=system) search path.
  -fmodule-header         Build a C++20 Header Unit from a header
  -fmodule-map-file=<file>
                          Load this module map file
  -fmodule-name=<name>    Specify the name of the module to build
  -fmodule-output=<value> Save intermediate module file results when compiling a standard C++ module unit.
  -fmodule-output         Save intermediate module file results when compiling a standard C++ module unit.
  -fmodules-cache-path=<directory>
                          Specify the module cache path
  -fmodules-decluse       Require declaration of modules used within a module
  -fmodules-disable-diagnostic-validation
                          Disable validation of the diagnostic options when loading the module
  -fmodules-ignore-macro=<value>
                          Ignore the definition of the given macro when building and loading modules
  -fmodules-prune-after=<seconds>
                          Specify the interval (in seconds) after which a module file will be considered unused
  -fmodules-prune-interval=<seconds>
                          Specify the interval (in seconds) between attempts to prune the module cache
  -fmodules-search-all    Search even non-imported modules to resolve references
  -fmodules-strict-decluse
                          Like -fmodules-decluse but requires all headers to be in modules
  -fmodules-user-build-path <directory>
                          Specify the module user build path
  -fmodules-validate-input-files-content
                          Validate PCM input files based on content if mtime differs
  -fmodules-validate-once-per-build-session
                          Don't verify input files for the modules if the module has been successfully validated or loaded during this build session
  -fmodules-validate-system-headers
                          Validate the system headers that a module depends on when loading the module
  -fmodules               Enable the 'modules' language feature
  -fms-compatibility-version=<value>
                          Dot-separated value representing the Microsoft compiler version number to report in _MSC_VER (0 = don't define it (default))
  -fms-compatibility      Enable full Microsoft Visual C++ compatibility
  -fms-define-stdc        Define '__STDC__' to '1' in MSVC Compatibility mode
  -fms-extensions         Accept some non-standard constructs supported by the Microsoft compiler
  -fms-hotpatch           Ensure that all functions can be hotpatched at runtime
  -fms-runtime-lib=<value>
                          Select Windows run-time library
  -fms-volatile           Volatile loads and stores have acquire and release semantics
  -fmsc-version=<value>   Microsoft compiler version number to report in _MSC_VER (0 = don't define it (default))
  -fnew-alignment=<align> Specifies the largest alignment guaranteed by '::operator new(size_t)'
  -fnew-infallible        Enable treating throwing global C++ operator new as always returning valid memory (annotates with __attribute__((returns_nonnull)) and throw()). This is detectable in source.
  -fno-aapcs-bitfield-width
                          Do not follow the AAPCS standard requirement stating that volatile bit-field width is dictated by the field container type. (ARM only).
  -fno-access-control     Disable C++ access control
  -fno-addrsig            Don't emit an address-significance table
  -fno-alias              Enables 'noalias' attribute for all pointer-type arguments
  -fno-align-functions    Aligns on a 2-byte boundary
  -fno-apinotes-modules   Disable module-based external API notes support
  -fno-apinotes           Disable external API notes support
  -fno-assume-sane-operator-new
                          Don't assume that C++'s global operator new can't alias any pointer
  -fno-assume-unique-vtables
                          Disable optimizations based on vtable pointer identity
  -fno-assumptions        Disable codegen and compile-time checks for C++23's [[assume]] attribute
  -fno-auto-import        MinGW specific. Disable support for automatic dllimport in code generation and linking
  -fno-autolink           Disable generation of linker directives for automatic library linking
  -fno-builtin-<value>    Disable implicit builtin knowledge of a specific function
  -fno-builtin            Disable implicit builtin knowledge of functions
  -fno-bundle-offload-arch
                          Specify that the offload bundler should not identify a bundle with specific arch. For example, the bundle for `nvptx64-nvidia-cuda-sm_80` uses the bundle tag `nvptx64-nvidia-cuda` when used. This allows .o files to contain .bc bundles that are unspecific to a particular arch version.
  -fno-c++-static-destructors
                          Disable C++ static destructor registration
  -fno-char8_t            Disable C++ builtin type char8_t
  -fno-clangir            Use the AST -> LLVM pipeline to compile
  -fno-color-diagnostics  Disable colors in diagnostics
  -fno-common             Compile common globals like normal definitions
  -fno-complete-member-pointers
                          Do not require member pointer base types to be complete if they would be significant under the Microsoft ABI
  -fno-constant-cfstrings Disable creation of CodeFoundation-type constant strings
  -fno-convergent-functions
                          Assume all functions may be convergent.
  -fno-coverage-mapping   Disable code coverage analysis
  -fno-coverage-mcdc      Disable MC/DC coverage criteria
  -fno-crash-diagnostics  Disable auto-generation of preprocessed source files and a script for reproduction during a clang crash
  -fno-cuda-prec-sqrt     Don't specify that sqrt is correctly rounded (for CUDA devices)
  -fno-cx-fortran-rules   Range reduction is disabled for complex arithmetic operations
  -fno-cx-limited-range   Basic algebraic expansions of complex arithmetic operations involving are disabled.
  -fno-cxx-modules        Disable modules for C++
  -fno-debug-macro        Do not emit macro debug information
  -fno-declspec           Disallow __declspec as a keyword
  -fno-define-target-os-macros
                          Disable predefined target OS macros
  -fno-delayed-template-parsing
                          Disable delayed template parsing
  -fno-delete-null-pointer-checks
                          Do not treat usage of null pointers as undefined behavior
  -fno-diagnostics-fixit-info
                          Do not include fixit information in diagnostics
  -fno-diagnostics-show-line-numbers
                          Show line numbers in diagnostic code snippets
  -fno-digraphs           Disallow alternative token representations '<:', ':>', '<%', '%>', '%:', '%:%:'
  -fno-direct-access-external-data
                          Use GOT indirection to reference external data symbols
  -fno-disable-block-signature-string
                          Don't disable block signature string)
  -fno-discard-value-names
                          Do not discard value names in LLVM IR
  -fno-dollars-in-identifiers
                          Disallow '$' in identifiers
  -fno-elide-constructors Disable C++ copy constructor elision
  -fno-elide-type         Do not elide types when printing diagnostics
  -fno-eliminate-unused-debug-types
                          Emit  debug info for defined but unused types
  -fno-emit-class-debug-always
                          Emit debug information for a C++ class in only one object file
  -fno-exceptions         Disable support for exception handling
  -fno-experimental-late-parse-attributes
                          Disable experimental late parsing of attributes
  -fno-experimental-relative-c++-abi-vtables
                          Do not use the experimental C++ class ABI for classes with virtual tables
  -fno-experimental-sanitize-metadata=<value>
                          Disable emitting metadata for binary analysis sanitizers
  -fno-fat-lto-objects    Disable fat LTO object support
  -fno-file-reproducible  Use the host's platform-specific path separator character when expanding the __FILE__ macro
  -fno-fine-grained-bitfield-accesses
                          Use large-integer access for consecutive bitfield runs.
  -fno-finite-loops       Do not assume that any loop is finite.
  -fno-fixed-point        Disable fixed point types
  -fno-force-enable-int128
                          Disable support for int128_t type
  -fno-global-isel        Disables the global instruction selector
  -fno-gnu-inline-asm     Disable GNU style inline asm
  -fno-gpu-allow-device-init
                          Don't allow device side init function in HIP (experimental)
  -fno-gpu-approx-transcendentals
                          Don't use approximate transcendental functions
  -fno-gpu-defer-diag     Don't defer host/device related diagnostic messages for CUDA/HIP
  -fno-hip-emit-relocatable
                          Do not override toolchain to compile HIP source to relocatable
  -fno-hip-fp32-correctly-rounded-divide-sqrt
                          Don't specify that single precision floating-point divide and sqrt used in the program source are correctly rounded (HIP device compilation only)
  -fno-hip-kernel-arg-name
                          Don't specify that kernel argument names are preserved (HIP only)
  -fno-hip-new-launch-api Don't use new kernel launching API for HIP
  -fno-honor-nan-compares Do not honor NaN compares with fast math
  -fno-integrated-as      Disable the integrated assembler
  -fno-integrated-cc1     Spawn a separate process for each cc1
  -fno-integrated-objemitter
                          Use external machine object code emitter.
  -fno-jump-tables        Do not use jump tables for lowering switches
  -fno-keep-persistent-storage-variables
                          Disable keeping all variables that have a persistent storage duration, including global, static and thread-local variables, to guarantee that they can be directly addressed
  -fno-keep-static-consts Don't keep static const variables even if unused
  -fno-knr-functions      Disable support for K&R C function declarations
  -fno-link-huge-device-code
                          Do not generate or use a custom linker script for huge device code sections (default)
  -fno-lto                Disable LTO mode (default)
  -fno-memory-profile     Disable heap memory profiling
  -fno-merge-all-constants
                          Disallow merging of constants
  -fno-merge-debug-strings
                           Do not mergeidentical debug strings in different object files.
  -fno-modules-check-relocated<value>
                          Skip checks for relocated modules when loading PCM files
  -fno-modules-validate-textual-header-includes
                          Do not enforce -fmodules-decluse and private header restrictions for textual headers. This flag will be removed in a future Clang release.
  -fno-new-infallible     Disable treating throwing global C++ operator new as always returning valid memory (annotates with __attribute__((returns_nonnull)) and throw()). This is detectable in source.
  -fno-objc-avoid-heapify-local-blocks
                          Don't try to avoid heapifying local blocks
  -fno-objc-infer-related-result-type
                          do not infer Objective-C related result type based on method family
  -fno-offload-lto        Disable LTO mode (default) for offload compilation
  -fno-offload-uniform-block
                          Don't assume that kernels are launched with uniform block sizes (default true for CUDA/HIP and false otherwise)
  -fno-openmp-device-lib=<value>
                          Control exclusion of device libraries from device binary linkage. Valid arguments are libc, libm-fp32, libm-fp64, all
  -fno-openmp-extensions  Disable all Clang extensions for OpenMP directives and clauses
  -fno-operator-names     Do not treat C++ operator name keywords as synonyms for operators
  -fno-optimize-sibling-calls
                          Disable tail call optimization, keeping the call stack accurate
  -fno-pch-codegen        Do not generate code for uses of this PCH that assumes an explicit object file will be built for the PCH
  -fno-pch-debuginfo      Do not generate debug info for types in an object file built from this PCH and do not generate them elsewhere
  -fno-plt                Use GOT indirection instead of PLT to make external function calls (x86 only)
  -fno-preserve-as-comments
                          Do not preserve comments in inline assembly
  -fno-profile-generate   Disable generation of profile instrumentation.
  -fno-profile-instr-generate
                          Disable generation of profile instrumentation.
  -fno-profile-instr-use  Disable using instrumentation data for profile-guided optimization
  -fno-pseudo-probe-for-profiling
                          Do not emit pseudo probes for sample profiling
  -fno-raw-string-literals
                          Disable raw string literals
  -fno-register-global-dtors-with-atexit
                          Don't use atexit or __cxa_atexit to register global destructors
  -fno-relaxed-template-template-args
                          Disable C++17 relaxed template template argument matching
  -fno-rtlib-add-rpath    Do not add -rpath with architecture-specific resource directory to the linker flags. When --hip-link is specified, do not add -rpath with HIP runtime library directory to the linker flags
  -fno-rtlib-defaultlib   On Windows, do not emit /defaultlib: directives to link compiler-rt libraries
  -fno-rtti-data          Disable generation of RTTI data
  -fno-rtti               Disable generation of rtti information
  -fno-sanitize-address-globals-dead-stripping
                          Disable linker dead stripping of globals in AddressSanitizer
  -fno-sanitize-address-outline-instrumentation
                          Use default code inlining logic for the address sanitizer
  -fno-sanitize-address-poison-custom-array-cookie
                          Disable poisoning array cookies when using custom operator new[] in AddressSanitizer
  -fno-sanitize-address-use-after-scope
                          Disable use-after-scope detection in AddressSanitizer
  -fno-sanitize-address-use-odr-indicator
                          Disable ODR indicator globals
  -fno-sanitize-cfi-canonical-jump-tables
                          Do not make the jump table addresses canonical in the symbol table
  -fno-sanitize-cfi-cross-dso
                          Disable control flow integrity (CFI) checks for cross-DSO calls.
  -fno-sanitize-coverage=<value>
                          Disable features of coverage instrumentation for Sanitizers
  -fno-sanitize-hwaddress-experimental-aliasing
                          Disable aliasing mode in HWAddressSanitizer
  -fno-sanitize-ignorelist
                          Don't use ignorelist file for sanitizers
  -fno-sanitize-memory-param-retval
                          Disable detection of uninitialized parameters and return values
  -fno-sanitize-memory-track-origins
                          Disable origins tracking in MemorySanitizer
  -fno-sanitize-memory-use-after-dtor
                          Disable use-after-destroy detection in MemorySanitizer
  -fno-sanitize-recover=<value>
                          Disable recovery for specified sanitizers
  -fno-sanitize-stable-abi
                          Conventional ABI instrumentation for sanitizer runtime. Default: Conventional
  -fno-sanitize-stats     Disable sanitizer statistics gathering.
  -fno-sanitize-thread-atomics
                          Disable atomic operations instrumentation in ThreadSanitizer
  -fno-sanitize-thread-func-entry-exit
                          Disable function entry/exit instrumentation in ThreadSanitizer
  -fno-sanitize-thread-memory-access
                          Disable memory access instrumentation in ThreadSanitizer
  -fno-sanitize-trap=<value>
                          Disable trapping for specified sanitizers
  -fno-sanitize-trap      Disable trapping for all sanitizers
  -fno-short-wchar        Force wchar_t to be an unsigned int
  -fno-show-column        Do not include column number on diagnostics
  -fno-show-source-location
                          Do not include source location information with diagnostics
  -fno-signed-char        char is unsigned
  -fno-signed-zeros       Allow optimizations that ignore the sign of floating point zeros
  -fno-skip-odr-check-in-gmf
                          Perform ODR checks for decls in the global module fragment.
  -fno-spell-checking     Disable spell-checking
  -fno-split-machine-functions
                          Disable late function splitting using profile information (x86 ELF/COFF)
  -fno-split-stack        Wouldn't use segmented stack
  -fno-stack-clash-protection
                          Disable stack clash protection
  -fno-stack-protector    Disable the use of stack protectors
  -fno-standalone-debug   Limit debug information produced to reduce size of debug binary
  -fno-strict-aliasing    Disable optimizations based on strict aliasing rules
  -fno-strict-float-cast-overflow
                          Relax language rules and try to match the behavior of the target's native float-to-int conversion instructions
  -fno-strict-return      Don't treat control flow paths that fall off the end of a non-void function as unreachable
  -fno-sycl-add-default-spec-consts-image
                          Turns off generation of device image where all specialization constant usages are replaced with default values.
  -fno-sycl-allow-device-dependencies
                          Do not allow dependencies between device code images (default)
  -fno-sycl-dead-args-optimization
                          Disables elimination of DPC++ dead kernel arguments
  -fno-sycl-decompose-functor
                          Do not decompose SYCL functor if possible (experimental, CUDA only)
  -fno-sycl-device-code-split-esimd
                          do not split ESIMD and SYCL device code into separate device binary images. Has effect only for SPIR-based targets. (experimental)
  -fno-sycl-device-lib-jit-link
                          Disables sycl device library jit link (experimental)
  -fno-sycl-device-lib=<value>
                          Control exclusion of device libraries from device binary linkage. Valid arguments are libc, libm-fp32, libm-fp64, all
  -fno-sycl-early-optimizations
                          Disable standard optimization pipeline for SYCL device compiler
  -fno-sycl-esimd-force-stateless-mem
                          Do not enforce using stateless memory accesses.
  -fno-sycl-explicit-simd Disable SYCL explicit SIMD extension. (deprecated)
  -fno-sycl-force-inline-kernel-lambda
                          Disallow force inline SYCL kernels lambda in entry point
  -fno-sycl-id-queries-fit-in-int
                          Do not assume that SYCL ID queries fit within MAX_INT.
  -fno-sycl-instrument-device-code
                          Do not add Instrumentation and Tracing Technology (ITT) instrumentation intrinsics calls (experimental)
  -fno-sycl-libspirv      Disable check for libspirv
  -fno-sycl-link-spirv    Disable adding of the default (spir64) triple when discovered in user specified objects and archives.
  -fno-sycl-pstl-offload  Disable offloading of C++ standard parallel algorithms.
  -fno-sycl-rdc           Generate relocatable device code during SYCL offload target compilation. Use of ‘-fno-sycl-rdc’ in combination with ‘-c’ will produce final device binaries within the generated fat object. When using this option, each kernel must be self-contained within its translation unit (source file).  Therefore, the use of SYCL_EXTERNAL is disallowed when this option is enabled.
  -fno-sycl-remove-unused-external-funcs
                          Prevent removal of unused `SYCL_EXTERNAL` functions
  -fno-sycl-unnamed-lambda
                          Disallow unnamed SYCL lambda kernels
  -fno-sycl-use-bitcode   Use SPIR-V instead of LLVM bitcode in fat objects (deprecated)
  -fno-sycl-use-footer    Disable usage of the integration footer during SYCL enabled compilations.
  -fno-sycl               Disables SYCL kernels compilation for device
  -fno-system-debug       Do not emit debug information for declarations in system headers
  -fno-temp-file          Directly create compilation output files. This may lead to incorrect incremental builds if the compiler crashes
  -fno-threadsafe-statics Do not emit code to make initialization of local statics thread safe
  -fno-trigraphs          Do not process trigraph sequences
  -fno-unified-lto        Use distinct LTO pipelines
  -fno-unique-section-names
                          Don't use unique names for text and data sections
  -fno-unroll-loops       Turn off loop unroller
  -fno-use-cxa-atexit     Don't use __cxa_atexit for calling destructors
  -fno-use-init-array     Use .ctors/.dtors instead of .init_array/.fini_array
  -fno-vec-allow-scalar-stores
                          When this option is set, an explicit simd loop (for example, one set with #pragma omp simd) will not be vectorized if it contains a store to a scalar variable that is not marked as private, lastprivate, or reduction.
  -fno-vec-peel-loops     Disable peel loop vectorization.
  -fno-vec-remainder-loops
                          Disable remainder loop vectorization.
  -fno-vec-with-mask      Disable vectorization for short trip-count loops with masking.
  -fno-verify-intermediate-code
                          Disable verification of LLVM IR
  -fno-visibility-inlines-hidden-static-local-var
                          Disables -fvisibility-inlines-hidden-static-local-var (this is the default on non-darwin targets)
  -fno-xray-function-index
                          Omit function index section at the expense of single-function patching performance
  -fno-zero-initialized-in-bss
                          Don't place zero initialized data in BSS
  -fobjc-arc-exceptions   Use EH-safe code when synthesizing retains and releases in -fobjc-arc
  -fobjc-arc              Synthesize retain and release calls for Objective-C pointers
  -fobjc-avoid-heapify-local-blocks
                          Try to avoid heapifying local blocks
  -fobjc-disable-direct-methods-for-testing
                          Ignore attribute objc_direct so that direct methods can be tested
  -fobjc-encode-cxx-class-template-spec
                          Fully encode c++ class template specialization
  -fobjc-exceptions       Enable Objective-C exceptions
  -fobjc-runtime=<value>  Specify the target Objective-C runtime kind and version
  -fobjc-weak             Enable ARC-style weak references in Objective-C
  -foffload-implicit-host-device-templates
                          Template functions or specializations without host, device and global attributes have implicit host device attributes (CUDA/HIP only)
  -foffload-lto=<value>   Set LTO mode for offload compilation
  -foffload-lto           Enable LTO in 'full' mode for offload compilation
  -foffload-uniform-block Assume that kernels are launched with uniform block sizes (default true for CUDA/HIP and false otherwise)
  -fomit-frame-pointer    Omit the frame pointer from functions that don't need it. Some stack unwinding cases, such as profilers and sanitizers, may prefer specifying -fno-omit-frame-pointer. On many targets, -O1 and higher omit the frame pointer by default. -m[no-]omit-leaf-frame-pointer takes precedence for leaf functions
  -fopenacc               Enable OpenACC
  -fopenmp-concurrent-host-device-compile<value>
                          Enable parallel compilation of host and device compilation steps when performing OpenMP offload compiles using -fopenmp-targets. (experimental)
  -fopenmp-declare-target-scalar-defaultmap=<value>
                          Assume that a scalar declare target variable with implicit data-mapping referenced in a 'target' construct has the same value in the host and device environment
  -fopenmp-device-lib=<value>
                          Control inclusion of device libraries into device binary linkage. Valid arguments are libc, libm-fp32, libm-fp64, all
  -fopenmp-device-link    Perform device link during compilation step instead of link step (-c compilations).  Use for offload compilations to produce final device binaries within the generated fat object.
  -fopenmp-extensions     Enable all Clang extensions for OpenMP directives and clauses
  -fopenmp-force-usm      Force behvaior as if the user specified pragma omp requires unified_shared_memory.
  -fopenmp-offload-mandatory
                          Do not create a host fallback if offloading to the device fails.
  -fopenmp-simd           Emit OpenMP code only for SIMD-based constructs. Advanced users who prefer to use OpenMP* as it is implemented by the LLVM community can get most of that functionality by using -fopenmp-simd.
  -fopenmp-target-buffers=<value>
                          Allow access to target objects of 4GB or larger in target code.
  -fopenmp-target-debug   Enable debugging in the OpenMP offloading device RTL
  -fopenmp-target-default-sub-group-size=<value>
                          Specify the default sub-group size of SPMD kernels generated for OpenMP target constructs for SPIR64
  -fopenmp-target-jit     Emit code that can be JIT compiled for OpenMP offloading. Implies -foffload-lto=full
  -fopenmp-targets=<value>
                          Specify comma-separated list of triples that correspond to OpenMP offloading targets to be supported.  Valid triples include spir64_gen, spir64_x86_64 and spir64
  -fopenmp-version=<value>
                          Set OpenMP version (e.g. 45 for OpenMP 4.5, 51 for OpenMP 5.1). Default value is 51 for Clang
  -fopenmp                Parse OpenMP pragmas and generate parallel code. Advanced users who prefer to use OpenMP* as it is implemented by the LLVM community can get most of that functionality by using -fopenmp.
  -foperator-arrow-depth=<value>
                          Maximum number of 'operator->'s to call for a member access
  -foptimization-record-file=<file>
                          Specify the output name of the file containing the optimization remarks. Implies -fsave-optimization-record. On Darwin platforms, this cannot be used with multiple -arch <arch> options.
  -foptimization-record-passes=<regex>
                          Only include passes which match a specified regular expression in the generated optimization record (by default, include all passes)
  -forder-file-instrumentation
                          Generate instrumented code to collect order file into default.profraw file (overridden by '=' form of option or LLVM_PROFILE_FILE env var)
  -fortlib                Allow for Fortran generated objects to be mixed and matched and linked in with the C/C++ compiler to pull in the needed libraries.
  -fp-model=<value>       Controls the semantics of floating-point calculations.
  -fp-speculation=<value> Specifies the exception behavior of floating-point operations.
  -fpack-struct=<value>   Specify the default maximum struct packing alignment
  -fpascal-strings        Recognize and construct Pascal-style string literals
  -fpass-plugin=<dsopath> Load pass plugin from a dynamic shared object file (only with new pass manager).
  -fpatchable-function-entry=<N,M>
                          Generate M NOPs before function entry and N-M NOPs after function entry
  -fpcc-struct-return     Override the default ABI to return all structs on the stack
  -fpch-codegen           Generate code for uses of this PCH that assumes an explicit object file will be built for the PCH
  -fpch-debuginfo         Generate debug info for types in an object file built from this PCH and do not generate them elsewhere
  -fpch-instantiate-templates
                          Instantiate templates already while building a PCH
  -fpch-validate-input-files-content
                          Validate PCH input files based on content if mtime differs
  -fplugin-arg-<name>-<arg>
                          Pass <arg> to plugin <name>
  -fplugin=<dsopath>      Load the named plugin (dynamic shared object)
  -fprebuilt-implicit-modules
                          Look up implicit modules in the prebuilt module path
  -fprebuilt-module-path=<directory>
                          Specify the prebuilt module path
  -fpreview-breaking-changes
                          When specified, it informs the compiler driver and compilation phases that it is allowed to break backward compatibility. When this option is specified the compiler will also set the macro __INTEL_PREVIEW_BREAKING_CHANGES.
                          When this option is used in conjunction with -fsycl, the driver will link against an alternate form of libsycl, libsycl-preview.
  -fproc-stat-report=<value>
                          Save subprocess statistics to the given file
  -fproc-stat-report<value>
                          Print subprocess statistics
  -fprofile-arcs          Instrument code to produce gcov data files (*.gcda)
  -fprofile-dwo-dir=<value>
                          Directory to store .dwo files when using -fprofile-sample-generate and -gsplit-dwarf. (experimental)
  -fprofile-exclude-files=<value>
                          Instrument only functions from files where names don't match all the regexes separated by a semi-colon
  -fprofile-filter-files=<value>
                          Instrument only functions from files where names match any regex separated by a semi-colon
  -fprofile-function-groups=<N>
                          Partition functions into N groups and select only functions in group i to be instrumented using -fprofile-selected-function-group
  -fprofile-generate=<directory>
                          Generate instrumented code to collect execution counts into <directory>/default.profraw (overridden by LLVM_PROFILE_FILE env var)
  -fprofile-generate      Generate instrumented code to collect execution counts into default.profraw (overridden by LLVM_PROFILE_FILE env var)
  -fprofile-instr-generate=<file>
                          Generate instrumented code to collect execution counts into <file> (overridden by LLVM_PROFILE_FILE env var)
  -fprofile-instr-generate
                          Generate instrumented code to collect execution counts into default.profraw file (overridden by '=' form of option or LLVM_PROFILE_FILE env var)
  -fprofile-instr-use=<value>
                          Use instrumentation data for profile-guided optimization
  -fprofile-list=<value>  Filename defining the list of functions/files to instrument. The file uses the sanitizer special case list format.
  -fprofile-ml-use        Use pre-trained machine learning model for profile guided optimizations.(deprecated)
  -fprofile-remapping-file=<file>
                          Use the remappings described in <file> to match the profile data against names in the program
  -fprofile-sample-accurate
                          Specifies that the sample profile is accurate
  -fprofile-sample-generate=<value>
                          Enable compiler and linker generating information and adjusting optimizations for Sample-based Profile Guided Optimizations (SPGO). Vaild arguments are none, keep-all-opt, med-fidelity, max-fidelity. (experimental)
  -fprofile-sample-use=<value>
                          Enable compiler and linker using information for Sample-based Profile Guided Optimizations (SPGO). (experimental)
  -fprofile-selected-function-group=<i>
                          Partition functions into N groups using -fprofile-function-groups and select only functions in group i to be instrumented. The valid range is 0 to N-1 inclusive
  -fprofile-update=<method>
                          Set update method of profile counters
  -fprofile-use=<pathname>
                          Use instrumentation data for profile-guided optimization. If pathname is a directory, it reads from <pathname>/default.profdata. Otherwise, it reads from file <pathname>.
  -fprotect-parens        Determines whether the optimizer honors parentheses when floating-point expressions are evaluated
  -fpseudo-probe-for-profiling
                          Emit pseudo probes for sample profiling
  -fptrauth-auth-traps    Enable traps on authentication failures
  -fptrauth-calls         Enable signing and authentication of all indirect calls
  -fptrauth-function-pointer-type-discrimination
                          Enable type discrimination on C function pointers
  -fptrauth-init-fini     Enable signing of function pointers in init/fini arrays
  -fptrauth-intrinsics    Enable pointer authentication intrinsics
  -fptrauth-returns       Enable signing and authentication of return addresses
  -fptrauth-vtable-pointer-address-discrimination
                          Enable address discrimination of vtable pointers
  -fptrauth-vtable-pointer-type-discrimination
                          Enable type discrimination of vtable pointers
  -frandomize-layout-seed-file=<file>
                          File holding the seed used by the randomize structure layout feature
  -frandomize-layout-seed=<seed>
                          The seed used by the randomize structure layout feature
  -fraw-string-literals   Enable raw string literals
  -freciprocal-math       Allow division operations to be reassociated
  -freg-struct-return     Override the default ABI to return small structs in registers
  -fregister-global-dtors-with-atexit
                          Use atexit or __cxa_atexit to register global destructors
  -frelaxed-template-template-args
                          Enable C++17 relaxed template template argument matching
  -fropi                  Generate read-only position independent code (ARM only)
  -frounding-math         Disable floating point optimizations that assume the default rounding mode.
  -frtlib-add-rpath       Add -rpath with architecture-specific resource directory to the linker flags. When --hip-link is specified, also add -rpath with HIP runtime library directory to the linker flags
  -frtlib-defaultlib      On Windows, emit /defaultlib: directives to link compiler-rt libraries (default)
  -frwpi                  Generate read-write position independent code (ARM only)
  -fsafe-buffer-usage-suggestions
                          Display suggestions to update code associated with -Wunsafe-buffer-usage warnings
  -fsample-profile-use-profi
                          Use profi to infer block and edge counts
  -fsanitize-address-destructor=<value>
                          Set the kind of module destructors emitted by AddressSanitizer instrumentation. These destructors are emitted to unregister instrumented global variables when code is unloaded (e.g. via `dlclose()`).
  -fsanitize-address-field-padding=<value>
                          Level of field padding for AddressSanitizer
  -fsanitize-address-globals-dead-stripping
                          Enable linker dead stripping of globals in AddressSanitizer
  -fsanitize-address-outline-instrumentation
                          Always generate function calls for address sanitizer instrumentation
  -fsanitize-address-poison-custom-array-cookie
                          Enable poisoning array cookies when using custom operator new[] in AddressSanitizer
  -fsanitize-address-use-after-return=<mode>
                          Select the mode of detecting stack use-after-return in AddressSanitizer
  -fsanitize-address-use-after-scope
                          Enable use-after-scope detection in AddressSanitizer
  -fsanitize-address-use-odr-indicator
                          Enable ODR indicator globals to avoid false ODR violation reports in partially sanitized programs at the cost of an increase in binary size
  -fsanitize-cfi-canonical-jump-tables
                          Make the jump table addresses canonical in the symbol table
  -fsanitize-cfi-cross-dso
                          Enable control flow integrity (CFI) checks for cross-DSO calls.
  -fsanitize-cfi-icall-experimental-normalize-integers
                          Normalize integers in CFI indirect call type signature checks
  -fsanitize-cfi-icall-generalize-pointers
                          Generalize pointers in CFI indirect call type signature checks
  -fsanitize-coverage-allowlist=<value>
                          Restrict sanitizer coverage instrumentation exclusively to modules and functions that match the provided special case list, except the blocked ones
  -fsanitize-coverage-ignorelist=<value>
                          Disable sanitizer coverage instrumentation for modules and functions that match the provided special case list, even the allowed ones
  -fsanitize-coverage=<value>
                          Specify the type of coverage instrumentation for Sanitizers
  -fsanitize-hwaddress-abi=<value>
                          Select the HWAddressSanitizer ABI to target (interceptor or platform, default interceptor). This option is currently unused.
  -fsanitize-hwaddress-experimental-aliasing
                          Enable aliasing mode in HWAddressSanitizer
  -fsanitize-ignorelist=<value>
                          Path to ignorelist file for sanitizers
  -fsanitize-memory-param-retval
                          Enable detection of uninitialized parameters and return values
  -fsanitize-memory-track-origins=<value>
                          Enable origins tracking in MemorySanitizer
  -fsanitize-memory-track-origins
                          Enable origins tracking in MemorySanitizer
  -fsanitize-memory-use-after-dtor
                          Enable use-after-destroy detection in MemorySanitizer
  -fsanitize-memtag-mode=<value>
                          Set default MTE mode to 'sync' (default) or 'async'
  -fsanitize-recover=<value>
                          Enable recovery for specified sanitizers
  -fsanitize-stable-abi   Stable  ABI instrumentation for sanitizer runtime. Default: Conventional
  -fsanitize-stats        Enable sanitizer statistics gathering.
  -fsanitize-system-ignorelist=<value>
                          Path to system ignorelist file for sanitizers
  -fsanitize-thread-atomics
                          Enable atomic operations instrumentation in ThreadSanitizer (default)
  -fsanitize-thread-func-entry-exit
                          Enable function entry/exit instrumentation in ThreadSanitizer (default)
  -fsanitize-thread-memory-access
                          Enable memory access instrumentation in ThreadSanitizer (default)
  -fsanitize-trap=<value> Enable trapping for specified sanitizers
  -fsanitize-trap         Enable trapping for all sanitizers
  -fsanitize-undefined-strip-path-components=<number>
                          Strip (or keep only, if negative) a given number of path components when emitting check metadata.
  -fsanitize=<check>      Turn on runtime checks for various forms of undefined or suspicious behavior. See user manual for available checks
  -fsave-optimization-record=<format>
                          Generate an optimization record file in a specific format
  -fsave-optimization-record
                          Generate a YAML optimization record file
  -fseh-exceptions        Use SEH style exceptions
  -fseparate-named-sections
                          Use separate unique sections for named sections (ELF Only)
  -fshort-enums           Allocate to an enum type only as many bytes as it needs for the declared range of possible values
  -fshort-wchar           Force wchar_t to be a short unsigned int
  -fshow-overloads=<value>
                          Which overload candidates to show when overload resolution fails. Defaults to 'all'
  -fshow-skipped-includes Show skipped includes in -H output.
  -fsigned-char           char is signed
  -fsized-deallocation    Enable C++14 sized global deallocation functions
  -fsjlj-exceptions       Use SjLj style exceptions
  -fskip-odr-check-in-gmf Skip ODR checks for decls in the global module fragment.
  -fslp-vectorize         Enable the superword-level parallelism vectorization passes
  -fspell-checking-limit=<value>
                          Set the maximum number of times to perform spell checking on unrecognized identifiers (0 = no limit)
  -fsplit-dwarf-inlining  Provide minimal debug info in the object/executable to facilitate online symbolication/stack traces in the absence of .dwo/.dwp files when using Split DWARF
  -fsplit-lto-unit        Enables splitting of the LTO unit
  -fsplit-machine-functions
                          Enable late function splitting using profile information (x86 ELF/COFF)
  -fsplit-stack           Use segmented stack
  -fstack-clash-protection
                          Enable stack clash protection
  -fstack-limit-register=<value>
                          Limits the stack register size
  -fstack-protector-all   Enable stack protectors for all functions
  -fstack-protector-strong
                          Enable stack protectors for some functions vulnerable to stack smashing. Compared to -fstack-protector, this uses a stronger heuristic that includes functions containing arrays of any size (and any type), as well as any calls to alloca or the taking of an address from a local variable
  -fstack-protector       Enable stack protectors for some functions vulnerable to stack smashing. This uses a loose heuristic which considers functions vulnerable if they contain a char (or 8bit integer) array or constant sized calls to alloca , which are of greater size than ssp-buffer-size (default: 8 bytes). All variable sized calls to alloca are considered vulnerable. A function with a stack protector has a guard value added to the stack frame that is checked on function exit. The guard value must be positioned in the stack frame such that a buffer overflow from a vulnerable variable will overwrite the guard value before overwriting the function's return address. The reference stack guard value is stored in a global variable.
  -fstack-security-check  Enable overflow security checks
  -fstack-size-section    Emit section containing metadata on function stack sizes
  -fstack-usage           Emit .su file containing information on function stack sizes
  -fstandalone-debug      Emit full debug info for all types used by the program
  -fstrict-aliasing       Enable optimizations based on strict aliasing rules
  -fstrict-enums          Enable optimizations based on the strict definition of an enum's value range
  -fstrict-flex-arrays=<n>
                          Enable optimizations based on the strict definition of flexible arrays
  -fstrict-float-cast-overflow
                          Assume that overflowing float-to-int casts are undefined (default)
  -fstrict-vtable-pointers
                          Enable optimizations based on the strict rules for overwriting polymorphic C++ objects
  -fswift-async-fp=<option>
                          Control emission of Swift async extended frame info
  -fsycl-add-default-spec-consts-image
                          Generates a copy of every device image that uses a specialization constant and replaces all usages of specialization constant with default values specified by specialization_id. If a device image doesn't use a specialization constant at all then no copy is generated. This option is only useful if used in conjunction with Ahead of Time Compilation (-fsycl-target command line option).
  -fsycl-allow-device-dependencies
                          Allow dependencies between device code images
  -fsycl-dead-args-optimization
                          Enables elimination of DPC++ dead kernel arguments
  -fsycl-decompose-functor
                          Do decompose SYCL functor if possible (experimental, CUDA only)
  -fsycl-default-sub-group-size <value>
                          Set the default sub group size for SYCL kernels
  -fsycl-device-code-split-esimd
                          split ESIMD device code from SYCL into a separate device binary image (default). Has effect only for SPIR-based targets. (experimental)
  -fsycl-device-code-split=<value>
                          Perform SYCL device code split: per_kernel (device code module is created for each SYCL kernel) | per_source (device code module is created for each source (translation unit)) | off (no device code split). | auto (use heuristic to select the best way of splitting device code). Default is 'auto' - use heuristic to distribute device code across modules
  -fsycl-device-code-split
                          Perform SYCL device code split in the 'auto' mode, i.e. use heuristic to distribute device code across modules
  -fsycl-device-lib-jit-link
                          Enables sycl device library jit link (experimental)
  -fsycl-device-lib=<value>
                          Control inclusion of device libraries into device binary linkage. Valid arguments are libc, libm-fp32, libm-fp64, libimf-fp32, libimf-fp64, libimf-bf16, all
  -fsycl-device-obj=<value>
                          Specify format of device code stored in the resulting object. Valid values are: spirv, llvmir (default)
  -fsycl-device-only      Compile SYCL kernels for device
  -fsycl-disable-range-rounding
                          Deprecated: please use -fsycl-range-rounding=disable instead.
  -fsycl-dump-device-code=<value>
                          Dump device code into the user provided directory.
  -fsycl-early-optimizations
                          Enable standard optimization pipeline for SYCL device compiler
  -fsycl-embed-ir         Embed LLVM IR for runtime kernel fusion
  -fsycl-enable-function-pointers
                          Experimental Feature: Enables function pointers and support for virtual functions for DPC++ kernels and device functions.
  -fsycl-esimd-force-stateless-mem
                          Enforce using stateless memory accesses. Convert stateful accesses via SYCL accessors to stateless within ESIMD kernels. Enabled by default.
  -fsycl-exp-range-rounding
                          Use experimental range rounding.
  -fsycl-explicit-simd    Enable SYCL explicit SIMD extension. (deprecated)
  -fsycl-footer-path=<value>
                          Specify the location of the temporary source file with the included integration footer.
  -fsycl-force-inline-kernel-lambda
                          Allow force inline SYCL kernels lambda in entry point
  -fsycl-force-target=<value>
                          Force the usage of the given triple when extracting device code from any given objects on the command line
  -fsycl-fp32-prec-sqrt   SYCL only. Specify that single precision floating-point sqrt is correctly rounded.
  -fsycl-fp64-conv-emu    Enable fp64 partial emulation for kernels with only fp64 conversion operations and no fp64 computation operations (requires Intel GPU backend supporting fp64 partial emulation).
  -fsycl-help=<value>     Emit help information from the related offline compilation tool. Valid values: all, fpga, gen, x86_64.
  -fsycl-help             Emit help information from all of the offline compilation tools
  -fsycl-host-compiler-options=<value>
                          When performing the host compilation with -fsycl-host-compiler specified, use the given options during that compile. Options are expected to be a quoted list of space separated options.
  -fsycl-host-compiler=<value>
                          Specify C++ compiler binary to perform host compilation with during SYCL offload compiles.
  -fsycl-id-queries-fit-in-int
                          Assume that SYCL ID queries fit within MAX_INT.
  -fsycl-instrument-device-code
                          Add Instrumentation and Tracing Technology (ITT) instrumentation intrinsics calls (experimental)
  -fsycl-libspirv-path=<value>
                          Path to libspirv library
  -fsycl-link=<value>     Generate partially linked device and host object to be used at various stages of compilation
  -fsycl-link             Generate partially linked device object to be used with the host link
  -fsycl-max-parallel-link-jobs=<value>
                          Experimental feature: Controls the maximum parallelism of actions performed on SYCL device code post-link, i.e. the generation of SPIR-V device images or AOT compilation of each device image.
  -fsycl-optimize-non-user-code
                          Option used in conjunction with -O0 to optimize SYCL framework utility functions and leave user's kernel code unoptimized. (experimental)
  -fsycl-pstl-offload=<value>
                          Enable offloading of C++ standard parallel algorithms. Valid arguments are gpu and cpu.
  -fsycl-pstl-offload     Enable offloading of C++ standard parallel algorithms.
  -fsycl-range-rounding=<value>
                          Options for range rounding of SYCL range kernels: disable (do not generate range rounded kernels) force (only generate range rounded kernels) on (generate range rounded kernels as well as unrounded kernels). Default is 'on'
  -fsycl-remove-unused-external-funcs
                          Allow removal of unused `SYCL_EXTERNAL` functions (default)
  -fsycl-targets=<value>  Specify comma-separated list of triples that correspond to SYCL offloading targets to be supported. Valid triples include spir64_gen, spir64_x86_64, spir64_fpga and spir64
  -fsycl-unnamed-lambda   Allow unnamed SYCL lambda kernels
  -fsycl-use-bitcode      Use LLVM bitcode instead of SPIR-V in fat objects (deprecated)
  -fsycl                  Enables SYCL kernels compilation for device
  -fsyntax-only           Run the preprocessor, parser and semantic analysis stages
  -fsystem-debug          Emit debug information for declarations in system headers
  -fsystem-module         Build this module as a system module. Only used with -emit-module
  -ftarget-compile-fast   Experimental feature: Reduce target compilation time, with potential runtime performance trade-off.
  -ftarget-export-symbols Expose exported symbols in a generated target library to allow for visibilty to other modules.
  -ftarget-register-alloc-mode=<value>
                          Specify a register allocation mode for specific hardware for use by supported target backends.
  -ftemplate-backtrace-limit=<value>
                          Set the maximum number of entries to print in a template instantiation backtrace (0 = no limit)
  -ftemplate-depth=<value>
                          Set the maximum depth of recursive template instantiation
  -ftest-coverage         Produce gcov notes files (*.gcno)
  -fthin-link-bitcode=<value>
                          Write minimized bitcode to <file> for the ThinLTO thin link only
  -fthinlto-index=<value> Perform ThinLTO importing using provided function summary index
  -ftime-report=<value>   (For new pass manager) 'per-pass': one report for each pass; 'per-pass-run': one report for each pass invocation
  -ftime-trace-granularity=<value>
                          Minimum time granularity (in microseconds) traced by time profiler
  -ftime-trace=<value>    Similar to -ftime-trace. Specify the JSON file or a directory which will contain the JSON file
  -ftime-trace            Turn on time profiler. Generates JSON file based on output filename.
  -ftrap-function=<value> Issue call to specified function rather than a trap instruction
  -ftrapv-handler=<function name>
                          Specify the function to be called on overflow
  -ftrapv                 Trap on integer overflow
  -ftrigraphs             Process trigraph sequences
  -ftrivial-auto-var-init-max-size=<value>
                          Stop initializing trivial automatic stack variables if var size exceeds the specified number of instances (in bytes)
  -ftrivial-auto-var-init-stop-after=<value>
                          Stop initializing trivial automatic stack variables after the specified number of instances
  -ftrivial-auto-var-init=<value>
                          Initialize trivial automatic stack variables. Defaults to 'uninitialized'
  -ftz                    Enable flush denormal results to zero
  -funified-lto           Use the unified LTO pipeline
  -funique-basic-block-section-names
                          Use unique names for basic block sections (ELF Only)
  -funique-internal-linkage-names
                          Uniqueify Internal Linkage Symbol Names by appending the MD5 hash of the module path
  -funroll-loops          Turn on loop unroller
  -funsafe-math-optimizations
                          Allow unsafe floating-point math optimizations which may decrease precision
  -fuse-complex-intrinsics
                          Determines whether to lower _Complex operations to LLVM complex intrinsics
  -fuse-cuid=<value>      Method to generate ID's for compilation units for single source offloading languages CUDA and HIP: 'hash' (ID's generated by hashing file path and command line options) | 'random' (ID's generated as random numbers) | 'none' (disabled). Default is 'hash'. This option will be overridden by option '-cuid=[ID]' if it is specified.
  -fuse-line-directives   Use #line in preprocessed output
  -fvalidate-ast-input-files-content
                          Compute and store the hash of input files used to build an AST. Files with mismatching mtime's are considered valid if both contents is identical
  -fvec-allow-scalar-stores
                          When this option is set, an explicit simd loop (for example, one set with #pragma omp simd) will be vectorized even if it contains a store to a scalar variable that is not marked as private, lastprivate, or reduction.
  -fvec-peel-loops        Enable peel loop vectorization.
  -fvec-remainder-loops   Enable remainder loop vectorization.
  -fvec-with-mask         Enable vectorization for short trip-count loops with masking.
  -fveclib=<value>        Use the given vector functions library
  -fvectorize             Enable the loop vectorization passes
  -fverbose-asm           Generate verbose assembly output
  -fverify-intermediate-code
                          Enable verification of LLVM IR
  -fvirtual-function-elimination
                          Enables dead virtual function elimination optimization. Requires -flto=full
  -fvisibility-dllexport=<value>
                          The visibility for dllexport definitions. If Keep is specified the visibility is not adjusted [-fvisibility-from-dllstorageclass]
  -fvisibility-externs-dllimport=<value>
                          The visibility for dllimport external declarations. If Keep is specified the visibility is not adjusted [-fvisibility-from-dllstorageclass]
  -fvisibility-externs-nodllstorageclass=<value>
                          The visibility for external declarations without an explicit DLL storage class. If Keep is specified the visibility is not adjusted [-fvisibility-from-dllstorageclass]
  -fvisibility-from-dllstorageclass
                          Override the visibility of globals based on their final DLL storage class.
  -fvisibility-global-new-delete-hidden
                          Give global C++ operator new and delete declarations hidden visibility
  -fvisibility-global-new-delete=<value>
                          The visibility for global C++ operator new and delete declarations. If 'source' is specified the visibility is not adjusted
  -fvisibility-inlines-hidden-static-local-var
                          When -fvisibility-inlines-hidden is enabled, static variables in inline C++ member functions will also be given hidden visibility by default
  -fvisibility-inlines-hidden
                          Give inline C++ member functions hidden visibility by default
  -fvisibility-ms-compat  Give global types 'default' visibility and global functions and variables 'hidden' visibility by default
  -fvisibility-nodllstorageclass=<value>
                          The visibility for definitions without an explicit DLL storage class. If Keep is specified the visibility is not adjusted [-fvisibility-from-dllstorageclass]
  -fvisibility=<value>    Set the default symbol visibility for all global definitions
  -fwasm-exceptions       Use WebAssembly style exceptions
  -fwhole-program-vtables Enables whole-program vtable optimization. Requires -flto
  -fwrapv                 Treat signed integer overflow as two's complement
  -fwritable-strings      Store string literals as writable data
  -fxl-pragma-pack        Enable IBM XL #pragma pack handling
  -fxray-always-emit-customevents
                          Always emit __xray_customevent(...) calls even if the containing function is not always instrumented
  -fxray-always-emit-typedevents
                          Always emit __xray_typedevent(...) calls even if the containing function is not always instrumented
  -fxray-always-instrument=<value>
                          DEPRECATED: Filename defining the whitelist for imbuing the 'always instrument' XRay attribute.
  -fxray-attr-list=<value>
                          Filename defining the list of functions/types for imbuing XRay attributes.
  -fxray-function-groups=<value>
                          Only instrument 1 of N groups
  -fxray-ignore-loops     Don't instrument functions with loops unless they also meet the minimum function size
  -fxray-instruction-threshold=<value>
                          Sets the minimum function size to instrument with XRay
  -fxray-instrumentation-bundle=<value>
                          Select which XRay instrumentation points to emit. Options: all, none, function-entry, function-exit, function, custom. Default is 'all'.  'function' includes both 'function-entry' and 'function-exit'.
  -fxray-instrument       Generate XRay instrumentation sleds on function entry and exit
  -fxray-link-deps        Link XRay runtime library when -fxray-instrument is specified (default)
  -fxray-modes=<value>    List of modes to link in by default into XRay instrumented binaries.
  -fxray-never-instrument=<value>
                          DEPRECATED: Filename defining the whitelist for imbuing the 'never instrument' XRay attribute.
  -fxray-selected-function-group=<value>
                          When using -fxray-function-groups, select which group of functions to instrument. Valid range is 0 to fxray-function-groups - 1
  -fzero-call-used-regs=<value>
                          Clear call-used registers upon function return (AArch64/x86 only)
  -fzvector               Enable System z vector language extension
  -F <value>              Add directory to framework include search path
  --gcc-install-dir=<value>
                          Use GCC installation in the specified directory. The directory ends with path components like 'lib{,32,64}/gcc{,-cross}/$triple/$version'. Note: executables (e.g. ld) used by the compiler are not overridden by the selected GCC installation
  --gcc-toolchain=<value> Specify a directory where Clang can find 'include' and 'lib{,32,64}/gcc{,-cross}/$triple/$version'. Clang will use the GCC installation with the largest version
  --gcc-triple=<value>    Search for the GCC installation with the specified triple.
  -gcodeview-command-line Emit compiler path and command line into CodeView debug information
  -gcodeview-ghash        Emit type record hashes in a .debug$H section
  -gcodeview              Generate CodeView debug information
  -gdwarf-2               Generate source-level debug information with dwarf version 2
  -gdwarf-3               Generate source-level debug information with dwarf version 3
  -gdwarf-4               Generate source-level debug information with dwarf version 4
  -gdwarf-5               Generate source-level debug information with dwarf version 5
  -gdwarf32               Enables DWARF32 format for ELF binaries, if debug information emission is enabled.
  -gdwarf64               Enables DWARF64 format for ELF binaries, if debug information emission is enabled.
  -gdwarf                 Generate source-level debug information with the default dwarf version
  -gembed-source          Embed source text in DWARF debug sections
  -gen-reproducer=<value> Emit reproducer on (option: off, crash (default), error, always)
  -gintel-sti             Generate Intel STI debug information
  -gline-directives-only  Emit debug line info directives only
  -gline-tables-only      Emit debug line number tables only
  -global-hoist           Enable external globals are load safe (default)
  -gmodules               Generate debug info with external references to clang modules or precompiled headers
  -gno-codeview-command-line
                          Don't emit compiler path and command line into CodeView debug information
  -gno-embed-source       Restore the default behavior of not embedding source text in DWARF debug sections
  -gno-inline-line-tables Don't emit inline line tables.
  --gpu-bundle-output     Bundle output files of HIP device compilation
  --gpu-instrument-lib=<value>
                          Instrument device library for HIP, which is a LLVM bitcode containing __cyg_profile_func_enter and __cyg_profile_func_exit
  --gpu-max-threads-per-block=<value>
                          Default max threads per block for kernel launch bounds for HIP
  -gpulibc                Link the LLVM C Library for GPUs
  -gsplit-dwarf=<value>   Set DWARF fission mode
  -gstrict-dwarf          Restrict DWARF features to those defined in the specified version, avoiding features from later versions.
  -gz=<value>             DWARF debug sections compression type
  -G <size>               Put objects of at most <size> bytes into small data section (MIPS / Hexagon)
  -g                      Generate source-level debug information
  --help-hidden           Display help for hidden options
  -help                   Display available options
  --hip-device-lib=<value>
                          HIP device library
  --hip-link              Link clang-offload-bundler bundles for HIP
  --hip-path=<value>      HIP runtime installation path, used for finding HIP version and adding HIP include path.
  --hip-version=<value>   HIP version in the format of major.minor.patch
  --hipspv-pass-plugin=<dsopath>
                          path to a pass plugin for HIP to SPIR-V passes.
  --hipstdpar-interpose-alloc
                          Replace all memory allocation / deallocation calls with hipManagedMalloc / hipFree equivalents
  --hipstdpar-path=<value>
                          HIP Standard Parallel Algorithm Acceleration library path, used for finding and implicitly including the library header
  --hipstdpar-prim-path=<value>
                          rocPrim path, required by the HIP Standard Parallel Algorithm Acceleration library, used to implicitly include the rocPrim library
  --hipstdpar-thrust-path=<value>
                          rocThrust path, required by the HIP Standard Parallel Algorithm Acceleration library, used to implicitly include the rocThrust library
  --hipstdpar             Enable HIP acceleration for standard parallel algorithms
  -H                      Show header includes and nesting depth
  -I-                     Restrict all prior -I flags to double-quoted inclusion and remove current directory from include path
  -iapinotes-modules <directory>
                          Add directory to the API notes search path referenced by module name
  -ibuiltininc            Enable builtin #include directories even when -nostdinc is used before or after -ibuiltininc. Using -nobuiltininc after the option disables it
  -idirafter <value>      Add directory to AFTER include search path
  -iframeworkwithsysroot <directory>
                          Add directory to SYSTEM framework search path, absolute paths are relative to -isysroot
  -iframework <value>     Add directory to SYSTEM framework search path
  -imacros <file>         Include macros from file before parsing
  -include-pch <file>     Include precompiled header file
  -include <file>         Include file before parsing
  -index-header-map       Make the next included directory (-I or -F) an indexer header map
  -inline-forceinline     Treat inline routines as forceinline
  -inline-level=<value>   Set function inlining level where: 0 is disable, 1 is inline marked functions and 2 is inline at compilers discretion
  --intel                 Run in Intel Compiler mode
  -ipo                    Enable LTO in 'full' mode
  -ipp-link=<value>       Link Intel(R) IPP libraries in requested manner (static,dynamic,shared)
  -ipp=<value>            Link commonly used Intel(R) Integrated Performace Primitives (Intel(R) IPP) libraries and bring in the associated headers (common,crypto,nonpic,nonpic_crypto)
  -iprefix <dir>          Set the -iwithprefix/-iwithprefixbefore prefix
  -iquote <directory>     Add directory to QUOTE include search path
  -isysroot <dir>         Set the system root directory (usually /)
  -isystem-after <directory>
                          Add directory to end of the SYSTEM include search path
  -isystem <directory>    Add directory to SYSTEM include search path
  -ivfsoverlay-lib <value>
                          Load the virtual filesystem from shared library
  -ivfsoverlay <value>    Overlay the virtual filesystem described by file over the real file system
  -iwithprefixbefore <dir>
                          Set directory to include search path with prefix
  -iwithprefix <dir>      Set directory to SYSTEM include search path with prefix
  -iwithsysroot <directory>
                          Add directory to SYSTEM include search path, absolute paths are relative to -isysroot
  -I <dir>                Add directory to the end of the list of include search paths
  --libomptarget-amdgcn-bc-path=<value>
                          Path to libomptarget-amdgcn bitcode library
  --libomptarget-amdgpu-bc-path=<value>
                          Path to libomptarget-amdgcn bitcode library
  --libomptarget-nvptx-bc-path=<value>
                          Path to libomptarget-nvptx bitcode library
  -L <dir>                Add directory to library search path
  -mabi=quadword-atomics  Enable quadword atomics ABI on AIX (AIX PPC64 only). Uses lqarx/stqcx. instructions.
  -mabicalls              Enable SVR4-style position-independent code (Mips only)
  -maix-shared-lib-tls-model-opt
                          For shared library loaded with the main program, change local-dynamic access(es) to initial-exec access(es) at the function level (AIX 64-bit only).
  -maix-small-local-dynamic-tls
                          Produce a faster access sequence for local-dynamic TLS variables where the offset from the TLS base is encoded as an immediate operand (AIX 64-bit only). This access sequence is not used for variables larger than 32KB.
  -maix-small-local-exec-tls
                          Produce a faster access sequence for local-exec TLS variables where the offset from the TLS base is encoded as an immediate operand (AIX 64-bit only). This access sequence is not used for variables larger than 32KB.
  -maix-struct-return     Return all structs in memory (PPC32 only)
  -malign-branch-boundary=<value>
                          Specify the boundary's size to align branches
  -malign-branch=<value>  Specify types of branches to align
  -malign-double          Align doubles to two words in structs (x86 only)
  -maltivec               Enable AltiVec vector initializer syntax
  -mamdgpu-ieee           Sets the IEEE bit in the expected default floating point  mode register. Floating point opcodes that support exception flag gathering quiet and propagate signaling NaN inputs per IEEE 754-2008. This option changes the ABI. (AMDGPU only)
  -mamdgpu-precise-memory-op
                          Enable precise memory mode (AMDGPU only)
  -mapx-features=<value>  Enable features of APX
  -mapx-inline-asm-use-gpr32
                          Enable use of GPR32 in inline assembly for APX
  -march=<value>          For a list of available architectures for the target use '-mcpu=help'
  -marm64x<value>         Link as a hybrid ARM64X image
  -mauto-arch=<codes>     generate multiple, processor-specific, auto-dispatched code paths for X86 processors, specified by <codes>, if there is a performance benefit
  -mbackchain             Link stack frames through backchain on System Z
  -mbranch-protection=<value>
                          Enforce targets of indirect branches and function returns
  -mbranches-within-32B-boundaries
                          Align selected branches (fused, jcc, jmp) within 32-byte boundary
  -mcabac                 Enable CABAC instructions
  -mcmse                  Allow use of CMSE (Armv8-M Security Extensions)
  -mcode-object-version=<value>
                          Specify code object ABI version. Defaults to 5. (AMDGPU only)
  -mconstructor-aliases   Enable emitting complete constructors and destructors as aliases when possible
  -mcpu=<value>           For a list of available CPUs for the target use '-mcpu=help'
  -mcrbits                Control the CR-bit tracking feature on PowerPC. ``-mcrbits`` (the enablement of CR-bit tracking support) is the default for POWER8 and above, as well as for all other CPUs when optimization is applied (-O2 and above).
  -mcrc                   Allow use of CRC instructions (ARM/Mips only)
  -mcumode                Specify CU wavefront execution mode (AMDGPU only)
  -mdaz-ftz               Globally set the denormals-are-zero (DAZ) and flush-to-zero (FTZ) bits in the floating-point control register on program startup
  -mdebug-line-version=<value>
                          Set debug line version used when generating debug information
  -mdefault-visibility-export-mapping=<value>
                          Mapping between default visibility and export
  -mdouble=<n             Force double to be <n> bits
  -MD                     Write a depfile containing user and system headers
  -meabi <value>          Set EABI type. Default depends on triple)
  -membedded-data         Place constants in the .rodata section instead of the .sdata section even if they meet the -G <size> threshold (MIPS)
  -menable-experimental-extensions
                          Enable use of experimental RISC-V extensions.
  -mexec-model=<value>    Execution model (WebAssembly only)
  -mexecute-only          Disallow generation of data access to code sections (ARM only)
  -mextern-sdata          Assume that externally defined data is in the small data if it meets the -G <size> threshold (MIPS)
  -mfentry                Insert calls to fentry at function entry (x86/SystemZ only)
  -mfix-cmse-cve-2021-35465
                          Work around VLLDM erratum CVE-2021-35465 (ARM only)
  -mfix-cortex-a53-835769 Workaround Cortex-A53 erratum 835769 (AArch64 only)
  -mfix-cortex-a57-aes-1742098
                          Work around Cortex-A57 Erratum 1742098 (ARM only)
  -mfix-cortex-a72-aes-1655431
                          Work around Cortex-A72 Erratum 1655431 (ARM only)
  -mforced-sw-shadow-stack
                          Force using software shadow stack when shadow-stack enabled
  -mfp32                  Use 32-bit floating point registers (MIPS only)
  -mfp64                  Use 64-bit floating point registers (MIPS only)
  -mframe-chain=<value>   Select the frame chain model used to emit frame records (Arm only).
  -mfunction-return=<value>
                          Replace returns with jumps to ``__x86_return_thunk`` (x86 only, error otherwise)
  -MF <file>              Write depfile output from -MMD, -MD, -MM, or -M to <file>
  -mgeneral-regs-only     Generate code which only uses the general purpose registers (AArch64/x86 only)
  -mglobal-merge          Enable merging of globals
  -mgpopt                 Use GP relative accesses for symbols known to be in a small data section (MIPS)
  -mguard=<value>         Enable or disable Control Flow Guard checks and guard tables emission
  -MG                     Add missing headers to depfile
  -mharden-sls=<value>    Select straight-line speculation hardening scope (ARM/AArch64/X86 only). <arg> must be: all, none, retbr(ARM/AArch64), blr(ARM/AArch64), comdat(ARM/AArch64), nocomdat(ARM/AArch64), return(X86), indirect-jmp(X86)
  -mhvx-ieee-fp           Enable Hexagon HVX IEEE floating-point
  -mhvx-length=<value>    Set Hexagon Vector Length
  -mhvx-qfloat            Enable Hexagon HVX QFloat instructions
  -mhvx=<value>           Enable Hexagon Vector eXtensions
  -mhvx                   Enable Hexagon Vector eXtensions
  -miamcu                 Use Intel MCU ABI
  -mignore-xcoff-visibility
                          Not emit the visibility attribute for asm in AIX OS or give all symbols 'unspecified' visibility in XCOFF object file
  --migrate               Run the migrator
  -mincremental-linker-compatible
                          (integrated-as) Emit an object file which can be used with an incremental linker
  -mindirect-branch-cs-prefix
                          Add cs prefix to call and jmp to indirect thunk
  -mindirect-jump=<value> Change indirect jump instructions to inhibit speculation
  -mintrinsic-promote     Force certain functions using intrinsics to promote their architectures and make the intrinsic headers included by default
  -mios-version-min=<value>
                          Set iOS deployment target
  -MJ <value>             Write a compilation database entry per input
  -mlasx                  Enable Loongson Advanced SIMD Extension (LASX).
  -mlink-builtin-bitcode-postopt
                          Link builtin bitcodes after the optimization pipeline
  -mllvm-lto <value>      Additional arguments to forward to LLVM's option processing. Similar to -mllvm, but will also pass the given argument to the LTO step when appropriate.
  -mllvm=<arg>            Alias for -mllvm
  -mllvm <value>          Additional arguments to forward to LLVM's option processing
  -mlocal-sdata           Extend the -G behaviour to object local data (MIPS)
  -mlong-calls            Generate branches with extended addressability, usually via indirect jumps.
  -mlong-double-128       Force long double to be 128 bits
  -mlong-double-64        Force long double to be 64 bits
  -mlong-double-80        Force long double to be 80 bits, padded to 128 bits for storage
  -mlr-for-calls-only     Do not allocate the LR register for general purpose usage, only for calls. (AArch64 only)
  -mlsx                   Enable Loongson SIMD Extension (LSX).
  -mlvi-cfi               Enable only control-flow mitigations for Load Value Injection (LVI)
  -mlvi-hardening         Enable all mitigations for Load Value Injection (LVI)
  -mmacos-version-min=<value>
                          Set macOS deployment target
  -mmadd4                 Enable the generation of 4-operand madd.s, madd.d and related instructions.
  -mmark-bti-property     Add .note.gnu.property with BTI to assembly files (AArch64 only)
  -MMD                    Write a depfile containing user headers
  -mmemops                Enable generation of memop instructions
  -mmlir <value>          Additional arguments to forward to MLIR's option processing
  -mms-bitfields          Set the default structure layout to be compatible with the Microsoft compiler standard
  -mmsa                   Enable MSA ASE (MIPS only)
  -mmt                    Enable MT ASE (MIPS only)
  -MM                     Like -MMD, but also implies -E and writes to stdout by default
  -mno-abicalls           Disable SVR4-style position-independent code (Mips only)
  -mno-amdgpu-precise-memory-op
                          Disable precise memory mode (AMDGPU only)
  -mno-apx-features=<value>
                          Disable features of APX
  -mno-bti-at-return-twice
                          Do not add a BTI instruction after a setjmp or other return-twice construct (Arm/AArch64 only)
  -mno-constructor-aliases
                          Disable emitting complete constructors and destructors as aliases when possible
  -mno-crc                Disallow use of CRC instructions (Mips only)
  -mno-cumode             Specify WGP wavefront execution mode (AMDGPU only)
  -mno-daz-ftz            Do not globally set the denormals-are-zero (DAZ) and flush-to-zero (FTZ) bits in the floating-point control register on program startup
  -mno-embedded-data      Do not place constants in the .rodata section instead of the .sdata if they meet the -G <size> threshold (MIPS)
  -mno-execute-only       Allow generation of data access to code sections (ARM only)
  -mno-extern-sdata       Do not assume that externally defined data is in the small data if it meets the -G <size> threshold (MIPS)
  -mno-fix-cmse-cve-2021-35465
                          Don't work around VLLDM erratum CVE-2021-35465 (ARM only)
  -mno-fix-cortex-a53-835769
                          Don't workaround Cortex-A53 erratum 835769 (AArch64 only)
  -mno-fix-cortex-a57-aes-1742098
                          Don't work around Cortex-A57 Erratum 1742098 (ARM only)
  -mno-fix-cortex-a72-aes-1655431
                          Don't work around Cortex-A72 Erratum 1655431 (ARM only)
  -mno-fmv                Disable function multiversioning
  -mno-forced-sw-shadow-stack
                          Not force using software shadow stack when shadow-stack enabled
  -mno-gather             Disable generation of gather instructions in auto-vectorization(x86 only)
  -mno-global-merge       Disable merging of globals
  -mno-gpopt              Do not use GP relative accesses for symbols known to be in a small data section (MIPS)
  -mno-hvx-ieee-fp        Disable Hexagon HVX IEEE floating-point
  -mno-hvx-qfloat         Disable Hexagon HVX QFloat instructions
  -mno-hvx                Disable Hexagon Vector eXtensions
  -mno-implicit-float     Don't generate implicit floating point or vector instructions
  -mno-incremental-linker-compatible
                          (integrated-as) Emit an object file which cannot be used with an incremental linker
  -mno-lasx               Disable Loongson Advanced SIMD Extension (LASX).
  -mno-local-sdata        Do not extend the -G behaviour to object local data (MIPS)
  -mno-long-calls         Restore the default behaviour of not generating long calls
  -mno-lsx                Disable Loongson SIMD Extension (LSX).
  -mno-lvi-cfi            Disable control-flow mitigations for Load Value Injection (LVI)
  -mno-lvi-hardening      Disable mitigations for Load Value Injection (LVI)
  -mno-madd4              Disable the generation of 4-operand madd.s, madd.d and related instructions.
  -mno-memops             Disable generation of memop instructions
  -mno-movt               Disallow use of movt/movw pairs (ARM only)
  -mno-ms-bitfields       Do not set the default structure layout to be compatible with the Microsoft compiler standard
  -mno-msa                Disable MSA ASE (MIPS only)
  -mno-mt                 Disable MT ASE (MIPS only)
  -mno-neg-immediates     Disallow converting instructions with negative immediates to their negation or inversion.
  -mno-nvj                Disable generation of new-value jumps
  -mno-nvs                Disable generation of new-value stores
  -mno-outline-atomics    Don't generate local calls to out-of-line atomic operations
  -mno-outline            Disable function outlining (AArch64 only)
  -mno-packets            Disable generation of instruction packets
  -mno-pic-data-is-text-relative
                          Don't assume data segments are relative to text segment
  -mno-regnames           Use only register numbers when writing assembly output
  -mno-relax              Disable linker relaxation
  -mno-restrict-it        Allow generation of complex IT blocks.
  -mno-save-restore       Disable using library calls for save and restore
  -mno-scalar-strict-align
                          Allow scalar memory accesses to be unaligned (RISC-V only)
  -mno-scatter            Disable generation of scatter instructions in auto-vectorization(x86 only)
  -mno-seses              Disable speculative execution side effect suppression (SESES)
  -mno-stack-arg-probe    Disable stack probes which are enabled by default
  -mno-strict-align       Allow memory accesses to be unaligned (AArch64/LoongArch/RISC-V only)
  -mno-tgsplit            Disable threadgroup split execution mode (AMDGPU only)
  -mno-tls-direct-seg-refs
                          Disable direct TLS access through segment registers
  -mno-tocdata=<value>    Specifies a list of variables to be exempt from the TOC datatransformation.
  -mno-tocdata            This is the default. TOC data transformation is not applied to anyvariables. Only variables specified explicitly in -mtocdata= willhave the TOC data transformation.
  -mno-unaligned-access   Force all memory accesses to be aligned (AArch32/MIPSr6 only)
  -mno-unaligned-symbols  Expect external char-aligned symbols to be without ABI alignment (SystemZ only)
  -mno-vector-strict-align
                          Allow vector memory accesses to be unaligned (RISC-V only)
  -mno-wavefrontsize64    Specify wavefront size 32 mode (AMDGPU only)
  -mnocrc                 Disallow use of CRC instructions (ARM only)
  -mnop-mcount            Generate mcount/__fentry__ calls as nops. To activate they need to be patched in.
  -mnvj                   Enable generation of new-value jumps
  -mnvs                   Enable generation of new-value stores
  -module-dependency-dir <value>
                          Directory to dump module dependencies to
  -module-file-info       Provide information about a particular module file
  -momit-leaf-frame-pointer
                          Omit frame pointer setup for leaf functions
  -moutline-atomics       Generate local calls to out-of-line atomic operations
  -moutline               Enable function outlining (AArch64 only)
  -mpacked-stack          Use packed stack layout (SystemZ only).
  -mpackets               Enable generation of instruction packets
  -mpad-max-prefix-size=<value>
                          Specify maximum number of prefixes to use for padding
  -mpic-data-is-text-relative
                          Assume data segments are relative to text segment
  -mprefer-vector-width=<value>
                          Specifies preferred vector width for auto-vectorization. Defaults to 'none' which allows target specific decisions.
  -mprintf-kind=<value>   Specify the printf lowering scheme (AMDGPU only), allowed values are "hostcall"(printing happens during kernel execution, this scheme relies on hostcalls which require system to support pcie atomics) and "buffered"(printing happens after all kernel threads exit, this uses a printf buffer and does not rely on pcie atomic support)
  -MP                     Create phony target for each dependency (other than main file)
  -mqdsp6-compat          Enable hexagon-qdsp6 backward compatibility
  -MQ <value>             Specify name of main file output to quote in depfile
  -mrecip=<value>         Control use of approximate reciprocal and reciprocal square root instructions followed by <n> iterations of Newton-Raphson refinement. <value> = ( ['!'] ['vec-'] ('rcp'|'sqrt') [('h'|'s'|'d')] [':'<n>] ) | 'all' | 'default' | 'none'
  -mrecip                 Equivalent to '-mrecip=all'
  -mrecord-mcount         Generate a __mcount_loc section entry for each __fentry__ call.
  -mregnames              Use full register names when writing assembly output
  -mrelax-all             (integrated-as) Relax all machine instructions
  -mrelax                 Enable linker relaxation
  -mrestrict-it           Disallow generation of complex IT blocks. It is off by default.
  -mrtd                   Make StdCall calling convention the default
  -mrvv-vector-bits=<value>
                          Specify the size in bits of an RVV vector register
  -msave-restore          Enable using library calls for save and restore
  -mscalar-strict-align   Force all scalar memory accesses to be aligned (RISC-V only)
  -mseses                 Enable speculative execution side effect suppression (SESES). Includes LVI control flow integrity mitigations
  -msign-return-address=<value>
                          Select return address signing scope
  -msimd=<value>          Select the SIMD extension(s) to be enabled in LoongArch either 'none', 'lsx', 'lasx'.
  -mskip-rax-setup        Skip setting up RAX register when passing variable arguments (x86 only)
  -msmall-data-limit=<value>
                          Put global and static data smaller than the limit into a special section
  -msoft-float            Use software floating point
  -msse2avx               Specify that the assembler should encode SSE instructions with VEX prefix
  -mstack-alignment=<value>
                          Set the stack alignment
  -mstack-arg-probe       Enable stack probes
  -mstack-probe-size=<value>
                          Set the stack probe size
  -mstack-protector-guard-offset=<value>
                          Use the given offset for addressing the stack-protector guard
  -mstack-protector-guard-reg=<value>
                          Use the given reg for addressing the stack-protector guard
  -mstack-protector-guard-symbol=<value>
                          Use the given symbol for addressing the stack-protector guard
  -mstack-protector-guard=<value>
                          Use the given guard (global, tls) for addressing the stack-protector guard
  -mstackrealignext       Force realign the stack at entry to every external function
  -mstackrealign          Force realign the stack at entry to every function
  -mstrict-align          Force all memory accesses to be aligned (AArch64/LoongArch/RISC-V only)
  -msve-vector-bits=<value>
                          Specify the size in bits of an SVE vector register. Defaults to the vector length agnostic value of "scalable". (AArch64 only)
  -msvr4-struct-return    Return small structs in registers (PPC32 only)
  -mtargetos=<value>      Set the deployment target to be the specified OS and OS version
  -mtgsplit               Enable threadgroup split execution mode (AMDGPU only)
  -mthread-model <value>  The thread model to use. Defaults to 'posix')
  -mtls-dialect=<value>   Which thread-local storage dialect to use for dynamic accesses of TLS variables
  -mtls-direct-seg-refs   Enable direct TLS access through segment registers (default)
  -mtls-size=<value>      Specify bit size of immediate TLS offsets (AArch64 ELF only): 12 (for 4KB) | 24 (for 16MB, default) | 32 (for 4GB) | 48 (for 256TB, needs -mcmodel=large)
  -mtocdata=<value>       Specifies a list of variables to which the TOC data transformationwill be applied.
  -mtocdata               All suitable variables will have the TOC data transformation applied
  -mtp=<value>            Thread pointer access method. For AArch32: 'soft' uses a function call, or 'tpidrurw', 'tpidruro' or 'tpidrprw' use the three CP15 registers. 'cp15' is an alias for 'tpidruro'. For AArch64: 'tpidr_el0', 'tpidr_el1', 'tpidr_el2', 'tpidr_el3' or 'tpidrro_el0' use the five system registers. 'elN' is an alias for 'tpidr_elN'.
  -mtune=<value>          Only supported on AArch64, PowerPC, RISC-V, SPARC, SystemZ, and X86
  -MT <value>             Specify name of main file output in depfile
  -munaligned-access      Allow memory accesses to be unaligned (AArch32/MIPSr6 only)
  -munaligned-symbols     Expect external char-aligned symbols to be without ABI alignment (SystemZ only)
  -munsafe-fp-atomics     Enable generation of unsafe floating point atomic instructions. May generate more efficient code, but may not respect rounding and denormal modes, and may give incorrect results for certain memory destinations. (AMDGPU only)
  -mvector-strict-align   Force all vector memory accesses to be aligned (RISC-V only)
  -mvevpu                 Emit VPU instructions for VE
  -MV                     Use NMake/Jom format for the depfile
  -mwavefrontsize64       Specify wavefront size 64 mode (AMDGPU only)
  -mxcoff-build-id=<0xHEXSTRING>
                          On AIX, request creation of a build-id string, "0xHEXSTRING", in the string table of the loader section inside the linked binary
  -mxcoff-roptr           Place constant objects with relocatable address values in the RO data section and add -bforceimprw to the linker flags (AIX only)
  -mzos-hlq-clang=<ClangHLQ>
                          High level qualifier for z/OS C++RT side deck datasets
  -mzos-hlq-csslib=<CsslibHLQ>
                          High level qualifier for z/OS CSSLIB dataset
  -mzos-hlq-le=<LeHLQ>    High level qualifier for z/OS Language Environment datasets
  -mzos-sys-include=<SysInclude>
                          Path to system headers on z/OS
  -M                      Like -MD, but also implies -E and writes to stdout by default
  -no-ansi-alias          disable use of ANSI aliasing rules optimizations
  --no-cuda-include-ptx=<value>
                          Do not include PTX for the following GPU architecture (e.g. sm_35) or 'all'. May be specified more than once.
  --no-cuda-version-check Don't error out if the detected version of the CUDA install is too low for the requested CUDA gpu architecture.
  --no-default-config     Disable loading default configuration files
  -no-fma                 Disable the combining of floating point multiples and add/subtract operations.
  -no-ftz                 Disable flush denormal results to zero
  -no-global-hoist        Disable external globals are load safe
  --no-gpu-bundle-output  Do not bundle output files of HIP device compilation
  -no-hip-rt              Do not link against HIP runtime libraries
  -no-intel-lib=<value>   Restrict linking of Intel specific libraries. Valid arguments are libirc, libimf, libirng, libsvml
  -no-intel-lib           Restrict linking of all Intel specific libraries.
  -no-ipo                 Disable LTO mode (default)
  --no-offload-arch=<value>
                          Remove CUDA/HIP offloading device architecture (e.g. sm_35, gfx906) from the list of devices to compile for. 'all' resets the list to its default value.
  --no-offload-new-driver Don't Use the new driver for offloading compilation.
  -no-parallel-source-info
                          Disable emission of source location information for parallel code generation.
  -no-sox                 Disable saving of compiler options in the executable
  --no-system-header-prefix=<prefix>
                          Treat all #include paths starting with <prefix> as not including a system header.
  -no-vec                 Disable the loop vectorization passes
  --no-wasm-opt           Disable the wasm-opt optimizer
  -nobuiltininc           Disable builtin #include directories
  -nogpuinc               Do not add include paths for CUDA/HIP and do not include the default CUDA/HIP wrapper headers
  -nogpulib               Do not link device library for CUDA/HIP device compilation
  -nohipwrapperinc        Do not include the default HIP wrapper headers and include paths
  -nolib-inline           disable inline expansion of intrinsic functions
  -nolibsycl              Do not link SYCL runtime library
  -nostdinc++             Disable standard #include directories for the C++ standard library
  --nvptx-arch-tool=<value>
                          Tool used for detecting NVIDIA GPU arch in the system.
  -ObjC++                 Treat source input files as Objective-C++ inputs
  -objcmt-allowlist-dir-path=<value>
                          Only modify files with a filename contained in the provided directory path
  -objcmt-atomic-property Make migration to 'atomic' properties
  -objcmt-migrate-all     Enable migration to modern ObjC
  -objcmt-migrate-annotation
                          Enable migration to property and method annotations
  -objcmt-migrate-designated-init
                          Enable migration to infer NS_DESIGNATED_INITIALIZER for initializer methods
  -objcmt-migrate-instancetype
                          Enable migration to infer instancetype for method result type
  -objcmt-migrate-literals
                          Enable migration to modern ObjC literals
  -objcmt-migrate-ns-macros
                          Enable migration to NS_ENUM/NS_OPTIONS macros
  -objcmt-migrate-property-dot-syntax
                          Enable migration of setter/getter messages to property-dot syntax
  -objcmt-migrate-property
                          Enable migration to modern ObjC property
  -objcmt-migrate-protocol-conformance
                          Enable migration to add protocol conformance on classes
  -objcmt-migrate-readonly-property
                          Enable migration to modern ObjC readonly property
  -objcmt-migrate-readwrite-property
                          Enable migration to modern ObjC readwrite property
  -objcmt-migrate-subscripting
                          Enable migration to modern ObjC subscripting
  -objcmt-ns-nonatomic-iosonly
                          Enable migration to use NS_NONATOMIC_IOSONLY macro for setting property's 'atomic' attribute
  -objcmt-returns-innerpointer-property
                          Enable migration to annotate property with NS_RETURNS_INNER_POINTER
  -objcmt-whitelist-dir-path=<value>
                          Alias for -objcmt-allowlist-dir-path
  -ObjC                   Treat source input files as Objective-C inputs
  -object-file-name=<file>
                          Set the output <file> for debug infos
  --offload-arch=<value>  Specify an offloading device architecture for CUDA, HIP, or OpenMP. (e.g. sm_35). If 'native' is used the compiler will detect locally installed architectures. For HIP offloading, the device architecture can be followed by target ID features delimited by a colon (e.g. gfx908:xnack+:sramecc-). May be specified more than once.
  --offload-compress      Compress offload device binaries (HIP only)
  --offload-device-only   Only compile for the offloading device.
  --offload-host-device   Compile for both the offloading host and device (default).
  --offload-host-only     Only compile for the offloading host.
  --offload-link          Use the new offloading linker to perform the link job.
  --offload-new-driver    Use the new driver for offloading compilation.
  --offload=<value>       Specify comma-separated list of offloading target triples (CUDA and HIP only)
  -o <file>               Write output to <file>
  -parallel-source-info=<value>
                          Emit source location information for parallel code generation with OpenMP and auto-parallelization.
  -pch-use <file>         Include precompiled header file
  -pc <value>             Initialize X87 floating point precision to single, double or double extended. Valid values of 32, 64 and 80
  -pedantic               Warn on language extensions
  -pg                     Enable mcount instrumentation
  -pipe                   Use pipes between commands, when possible
  --precompile            Only precompile the input
  --pretty-sgf            Emit pretty printed symbol graphs
  -print-diagnostic-options
                          Print all of Clang's warning options
  -print-effective-triple Print the effective target triple
  -print-enabled-extensions
                          Print the extensions enabled by the given target and -march/-mcpu options. (AArch64 and RISC-V only)
  -print-file-name=<file> Print the full library path of <file>
  -print-ivar-layout      Enable Objective-C Ivar layout bitmap print trace
  -print-libgcc-file-name Print the library path for the currently used compiler runtime library ("libgcc.a" or "libclang_rt.builtins.*.a")
  -print-library-module-manifest-path
                          Print the path for the C++ Standard library module manifest
  -print-multi-flags-experimental
                          Print the flags used for selecting multilibs (experimental)
  -print-prog-name=<name> Print the full program path of <name>
  -print-resource-dir     Print the resource directory pathname
  -print-rocm-search-dirs Print the paths used for finding ROCm installation
  -print-runtime-dir      Print the directory pathname containing Clang's runtime libraries
  -print-search-dirs      Print the paths used for finding libraries and programs
  -print-supported-cpus   Print supported cpu models for the given target (if target is not specified, it will print the supported cpus for the default target)
  -print-supported-extensions
                          Print supported -march extensions (RISC-V, AArch64 and ARM only)
  -print-target-triple    Print the normalized target triple
  -print-targets          Print the registered targets
  -pthread                Support POSIX threads in generated code
  --ptxas-path=<value>    Path to ptxas (used for compiling CUDA code)
  -P                      Disable linemarker output in -E mode
  -p                      Enable mcount instrumentation with prof
  -qactypes               Enable compile and link support for the Algorithmic C Data-types (AC types)
  -qdaal=<value>          Link Intel(R) Data Analytics Acceleration Library (Intel(R) DAAL) libraries and bring in the associated headers (parallel)
  -qipp-link=<value>      Link Intel(R) IPP libraries in requested manner (static,dynamic,shared)
  -qipp=<value>           Link commonly used Intel(R) Integrated Performace Primitives (Intel(R) IPP) libraries and bring in the associated headers (common,crypto,nonpic,nonpic_crypto)
  -qmkl-ilp64=<value>     Link commonly used Intel(R) Math Kernel ILP64 Variant Library (Intel(R) MKL) and bring in the associated headers (parallel,sequential,cluster)("cluster" is not supported in DPC++)
  -qmkl-sycl-impl=<value> Limit linking of SYCL-specific implementations of the Intel(R) Math Kernel Library to specified in argument. Valid arguments: blas, lapack, dft, sparse, rng, stats, vm.
  -qmkl=<value>           Link commonly used Intel(R) Math Kernel Library (Intel(R) MKL) and bring in the associated headers (parallel,sequential,cluster)("cluster" is not supported in DPC++)
  -qno-actypes            Disable the compile and link support for the Algorithmic C Data-types (AC types)
  -qno-openmp             Disable OpenMP support
  -qno-opt-dynamic-align  Disable peeling to optimize alignment for vectorization.
  -qno-opt-jump-tables    Do not use jump tables for lowering switches
  -qno-opt-matmul         Disables compiler-generated Matrix Multiply (matmul) library call
  -qno-opt-mem-layout-trans
                          Disable memory layout transformations
  -qno-opt-multiple-gather-scatter-by-shuffles
                          Disables the optimization for multiple adjacent gather/scatter type vector memory references
  -qno-opt-prefetch       Disable prefetching.
  -Qn                     Do not emit metadata containing compiler name and version
  -qopenmp-link=<value>   Choose whether to link with the static or dynamic OpenMP libraries. Default is dynamic.
  -qopenmp-simd           Emit OpenMP code only for SIMD-based constructs.
  -qopenmp-stubs          enables the user to compile OpenMP programs in sequential mode. The OpenMP directives are ignored and a stub OpenMP library is linked.
  -qopenmp-threadprivate=<value>
                          Choose which threadprivate implementation to use: compat or legacy.
  -qopenmp                Parse OpenMP pragmas and generate parallel code.
  -qopt-assume-no-loop-carried-dep=<value>
                          Set a level of performance tuning for loops.  0 - The compiler does not assume there is loop-carried dependencies (default).  1 - Assume there are no loop-carried dependencies for innermost loops.  2 - Assume there are no loop-carried dependencies for all loop levels.
  -qopt-dword-index-for-array-of-structs=<value>
                          When specified allows the compiler to use dword indexes to access elements of arrays of structs which in size do not exceed val bytes. The arrays in question should contain no more than INT_MAX / sizeof(element) elements. Allowed values for val are: 16, 32, default is 16.
  -qopt-dynamic-align     Enable peeling to optimize alignment for vectorization.
  -qopt-for-throughput=<value>
                          Optimize for throughput performance, assuming multiple jobs are running.  The memory optimizations for single job versus multiple jobs can be tuned in different ways by the compiler. Valid arguments: multi-job, single-job
  -qopt-jump-tables       Control the generation of jump tables
  -qopt-matmul            Enables compiler-generated Matrix Multiply (matmul) library call
  -qopt-mem-layout-trans=<value>
                          Control the level of memory layout transformations performed by the compiler
  -qopt-multiple-gather-scatter-by-shuffles
                          Enables the optimization for multiple adjacent gather/scatter type vector memory references
  -qopt-prefetch-distance=<value>
                          Specify the prefetch distance to be used for compiler generated prefetches inside loops. Value indicates distance from memory to L2 cache.
  -qopt-prefetch-loads-only
                          Only insert prefetches based on the loads inside the loop. Stores are ignored.
  -qopt-prefetch=<value>  Enable levels of prefetch insertion, where 0 disables.  Values of 1 - 5 are available.  Default is 2.
  -qopt-prefetch          Enable prefetch insertion.  Same as -qopt-prefetch=2.
  -qopt-report-file=<value>
                          Specify the filename or output stream (stdout, stderr) for the generated optimization report
  -qopt-report-names=<value>
                          Specifies whether mangled or unmangled names should appear in the optimization report.
  -qopt-report-phase=<value>
                          Specify one or more phases for which optimization reports are generated
  -qopt-report-stdout     Specify the generated optimization report should be directed to stdout
  -qopt-report=<value>    Generate an optimization report, min, med or max.
  -qopt-streaming-stores=<value>
                          Specifies whether streaming stores are generated.
  -qopt-zmm-usage=<value> Specifies the level of zmm registers usage, low or high
  -Qoption,<arg>           Qoption,<tool>,<args> to pass the comma separated arguments to the <tool>; <tool> can be asm for assembler (or) link/ld for linker (or) preprocessor for preprocessor (or) compiler for compiler
  -qoverride-limits       enables the user to skip throttling of loops in framework and DD.
  -qtbb                   Link Intel(R) Threading Building Blocks (Intel(R) TBB) libraries and bring in the associated headers
  -Qunused-arguments      Don't emit warning for unused driver arguments
  -Qy                     Emit metadata containing compiler name and version
  -regcall4               Set __regcall4 as a default calling convention to respect __regcall ABI v.4
  -regcall                Set __regcall as a default calling convention
  -relocatable-pch        Whether to build a relocatable precompiled header
  -reuse-exe=<exe>        Speed up FPGA aoc compile if the device code in <exe> is unchanged.
  -rewrite-legacy-objc    Rewrite Legacy Objective-C source to C++
  -rewrite-objc           Rewrite Objective-C source to C++
  --rocm-device-lib-path=<value>
                          ROCm device library path. Alternative to rocm-path.
  --rocm-path=<value>     ROCm installation path, used for finding and automatically linking required bitcode libraries.
  -Rpass-analysis=<value> Report transformation analysis from optimization passes whose name matches the given POSIX regular expression
  -Rpass-missed=<value>   Report missed transformations by optimization passes whose name matches the given POSIX regular expression
  -Rpass=<value>          Report transformations performed by optimization passes whose name matches the given POSIX regular expression
  -rtlib=<value>          Compiler runtime library to use
  -R<remark>              Enable the specified remark
  -save-stats=<value>     Save llvm statistics.
  -save-stats             Save llvm statistics.
  -save-temps=<value>     Save intermediate compilation results. <arg> can be set to 'cwd' for current working directory, or 'obj' which will save temporary files in the same directory as the final output file
  -save-temps             Alias for --save-temps=cwd
  -serialize-diagnostics <value>
                          Serialize compiler diagnostics to a file
  -shared-intel           link Intel provided libraries dynamically
  -shared-libsan          Dynamically link the sanitizer runtime
  -sox=<value>            Enable saving of compiler options, version and additional information in the executable.  Use -no-sox to disable (DEFAULT). Valid arguments: profile - Includes data when profile was used for functions that were compiled with PGO enabling options such as -fprofile-use and -fprofile-instr-use, inline - Includes a list of the functions that were inlined in each object, secure - Strip out directory names and options that use them.
  -sox                    Enable saving of compiler options in the executable
  --start-no-unused-arguments
                          Don't emit warnings about unused arguments for the following arguments
  -static-intel           link Intel provided libraries statically
  -static-libsan          Statically link the sanitizer runtime (Not supported for ASan, TSan or UBSan on darwin)
  -static-openmp          Use the static host OpenMP runtime while linking.
  -std=<value>            Language standard to compile for
  -stdlib++-isystem <directory>
                          Use directory as the C++ standard library include path
  -stdlib=<value>         C++ standard library to use
  -strict-ansi            strict ANSI conformance dialect
  -sycl-std=<value>       SYCL language standard to compile for.
  --symbol-graph-dir=<value>
                          Directory in which to emit symbol graphs.
  --system-header-prefix=<prefix>
                          Treat all #include paths starting with <prefix> as including a system header.
  -S                      Only run preprocess and compilation steps
  --target=<value>        Generate code for the given target
  -tbb                    Link Intel(R) Threading Building Blocks (Intel(R) TBB) libraries and bring in the associated headers
  -time                   Time individual commands
  -traceback              Generate traceback debug information
  -traditional-cpp        Enable some traditional CPP emulation
  -trigraphs              Process trigraph sequences
  -T <script>             Specify <script> as linker script
  -undef                  undef all system defines
  -unroll<value>          Set maximum number of times to unroll loops.  Omit n to use default heuristics.  Use 0 to disable the loop unroller.
  -unwindlib=<value>      Unwind library to use
  -use-msasm              enables the use of blocks and entire functions of assembly code within a C or C++ file
  -U <macro>              Undefine macro <macro>
  -vec-threshold<value>   Sets a threshold for the vectorization of loops based on the probability of profitable execution of the vectorized loop in parallel.
  -vecabi=<value>         Determines which vector function ABI the compiler uses to create or call vector functions. The 'gcc' (default) argument enforces compatibility with gcc. The 'cmdtarget' argument uses an extended set of vector functions.
  -vec                    Enable the loop vectorization passes
  --verify-debug-info     Verify the binary representation of debug output
  -verify-pch             Load and verify that a pre-compiled header file is not stale
  --version               Print version information
  -vfsoverlay <value>     Overlay the virtual filesystem described by file over the real file system. Additionally, pass this overlay file to the linker if it supports it
  -v                      Show commands to run and use verbose output
  -Wa,<arg>               Pass the comma separated arguments in <arg> to the assembler
  --wasm-opt              Enable the wasm-opt optimizer (default)
  -Wcheck-unicode-security
                          Enable detection and warn about Unicode constructs that can be exploited by using bi-directional formatting codes, zero-width characters in strings and use of zero-width characters and homoglyphs in identifiers. Done by using clang-tidy
  -Wdeprecated            Enable warnings for deprecated constructs and define __DEPRECATED
  -Winvalid-constexpr     Enable checking of constexpr function bodies for validity within a constant expression context
  -Wl,<arg>               Pass the comma separated arguments in <arg> to the linker
  -Wno-invalid-constexpr  Disable checking of constexpr function bodies for validity within a constant expression context
  -Wno-sycl-strict        Disable warnings which enforce strict SYCL language compatibility.
  -working-directory <value>
                          Resolve file paths relative to the specified directory
  -Wp,<arg>               Pass the comma separated arguments in <arg> to the preprocessor
  -W<warning>             Enable the specified warning
  -w                      Suppress all warnings
  -Xanalyzer <arg>        Pass <arg> to the static analyzer
  -Xarch_device <arg>     Pass <arg> to the CUDA/HIP device compilation
  -Xarch_host <arg>       Pass <arg> to the CUDA/HIP host compilation
  -Xassembler <arg>       Pass <arg> to the assembler
  -Xclang=<arg>           Alias for -Xclang
  -Xclang <arg>           Pass <arg> to clang -cc1
  -Xcuda-fatbinary <arg>  Pass <arg> to fatbinary invocation
  -Xcuda-ptxas <arg>      Pass <arg> to the ptxas assembler
  -Xlinker <arg>          Pass <arg> to the linker
  -Xoffload-linker<triple> <arg>
                          Pass <arg> to the offload linkers or the ones idenfied by -<triple>
  -Xopenmp-target-backend=<triple> <arg>
                          Pass <arg> to the OpenMP based backend identified by <triple>. Depending on the triple (spir64, spir64_gen, spir64_x86_64), the arg passed will be interpreted by the corresponding AOT tool or runtime consumer.
  -Xopenmp-target-backend <arg>
                          Pass <arg> to the OpenMP based target backend.
  -Xopenmp-target-frontend=<value>
                          Pass <arg> to the OpenMP based target frontend identified by <triple>.
  -Xopenmp-target-frontend <value>
                          Pass <arg> to the OpenMP based target frontend.
  -Xopenmp-target-linker=<triple> <arg>
                          Pass <arg> to the SYCL based target linker identified by <triple>.
  -Xopenmp-target-linker <arg>
                          Pass <arg> to the SYCL based target linker.
  -Xopenmp-target=<triple> <arg>
                          Pass <arg> to the target offloading toolchain identified by <triple>.
  -Xopenmp-target <arg>   Pass <arg> to the target offloading toolchain.
  -Xpreprocessor <arg>    Pass <arg> to the preprocessor
  -Xsycl-target-backend=<triple> <arg>
                          Pass <arg> to the SYCL based backend identified by <triple>. Depending on the triple (spir64, spir64_gen, spir64_x86_64, spir64_fpga), the arg passed will be interpreted by the corresponding AOT tool or runtime consumer.
  -Xsycl-target-backend <arg>
                          Pass <arg> to the SYCL based target backend.
  -Xsycl-target-frontend=<triple> <arg>
                          Pass <arg> to the SYCL based target frontend identified by <triple>.
  -Xsycl-target-frontend <arg>
                          Pass <arg> to the SYCL based target frontend.
  -Xsycl-target-linker=<triple> <arg>
                          Pass <arg> to the SYCL based target linker identified by <triple>.
  -Xsycl-target-linker <arg>
                          Pass <arg> to the SYCL based target linker.
  -Xs <arg>               Pass <arg> to the offline compiler.
  -Xs<arg>                Pass <arg> to the offline compiler, adding the option specifier '-' to the <arg>.
  -x <language>           Treat subsequent input files as having type <language>
  -x<code>                Generate specialized code to run exclusively on processors indicated by <code>.
  -z <arg>                Pass -z <arg> to the linker
dxc compatibility options.:
  --dxv-path=<value>  DXIL validator installation path
  -fspv-target-env=<value>
                      Specify the target environment
  -hlsl-entry <value> Entry point name for hlsl
Executing: mpiicpc -cxx=icpx -qversion
stdout: icpx: error: unknown argument '-qversion'; did you mean '--version'?
Executing: mpiicpc -cxx=icpx -show
stdout: icpx -I"/opt/intel/oneapi/mpi/2021.14/include" -L"/opt/intel/oneapi/mpi/2021.14/lib" -L"/opt/intel/oneapi/mpi/2021.14/lib" -Xlinker --enable-new-dtags -Xlinker -rpath -Xlinker "/opt/intel/oneapi/mpi/2021.14/lib" -Xlinker -rpath -Xlinker "/opt/intel/oneapi/mpi/2021.14/lib" -lmpicxx -lmpifort -lmpi -ldl -lrt -lpthread
          Trying Cxx compiler flag -PIC for PIC code
Executing: mpiicpc -cxx=icpx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers   -std=gnu++20 -PIC   /tmp/petsc-m5p55c3k/config.setCompilers/conftest.cc 
stdout: icpx: error: unknown argument '-PIC'; did you mean '-fPIC'?
Possible ERROR while running compiler: exit code 1
stderr:
icpx: error: unknown argument '-PIC'; did you mean '-fPIC'?
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

              Output from compiling with  -std=gnu++20 -PIC 
icpx: error: unknown argument '-PIC'; did you mean '-fPIC'?

PETSc Error: No output file produced
              Rejecting compiler flag -PIC  due to nonzero status from link
          Rejected Cxx compiler flag -PIC because shared linker cannot handle it
          Trying Cxx compiler flag -qPIC for PIC code
Executing: mpiicpc -cxx=icpx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers   -std=gnu++20 -qPIC   /tmp/petsc-m5p55c3k/config.setCompilers/conftest.cc 
stdout: icpx: error: unknown argument '-qPIC'; did you mean '-fPIC'?
Possible ERROR while running compiler: exit code 1
stderr:
icpx: error: unknown argument '-qPIC'; did you mean '-fPIC'?
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

              Output from compiling with  -std=gnu++20 -qPIC 
icpx: error: unknown argument '-qPIC'; did you mean '-fPIC'?

PETSc Error: No output file produced
              Rejecting compiler flag -qPIC  due to nonzero status from link
          Rejected Cxx compiler flag -qPIC because shared linker cannot handle it
          Trying Cxx compiler flag -KPIC for PIC code
Executing: mpiicpc -cxx=icpx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers   -std=gnu++20 -KPIC   /tmp/petsc-m5p55c3k/config.setCompilers/conftest.cc 
stdout: icpx: error: unknown argument '-KPIC'; did you mean '-fPIC'?
Possible ERROR while running compiler: exit code 1
stderr:
icpx: error: unknown argument '-KPIC'; did you mean '-fPIC'?
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

              Output from compiling with  -std=gnu++20 -KPIC 
icpx: error: unknown argument '-KPIC'; did you mean '-fPIC'?

PETSc Error: No output file produced
              Rejecting compiler flag -KPIC  due to nonzero status from link
          Rejected Cxx compiler flag -KPIC because shared linker cannot handle it
          Trying Cxx compiler flag -fPIC for PIC code
Executing: mpiicpc -cxx=icpx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers   -std=gnu++20 -fPIC   /tmp/petsc-m5p55c3k/config.setCompilers/conftest.cc 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

              Output from compiling with  -std=gnu++20 -fPIC 

Added Cxx compiler flag -fPIC
Executing: mpiicpc -cxx=icpx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers   -std=gnu++20 -fPIC  /tmp/petsc-m5p55c3k/config.setCompilers/conftest.cc 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <stdio.h>
int (*fprintf_ptr)(FILE*,const char*,...) = fprintf;
int  foo(void){
  fprintf_ptr(stdout,"hello");
  return 0;
}
void bar(void){foo();}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.setCompilers/libconftest.so  -shared  -fPIC /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o 
          Accepted Cxx compiler flag -fPIC for PIC code
=============================================================================================
TESTING: checkKandRFlags from config.setCompilers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/setCompilers.py:2148)
  Check C compiler flags that allow compiling K and R code (needed for some external packages)
Executing: mpiicc -cc=icx --help | head -n 20 
stdout:
OVERVIEW: Intel(R) oneAPI DPC++/C++ Compiler
USAGE: icx [options] file...
OPTIONS:
  -###                    Print (but do not run) the commands to run for this compilation
  -#x                     Show commands to run and use verbose output
  -#                      Print (but do not run) the commands to run for this compilation
  -align                  Align doubles to two words in structs (x86 only)
  --amdgpu-arch-tool=<value>
                          Tool used for detecting AMD GPU arch in the system.
  --analyzer-output <value>
                          Static analyzer report output format (html|plist|plist-multi-file|plist-html|sarif|sarif-html|text).
  --analyze               Run the static analyzer
  -ansi-alias             enable use of ANSI aliasing rules optimizations user asserts that the program adheres to these rules
  -arcmt-migrate-emit-errors
                          Emit ARC errors even if the migrator can fix them
  -arcmt-migrate-report-output <value>
                          Output path for the plist report
  -ax<codes>              generate multiple, processor-specific, auto-dispatched code paths for Intel® processors, specified by <codes>, if there is a performance benefit
Executing: mpiicc -cc=icx --help
stdout:
OVERVIEW: Intel(R) oneAPI DPC++/C++ Compiler
USAGE: icx [options] file...
OPTIONS:
  -###                    Print (but do not run) the commands to run for this compilation
  -#x                     Show commands to run and use verbose output
  -#                      Print (but do not run) the commands to run for this compilation
  -align                  Align doubles to two words in structs (x86 only)
  --amdgpu-arch-tool=<value>
                          Tool used for detecting AMD GPU arch in the system.
  --analyzer-output <value>
                          Static analyzer report output format (html|plist|plist-multi-file|plist-html|sarif|sarif-html|text).
  --analyze               Run the static analyzer
  -ansi-alias             enable use of ANSI aliasing rules optimizations user asserts that the program adheres to these rules
  -arcmt-migrate-emit-errors
                          Emit ARC errors even if the migrator can fix them
  -arcmt-migrate-report-output <value>
                          Output path for the plist report
  -ax<codes>              generate multiple, processor-specific, auto-dispatched code paths for Intel® processors, specified by <codes>, if there is a performance benefit
  -B <prefix>             Search $prefix$file for executables, libraries, and data files. If $prefix is a directory, search $prefix/$file
  -b <arg>                Pass -b <arg> to the linker on AIX
  -CC                     Include comments from within macros in preprocessed output
  -cl-denorms-are-zero    OpenCL only. Allow denormals to be flushed to zero.
  -cl-ext=<value>         OpenCL only. Enable or disable OpenCL extensions/optional features. The argument is a comma-separated sequence of one or more extension names, each prefixed by '+' or '-'.
  -cl-fast-relaxed-math   OpenCL only. Sets -cl-finite-math-only and -cl-unsafe-math-optimizations, and defines __FAST_RELAXED_MATH__.
  -cl-finite-math-only    OpenCL only. Allow floating-point optimizations that assume arguments and results are not NaNs or +-Inf.
  -cl-fp32-correctly-rounded-divide-sqrt
                          OpenCL only. Specify that single precision floating-point divide and sqrt used in the program source are correctly rounded.
  -cl-kernel-arg-info     OpenCL only. Generate kernel argument metadata.
  -cl-mad-enable          OpenCL only. Allow use of less precise MAD computations in the generated binary.
  -cl-no-signed-zeros     OpenCL only. Allow use of less precise no signed zeros computations in the generated binary.
  -cl-no-stdinc           OpenCL only. Disables all standard includes containing non-native compiler types and functions.
  -cl-opt-disable         OpenCL only. This option disables all optimizations. By default optimizations are enabled.
  -cl-single-precision-constant
                          OpenCL only. Treat double precision floating-point constant as single precision constant.
  -cl-std=<value>         OpenCL language standard to compile for.
  -cl-strict-aliasing     OpenCL only. This option is added for compatibility with OpenCL 1.0.
  -cl-uniform-work-group-size
                          OpenCL only. Defines that the global work-size be a multiple of the work-group size specified to clEnqueueNDRangeKernel
  -cl-unsafe-math-optimizations
                          OpenCL only. Allow unsafe floating-point optimizations.  Also implies -cl-no-signed-zeros and -cl-mad-enable.
  --config=<file>         Specify configuration file
  --cuda-compile-host-device
                          Compile CUDA code for both host and device (default). Has no effect on non-CUDA compilations.
  --cuda-device-only      Compile CUDA code for device only
  --cuda-feature=<value>  Manually specify the CUDA feature to use
  --cuda-host-only        Compile CUDA code for host only. Has no effect on non-CUDA compilations.
  --cuda-include-ptx=<value>
                          Include PTX for the following GPU architecture (e.g. sm_35) or 'all'. May be specified more than once.
  --cuda-noopt-device-debug
                          Enable device-side debug info generation. Disables ptxas optimizations.
  --cuda-path-ignore-env  Ignore environment variables to detect CUDA installation
  --cuda-path=<value>     CUDA installation path
  -cuid=<value>           An ID for compilation unit, which should be the same for the same compilation unit but different for different compilation units. It is used to externalize device-side static variables for single source offloading languages CUDA and HIP so that they can be accessed by the host code of the same compilation unit.
  -cxx-isystem <directory>
                          Add directory to the C++ SYSTEM include search path
  -C                      Include comments in preprocessed output
  -c                      Only run preprocess, compile, and assemble steps
  -daal=<value>           Link Intel(R) Data Analytics Acceleration Library (Intel(R) DAAL) libraries and bring in the associated headers (parallel)
  -darwin-target-variant-triple <value>
                          Specify the darwin target variant triple
  -darwin-target-variant <value>
                          Generate code for an additional runtime variant of the deployment target
  -dD                     Print macro definitions in -E mode in addition to normal output
  -debug=<value>          Enable debug information. Valid args: none, all, full, minimal
  -dependency-dot <value> Filename to write DOT-formatted header dependencies to
  -dependency-file <value>
                          Filename (or -) to write dependency output to
  -device-math-lib=<value>
                          Control the addition of device math libraries when compiling for other devices.  Valid arguments are fp64, fp32
  -dI                     Print include directives in -E mode in addition to normal output
  -dM                     Print macro definitions in -E mode instead of normal output
  -dryrun                 Print (but do not run) the commands to run for this compilation
  -dsym-dir <dir>         Directory to output dSYM's (if any) to
  -dumpdir <dumppfx>      Use <dumpfpx> as a prefix to form auxiliary and dump file names
  -dumpmachine            Display the compiler's target processor
  -dumpversion            Display the version of the compiler
  -D <macro>=<value>      Define <macro> to <value> (or 1 if <value> omitted)
  --embed-dir=<dir>       Add directory to embed search path
  -emit-ast               Emit Clang AST files for source inputs
  --emit-extension-symbol-graphs
                          Generate additional symbol graphs for extended modules.
  -emit-interface-stubs   Generate Interface Stub Files.
  -emit-llvm              Use the LLVM representation for assembler and object files
  -emit-merged-ifs        Generate Interface Stub Files, emit merged text not binary.
  --emit-static-lib       Enable linker job to emit a static library.
  -emit-symbol-graph      Generate Extract API information as a side effect of compilation.
  --end-no-unused-arguments
                          Start emitting warnings for unused driver arguments
  -EP                     Preprocess to stdout, omitting #line directives.
  --extract-api-ignores=<value>
                          Comma separated list of files containing a new line separated list of API symbols to ignore when extracting API information.
  -extract-api            Extract API information
  -E                      Only run the preprocessor
  -faapcs-bitfield-load   Follows the AAPCS standard that all volatile bit-field write generates at least one load. (ARM only).
  -faapcs-bitfield-width  Follow the AAPCS standard requirement stating that volatile bit-field width is dictated by the field container type. (ARM only).
  -faddrsig               Emit an address-significance table
  -falign-functions=<value>
                          Align the start of functions on a 2 (DEFAULT) or <n> byte boundary where <n> is a power of 2.
  -falign-functions       align the start of functions to an optimal machine-dependent value.
  -falign-loops=<N>       N must be a power of two. Align loops to the boundary
  -falign-stack=assume-16-byte
                          Assume the stack is aligned on 16-byte boundaries
  -falign-stack=assume-4-byte
                          Assume the stack is aligned on 4-byte boundaries
  -falign-stack=maintain-16-byte
                          Do not assume any alignment, but maintain alignment in case the stack is already aligned
  -faligned-allocation    Enable C++17 aligned allocation functions
  -fallow-editor-placeholders
                          Treat editor placeholders as valid source code
  -faltivec-src-compat=<value>
                          Source-level compatibility for Altivec vectors (for PowerPC targets). This includes results of vector comparison (scalar for 'xl', vector for 'gcc') as well as behavior when initializing with a scalar (splatting for 'xl', element zero only for 'gcc'). For 'mixed', the compatibility is as 'gcc' for 'vector bool/vector pixel' and as 'xl' for other types. Current default is 'mixed'.
  -fansi-escape-codes     Use ANSI escape codes for diagnostics
  -fapinotes-modules      Enable module-based external API notes support
  -fapinotes-swift-version=<version>
                          Specify the Swift version to use when filtering API notes
  -fapinotes              Enable external API notes support
  -fapple-kext            Use Apple's kernel extensions ABI
  -fapple-link-rtlib      Force linking the clang builtins runtime library
  -fapple-pragma-pack     Enable Apple gcc-compatible #pragma pack handling
  -fapplication-extension Restrict code to those available for App Extensions
  -fapprox-func           Allow certain math function calls to be replaced with an approximately equivalent calculation
  -fargument-noalias      Enables 'noalias' attribute for all pointer-type arguments
  -fassume-nothrow-exception-dtor
                          Assume that exception objects' destructors are non-throwing
  -fasync-exceptions      Enable EH Asynchronous exceptions
  -fauto-import           MinGW specific. Enable code generation support for automatic dllimport, and enable support for it in the linker. Enabled by default.
  -fbasic-block-address-map
                          Emit the basic block address map section.
  -fbasic-block-sections=<value>
                          Place each function's basic blocks in unique sections (ELF Only)
  -fbinutils-version=<major.minor>
                          Produced object files can use all ELF features supported by this binutils version and newer. If -fno-integrated-as is specified, the generated assembly will consider GNU as support. 'none' means that all ELF features can be used, regardless of binutils support. Defaults to 2.26.
  -fblocks                Enable the 'blocks' language feature
  -fborland-extensions    Accept non-standard constructs supported by the Borland compiler
  -fbuild-session-file=<file>
                          Use the last modification time of <file> as the build session timestamp
  -fbuild-session-timestamp=<time since Epoch in seconds>
                          Time when the current build session started
  -fbuiltin-module-map    Load the clang builtins module map file.
  -fc++-abi=<value>       C++ ABI to use. This will override the target C++ ABI.
  -fcall-saved-x10        Make the x10 register call-saved (AArch64 only)
  -fcall-saved-x11        Make the x11 register call-saved (AArch64 only)
  -fcall-saved-x12        Make the x12 register call-saved (AArch64 only)
  -fcall-saved-x13        Make the x13 register call-saved (AArch64 only)
  -fcall-saved-x14        Make the x14 register call-saved (AArch64 only)
  -fcall-saved-x15        Make the x15 register call-saved (AArch64 only)
  -fcall-saved-x18        Make the x18 register call-saved (AArch64 only)
  -fcall-saved-x8         Make the x8 register call-saved (AArch64 only)
  -fcall-saved-x9         Make the x9 register call-saved (AArch64 only)
  -fcaret-diagnostics-max-lines=<value>
                          Set the maximum number of source lines to show in a caret diagnostic (0 = no limit).
  -fcf-protection=<value> Instrument control-flow architecture protection
  -fcf-protection         Enable cf-protection in 'full' mode
  -fchar8_t               Enable C++ builtin type char8_t
  -fcheck-new             Do not assume C++ operator new may not return NULL
  -fclang-abi-compat=<version>
                          Attempt to match the ABI of Clang <version>
  -fclangir               Use the ClangIR pipeline to compile
  -fcolor-diagnostics     Enable colors in diagnostics
  -fcomment-block-commands=<arg>
                          Treat each comma separated argument in <arg> as a documentation comment block command
  -fcommon                Place uninitialized global variables in a common block
  -fcomplete-member-pointers
                          Require member pointer base types to be complete if they would be significant under the Microsoft ABI
  -fconstexpr-backtrace-limit=<value>
                          Set the maximum number of entries to print in a constexpr evaluation backtrace (0 = no limit)
  -fconstexpr-depth=<value>
                          Set the maximum depth of recursive constexpr function calls
  -fconstexpr-steps=<value>
                          Set the maximum number of steps in constexpr function evaluation
  -fcoro-aligned-allocation
                          Prefer aligned allocation for C++ Coroutines
  -fcoroutines            Enable support for the C++ Coroutines
  -fcoverage-compilation-dir=<value>
                          The compilation directory to embed in the coverage mapping.
  -fcoverage-mapping      Generate coverage mapping to enable code coverage analysis
  -fcoverage-mcdc         Enable MC/DC criteria when generating code coverage
  -fcoverage-prefix-map=<old>=<new>
                          remap file source paths <old> to <new> in coverage mapping. If there are multiple options, prefix replacement is applied in reverse order starting from the last one
  -fcrash-diagnostics-dir=<dir>
                          Put crash-report files in <dir>
  -fcrash-diagnostics=<value>
                          Set level of crash diagnostic reporting, (option: off, compiler, all)
  -fcrash-diagnostics     Enable crash diagnostic reporting (default)
  -fcs-profile-generate=<directory>
                          Generate instrumented code to collect context sensitive execution counts into <directory>/default.profraw (overridden by LLVM_PROFILE_FILE env var)
  -fcs-profile-generate   Generate instrumented code to collect context sensitive execution counts into default.profraw (overridden by LLVM_PROFILE_FILE env var)
  -fcuda-prec-sqrt        Specify that sqrt is correctly rounded (for CUDA devices)
  -fcuda-short-ptr        Use 32-bit pointers for accessing const/local/shared address spaces
  -fcx-fortran-rules      Range reduction is enabled for complex arithmetic operations.
  -fcx-limited-range      Basic algebraic expansions of complex arithmetic operations involving are enabled.
  -fcxx-exceptions        Enable C++ exceptions
  -fcxx-modules           Enable modules for C++
  -fdata-sections         Place each data in its own section
  -fdebug-compilation-dir=<value>
                          The compilation directory to embed in the debug info
  -fdebug-default-version=<value>
                          Default DWARF version to use, if a -g option caused DWARF debug info to be produced
  -fdebug-info-for-profiling
                          Emit extra debug info to make sample profile more accurate
  -fdebug-macro           Emit macro debug information
  -fdebug-prefix-map=<old>=<new>
                          For paths in debug info, remap directory <old> to <new>. If multiple options match a path, the last option wins
  -fdebug-ranges-base-address
                          Use DWARF base address selection entries in .debug_ranges
  -fdebug-types-section   Place debug types in their own section (ELF Only)
  -fdeclspec              Allow __declspec as a keyword
  -fdefine-target-os-macros
                          Enable predefined target OS macros
  -fdelayed-template-parsing
                          Parse templated function definitions at the end of the translation unit
  -fdelete-null-pointer-checks
                          Treat usage of null pointers as undefined behavior (default)
  -fdiagnostics-absolute-paths
                          Print absolute paths in diagnostics
  -fdiagnostics-hotness-threshold=<value>
                          Prevent optimization remarks from being output if they do not have at least this profile count. Use 'auto' to apply the threshold from profile summary
  -fdiagnostics-misexpect-tolerance=<value>
                          Prevent misexpect diagnostics from being output if the profile counts are within N% of the expected. 
  -fdiagnostics-parseable-fixits
                          Print fix-its in machine parseable form
  -fdiagnostics-print-source-range-info
                          Print source range spans in numeric form
  -fdiagnostics-show-hotness
                          Enable profile hotness information in diagnostic line
  -fdiagnostics-show-note-include-stack
                          Display include stacks for diagnostic notes
  -fdiagnostics-show-option
                          Print option name with mappable diagnostics
  -fdiagnostics-show-template-tree
                          Print a template comparison tree for differing templates
  -fdigraphs              Enable alternative token representations '<:', ':>', '<%', '%>', '%:', '%:%:' (default)
  -fdirect-access-external-data
                          Don't use GOT indirection to reference external data symbols
  -fdisable-block-signature-string
                          Disable block signature string)
  -fdiscard-value-names   Discard value names in LLVM IR
  -fdollars-in-identifiers
                          Allow '$' in identifiers
  -fdriver-only           Only run the driver.
  -fdwarf-exceptions      Use DWARF style exceptions
  -feliminate-unused-debug-types
                          Do not emit  debug info for defined but unused types
  -fembed-bitcode-marker  Embed placeholder LLVM IR data as a marker
  -fembed-bitcode=<option>
                          Embed LLVM bitcode
  -fembed-bitcode         Embed LLVM IR bitcode as data
  -fembed-offload-object=<value>
                          Embed Offloading device-side binary into host object file as a section.
  -femit-all-decls        Emit all declarations, even if unused
  -femit-class-debug-always
                          Emit debug information for a C++ class into each object file where the class is used. This flag is useful for tools which are unable to resolve incomplete type descriptions.  Using this option may cause a large increase in the size of the debug information
  -femit-compact-unwind-non-canonical
                          Try emitting Compact-Unwind for non-canonical entries. Maybe overriden by other constraints
  -femit-dwarf-unwind=<value>
                          When to emit DWARF unwind (EH frame) info
  -femulated-tls          Use emutls functions to access thread_local variables
  -fenable-matrix         Enable matrix data type and related builtin functions
  -fexceptions            Enable support for exception handling
  -fexcess-precision=<value>
                          Allows control over excess precision on targets where native support for the precision types is not available. By default, excess precision is used to calculate intermediate results following the rules specified in ISO C99.
  -fexperimental-late-parse-attributes
                          Enable experimental late parsing of attributes
  -fexperimental-library  Control whether unstable and experimental library features are enabled. This option enables various library features that are either experimental (also known as TSes), or have been but are not stable yet in the selected Standard Library implementation. It is not recommended to use this option in production code, since neither ABI nor API stability are guaranteed. This is intended to provide a preview of features that will ship in the future for experimentation purposes
  -fexperimental-modules-reduced-bmi
                          Generate the reduced BMI
  -fexperimental-new-constant-interpreter
                          Enable the experimental new constant interpreter
  -fexperimental-openacc-macro-override <value>
                          Overrides the _OPENACC macro value for experimental testing during OpenACC support development
  -fexperimental-relative-c++-abi-vtables
                          Use the experimental C++ class ABI for classes with virtual tables
  -fexperimental-sanitize-metadata-ignorelist=<value>
                          Disable sanitizer metadata for modules and functions that match the provided special case list
  -fexperimental-sanitize-metadata=<value>
                          Specify the type of metadata to emit for binary analysis sanitizers
  -fexperimental-strict-floating-point
                          Enables the use of non-default rounding modes and non-default exception handling on targets that are not currently ready.
  -fextend-arguments=<value>
                          Controls how scalar integer arguments are extended in calls to unprototyped and varargs functions
  -ffast-math             Allow aggressive, lossy floating-point optimizations
  -ffat-lto-objects       Enable fat LTO object support
  -ffile-compilation-dir=<value>
                          The compilation directory to embed in the debug info and coverage mapping.
  -ffile-prefix-map=<value>
                          remap file source paths in debug info, predefined preprocessor macros and __builtin_FILE(). Implies -ffile-reproducible.
  -ffile-reproducible     Use the target's platform-specific path separator character when expanding the __FILE__ macro
  -ffine-grained-bitfield-accesses
                          Use separate accesses for consecutive bitfield runs with legal widths and alignments.
  -ffinite-loops          Assume all non-trivial loops are finite.
  -ffinite-math-only      Allow floating-point optimizations that assume arguments and results are not NaNs or +-inf. This defines the \_\_FINITE\_MATH\_ONLY\_\_ preprocessor macro.
  -ffixed-a0              Reserve the a0 register (M68k only)
  -ffixed-a1              Reserve the a1 register (M68k only)
  -ffixed-a2              Reserve the a2 register (M68k only)
  -ffixed-a3              Reserve the a3 register (M68k only)
  -ffixed-a4              Reserve the a4 register (M68k only)
  -ffixed-a5              Reserve the a5 register (M68k only)
  -ffixed-a6              Reserve the a6 register (M68k only)
  -ffixed-d0              Reserve the d0 register (M68k only)
  -ffixed-d1              Reserve the d1 register (M68k only)
  -ffixed-d2              Reserve the d2 register (M68k only)
  -ffixed-d3              Reserve the d3 register (M68k only)
  -ffixed-d4              Reserve the d4 register (M68k only)
  -ffixed-d5              Reserve the d5 register (M68k only)
  -ffixed-d6              Reserve the d6 register (M68k only)
  -ffixed-d7              Reserve the d7 register (M68k only)
  -ffixed-g1              Reserve the G1 register (SPARC only)
  -ffixed-g2              Reserve the G2 register (SPARC only)
  -ffixed-g3              Reserve the G3 register (SPARC only)
  -ffixed-g4              Reserve the G4 register (SPARC only)
  -ffixed-g5              Reserve the G5 register (SPARC only)
  -ffixed-g6              Reserve the G6 register (SPARC only)
  -ffixed-g7              Reserve the G7 register (SPARC only)
  -ffixed-i0              Reserve the I0 register (SPARC only)
  -ffixed-i1              Reserve the I1 register (SPARC only)
  -ffixed-i2              Reserve the I2 register (SPARC only)
  -ffixed-i3              Reserve the I3 register (SPARC only)
  -ffixed-i4              Reserve the I4 register (SPARC only)
  -ffixed-i5              Reserve the I5 register (SPARC only)
  -ffixed-l0              Reserve the L0 register (SPARC only)
  -ffixed-l1              Reserve the L1 register (SPARC only)
  -ffixed-l2              Reserve the L2 register (SPARC only)
  -ffixed-l3              Reserve the L3 register (SPARC only)
  -ffixed-l4              Reserve the L4 register (SPARC only)
  -ffixed-l5              Reserve the L5 register (SPARC only)
  -ffixed-l6              Reserve the L6 register (SPARC only)
  -ffixed-l7              Reserve the L7 register (SPARC only)
  -ffixed-o0              Reserve the O0 register (SPARC only)
  -ffixed-o1              Reserve the O1 register (SPARC only)
  -ffixed-o2              Reserve the O2 register (SPARC only)
  -ffixed-o3              Reserve the O3 register (SPARC only)
  -ffixed-o4              Reserve the O4 register (SPARC only)
  -ffixed-o5              Reserve the O5 register (SPARC only)
  -ffixed-point           Enable fixed point types
  -ffixed-r19             Reserve register r19 (Hexagon only)
  -ffixed-r9              Reserve the r9 register (ARM only)
  -ffixed-x10             Reserve the x10 register (AArch64/RISC-V only)
  -ffixed-x11             Reserve the x11 register (AArch64/RISC-V only)
  -ffixed-x12             Reserve the x12 register (AArch64/RISC-V only)
  -ffixed-x13             Reserve the x13 register (AArch64/RISC-V only)
  -ffixed-x14             Reserve the x14 register (AArch64/RISC-V only)
  -ffixed-x15             Reserve the x15 register (AArch64/RISC-V only)
  -ffixed-x16             Reserve the x16 register (AArch64/RISC-V only)
  -ffixed-x17             Reserve the x17 register (AArch64/RISC-V only)
  -ffixed-x18             Reserve the x18 register (AArch64/RISC-V only)
  -ffixed-x19             Reserve the x19 register (AArch64/RISC-V only)
  -ffixed-x1              Reserve the x1 register (AArch64/RISC-V only)
  -ffixed-x20             Reserve the x20 register (AArch64/RISC-V only)
  -ffixed-x21             Reserve the x21 register (AArch64/RISC-V only)
  -ffixed-x22             Reserve the x22 register (AArch64/RISC-V only)
  -ffixed-x23             Reserve the x23 register (AArch64/RISC-V only)
  -ffixed-x24             Reserve the x24 register (AArch64/RISC-V only)
  -ffixed-x25             Reserve the x25 register (AArch64/RISC-V only)
  -ffixed-x26             Reserve the x26 register (AArch64/RISC-V only)
  -ffixed-x27             Reserve the x27 register (AArch64/RISC-V only)
  -ffixed-x28             Reserve the x28 register (AArch64/RISC-V only)
  -ffixed-x29             Reserve the x29 register (AArch64/RISC-V only)
  -ffixed-x2              Reserve the x2 register (AArch64/RISC-V only)
  -ffixed-x30             Reserve the x30 register (AArch64/RISC-V only)
  -ffixed-x31             Reserve the x31 register (AArch64/RISC-V only)
  -ffixed-x3              Reserve the x3 register (AArch64/RISC-V only)
  -ffixed-x4              Reserve the x4 register (AArch64/RISC-V only)
  -ffixed-x5              Reserve the x5 register (AArch64/RISC-V only)
  -ffixed-x6              Reserve the x6 register (AArch64/RISC-V only)
  -ffixed-x7              Reserve the x7 register (AArch64/RISC-V only)
  -ffixed-x8              Reserve the x8 register (AArch64/RISC-V only)
  -ffixed-x9              Reserve the x9 register (AArch64/RISC-V only)
  -fforce-check-cxx20-modules-input-files
                          Check the input source files from C++20 modules explicitly
  -fforce-dwarf-frame     Always emit a debug frame section
  -fforce-emit-vtables    Emits more virtual tables to improve devirtualization
  -fforce-enable-int128   Enable support for int128_t type
  -ffp-accuracy=<value>   Specifies the required accuracy for floating-point operations and library calls.
  -ffp-contract=<value>   Form fused FP ops (e.g. FMAs)
  -ffp-eval-method=<value>
                          Specifies the evaluation method to use for floating-point arithmetic.
  -ffp-exception-behavior=<value>
                          Specifies the exception behavior of floating-point operations.
  -ffp-model=<value>      Controls the semantics of floating-point calculations.
  -ffreestanding          Assert that the compilation takes place in a freestanding environment
  -ffuchsia-api-level=<value>
                          Set Fuchsia API level
  -ffunction-sections     Place each function in its own section
  -fglobal-isel           Enables the global instruction selector
  -fgnu-keywords          Allow GNU-extension keywords regardless of language standard
  -fgnu-runtime           Generate output compatible with the standard GNU Objective-C runtime
  -fgnu89-inline          Use the gnu89 inline semantics
  -fgnuc-version=<value>  Sets various macros to claim compatibility with the given GCC version (default is 4.2.1)
  -fgpu-allow-device-init Allow device side init function in HIP (experimental)
  -fgpu-approx-transcendentals
                          Use approximate transcendental functions
  -fgpu-default-stream=<value>
                          Specify default stream. The default value is 'legacy'. (CUDA/HIP only)
  -fgpu-defer-diag        Defer host/device related diagnostic messages for CUDA/HIP
  -fgpu-flush-denormals-to-zero
                          Flush denormal floating point values to zero in CUDA/HIP device mode.
  -fgpu-rdc               Generate relocatable device code, also known as separate compilation mode
  -fgpu-sanitize          Enable sanitizer for supported offloading devices
  -fhelp                  Display available options
  -fhip-emit-relocatable  Compile HIP source to relocatable
  -fhip-fp32-correctly-rounded-divide-sqrt
                          Specify that single precision floating-point divide and sqrt used in the program source are correctly rounded (HIP device compilation only)
  -fhip-kernel-arg-name   Specify that kernel argument names are preserved (HIP only)
  -fhip-new-launch-api    Use new kernel launching API for HIP
  -fhlsl-strict-availability
                          Enables strict availability diagnostic mode for HLSL built-in functions.
  -fhls                   Enable Intel FPGA High Level Synthesis extensions
  -fhonor-infinities      Specify that floating-point optimizations are not allowed that assume arguments and results are not +-inf.
  -fhonor-nan-compares    Honor NaN compares with fast math
  -fhonor-nans            Specify that floating-point optimizations are not allowed that assume arguments and results are not NANs.
  -fignore-exceptions     Enable support for ignoring exception handling constructs
  -fimf-absolute-error=<value>
                          Define the maximum allowable absolute error for math library function results
  -fimf-accuracy-bits=<value>
                          Define the relative error, measured by the number of correct bits,for math library function results
  -fimf-arch-consistency=<value>
                          Ensures that the math library functions produce consistent results across different implementations of the same architecture
  -fimf-domain-exclusion=<value>
                          Indicates the input arguments domain on which math functions must provide correct results.
  -fimf-max-error=<value> defines the maximum allowable relative error, measured in ulps, for math library function results
  -fimf-precision=<value> Defines the accuracy (precision) for math library functions.
  -fimf-use-svml=<value>  Instruct the compiler to implement math library functions using the Short Vector Math Library(SVML)
  -fimplicit-module-maps  Implicitly search the file system for module map files.
  -fincremental-extensions
                          Enable incremental processing extensions such as processingstatements on the global scope.
  -finline-functions      Inline suitable functions
  -finline-hint-functions Inline functions which are (explicitly or implicitly) marked inline
  -finline-max-stacksize=<value>
                          Suppress inlining of functions whose stack size exceeds the given value
  -finput-charset=<value> Specify the default character set for source files
  -finstrument-function-entry-bare
                          Instrument function entry only, after inlining, without arguments to the instrumentation call
  -finstrument-functions-after-inlining
                          Like -finstrument-functions, but insert the calls after inlining
  -finstrument-functions  Generate calls to instrument function entry and exit
  -fintegrated-as         Enable the integrated assembler
  -fintegrated-cc1        Run cc1 in-process
  -fintegrated-objemitter Use internal machine object code emitter.
  -fintel-long-double-size=<value>
                          Overrides the size of long double from the architecture/OS defaults.
  -fintelfpga             Perform ahead-of-time compilation for FPGA
  -fiopenmp-simd          Same as -qopenmp-simd
  -fiopenmp               Same as -qopenmp
  -fjmc                   Enable just-my-code debugging
  -fjump-tables           Use jump tables for lowering switches
  -fkeep-persistent-storage-variables
                          Enable keeping all variables that have a persistent storage duration, including global, static and thread-local variables, to guarantee that they can be directly addressed
  -fkeep-static-consts    Keep static const variables even if unused
  -fkeep-system-includes  Instead of expanding system headers when emitting preprocessor output, preserve the #include directive. Useful when producing preprocessed output for test case reduction. May produce incorrect output if preprocessor symbols that control the included content (e.g. _XOPEN_SOURCE) are defined in the including source file. The portability of the resulting source to other compilation environments is not guaranteed.
                          
                          Only valid with -E.
  -flax-vector-conversions=<value>
                          Enable implicit vector bit-casts
  -flink-huge-device-code Generate and use a custom linker script for huge device code sections
  -flto-jobs=<value>      Controls the backend parallelism of -flto=thin (default of 0 means the number of threads will be derived from the number of CPUs detected)
  -flto=auto              Enable LTO in 'full' mode
  -flto=jobserver         Enable LTO in 'full' mode
  -flto=<value>           Set LTO mode
  -flto                   Enable LTO in 'full' mode
  -fmacro-backtrace-limit=<value>
                          Set the maximum number of entries to print in a macro expansion backtrace (0 = no limit)
  -fmacro-prefix-map=<value>
                          remap file source paths in predefined preprocessor macros and __builtin_FILE(). Implies -ffile-reproducible.
  -fmaintain-32-byte-stack-align
                          Do not assume any alignment, but maintain alignment in case the stack is already aligned
  -fmath-errno            Require math functions to indicate errors by setting errno
  -fmax-tokens=<value>    Max total number of preprocessed tokens for -Wmax-tokens.
  -fmax-type-align=<value>
                          Specify the maximum alignment to enforce on pointers lacking an explicit alignment
  -fma                    Enable the combining of floating point multiples and add/subtract operations.
  -fmemory-profile-use=<pathname>
                          Use memory profile for profile-guided memory optimization
  -fmemory-profile=<directory>
                          Enable heap memory profiling and dump results into <directory>
  -fmemory-profile        Enable heap memory profiling
  -fmerge-all-constants   Allow merging of constants
  -fmerge-debug-strings   Merge identical debug strings in different object files.
  -fmessage-length=<value>
                          Format message diagnostics so that they fit within N columns
  -fminimize-whitespace   Ignore the whitespace from the input file when emitting preprocessor output. It will only contain whitespace when necessary, e.g. to keep two minus signs from merging into to an increment operator. Useful with the -P option to normalize whitespace such that two files with only formatting changes are equal.
                          
                          Only valid with -E on C-like inputs and incompatible with -traditional-cpp.
  -fmodule-file=[<name>=]<file>
                          Specify the mapping of module name to precompiled module file, or load a module file if name is omitted.
  -fmodule-header=<kind>  Build a C++20 Header Unit from a header that should be found in the user (fmodule-header=user) or system (fmodule-header=system) search path.
  -fmodule-header         Build a C++20 Header Unit from a header
  -fmodule-map-file=<file>
                          Load this module map file
  -fmodule-name=<name>    Specify the name of the module to build
  -fmodule-output=<value> Save intermediate module file results when compiling a standard C++ module unit.
  -fmodule-output         Save intermediate module file results when compiling a standard C++ module unit.
  -fmodules-cache-path=<directory>
                          Specify the module cache path
  -fmodules-decluse       Require declaration of modules used within a module
  -fmodules-disable-diagnostic-validation
                          Disable validation of the diagnostic options when loading the module
  -fmodules-ignore-macro=<value>
                          Ignore the definition of the given macro when building and loading modules
  -fmodules-prune-after=<seconds>
                          Specify the interval (in seconds) after which a module file will be considered unused
  -fmodules-prune-interval=<seconds>
                          Specify the interval (in seconds) between attempts to prune the module cache
  -fmodules-search-all    Search even non-imported modules to resolve references
  -fmodules-strict-decluse
                          Like -fmodules-decluse but requires all headers to be in modules
  -fmodules-user-build-path <directory>
                          Specify the module user build path
  -fmodules-validate-input-files-content
                          Validate PCM input files based on content if mtime differs
  -fmodules-validate-once-per-build-session
                          Don't verify input files for the modules if the module has been successfully validated or loaded during this build session
  -fmodules-validate-system-headers
                          Validate the system headers that a module depends on when loading the module
  -fmodules               Enable the 'modules' language feature
  -fms-compatibility-version=<value>
                          Dot-separated value representing the Microsoft compiler version number to report in _MSC_VER (0 = don't define it (default))
  -fms-compatibility      Enable full Microsoft Visual C++ compatibility
  -fms-define-stdc        Define '__STDC__' to '1' in MSVC Compatibility mode
  -fms-extensions         Accept some non-standard constructs supported by the Microsoft compiler
  -fms-hotpatch           Ensure that all functions can be hotpatched at runtime
  -fms-runtime-lib=<value>
                          Select Windows run-time library
  -fms-volatile           Volatile loads and stores have acquire and release semantics
  -fmsc-version=<value>   Microsoft compiler version number to report in _MSC_VER (0 = don't define it (default))
  -fnew-alignment=<align> Specifies the largest alignment guaranteed by '::operator new(size_t)'
  -fnew-infallible        Enable treating throwing global C++ operator new as always returning valid memory (annotates with __attribute__((returns_nonnull)) and throw()). This is detectable in source.
  -fno-aapcs-bitfield-width
                          Do not follow the AAPCS standard requirement stating that volatile bit-field width is dictated by the field container type. (ARM only).
  -fno-access-control     Disable C++ access control
  -fno-addrsig            Don't emit an address-significance table
  -fno-alias              Enables 'noalias' attribute for all pointer-type arguments
  -fno-align-functions    Aligns on a 2-byte boundary
  -fno-apinotes-modules   Disable module-based external API notes support
  -fno-apinotes           Disable external API notes support
  -fno-assume-sane-operator-new
                          Don't assume that C++'s global operator new can't alias any pointer
  -fno-assume-unique-vtables
                          Disable optimizations based on vtable pointer identity
  -fno-assumptions        Disable codegen and compile-time checks for C++23's [[assume]] attribute
  -fno-auto-import        MinGW specific. Disable support for automatic dllimport in code generation and linking
  -fno-autolink           Disable generation of linker directives for automatic library linking
  -fno-builtin-<value>    Disable implicit builtin knowledge of a specific function
  -fno-builtin            Disable implicit builtin knowledge of functions
  -fno-bundle-offload-arch
                          Specify that the offload bundler should not identify a bundle with specific arch. For example, the bundle for `nvptx64-nvidia-cuda-sm_80` uses the bundle tag `nvptx64-nvidia-cuda` when used. This allows .o files to contain .bc bundles that are unspecific to a particular arch version.
  -fno-c++-static-destructors
                          Disable C++ static destructor registration
  -fno-char8_t            Disable C++ builtin type char8_t
  -fno-clangir            Use the AST -> LLVM pipeline to compile
  -fno-color-diagnostics  Disable colors in diagnostics
  -fno-common             Compile common globals like normal definitions
  -fno-complete-member-pointers
                          Do not require member pointer base types to be complete if they would be significant under the Microsoft ABI
  -fno-constant-cfstrings Disable creation of CodeFoundation-type constant strings
  -fno-convergent-functions
                          Assume all functions may be convergent.
  -fno-coverage-mapping   Disable code coverage analysis
  -fno-coverage-mcdc      Disable MC/DC coverage criteria
  -fno-crash-diagnostics  Disable auto-generation of preprocessed source files and a script for reproduction during a clang crash
  -fno-cuda-prec-sqrt     Don't specify that sqrt is correctly rounded (for CUDA devices)
  -fno-cx-fortran-rules   Range reduction is disabled for complex arithmetic operations
  -fno-cx-limited-range   Basic algebraic expansions of complex arithmetic operations involving are disabled.
  -fno-cxx-modules        Disable modules for C++
  -fno-debug-macro        Do not emit macro debug information
  -fno-declspec           Disallow __declspec as a keyword
  -fno-define-target-os-macros
                          Disable predefined target OS macros
  -fno-delayed-template-parsing
                          Disable delayed template parsing
  -fno-delete-null-pointer-checks
                          Do not treat usage of null pointers as undefined behavior
  -fno-diagnostics-fixit-info
                          Do not include fixit information in diagnostics
  -fno-diagnostics-show-line-numbers
                          Show line numbers in diagnostic code snippets
  -fno-digraphs           Disallow alternative token representations '<:', ':>', '<%', '%>', '%:', '%:%:'
  -fno-direct-access-external-data
                          Use GOT indirection to reference external data symbols
  -fno-disable-block-signature-string
                          Don't disable block signature string)
  -fno-discard-value-names
                          Do not discard value names in LLVM IR
  -fno-dollars-in-identifiers
                          Disallow '$' in identifiers
  -fno-elide-constructors Disable C++ copy constructor elision
  -fno-elide-type         Do not elide types when printing diagnostics
  -fno-eliminate-unused-debug-types
                          Emit  debug info for defined but unused types
  -fno-emit-class-debug-always
                          Emit debug information for a C++ class in only one object file
  -fno-exceptions         Disable support for exception handling
  -fno-experimental-late-parse-attributes
                          Disable experimental late parsing of attributes
  -fno-experimental-relative-c++-abi-vtables
                          Do not use the experimental C++ class ABI for classes with virtual tables
  -fno-experimental-sanitize-metadata=<value>
                          Disable emitting metadata for binary analysis sanitizers
  -fno-fat-lto-objects    Disable fat LTO object support
  -fno-file-reproducible  Use the host's platform-specific path separator character when expanding the __FILE__ macro
  -fno-fine-grained-bitfield-accesses
                          Use large-integer access for consecutive bitfield runs.
  -fno-finite-loops       Do not assume that any loop is finite.
  -fno-fixed-point        Disable fixed point types
  -fno-force-enable-int128
                          Disable support for int128_t type
  -fno-global-isel        Disables the global instruction selector
  -fno-gnu-inline-asm     Disable GNU style inline asm
  -fno-gpu-allow-device-init
                          Don't allow device side init function in HIP (experimental)
  -fno-gpu-approx-transcendentals
                          Don't use approximate transcendental functions
  -fno-gpu-defer-diag     Don't defer host/device related diagnostic messages for CUDA/HIP
  -fno-hip-emit-relocatable
                          Do not override toolchain to compile HIP source to relocatable
  -fno-hip-fp32-correctly-rounded-divide-sqrt
                          Don't specify that single precision floating-point divide and sqrt used in the program source are correctly rounded (HIP device compilation only)
  -fno-hip-kernel-arg-name
                          Don't specify that kernel argument names are preserved (HIP only)
  -fno-hip-new-launch-api Don't use new kernel launching API for HIP
  -fno-honor-nan-compares Do not honor NaN compares with fast math
  -fno-integrated-as      Disable the integrated assembler
  -fno-integrated-cc1     Spawn a separate process for each cc1
  -fno-integrated-objemitter
                          Use external machine object code emitter.
  -fno-jump-tables        Do not use jump tables for lowering switches
  -fno-keep-persistent-storage-variables
                          Disable keeping all variables that have a persistent storage duration, including global, static and thread-local variables, to guarantee that they can be directly addressed
  -fno-keep-static-consts Don't keep static const variables even if unused
  -fno-knr-functions      Disable support for K&R C function declarations
  -fno-link-huge-device-code
                          Do not generate or use a custom linker script for huge device code sections (default)
  -fno-lto                Disable LTO mode (default)
  -fno-memory-profile     Disable heap memory profiling
  -fno-merge-all-constants
                          Disallow merging of constants
  -fno-merge-debug-strings
                           Do not mergeidentical debug strings in different object files.
  -fno-modules-check-relocated<value>
                          Skip checks for relocated modules when loading PCM files
  -fno-modules-validate-textual-header-includes
                          Do not enforce -fmodules-decluse and private header restrictions for textual headers. This flag will be removed in a future Clang release.
  -fno-new-infallible     Disable treating throwing global C++ operator new as always returning valid memory (annotates with __attribute__((returns_nonnull)) and throw()). This is detectable in source.
  -fno-objc-avoid-heapify-local-blocks
                          Don't try to avoid heapifying local blocks
  -fno-objc-infer-related-result-type
                          do not infer Objective-C related result type based on method family
  -fno-offload-lto        Disable LTO mode (default) for offload compilation
  -fno-offload-uniform-block
                          Don't assume that kernels are launched with uniform block sizes (default true for CUDA/HIP and false otherwise)
  -fno-openmp-device-lib=<value>
                          Control exclusion of device libraries from device binary linkage. Valid arguments are libc, libm-fp32, libm-fp64, all
  -fno-openmp-extensions  Disable all Clang extensions for OpenMP directives and clauses
  -fno-operator-names     Do not treat C++ operator name keywords as synonyms for operators
  -fno-optimize-sibling-calls
                          Disable tail call optimization, keeping the call stack accurate
  -fno-pch-codegen        Do not generate code for uses of this PCH that assumes an explicit object file will be built for the PCH
  -fno-pch-debuginfo      Do not generate debug info for types in an object file built from this PCH and do not generate them elsewhere
  -fno-plt                Use GOT indirection instead of PLT to make external function calls (x86 only)
  -fno-preserve-as-comments
                          Do not preserve comments in inline assembly
  -fno-profile-generate   Disable generation of profile instrumentation.
  -fno-profile-instr-generate
                          Disable generation of profile instrumentation.
  -fno-profile-instr-use  Disable using instrumentation data for profile-guided optimization
  -fno-pseudo-probe-for-profiling
                          Do not emit pseudo probes for sample profiling
  -fno-raw-string-literals
                          Disable raw string literals
  -fno-register-global-dtors-with-atexit
                          Don't use atexit or __cxa_atexit to register global destructors
  -fno-relaxed-template-template-args
                          Disable C++17 relaxed template template argument matching
  -fno-rtlib-add-rpath    Do not add -rpath with architecture-specific resource directory to the linker flags. When --hip-link is specified, do not add -rpath with HIP runtime library directory to the linker flags
  -fno-rtlib-defaultlib   On Windows, do not emit /defaultlib: directives to link compiler-rt libraries
  -fno-rtti-data          Disable generation of RTTI data
  -fno-rtti               Disable generation of rtti information
  -fno-sanitize-address-globals-dead-stripping
                          Disable linker dead stripping of globals in AddressSanitizer
  -fno-sanitize-address-outline-instrumentation
                          Use default code inlining logic for the address sanitizer
  -fno-sanitize-address-poison-custom-array-cookie
                          Disable poisoning array cookies when using custom operator new[] in AddressSanitizer
  -fno-sanitize-address-use-after-scope
                          Disable use-after-scope detection in AddressSanitizer
  -fno-sanitize-address-use-odr-indicator
                          Disable ODR indicator globals
  -fno-sanitize-cfi-canonical-jump-tables
                          Do not make the jump table addresses canonical in the symbol table
  -fno-sanitize-cfi-cross-dso
                          Disable control flow integrity (CFI) checks for cross-DSO calls.
  -fno-sanitize-coverage=<value>
                          Disable features of coverage instrumentation for Sanitizers
  -fno-sanitize-hwaddress-experimental-aliasing
                          Disable aliasing mode in HWAddressSanitizer
  -fno-sanitize-ignorelist
                          Don't use ignorelist file for sanitizers
  -fno-sanitize-memory-param-retval
                          Disable detection of uninitialized parameters and return values
  -fno-sanitize-memory-track-origins
                          Disable origins tracking in MemorySanitizer
  -fno-sanitize-memory-use-after-dtor
                          Disable use-after-destroy detection in MemorySanitizer
  -fno-sanitize-recover=<value>
                          Disable recovery for specified sanitizers
  -fno-sanitize-stable-abi
                          Conventional ABI instrumentation for sanitizer runtime. Default: Conventional
  -fno-sanitize-stats     Disable sanitizer statistics gathering.
  -fno-sanitize-thread-atomics
                          Disable atomic operations instrumentation in ThreadSanitizer
  -fno-sanitize-thread-func-entry-exit
                          Disable function entry/exit instrumentation in ThreadSanitizer
  -fno-sanitize-thread-memory-access
                          Disable memory access instrumentation in ThreadSanitizer
  -fno-sanitize-trap=<value>
                          Disable trapping for specified sanitizers
  -fno-sanitize-trap      Disable trapping for all sanitizers
  -fno-short-wchar        Force wchar_t to be an unsigned int
  -fno-show-column        Do not include column number on diagnostics
  -fno-show-source-location
                          Do not include source location information with diagnostics
  -fno-signed-char        char is unsigned
  -fno-signed-zeros       Allow optimizations that ignore the sign of floating point zeros
  -fno-skip-odr-check-in-gmf
                          Perform ODR checks for decls in the global module fragment.
  -fno-spell-checking     Disable spell-checking
  -fno-split-machine-functions
                          Disable late function splitting using profile information (x86 ELF/COFF)
  -fno-split-stack        Wouldn't use segmented stack
  -fno-stack-clash-protection
                          Disable stack clash protection
  -fno-stack-protector    Disable the use of stack protectors
  -fno-standalone-debug   Limit debug information produced to reduce size of debug binary
  -fno-strict-aliasing    Disable optimizations based on strict aliasing rules
  -fno-strict-float-cast-overflow
                          Relax language rules and try to match the behavior of the target's native float-to-int conversion instructions
  -fno-strict-return      Don't treat control flow paths that fall off the end of a non-void function as unreachable
  -fno-sycl-add-default-spec-consts-image
                          Turns off generation of device image where all specialization constant usages are replaced with default values.
  -fno-sycl-allow-device-dependencies
                          Do not allow dependencies between device code images (default)
  -fno-sycl-dead-args-optimization
                          Disables elimination of DPC++ dead kernel arguments
  -fno-sycl-decompose-functor
                          Do not decompose SYCL functor if possible (experimental, CUDA only)
  -fno-sycl-device-code-split-esimd
                          do not split ESIMD and SYCL device code into separate device binary images. Has effect only for SPIR-based targets. (experimental)
  -fno-sycl-device-lib-jit-link
                          Disables sycl device library jit link (experimental)
  -fno-sycl-device-lib=<value>
                          Control exclusion of device libraries from device binary linkage. Valid arguments are libc, libm-fp32, libm-fp64, all
  -fno-sycl-early-optimizations
                          Disable standard optimization pipeline for SYCL device compiler
  -fno-sycl-esimd-force-stateless-mem
                          Do not enforce using stateless memory accesses.
  -fno-sycl-explicit-simd Disable SYCL explicit SIMD extension. (deprecated)
  -fno-sycl-force-inline-kernel-lambda
                          Disallow force inline SYCL kernels lambda in entry point
  -fno-sycl-id-queries-fit-in-int
                          Do not assume that SYCL ID queries fit within MAX_INT.
  -fno-sycl-instrument-device-code
                          Do not add Instrumentation and Tracing Technology (ITT) instrumentation intrinsics calls (experimental)
  -fno-sycl-libspirv      Disable check for libspirv
  -fno-sycl-link-spirv    Disable adding of the default (spir64) triple when discovered in user specified objects and archives.
  -fno-sycl-pstl-offload  Disable offloading of C++ standard parallel algorithms.
  -fno-sycl-rdc           Generate relocatable device code during SYCL offload target compilation. Use of ‘-fno-sycl-rdc’ in combination with ‘-c’ will produce final device binaries within the generated fat object. When using this option, each kernel must be self-contained within its translation unit (source file).  Therefore, the use of SYCL_EXTERNAL is disallowed when this option is enabled.
  -fno-sycl-remove-unused-external-funcs
                          Prevent removal of unused `SYCL_EXTERNAL` functions
  -fno-sycl-unnamed-lambda
                          Disallow unnamed SYCL lambda kernels
  -fno-sycl-use-bitcode   Use SPIR-V instead of LLVM bitcode in fat objects (deprecated)
  -fno-sycl-use-footer    Disable usage of the integration footer during SYCL enabled compilations.
  -fno-sycl               Disables SYCL kernels compilation for device
  -fno-system-debug       Do not emit debug information for declarations in system headers
  -fno-temp-file          Directly create compilation output files. This may lead to incorrect incremental builds if the compiler crashes
  -fno-threadsafe-statics Do not emit code to make initialization of local statics thread safe
  -fno-trigraphs          Do not process trigraph sequences
  -fno-unified-lto        Use distinct LTO pipelines
  -fno-unique-section-names
                          Don't use unique names for text and data sections
  -fno-unroll-loops       Turn off loop unroller
  -fno-use-cxa-atexit     Don't use __cxa_atexit for calling destructors
  -fno-use-init-array     Use .ctors/.dtors instead of .init_array/.fini_array
  -fno-vec-allow-scalar-stores
                          When this option is set, an explicit simd loop (for example, one set with #pragma omp simd) will not be vectorized if it contains a store to a scalar variable that is not marked as private, lastprivate, or reduction.
  -fno-vec-peel-loops     Disable peel loop vectorization.
  -fno-vec-remainder-loops
                          Disable remainder loop vectorization.
  -fno-vec-with-mask      Disable vectorization for short trip-count loops with masking.
  -fno-verify-intermediate-code
                          Disable verification of LLVM IR
  -fno-visibility-inlines-hidden-static-local-var
                          Disables -fvisibility-inlines-hidden-static-local-var (this is the default on non-darwin targets)
  -fno-xray-function-index
                          Omit function index section at the expense of single-function patching performance
  -fno-zero-initialized-in-bss
                          Don't place zero initialized data in BSS
  -fobjc-arc-exceptions   Use EH-safe code when synthesizing retains and releases in -fobjc-arc
  -fobjc-arc              Synthesize retain and release calls for Objective-C pointers
  -fobjc-avoid-heapify-local-blocks
                          Try to avoid heapifying local blocks
  -fobjc-disable-direct-methods-for-testing
                          Ignore attribute objc_direct so that direct methods can be tested
  -fobjc-encode-cxx-class-template-spec
                          Fully encode c++ class template specialization
  -fobjc-exceptions       Enable Objective-C exceptions
  -fobjc-runtime=<value>  Specify the target Objective-C runtime kind and version
  -fobjc-weak             Enable ARC-style weak references in Objective-C
  -foffload-implicit-host-device-templates
                          Template functions or specializations without host, device and global attributes have implicit host device attributes (CUDA/HIP only)
  -foffload-lto=<value>   Set LTO mode for offload compilation
  -foffload-lto           Enable LTO in 'full' mode for offload compilation
  -foffload-uniform-block Assume that kernels are launched with uniform block sizes (default true for CUDA/HIP and false otherwise)
  -fomit-frame-pointer    Omit the frame pointer from functions that don't need it. Some stack unwinding cases, such as profilers and sanitizers, may prefer specifying -fno-omit-frame-pointer. On many targets, -O1 and higher omit the frame pointer by default. -m[no-]omit-leaf-frame-pointer takes precedence for leaf functions
  -fopenacc               Enable OpenACC
  -fopenmp-concurrent-host-device-compile<value>
                          Enable parallel compilation of host and device compilation steps when performing OpenMP offload compiles using -fopenmp-targets. (experimental)
  -fopenmp-declare-target-scalar-defaultmap=<value>
                          Assume that a scalar declare target variable with implicit data-mapping referenced in a 'target' construct has the same value in the host and device environment
  -fopenmp-device-lib=<value>
                          Control inclusion of device libraries into device binary linkage. Valid arguments are libc, libm-fp32, libm-fp64, all
  -fopenmp-device-link    Perform device link during compilation step instead of link step (-c compilations).  Use for offload compilations to produce final device binaries within the generated fat object.
  -fopenmp-extensions     Enable all Clang extensions for OpenMP directives and clauses
  -fopenmp-force-usm      Force behvaior as if the user specified pragma omp requires unified_shared_memory.
  -fopenmp-offload-mandatory
                          Do not create a host fallback if offloading to the device fails.
  -fopenmp-simd           Emit OpenMP code only for SIMD-based constructs. Advanced users who prefer to use OpenMP* as it is implemented by the LLVM community can get most of that functionality by using -fopenmp-simd.
  -fopenmp-target-buffers=<value>
                          Allow access to target objects of 4GB or larger in target code.
  -fopenmp-target-debug   Enable debugging in the OpenMP offloading device RTL
  -fopenmp-target-default-sub-group-size=<value>
                          Specify the default sub-group size of SPMD kernels generated for OpenMP target constructs for SPIR64
  -fopenmp-target-jit     Emit code that can be JIT compiled for OpenMP offloading. Implies -foffload-lto=full
  -fopenmp-targets=<value>
                          Specify comma-separated list of triples that correspond to OpenMP offloading targets to be supported.  Valid triples include spir64_gen, spir64_x86_64 and spir64
  -fopenmp-version=<value>
                          Set OpenMP version (e.g. 45 for OpenMP 4.5, 51 for OpenMP 5.1). Default value is 51 for Clang
  -fopenmp                Parse OpenMP pragmas and generate parallel code. Advanced users who prefer to use OpenMP* as it is implemented by the LLVM community can get most of that functionality by using -fopenmp.
  -foperator-arrow-depth=<value>
                          Maximum number of 'operator->'s to call for a member access
  -foptimization-record-file=<file>
                          Specify the output name of the file containing the optimization remarks. Implies -fsave-optimization-record. On Darwin platforms, this cannot be used with multiple -arch <arch> options.
  -foptimization-record-passes=<regex>
                          Only include passes which match a specified regular expression in the generated optimization record (by default, include all passes)
  -forder-file-instrumentation
                          Generate instrumented code to collect order file into default.profraw file (overridden by '=' form of option or LLVM_PROFILE_FILE env var)
  -fortlib                Allow for Fortran generated objects to be mixed and matched and linked in with the C/C++ compiler to pull in the needed libraries.
  -fp-model=<value>       Controls the semantics of floating-point calculations.
  -fp-speculation=<value> Specifies the exception behavior of floating-point operations.
  -fpack-struct=<value>   Specify the default maximum struct packing alignment
  -fpascal-strings        Recognize and construct Pascal-style string literals
  -fpass-plugin=<dsopath> Load pass plugin from a dynamic shared object file (only with new pass manager).
  -fpatchable-function-entry=<N,M>
                          Generate M NOPs before function entry and N-M NOPs after function entry
  -fpcc-struct-return     Override the default ABI to return all structs on the stack
  -fpch-codegen           Generate code for uses of this PCH that assumes an explicit object file will be built for the PCH
  -fpch-debuginfo         Generate debug info for types in an object file built from this PCH and do not generate them elsewhere
  -fpch-instantiate-templates
                          Instantiate templates already while building a PCH
  -fpch-validate-input-files-content
                          Validate PCH input files based on content if mtime differs
  -fplugin-arg-<name>-<arg>
                          Pass <arg> to plugin <name>
  -fplugin=<dsopath>      Load the named plugin (dynamic shared object)
  -fprebuilt-implicit-modules
                          Look up implicit modules in the prebuilt module path
  -fprebuilt-module-path=<directory>
                          Specify the prebuilt module path
  -fpreview-breaking-changes
                          When specified, it informs the compiler driver and compilation phases that it is allowed to break backward compatibility. When this option is specified the compiler will also set the macro __INTEL_PREVIEW_BREAKING_CHANGES.
                          When this option is used in conjunction with -fsycl, the driver will link against an alternate form of libsycl, libsycl-preview.
  -fproc-stat-report=<value>
                          Save subprocess statistics to the given file
  -fproc-stat-report<value>
                          Print subprocess statistics
  -fprofile-arcs          Instrument code to produce gcov data files (*.gcda)
  -fprofile-dwo-dir=<value>
                          Directory to store .dwo files when using -fprofile-sample-generate and -gsplit-dwarf. (experimental)
  -fprofile-exclude-files=<value>
                          Instrument only functions from files where names don't match all the regexes separated by a semi-colon
  -fprofile-filter-files=<value>
                          Instrument only functions from files where names match any regex separated by a semi-colon
  -fprofile-function-groups=<N>
                          Partition functions into N groups and select only functions in group i to be instrumented using -fprofile-selected-function-group
  -fprofile-generate=<directory>
                          Generate instrumented code to collect execution counts into <directory>/default.profraw (overridden by LLVM_PROFILE_FILE env var)
  -fprofile-generate      Generate instrumented code to collect execution counts into default.profraw (overridden by LLVM_PROFILE_FILE env var)
  -fprofile-instr-generate=<file>
                          Generate instrumented code to collect execution counts into <file> (overridden by LLVM_PROFILE_FILE env var)
  -fprofile-instr-generate
                          Generate instrumented code to collect execution counts into default.profraw file (overridden by '=' form of option or LLVM_PROFILE_FILE env var)
  -fprofile-instr-use=<value>
                          Use instrumentation data for profile-guided optimization
  -fprofile-list=<value>  Filename defining the list of functions/files to instrument. The file uses the sanitizer special case list format.
  -fprofile-ml-use        Use pre-trained machine learning model for profile guided optimizations.(deprecated)
  -fprofile-remapping-file=<file>
                          Use the remappings described in <file> to match the profile data against names in the program
  -fprofile-sample-accurate
                          Specifies that the sample profile is accurate
  -fprofile-sample-generate=<value>
                          Enable compiler and linker generating information and adjusting optimizations for Sample-based Profile Guided Optimizations (SPGO). Vaild arguments are none, keep-all-opt, med-fidelity, max-fidelity. (experimental)
  -fprofile-sample-use=<value>
                          Enable compiler and linker using information for Sample-based Profile Guided Optimizations (SPGO). (experimental)
  -fprofile-selected-function-group=<i>
                          Partition functions into N groups using -fprofile-function-groups and select only functions in group i to be instrumented. The valid range is 0 to N-1 inclusive
  -fprofile-update=<method>
                          Set update method of profile counters
  -fprofile-use=<pathname>
                          Use instrumentation data for profile-guided optimization. If pathname is a directory, it reads from <pathname>/default.profdata. Otherwise, it reads from file <pathname>.
  -fprotect-parens        Determines whether the optimizer honors parentheses when floating-point expressions are evaluated
  -fpseudo-probe-for-profiling
                          Emit pseudo probes for sample profiling
  -fptrauth-auth-traps    Enable traps on authentication failures
  -fptrauth-calls         Enable signing and authentication of all indirect calls
  -fptrauth-function-pointer-type-discrimination
                          Enable type discrimination on C function pointers
  -fptrauth-init-fini     Enable signing of function pointers in init/fini arrays
  -fptrauth-intrinsics    Enable pointer authentication intrinsics
  -fptrauth-returns       Enable signing and authentication of return addresses
  -fptrauth-vtable-pointer-address-discrimination
                          Enable address discrimination of vtable pointers
  -fptrauth-vtable-pointer-type-discrimination
                          Enable type discrimination of vtable pointers
  -frandomize-layout-seed-file=<file>
                          File holding the seed used by the randomize structure layout feature
  -frandomize-layout-seed=<seed>
                          The seed used by the randomize structure layout feature
  -fraw-string-literals   Enable raw string literals
  -freciprocal-math       Allow division operations to be reassociated
  -freg-struct-return     Override the default ABI to return small structs in registers
  -fregister-global-dtors-with-atexit
                          Use atexit or __cxa_atexit to register global destructors
  -frelaxed-template-template-args
                          Enable C++17 relaxed template template argument matching
  -fropi                  Generate read-only position independent code (ARM only)
  -frounding-math         Disable floating point optimizations that assume the default rounding mode.
  -frtlib-add-rpath       Add -rpath with architecture-specific resource directory to the linker flags. When --hip-link is specified, also add -rpath with HIP runtime library directory to the linker flags
  -frtlib-defaultlib      On Windows, emit /defaultlib: directives to link compiler-rt libraries (default)
  -frwpi                  Generate read-write position independent code (ARM only)
  -fsafe-buffer-usage-suggestions
                          Display suggestions to update code associated with -Wunsafe-buffer-usage warnings
  -fsample-profile-use-profi
                          Use profi to infer block and edge counts
  -fsanitize-address-destructor=<value>
                          Set the kind of module destructors emitted by AddressSanitizer instrumentation. These destructors are emitted to unregister instrumented global variables when code is unloaded (e.g. via `dlclose()`).
  -fsanitize-address-field-padding=<value>
                          Level of field padding for AddressSanitizer
  -fsanitize-address-globals-dead-stripping
                          Enable linker dead stripping of globals in AddressSanitizer
  -fsanitize-address-outline-instrumentation
                          Always generate function calls for address sanitizer instrumentation
  -fsanitize-address-poison-custom-array-cookie
                          Enable poisoning array cookies when using custom operator new[] in AddressSanitizer
  -fsanitize-address-use-after-return=<mode>
                          Select the mode of detecting stack use-after-return in AddressSanitizer
  -fsanitize-address-use-after-scope
                          Enable use-after-scope detection in AddressSanitizer
  -fsanitize-address-use-odr-indicator
                          Enable ODR indicator globals to avoid false ODR violation reports in partially sanitized programs at the cost of an increase in binary size
  -fsanitize-cfi-canonical-jump-tables
                          Make the jump table addresses canonical in the symbol table
  -fsanitize-cfi-cross-dso
                          Enable control flow integrity (CFI) checks for cross-DSO calls.
  -fsanitize-cfi-icall-experimental-normalize-integers
                          Normalize integers in CFI indirect call type signature checks
  -fsanitize-cfi-icall-generalize-pointers
                          Generalize pointers in CFI indirect call type signature checks
  -fsanitize-coverage-allowlist=<value>
                          Restrict sanitizer coverage instrumentation exclusively to modules and functions that match the provided special case list, except the blocked ones
  -fsanitize-coverage-ignorelist=<value>
                          Disable sanitizer coverage instrumentation for modules and functions that match the provided special case list, even the allowed ones
  -fsanitize-coverage=<value>
                          Specify the type of coverage instrumentation for Sanitizers
  -fsanitize-hwaddress-abi=<value>
                          Select the HWAddressSanitizer ABI to target (interceptor or platform, default interceptor). This option is currently unused.
  -fsanitize-hwaddress-experimental-aliasing
                          Enable aliasing mode in HWAddressSanitizer
  -fsanitize-ignorelist=<value>
                          Path to ignorelist file for sanitizers
  -fsanitize-memory-param-retval
                          Enable detection of uninitialized parameters and return values
  -fsanitize-memory-track-origins=<value>
                          Enable origins tracking in MemorySanitizer
  -fsanitize-memory-track-origins
                          Enable origins tracking in MemorySanitizer
  -fsanitize-memory-use-after-dtor
                          Enable use-after-destroy detection in MemorySanitizer
  -fsanitize-memtag-mode=<value>
                          Set default MTE mode to 'sync' (default) or 'async'
  -fsanitize-recover=<value>
                          Enable recovery for specified sanitizers
  -fsanitize-stable-abi   Stable  ABI instrumentation for sanitizer runtime. Default: Conventional
  -fsanitize-stats        Enable sanitizer statistics gathering.
  -fsanitize-system-ignorelist=<value>
                          Path to system ignorelist file for sanitizers
  -fsanitize-thread-atomics
                          Enable atomic operations instrumentation in ThreadSanitizer (default)
  -fsanitize-thread-func-entry-exit
                          Enable function entry/exit instrumentation in ThreadSanitizer (default)
  -fsanitize-thread-memory-access
                          Enable memory access instrumentation in ThreadSanitizer (default)
  -fsanitize-trap=<value> Enable trapping for specified sanitizers
  -fsanitize-trap         Enable trapping for all sanitizers
  -fsanitize-undefined-strip-path-components=<number>
                          Strip (or keep only, if negative) a given number of path components when emitting check metadata.
  -fsanitize=<check>      Turn on runtime checks for various forms of undefined or suspicious behavior. See user manual for available checks
  -fsave-optimization-record=<format>
                          Generate an optimization record file in a specific format
  -fsave-optimization-record
                          Generate a YAML optimization record file
  -fseh-exceptions        Use SEH style exceptions
  -fseparate-named-sections
                          Use separate unique sections for named sections (ELF Only)
  -fshort-enums           Allocate to an enum type only as many bytes as it needs for the declared range of possible values
  -fshort-wchar           Force wchar_t to be a short unsigned int
  -fshow-overloads=<value>
                          Which overload candidates to show when overload resolution fails. Defaults to 'all'
  -fshow-skipped-includes Show skipped includes in -H output.
  -fsigned-char           char is signed
  -fsized-deallocation    Enable C++14 sized global deallocation functions
  -fsjlj-exceptions       Use SjLj style exceptions
  -fskip-odr-check-in-gmf Skip ODR checks for decls in the global module fragment.
  -fslp-vectorize         Enable the superword-level parallelism vectorization passes
  -fspell-checking-limit=<value>
                          Set the maximum number of times to perform spell checking on unrecognized identifiers (0 = no limit)
  -fsplit-dwarf-inlining  Provide minimal debug info in the object/executable to facilitate online symbolication/stack traces in the absence of .dwo/.dwp files when using Split DWARF
  -fsplit-lto-unit        Enables splitting of the LTO unit
  -fsplit-machine-functions
                          Enable late function splitting using profile information (x86 ELF/COFF)
  -fsplit-stack           Use segmented stack
  -fstack-clash-protection
                          Enable stack clash protection
  -fstack-limit-register=<value>
                          Limits the stack register size
  -fstack-protector-all   Enable stack protectors for all functions
  -fstack-protector-strong
                          Enable stack protectors for some functions vulnerable to stack smashing. Compared to -fstack-protector, this uses a stronger heuristic that includes functions containing arrays of any size (and any type), as well as any calls to alloca or the taking of an address from a local variable
  -fstack-protector       Enable stack protectors for some functions vulnerable to stack smashing. This uses a loose heuristic which considers functions vulnerable if they contain a char (or 8bit integer) array or constant sized calls to alloca , which are of greater size than ssp-buffer-size (default: 8 bytes). All variable sized calls to alloca are considered vulnerable. A function with a stack protector has a guard value added to the stack frame that is checked on function exit. The guard value must be positioned in the stack frame such that a buffer overflow from a vulnerable variable will overwrite the guard value before overwriting the function's return address. The reference stack guard value is stored in a global variable.
  -fstack-security-check  Enable overflow security checks
  -fstack-size-section    Emit section containing metadata on function stack sizes
  -fstack-usage           Emit .su file containing information on function stack sizes
  -fstandalone-debug      Emit full debug info for all types used by the program
  -fstrict-aliasing       Enable optimizations based on strict aliasing rules
  -fstrict-enums          Enable optimizations based on the strict definition of an enum's value range
  -fstrict-flex-arrays=<n>
                          Enable optimizations based on the strict definition of flexible arrays
  -fstrict-float-cast-overflow
                          Assume that overflowing float-to-int casts are undefined (default)
  -fstrict-vtable-pointers
                          Enable optimizations based on the strict rules for overwriting polymorphic C++ objects
  -fswift-async-fp=<option>
                          Control emission of Swift async extended frame info
  -fsycl-add-default-spec-consts-image
                          Generates a copy of every device image that uses a specialization constant and replaces all usages of specialization constant with default values specified by specialization_id. If a device image doesn't use a specialization constant at all then no copy is generated. This option is only useful if used in conjunction with Ahead of Time Compilation (-fsycl-target command line option).
  -fsycl-allow-device-dependencies
                          Allow dependencies between device code images
  -fsycl-dead-args-optimization
                          Enables elimination of DPC++ dead kernel arguments
  -fsycl-decompose-functor
                          Do decompose SYCL functor if possible (experimental, CUDA only)
  -fsycl-default-sub-group-size <value>
                          Set the default sub group size for SYCL kernels
  -fsycl-device-code-split-esimd
                          split ESIMD device code from SYCL into a separate device binary image (default). Has effect only for SPIR-based targets. (experimental)
  -fsycl-device-code-split=<value>
                          Perform SYCL device code split: per_kernel (device code module is created for each SYCL kernel) | per_source (device code module is created for each source (translation unit)) | off (no device code split). | auto (use heuristic to select the best way of splitting device code). Default is 'auto' - use heuristic to distribute device code across modules
  -fsycl-device-code-split
                          Perform SYCL device code split in the 'auto' mode, i.e. use heuristic to distribute device code across modules
  -fsycl-device-lib-jit-link
                          Enables sycl device library jit link (experimental)
  -fsycl-device-lib=<value>
                          Control inclusion of device libraries into device binary linkage. Valid arguments are libc, libm-fp32, libm-fp64, libimf-fp32, libimf-fp64, libimf-bf16, all
  -fsycl-device-obj=<value>
                          Specify format of device code stored in the resulting object. Valid values are: spirv, llvmir (default)
  -fsycl-device-only      Compile SYCL kernels for device
  -fsycl-disable-range-rounding
                          Deprecated: please use -fsycl-range-rounding=disable instead.
  -fsycl-dump-device-code=<value>
                          Dump device code into the user provided directory.
  -fsycl-early-optimizations
                          Enable standard optimization pipeline for SYCL device compiler
  -fsycl-embed-ir         Embed LLVM IR for runtime kernel fusion
  -fsycl-enable-function-pointers
                          Experimental Feature: Enables function pointers and support for virtual functions for DPC++ kernels and device functions.
  -fsycl-esimd-force-stateless-mem
                          Enforce using stateless memory accesses. Convert stateful accesses via SYCL accessors to stateless within ESIMD kernels. Enabled by default.
  -fsycl-exp-range-rounding
                          Use experimental range rounding.
  -fsycl-explicit-simd    Enable SYCL explicit SIMD extension. (deprecated)
  -fsycl-footer-path=<value>
                          Specify the location of the temporary source file with the included integration footer.
  -fsycl-force-inline-kernel-lambda
                          Allow force inline SYCL kernels lambda in entry point
  -fsycl-force-target=<value>
                          Force the usage of the given triple when extracting device code from any given objects on the command line
  -fsycl-fp32-prec-sqrt   SYCL only. Specify that single precision floating-point sqrt is correctly rounded.
  -fsycl-fp64-conv-emu    Enable fp64 partial emulation for kernels with only fp64 conversion operations and no fp64 computation operations (requires Intel GPU backend supporting fp64 partial emulation).
  -fsycl-help=<value>     Emit help information from the related offline compilation tool. Valid values: all, fpga, gen, x86_64.
  -fsycl-help             Emit help information from all of the offline compilation tools
  -fsycl-host-compiler-options=<value>
                          When performing the host compilation with -fsycl-host-compiler specified, use the given options during that compile. Options are expected to be a quoted list of space separated options.
  -fsycl-host-compiler=<value>
                          Specify C++ compiler binary to perform host compilation with during SYCL offload compiles.
  -fsycl-id-queries-fit-in-int
                          Assume that SYCL ID queries fit within MAX_INT.
  -fsycl-instrument-device-code
                          Add Instrumentation and Tracing Technology (ITT) instrumentation intrinsics calls (experimental)
  -fsycl-libspirv-path=<value>
                          Path to libspirv library
  -fsycl-link=<value>     Generate partially linked device and host object to be used at various stages of compilation
  -fsycl-link             Generate partially linked device object to be used with the host link
  -fsycl-max-parallel-link-jobs=<value>
                          Experimental feature: Controls the maximum parallelism of actions performed on SYCL device code post-link, i.e. the generation of SPIR-V device images or AOT compilation of each device image.
  -fsycl-optimize-non-user-code
                          Option used in conjunction with -O0 to optimize SYCL framework utility functions and leave user's kernel code unoptimized. (experimental)
  -fsycl-pstl-offload=<value>
                          Enable offloading of C++ standard parallel algorithms. Valid arguments are gpu and cpu.
  -fsycl-pstl-offload     Enable offloading of C++ standard parallel algorithms.
  -fsycl-range-rounding=<value>
                          Options for range rounding of SYCL range kernels: disable (do not generate range rounded kernels) force (only generate range rounded kernels) on (generate range rounded kernels as well as unrounded kernels). Default is 'on'
  -fsycl-remove-unused-external-funcs
                          Allow removal of unused `SYCL_EXTERNAL` functions (default)
  -fsycl-targets=<value>  Specify comma-separated list of triples that correspond to SYCL offloading targets to be supported. Valid triples include spir64_gen, spir64_x86_64, spir64_fpga and spir64
  -fsycl-unnamed-lambda   Allow unnamed SYCL lambda kernels
  -fsycl-use-bitcode      Use LLVM bitcode instead of SPIR-V in fat objects (deprecated)
  -fsycl                  Enables SYCL kernels compilation for device
  -fsyntax-only           Run the preprocessor, parser and semantic analysis stages
  -fsystem-debug          Emit debug information for declarations in system headers
  -fsystem-module         Build this module as a system module. Only used with -emit-module
  -ftarget-compile-fast   Experimental feature: Reduce target compilation time, with potential runtime performance trade-off.
  -ftarget-export-symbols Expose exported symbols in a generated target library to allow for visibilty to other modules.
  -ftarget-register-alloc-mode=<value>
                          Specify a register allocation mode for specific hardware for use by supported target backends.
  -ftemplate-backtrace-limit=<value>
                          Set the maximum number of entries to print in a template instantiation backtrace (0 = no limit)
  -ftemplate-depth=<value>
                          Set the maximum depth of recursive template instantiation
  -ftest-coverage         Produce gcov notes files (*.gcno)
  -fthin-link-bitcode=<value>
                          Write minimized bitcode to <file> for the ThinLTO thin link only
  -fthinlto-index=<value> Perform ThinLTO importing using provided function summary index
  -ftime-report=<value>   (For new pass manager) 'per-pass': one report for each pass; 'per-pass-run': one report for each pass invocation
  -ftime-trace-granularity=<value>
                          Minimum time granularity (in microseconds) traced by time profiler
  -ftime-trace=<value>    Similar to -ftime-trace. Specify the JSON file or a directory which will contain the JSON file
  -ftime-trace            Turn on time profiler. Generates JSON file based on output filename.
  -ftrap-function=<value> Issue call to specified function rather than a trap instruction
  -ftrapv-handler=<function name>
                          Specify the function to be called on overflow
  -ftrapv                 Trap on integer overflow
  -ftrigraphs             Process trigraph sequences
  -ftrivial-auto-var-init-max-size=<value>
                          Stop initializing trivial automatic stack variables if var size exceeds the specified number of instances (in bytes)
  -ftrivial-auto-var-init-stop-after=<value>
                          Stop initializing trivial automatic stack variables after the specified number of instances
  -ftrivial-auto-var-init=<value>
                          Initialize trivial automatic stack variables. Defaults to 'uninitialized'
  -ftz                    Enable flush denormal results to zero
  -funified-lto           Use the unified LTO pipeline
  -funique-basic-block-section-names
                          Use unique names for basic block sections (ELF Only)
  -funique-internal-linkage-names
                          Uniqueify Internal Linkage Symbol Names by appending the MD5 hash of the module path
  -funroll-loops          Turn on loop unroller
  -funsafe-math-optimizations
                          Allow unsafe floating-point math optimizations which may decrease precision
  -fuse-complex-intrinsics
                          Determines whether to lower _Complex operations to LLVM complex intrinsics
  -fuse-cuid=<value>      Method to generate ID's for compilation units for single source offloading languages CUDA and HIP: 'hash' (ID's generated by hashing file path and command line options) | 'random' (ID's generated as random numbers) | 'none' (disabled). Default is 'hash'. This option will be overridden by option '-cuid=[ID]' if it is specified.
  -fuse-line-directives   Use #line in preprocessed output
  -fvalidate-ast-input-files-content
                          Compute and store the hash of input files used to build an AST. Files with mismatching mtime's are considered valid if both contents is identical
  -fvec-allow-scalar-stores
                          When this option is set, an explicit simd loop (for example, one set with #pragma omp simd) will be vectorized even if it contains a store to a scalar variable that is not marked as private, lastprivate, or reduction.
  -fvec-peel-loops        Enable peel loop vectorization.
  -fvec-remainder-loops   Enable remainder loop vectorization.
  -fvec-with-mask         Enable vectorization for short trip-count loops with masking.
  -fveclib=<value>        Use the given vector functions library
  -fvectorize             Enable the loop vectorization passes
  -fverbose-asm           Generate verbose assembly output
  -fverify-intermediate-code
                          Enable verification of LLVM IR
  -fvirtual-function-elimination
                          Enables dead virtual function elimination optimization. Requires -flto=full
  -fvisibility-dllexport=<value>
                          The visibility for dllexport definitions. If Keep is specified the visibility is not adjusted [-fvisibility-from-dllstorageclass]
  -fvisibility-externs-dllimport=<value>
                          The visibility for dllimport external declarations. If Keep is specified the visibility is not adjusted [-fvisibility-from-dllstorageclass]
  -fvisibility-externs-nodllstorageclass=<value>
                          The visibility for external declarations without an explicit DLL storage class. If Keep is specified the visibility is not adjusted [-fvisibility-from-dllstorageclass]
  -fvisibility-from-dllstorageclass
                          Override the visibility of globals based on their final DLL storage class.
  -fvisibility-global-new-delete-hidden
                          Give global C++ operator new and delete declarations hidden visibility
  -fvisibility-global-new-delete=<value>
                          The visibility for global C++ operator new and delete declarations. If 'source' is specified the visibility is not adjusted
  -fvisibility-inlines-hidden-static-local-var
                          When -fvisibility-inlines-hidden is enabled, static variables in inline C++ member functions will also be given hidden visibility by default
  -fvisibility-inlines-hidden
                          Give inline C++ member functions hidden visibility by default
  -fvisibility-ms-compat  Give global types 'default' visibility and global functions and variables 'hidden' visibility by default
  -fvisibility-nodllstorageclass=<value>
                          The visibility for definitions without an explicit DLL storage class. If Keep is specified the visibility is not adjusted [-fvisibility-from-dllstorageclass]
  -fvisibility=<value>    Set the default symbol visibility for all global definitions
  -fwasm-exceptions       Use WebAssembly style exceptions
  -fwhole-program-vtables Enables whole-program vtable optimization. Requires -flto
  -fwrapv                 Treat signed integer overflow as two's complement
  -fwritable-strings      Store string literals as writable data
  -fxl-pragma-pack        Enable IBM XL #pragma pack handling
  -fxray-always-emit-customevents
                          Always emit __xray_customevent(...) calls even if the containing function is not always instrumented
  -fxray-always-emit-typedevents
                          Always emit __xray_typedevent(...) calls even if the containing function is not always instrumented
  -fxray-always-instrument=<value>
                          DEPRECATED: Filename defining the whitelist for imbuing the 'always instrument' XRay attribute.
  -fxray-attr-list=<value>
                          Filename defining the list of functions/types for imbuing XRay attributes.
  -fxray-function-groups=<value>
                          Only instrument 1 of N groups
  -fxray-ignore-loops     Don't instrument functions with loops unless they also meet the minimum function size
  -fxray-instruction-threshold=<value>
                          Sets the minimum function size to instrument with XRay
  -fxray-instrumentation-bundle=<value>
                          Select which XRay instrumentation points to emit. Options: all, none, function-entry, function-exit, function, custom. Default is 'all'.  'function' includes both 'function-entry' and 'function-exit'.
  -fxray-instrument       Generate XRay instrumentation sleds on function entry and exit
  -fxray-link-deps        Link XRay runtime library when -fxray-instrument is specified (default)
  -fxray-modes=<value>    List of modes to link in by default into XRay instrumented binaries.
  -fxray-never-instrument=<value>
                          DEPRECATED: Filename defining the whitelist for imbuing the 'never instrument' XRay attribute.
  -fxray-selected-function-group=<value>
                          When using -fxray-function-groups, select which group of functions to instrument. Valid range is 0 to fxray-function-groups - 1
  -fzero-call-used-regs=<value>
                          Clear call-used registers upon function return (AArch64/x86 only)
  -fzvector               Enable System z vector language extension
  -F <value>              Add directory to framework include search path
  --gcc-install-dir=<value>
                          Use GCC installation in the specified directory. The directory ends with path components like 'lib{,32,64}/gcc{,-cross}/$triple/$version'. Note: executables (e.g. ld) used by the compiler are not overridden by the selected GCC installation
  --gcc-toolchain=<value> Specify a directory where Clang can find 'include' and 'lib{,32,64}/gcc{,-cross}/$triple/$version'. Clang will use the GCC installation with the largest version
  --gcc-triple=<value>    Search for the GCC installation with the specified triple.
  -gcodeview-command-line Emit compiler path and command line into CodeView debug information
  -gcodeview-ghash        Emit type record hashes in a .debug$H section
  -gcodeview              Generate CodeView debug information
  -gdwarf-2               Generate source-level debug information with dwarf version 2
  -gdwarf-3               Generate source-level debug information with dwarf version 3
  -gdwarf-4               Generate source-level debug information with dwarf version 4
  -gdwarf-5               Generate source-level debug information with dwarf version 5
  -gdwarf32               Enables DWARF32 format for ELF binaries, if debug information emission is enabled.
  -gdwarf64               Enables DWARF64 format for ELF binaries, if debug information emission is enabled.
  -gdwarf                 Generate source-level debug information with the default dwarf version
  -gembed-source          Embed source text in DWARF debug sections
  -gen-reproducer=<value> Emit reproducer on (option: off, crash (default), error, always)
  -gintel-sti             Generate Intel STI debug information
  -gline-directives-only  Emit debug line info directives only
  -gline-tables-only      Emit debug line number tables only
  -global-hoist           Enable external globals are load safe (default)
  -gmodules               Generate debug info with external references to clang modules or precompiled headers
  -gno-codeview-command-line
                          Don't emit compiler path and command line into CodeView debug information
  -gno-embed-source       Restore the default behavior of not embedding source text in DWARF debug sections
  -gno-inline-line-tables Don't emit inline line tables.
  --gpu-bundle-output     Bundle output files of HIP device compilation
  --gpu-instrument-lib=<value>
                          Instrument device library for HIP, which is a LLVM bitcode containing __cyg_profile_func_enter and __cyg_profile_func_exit
  --gpu-max-threads-per-block=<value>
                          Default max threads per block for kernel launch bounds for HIP
  -gpulibc                Link the LLVM C Library for GPUs
  -gsplit-dwarf=<value>   Set DWARF fission mode
  -gstrict-dwarf          Restrict DWARF features to those defined in the specified version, avoiding features from later versions.
  -gz=<value>             DWARF debug sections compression type
  -G <size>               Put objects of at most <size> bytes into small data section (MIPS / Hexagon)
  -g                      Generate source-level debug information
  --help-hidden           Display help for hidden options
  -help                   Display available options
  --hip-device-lib=<value>
                          HIP device library
  --hip-link              Link clang-offload-bundler bundles for HIP
  --hip-path=<value>      HIP runtime installation path, used for finding HIP version and adding HIP include path.
  --hip-version=<value>   HIP version in the format of major.minor.patch
  --hipspv-pass-plugin=<dsopath>
                          path to a pass plugin for HIP to SPIR-V passes.
  --hipstdpar-interpose-alloc
                          Replace all memory allocation / deallocation calls with hipManagedMalloc / hipFree equivalents
  --hipstdpar-path=<value>
                          HIP Standard Parallel Algorithm Acceleration library path, used for finding and implicitly including the library header
  --hipstdpar-prim-path=<value>
                          rocPrim path, required by the HIP Standard Parallel Algorithm Acceleration library, used to implicitly include the rocPrim library
  --hipstdpar-thrust-path=<value>
                          rocThrust path, required by the HIP Standard Parallel Algorithm Acceleration library, used to implicitly include the rocThrust library
  --hipstdpar             Enable HIP acceleration for standard parallel algorithms
  -H                      Show header includes and nesting depth
  -I-                     Restrict all prior -I flags to double-quoted inclusion and remove current directory from include path
  -iapinotes-modules <directory>
                          Add directory to the API notes search path referenced by module name
  -ibuiltininc            Enable builtin #include directories even when -nostdinc is used before or after -ibuiltininc. Using -nobuiltininc after the option disables it
  -idirafter <value>      Add directory to AFTER include search path
  -iframeworkwithsysroot <directory>
                          Add directory to SYSTEM framework search path, absolute paths are relative to -isysroot
  -iframework <value>     Add directory to SYSTEM framework search path
  -imacros <file>         Include macros from file before parsing
  -include-pch <file>     Include precompiled header file
  -include <file>         Include file before parsing
  -index-header-map       Make the next included directory (-I or -F) an indexer header map
  -inline-forceinline     Treat inline routines as forceinline
  -inline-level=<value>   Set function inlining level where: 0 is disable, 1 is inline marked functions and 2 is inline at compilers discretion
  --intel                 Run in Intel Compiler mode
  -ipo                    Enable LTO in 'full' mode
  -ipp-link=<value>       Link Intel(R) IPP libraries in requested manner (static,dynamic,shared)
  -ipp=<value>            Link commonly used Intel(R) Integrated Performace Primitives (Intel(R) IPP) libraries and bring in the associated headers (common,crypto,nonpic,nonpic_crypto)
  -iprefix <dir>          Set the -iwithprefix/-iwithprefixbefore prefix
  -iquote <directory>     Add directory to QUOTE include search path
  -isysroot <dir>         Set the system root directory (usually /)
  -isystem-after <directory>
                          Add directory to end of the SYSTEM include search path
  -isystem <directory>    Add directory to SYSTEM include search path
  -ivfsoverlay-lib <value>
                          Load the virtual filesystem from shared library
  -ivfsoverlay <value>    Overlay the virtual filesystem described by file over the real file system
  -iwithprefixbefore <dir>
                          Set directory to include search path with prefix
  -iwithprefix <dir>      Set directory to SYSTEM include search path with prefix
  -iwithsysroot <directory>
                          Add directory to SYSTEM include search path, absolute paths are relative to -isysroot
  -I <dir>                Add directory to the end of the list of include search paths
  --libomptarget-amdgcn-bc-path=<value>
                          Path to libomptarget-amdgcn bitcode library
  --libomptarget-amdgpu-bc-path=<value>
                          Path to libomptarget-amdgcn bitcode library
  --libomptarget-nvptx-bc-path=<value>
                          Path to libomptarget-nvptx bitcode library
  -L <dir>                Add directory to library search path
  -mabi=quadword-atomics  Enable quadword atomics ABI on AIX (AIX PPC64 only). Uses lqarx/stqcx. instructions.
  -mabicalls              Enable SVR4-style position-independent code (Mips only)
  -maix-shared-lib-tls-model-opt
                          For shared library loaded with the main program, change local-dynamic access(es) to initial-exec access(es) at the function level (AIX 64-bit only).
  -maix-small-local-dynamic-tls
                          Produce a faster access sequence for local-dynamic TLS variables where the offset from the TLS base is encoded as an immediate operand (AIX 64-bit only). This access sequence is not used for variables larger than 32KB.
  -maix-small-local-exec-tls
                          Produce a faster access sequence for local-exec TLS variables where the offset from the TLS base is encoded as an immediate operand (AIX 64-bit only). This access sequence is not used for variables larger than 32KB.
  -maix-struct-return     Return all structs in memory (PPC32 only)
  -malign-branch-boundary=<value>
                          Specify the boundary's size to align branches
  -malign-branch=<value>  Specify types of branches to align
  -malign-double          Align doubles to two words in structs (x86 only)
  -maltivec               Enable AltiVec vector initializer syntax
  -mamdgpu-ieee           Sets the IEEE bit in the expected default floating point  mode register. Floating point opcodes that support exception flag gathering quiet and propagate signaling NaN inputs per IEEE 754-2008. This option changes the ABI. (AMDGPU only)
  -mamdgpu-precise-memory-op
                          Enable precise memory mode (AMDGPU only)
  -mapx-features=<value>  Enable features of APX
  -mapx-inline-asm-use-gpr32
                          Enable use of GPR32 in inline assembly for APX
  -march=<value>          For a list of available architectures for the target use '-mcpu=help'
  -marm64x<value>         Link as a hybrid ARM64X image
  -mauto-arch=<codes>     generate multiple, processor-specific, auto-dispatched code paths for X86 processors, specified by <codes>, if there is a performance benefit
  -mbackchain             Link stack frames through backchain on System Z
  -mbranch-protection=<value>
                          Enforce targets of indirect branches and function returns
  -mbranches-within-32B-boundaries
                          Align selected branches (fused, jcc, jmp) within 32-byte boundary
  -mcabac                 Enable CABAC instructions
  -mcmse                  Allow use of CMSE (Armv8-M Security Extensions)
  -mcode-object-version=<value>
                          Specify code object ABI version. Defaults to 5. (AMDGPU only)
  -mconstructor-aliases   Enable emitting complete constructors and destructors as aliases when possible
  -mcpu=<value>           For a list of available CPUs for the target use '-mcpu=help'
  -mcrbits                Control the CR-bit tracking feature on PowerPC. ``-mcrbits`` (the enablement of CR-bit tracking support) is the default for POWER8 and above, as well as for all other CPUs when optimization is applied (-O2 and above).
  -mcrc                   Allow use of CRC instructions (ARM/Mips only)
  -mcumode                Specify CU wavefront execution mode (AMDGPU only)
  -mdaz-ftz               Globally set the denormals-are-zero (DAZ) and flush-to-zero (FTZ) bits in the floating-point control register on program startup
  -mdebug-line-version=<value>
                          Set debug line version used when generating debug information
  -mdefault-visibility-export-mapping=<value>
                          Mapping between default visibility and export
  -mdouble=<n             Force double to be <n> bits
  -MD                     Write a depfile containing user and system headers
  -meabi <value>          Set EABI type. Default depends on triple)
  -membedded-data         Place constants in the .rodata section instead of the .sdata section even if they meet the -G <size> threshold (MIPS)
  -menable-experimental-extensions
                          Enable use of experimental RISC-V extensions.
  -mexec-model=<value>    Execution model (WebAssembly only)
  -mexecute-only          Disallow generation of data access to code sections (ARM only)
  -mextern-sdata          Assume that externally defined data is in the small data if it meets the -G <size> threshold (MIPS)
  -mfentry                Insert calls to fentry at function entry (x86/SystemZ only)
  -mfix-cmse-cve-2021-35465
                          Work around VLLDM erratum CVE-2021-35465 (ARM only)
  -mfix-cortex-a53-835769 Workaround Cortex-A53 erratum 835769 (AArch64 only)
  -mfix-cortex-a57-aes-1742098
                          Work around Cortex-A57 Erratum 1742098 (ARM only)
  -mfix-cortex-a72-aes-1655431
                          Work around Cortex-A72 Erratum 1655431 (ARM only)
  -mforced-sw-shadow-stack
                          Force using software shadow stack when shadow-stack enabled
  -mfp32                  Use 32-bit floating point registers (MIPS only)
  -mfp64                  Use 64-bit floating point registers (MIPS only)
  -mframe-chain=<value>   Select the frame chain model used to emit frame records (Arm only).
  -mfunction-return=<value>
                          Replace returns with jumps to ``__x86_return_thunk`` (x86 only, error otherwise)
  -MF <file>              Write depfile output from -MMD, -MD, -MM, or -M to <file>
  -mgeneral-regs-only     Generate code which only uses the general purpose registers (AArch64/x86 only)
  -mglobal-merge          Enable merging of globals
  -mgpopt                 Use GP relative accesses for symbols known to be in a small data section (MIPS)
  -mguard=<value>         Enable or disable Control Flow Guard checks and guard tables emission
  -MG                     Add missing headers to depfile
  -mharden-sls=<value>    Select straight-line speculation hardening scope (ARM/AArch64/X86 only). <arg> must be: all, none, retbr(ARM/AArch64), blr(ARM/AArch64), comdat(ARM/AArch64), nocomdat(ARM/AArch64), return(X86), indirect-jmp(X86)
  -mhvx-ieee-fp           Enable Hexagon HVX IEEE floating-point
  -mhvx-length=<value>    Set Hexagon Vector Length
  -mhvx-qfloat            Enable Hexagon HVX QFloat instructions
  -mhvx=<value>           Enable Hexagon Vector eXtensions
  -mhvx                   Enable Hexagon Vector eXtensions
  -miamcu                 Use Intel MCU ABI
  -mignore-xcoff-visibility
                          Not emit the visibility attribute for asm in AIX OS or give all symbols 'unspecified' visibility in XCOFF object file
  --migrate               Run the migrator
  -mincremental-linker-compatible
                          (integrated-as) Emit an object file which can be used with an incremental linker
  -mindirect-branch-cs-prefix
                          Add cs prefix to call and jmp to indirect thunk
  -mindirect-jump=<value> Change indirect jump instructions to inhibit speculation
  -mintrinsic-promote     Force certain functions using intrinsics to promote their architectures and make the intrinsic headers included by default
  -mios-version-min=<value>
                          Set iOS deployment target
  -MJ <value>             Write a compilation database entry per input
  -mlasx                  Enable Loongson Advanced SIMD Extension (LASX).
  -mlink-builtin-bitcode-postopt
                          Link builtin bitcodes after the optimization pipeline
  -mllvm-lto <value>      Additional arguments to forward to LLVM's option processing. Similar to -mllvm, but will also pass the given argument to the LTO step when appropriate.
  -mllvm=<arg>            Alias for -mllvm
  -mllvm <value>          Additional arguments to forward to LLVM's option processing
  -mlocal-sdata           Extend the -G behaviour to object local data (MIPS)
  -mlong-calls            Generate branches with extended addressability, usually via indirect jumps.
  -mlong-double-128       Force long double to be 128 bits
  -mlong-double-64        Force long double to be 64 bits
  -mlong-double-80        Force long double to be 80 bits, padded to 128 bits for storage
  -mlr-for-calls-only     Do not allocate the LR register for general purpose usage, only for calls. (AArch64 only)
  -mlsx                   Enable Loongson SIMD Extension (LSX).
  -mlvi-cfi               Enable only control-flow mitigations for Load Value Injection (LVI)
  -mlvi-hardening         Enable all mitigations for Load Value Injection (LVI)
  -mmacos-version-min=<value>
                          Set macOS deployment target
  -mmadd4                 Enable the generation of 4-operand madd.s, madd.d and related instructions.
  -mmark-bti-property     Add .note.gnu.property with BTI to assembly files (AArch64 only)
  -MMD                    Write a depfile containing user headers
  -mmemops                Enable generation of memop instructions
  -mmlir <value>          Additional arguments to forward to MLIR's option processing
  -mms-bitfields          Set the default structure layout to be compatible with the Microsoft compiler standard
  -mmsa                   Enable MSA ASE (MIPS only)
  -mmt                    Enable MT ASE (MIPS only)
  -MM                     Like -MMD, but also implies -E and writes to stdout by default
  -mno-abicalls           Disable SVR4-style position-independent code (Mips only)
  -mno-amdgpu-precise-memory-op
                          Disable precise memory mode (AMDGPU only)
  -mno-apx-features=<value>
                          Disable features of APX
  -mno-bti-at-return-twice
                          Do not add a BTI instruction after a setjmp or other return-twice construct (Arm/AArch64 only)
  -mno-constructor-aliases
                          Disable emitting complete constructors and destructors as aliases when possible
  -mno-crc                Disallow use of CRC instructions (Mips only)
  -mno-cumode             Specify WGP wavefront execution mode (AMDGPU only)
  -mno-daz-ftz            Do not globally set the denormals-are-zero (DAZ) and flush-to-zero (FTZ) bits in the floating-point control register on program startup
  -mno-embedded-data      Do not place constants in the .rodata section instead of the .sdata if they meet the -G <size> threshold (MIPS)
  -mno-execute-only       Allow generation of data access to code sections (ARM only)
  -mno-extern-sdata       Do not assume that externally defined data is in the small data if it meets the -G <size> threshold (MIPS)
  -mno-fix-cmse-cve-2021-35465
                          Don't work around VLLDM erratum CVE-2021-35465 (ARM only)
  -mno-fix-cortex-a53-835769
                          Don't workaround Cortex-A53 erratum 835769 (AArch64 only)
  -mno-fix-cortex-a57-aes-1742098
                          Don't work around Cortex-A57 Erratum 1742098 (ARM only)
  -mno-fix-cortex-a72-aes-1655431
                          Don't work around Cortex-A72 Erratum 1655431 (ARM only)
  -mno-fmv                Disable function multiversioning
  -mno-forced-sw-shadow-stack
                          Not force using software shadow stack when shadow-stack enabled
  -mno-gather             Disable generation of gather instructions in auto-vectorization(x86 only)
  -mno-global-merge       Disable merging of globals
  -mno-gpopt              Do not use GP relative accesses for symbols known to be in a small data section (MIPS)
  -mno-hvx-ieee-fp        Disable Hexagon HVX IEEE floating-point
  -mno-hvx-qfloat         Disable Hexagon HVX QFloat instructions
  -mno-hvx                Disable Hexagon Vector eXtensions
  -mno-implicit-float     Don't generate implicit floating point or vector instructions
  -mno-incremental-linker-compatible
                          (integrated-as) Emit an object file which cannot be used with an incremental linker
  -mno-lasx               Disable Loongson Advanced SIMD Extension (LASX).
  -mno-local-sdata        Do not extend the -G behaviour to object local data (MIPS)
  -mno-long-calls         Restore the default behaviour of not generating long calls
  -mno-lsx                Disable Loongson SIMD Extension (LSX).
  -mno-lvi-cfi            Disable control-flow mitigations for Load Value Injection (LVI)
  -mno-lvi-hardening      Disable mitigations for Load Value Injection (LVI)
  -mno-madd4              Disable the generation of 4-operand madd.s, madd.d and related instructions.
  -mno-memops             Disable generation of memop instructions
  -mno-movt               Disallow use of movt/movw pairs (ARM only)
  -mno-ms-bitfields       Do not set the default structure layout to be compatible with the Microsoft compiler standard
  -mno-msa                Disable MSA ASE (MIPS only)
  -mno-mt                 Disable MT ASE (MIPS only)
  -mno-neg-immediates     Disallow converting instructions with negative immediates to their negation or inversion.
  -mno-nvj                Disable generation of new-value jumps
  -mno-nvs                Disable generation of new-value stores
  -mno-outline-atomics    Don't generate local calls to out-of-line atomic operations
  -mno-outline            Disable function outlining (AArch64 only)
  -mno-packets            Disable generation of instruction packets
  -mno-pic-data-is-text-relative
                          Don't assume data segments are relative to text segment
  -mno-regnames           Use only register numbers when writing assembly output
  -mno-relax              Disable linker relaxation
  -mno-restrict-it        Allow generation of complex IT blocks.
  -mno-save-restore       Disable using library calls for save and restore
  -mno-scalar-strict-align
                          Allow scalar memory accesses to be unaligned (RISC-V only)
  -mno-scatter            Disable generation of scatter instructions in auto-vectorization(x86 only)
  -mno-seses              Disable speculative execution side effect suppression (SESES)
  -mno-stack-arg-probe    Disable stack probes which are enabled by default
  -mno-strict-align       Allow memory accesses to be unaligned (AArch64/LoongArch/RISC-V only)
  -mno-tgsplit            Disable threadgroup split execution mode (AMDGPU only)
  -mno-tls-direct-seg-refs
                          Disable direct TLS access through segment registers
  -mno-tocdata=<value>    Specifies a list of variables to be exempt from the TOC datatransformation.
  -mno-tocdata            This is the default. TOC data transformation is not applied to anyvariables. Only variables specified explicitly in -mtocdata= willhave the TOC data transformation.
  -mno-unaligned-access   Force all memory accesses to be aligned (AArch32/MIPSr6 only)
  -mno-unaligned-symbols  Expect external char-aligned symbols to be without ABI alignment (SystemZ only)
  -mno-vector-strict-align
                          Allow vector memory accesses to be unaligned (RISC-V only)
  -mno-wavefrontsize64    Specify wavefront size 32 mode (AMDGPU only)
  -mnocrc                 Disallow use of CRC instructions (ARM only)
  -mnop-mcount            Generate mcount/__fentry__ calls as nops. To activate they need to be patched in.
  -mnvj                   Enable generation of new-value jumps
  -mnvs                   Enable generation of new-value stores
  -module-dependency-dir <value>
                          Directory to dump module dependencies to
  -module-file-info       Provide information about a particular module file
  -momit-leaf-frame-pointer
                          Omit frame pointer setup for leaf functions
  -moutline-atomics       Generate local calls to out-of-line atomic operations
  -moutline               Enable function outlining (AArch64 only)
  -mpacked-stack          Use packed stack layout (SystemZ only).
  -mpackets               Enable generation of instruction packets
  -mpad-max-prefix-size=<value>
                          Specify maximum number of prefixes to use for padding
  -mpic-data-is-text-relative
                          Assume data segments are relative to text segment
  -mprefer-vector-width=<value>
                          Specifies preferred vector width for auto-vectorization. Defaults to 'none' which allows target specific decisions.
  -mprintf-kind=<value>   Specify the printf lowering scheme (AMDGPU only), allowed values are "hostcall"(printing happens during kernel execution, this scheme relies on hostcalls which require system to support pcie atomics) and "buffered"(printing happens after all kernel threads exit, this uses a printf buffer and does not rely on pcie atomic support)
  -MP                     Create phony target for each dependency (other than main file)
  -mqdsp6-compat          Enable hexagon-qdsp6 backward compatibility
  -MQ <value>             Specify name of main file output to quote in depfile
  -mrecip=<value>         Control use of approximate reciprocal and reciprocal square root instructions followed by <n> iterations of Newton-Raphson refinement. <value> = ( ['!'] ['vec-'] ('rcp'|'sqrt') [('h'|'s'|'d')] [':'<n>] ) | 'all' | 'default' | 'none'
  -mrecip                 Equivalent to '-mrecip=all'
  -mrecord-mcount         Generate a __mcount_loc section entry for each __fentry__ call.
  -mregnames              Use full register names when writing assembly output
  -mrelax-all             (integrated-as) Relax all machine instructions
  -mrelax                 Enable linker relaxation
  -mrestrict-it           Disallow generation of complex IT blocks. It is off by default.
  -mrtd                   Make StdCall calling convention the default
  -mrvv-vector-bits=<value>
                          Specify the size in bits of an RVV vector register
  -msave-restore          Enable using library calls for save and restore
  -mscalar-strict-align   Force all scalar memory accesses to be aligned (RISC-V only)
  -mseses                 Enable speculative execution side effect suppression (SESES). Includes LVI control flow integrity mitigations
  -msign-return-address=<value>
                          Select return address signing scope
  -msimd=<value>          Select the SIMD extension(s) to be enabled in LoongArch either 'none', 'lsx', 'lasx'.
  -mskip-rax-setup        Skip setting up RAX register when passing variable arguments (x86 only)
  -msmall-data-limit=<value>
                          Put global and static data smaller than the limit into a special section
  -msoft-float            Use software floating point
  -msse2avx               Specify that the assembler should encode SSE instructions with VEX prefix
  -mstack-alignment=<value>
                          Set the stack alignment
  -mstack-arg-probe       Enable stack probes
  -mstack-probe-size=<value>
                          Set the stack probe size
  -mstack-protector-guard-offset=<value>
                          Use the given offset for addressing the stack-protector guard
  -mstack-protector-guard-reg=<value>
                          Use the given reg for addressing the stack-protector guard
  -mstack-protector-guard-symbol=<value>
                          Use the given symbol for addressing the stack-protector guard
  -mstack-protector-guard=<value>
                          Use the given guard (global, tls) for addressing the stack-protector guard
  -mstackrealignext       Force realign the stack at entry to every external function
  -mstackrealign          Force realign the stack at entry to every function
  -mstrict-align          Force all memory accesses to be aligned (AArch64/LoongArch/RISC-V only)
  -msve-vector-bits=<value>
                          Specify the size in bits of an SVE vector register. Defaults to the vector length agnostic value of "scalable". (AArch64 only)
  -msvr4-struct-return    Return small structs in registers (PPC32 only)
  -mtargetos=<value>      Set the deployment target to be the specified OS and OS version
  -mtgsplit               Enable threadgroup split execution mode (AMDGPU only)
  -mthread-model <value>  The thread model to use. Defaults to 'posix')
  -mtls-dialect=<value>   Which thread-local storage dialect to use for dynamic accesses of TLS variables
  -mtls-direct-seg-refs   Enable direct TLS access through segment registers (default)
  -mtls-size=<value>      Specify bit size of immediate TLS offsets (AArch64 ELF only): 12 (for 4KB) | 24 (for 16MB, default) | 32 (for 4GB) | 48 (for 256TB, needs -mcmodel=large)
  -mtocdata=<value>       Specifies a list of variables to which the TOC data transformationwill be applied.
  -mtocdata               All suitable variables will have the TOC data transformation applied
  -mtp=<value>            Thread pointer access method. For AArch32: 'soft' uses a function call, or 'tpidrurw', 'tpidruro' or 'tpidrprw' use the three CP15 registers. 'cp15' is an alias for 'tpidruro'. For AArch64: 'tpidr_el0', 'tpidr_el1', 'tpidr_el2', 'tpidr_el3' or 'tpidrro_el0' use the five system registers. 'elN' is an alias for 'tpidr_elN'.
  -mtune=<value>          Only supported on AArch64, PowerPC, RISC-V, SPARC, SystemZ, and X86
  -MT <value>             Specify name of main file output in depfile
  -munaligned-access      Allow memory accesses to be unaligned (AArch32/MIPSr6 only)
  -munaligned-symbols     Expect external char-aligned symbols to be without ABI alignment (SystemZ only)
  -munsafe-fp-atomics     Enable generation of unsafe floating point atomic instructions. May generate more efficient code, but may not respect rounding and denormal modes, and may give incorrect results for certain memory destinations. (AMDGPU only)
  -mvector-strict-align   Force all vector memory accesses to be aligned (RISC-V only)
  -mvevpu                 Emit VPU instructions for VE
  -MV                     Use NMake/Jom format for the depfile
  -mwavefrontsize64       Specify wavefront size 64 mode (AMDGPU only)
  -mxcoff-build-id=<0xHEXSTRING>
                          On AIX, request creation of a build-id string, "0xHEXSTRING", in the string table of the loader section inside the linked binary
  -mxcoff-roptr           Place constant objects with relocatable address values in the RO data section and add -bforceimprw to the linker flags (AIX only)
  -mzos-hlq-clang=<ClangHLQ>
                          High level qualifier for z/OS C++RT side deck datasets
  -mzos-hlq-csslib=<CsslibHLQ>
                          High level qualifier for z/OS CSSLIB dataset
  -mzos-hlq-le=<LeHLQ>    High level qualifier for z/OS Language Environment datasets
  -mzos-sys-include=<SysInclude>
                          Path to system headers on z/OS
  -M                      Like -MD, but also implies -E and writes to stdout by default
  -no-ansi-alias          disable use of ANSI aliasing rules optimizations
  --no-cuda-include-ptx=<value>
                          Do not include PTX for the following GPU architecture (e.g. sm_35) or 'all'. May be specified more than once.
  --no-cuda-version-check Don't error out if the detected version of the CUDA install is too low for the requested CUDA gpu architecture.
  --no-default-config     Disable loading default configuration files
  -no-fma                 Disable the combining of floating point multiples and add/subtract operations.
  -no-ftz                 Disable flush denormal results to zero
  -no-global-hoist        Disable external globals are load safe
  --no-gpu-bundle-output  Do not bundle output files of HIP device compilation
  -no-hip-rt              Do not link against HIP runtime libraries
  -no-intel-lib=<value>   Restrict linking of Intel specific libraries. Valid arguments are libirc, libimf, libirng, libsvml
  -no-intel-lib           Restrict linking of all Intel specific libraries.
  -no-ipo                 Disable LTO mode (default)
  --no-offload-arch=<value>
                          Remove CUDA/HIP offloading device architecture (e.g. sm_35, gfx906) from the list of devices to compile for. 'all' resets the list to its default value.
  --no-offload-new-driver Don't Use the new driver for offloading compilation.
  -no-parallel-source-info
                          Disable emission of source location information for parallel code generation.
  -no-sox                 Disable saving of compiler options in the executable
  --no-system-header-prefix=<prefix>
                          Treat all #include paths starting with <prefix> as not including a system header.
  -no-vec                 Disable the loop vectorization passes
  --no-wasm-opt           Disable the wasm-opt optimizer
  -nobuiltininc           Disable builtin #include directories
  -nogpuinc               Do not add include paths for CUDA/HIP and do not include the default CUDA/HIP wrapper headers
  -nogpulib               Do not link device library for CUDA/HIP device compilation
  -nohipwrapperinc        Do not include the default HIP wrapper headers and include paths
  -nolib-inline           disable inline expansion of intrinsic functions
  -nolibsycl              Do not link SYCL runtime library
  -nostdinc++             Disable standard #include directories for the C++ standard library
  --nvptx-arch-tool=<value>
                          Tool used for detecting NVIDIA GPU arch in the system.
  -ObjC++                 Treat source input files as Objective-C++ inputs
  -objcmt-allowlist-dir-path=<value>
                          Only modify files with a filename contained in the provided directory path
  -objcmt-atomic-property Make migration to 'atomic' properties
  -objcmt-migrate-all     Enable migration to modern ObjC
  -objcmt-migrate-annotation
                          Enable migration to property and method annotations
  -objcmt-migrate-designated-init
                          Enable migration to infer NS_DESIGNATED_INITIALIZER for initializer methods
  -objcmt-migrate-instancetype
                          Enable migration to infer instancetype for method result type
  -objcmt-migrate-literals
                          Enable migration to modern ObjC literals
  -objcmt-migrate-ns-macros
                          Enable migration to NS_ENUM/NS_OPTIONS macros
  -objcmt-migrate-property-dot-syntax
                          Enable migration of setter/getter messages to property-dot syntax
  -objcmt-migrate-property
                          Enable migration to modern ObjC property
  -objcmt-migrate-protocol-conformance
                          Enable migration to add protocol conformance on classes
  -objcmt-migrate-readonly-property
                          Enable migration to modern ObjC readonly property
  -objcmt-migrate-readwrite-property
                          Enable migration to modern ObjC readwrite property
  -objcmt-migrate-subscripting
                          Enable migration to modern ObjC subscripting
  -objcmt-ns-nonatomic-iosonly
                          Enable migration to use NS_NONATOMIC_IOSONLY macro for setting property's 'atomic' attribute
  -objcmt-returns-innerpointer-property
                          Enable migration to annotate property with NS_RETURNS_INNER_POINTER
  -objcmt-whitelist-dir-path=<value>
                          Alias for -objcmt-allowlist-dir-path
  -ObjC                   Treat source input files as Objective-C inputs
  -object-file-name=<file>
                          Set the output <file> for debug infos
  --offload-arch=<value>  Specify an offloading device architecture for CUDA, HIP, or OpenMP. (e.g. sm_35). If 'native' is used the compiler will detect locally installed architectures. For HIP offloading, the device architecture can be followed by target ID features delimited by a colon (e.g. gfx908:xnack+:sramecc-). May be specified more than once.
  --offload-compress      Compress offload device binaries (HIP only)
  --offload-device-only   Only compile for the offloading device.
  --offload-host-device   Compile for both the offloading host and device (default).
  --offload-host-only     Only compile for the offloading host.
  --offload-link          Use the new offloading linker to perform the link job.
  --offload-new-driver    Use the new driver for offloading compilation.
  --offload=<value>       Specify comma-separated list of offloading target triples (CUDA and HIP only)
  -o <file>               Write output to <file>
  -parallel-source-info=<value>
                          Emit source location information for parallel code generation with OpenMP and auto-parallelization.
  -pch-use <file>         Include precompiled header file
  -pc <value>             Initialize X87 floating point precision to single, double or double extended. Valid values of 32, 64 and 80
  -pedantic               Warn on language extensions
  -pg                     Enable mcount instrumentation
  -pipe                   Use pipes between commands, when possible
  --precompile            Only precompile the input
  --pretty-sgf            Emit pretty printed symbol graphs
  -print-diagnostic-options
                          Print all of Clang's warning options
  -print-effective-triple Print the effective target triple
  -print-enabled-extensions
                          Print the extensions enabled by the given target and -march/-mcpu options. (AArch64 and RISC-V only)
  -print-file-name=<file> Print the full library path of <file>
  -print-ivar-layout      Enable Objective-C Ivar layout bitmap print trace
  -print-libgcc-file-name Print the library path for the currently used compiler runtime library ("libgcc.a" or "libclang_rt.builtins.*.a")
  -print-library-module-manifest-path
                          Print the path for the C++ Standard library module manifest
  -print-multi-flags-experimental
                          Print the flags used for selecting multilibs (experimental)
  -print-prog-name=<name> Print the full program path of <name>
  -print-resource-dir     Print the resource directory pathname
  -print-rocm-search-dirs Print the paths used for finding ROCm installation
  -print-runtime-dir      Print the directory pathname containing Clang's runtime libraries
  -print-search-dirs      Print the paths used for finding libraries and programs
  -print-supported-cpus   Print supported cpu models for the given target (if target is not specified, it will print the supported cpus for the default target)
  -print-supported-extensions
                          Print supported -march extensions (RISC-V, AArch64 and ARM only)
  -print-target-triple    Print the normalized target triple
  -print-targets          Print the registered targets
  -pthread                Support POSIX threads in generated code
  --ptxas-path=<value>    Path to ptxas (used for compiling CUDA code)
  -P                      Disable linemarker output in -E mode
  -p                      Enable mcount instrumentation with prof
  -qactypes               Enable compile and link support for the Algorithmic C Data-types (AC types)
  -qdaal=<value>          Link Intel(R) Data Analytics Acceleration Library (Intel(R) DAAL) libraries and bring in the associated headers (parallel)
  -qipp-link=<value>      Link Intel(R) IPP libraries in requested manner (static,dynamic,shared)
  -qipp=<value>           Link commonly used Intel(R) Integrated Performace Primitives (Intel(R) IPP) libraries and bring in the associated headers (common,crypto,nonpic,nonpic_crypto)
  -qmkl-ilp64=<value>     Link commonly used Intel(R) Math Kernel ILP64 Variant Library (Intel(R) MKL) and bring in the associated headers (parallel,sequential,cluster)("cluster" is not supported in DPC++)
  -qmkl-sycl-impl=<value> Limit linking of SYCL-specific implementations of the Intel(R) Math Kernel Library to specified in argument. Valid arguments: blas, lapack, dft, sparse, rng, stats, vm.
  -qmkl=<value>           Link commonly used Intel(R) Math Kernel Library (Intel(R) MKL) and bring in the associated headers (parallel,sequential,cluster)("cluster" is not supported in DPC++)
  -qno-actypes            Disable the compile and link support for the Algorithmic C Data-types (AC types)
  -qno-openmp             Disable OpenMP support
  -qno-opt-dynamic-align  Disable peeling to optimize alignment for vectorization.
  -qno-opt-jump-tables    Do not use jump tables for lowering switches
  -qno-opt-matmul         Disables compiler-generated Matrix Multiply (matmul) library call
  -qno-opt-mem-layout-trans
                          Disable memory layout transformations
  -qno-opt-multiple-gather-scatter-by-shuffles
                          Disables the optimization for multiple adjacent gather/scatter type vector memory references
  -qno-opt-prefetch       Disable prefetching.
  -Qn                     Do not emit metadata containing compiler name and version
  -qopenmp-link=<value>   Choose whether to link with the static or dynamic OpenMP libraries. Default is dynamic.
  -qopenmp-simd           Emit OpenMP code only for SIMD-based constructs.
  -qopenmp-stubs          enables the user to compile OpenMP programs in sequential mode. The OpenMP directives are ignored and a stub OpenMP library is linked.
  -qopenmp-threadprivate=<value>
                          Choose which threadprivate implementation to use: compat or legacy.
  -qopenmp                Parse OpenMP pragmas and generate parallel code.
  -qopt-assume-no-loop-carried-dep=<value>
                          Set a level of performance tuning for loops.  0 - The compiler does not assume there is loop-carried dependencies (default).  1 - Assume there are no loop-carried dependencies for innermost loops.  2 - Assume there are no loop-carried dependencies for all loop levels.
  -qopt-dword-index-for-array-of-structs=<value>
                          When specified allows the compiler to use dword indexes to access elements of arrays of structs which in size do not exceed val bytes. The arrays in question should contain no more than INT_MAX / sizeof(element) elements. Allowed values for val are: 16, 32, default is 16.
  -qopt-dynamic-align     Enable peeling to optimize alignment for vectorization.
  -qopt-for-throughput=<value>
                          Optimize for throughput performance, assuming multiple jobs are running.  The memory optimizations for single job versus multiple jobs can be tuned in different ways by the compiler. Valid arguments: multi-job, single-job
  -qopt-jump-tables       Control the generation of jump tables
  -qopt-matmul            Enables compiler-generated Matrix Multiply (matmul) library call
  -qopt-mem-layout-trans=<value>
                          Control the level of memory layout transformations performed by the compiler
  -qopt-multiple-gather-scatter-by-shuffles
                          Enables the optimization for multiple adjacent gather/scatter type vector memory references
  -qopt-prefetch-distance=<value>
                          Specify the prefetch distance to be used for compiler generated prefetches inside loops. Value indicates distance from memory to L2 cache.
  -qopt-prefetch-loads-only
                          Only insert prefetches based on the loads inside the loop. Stores are ignored.
  -qopt-prefetch=<value>  Enable levels of prefetch insertion, where 0 disables.  Values of 1 - 5 are available.  Default is 2.
  -qopt-prefetch          Enable prefetch insertion.  Same as -qopt-prefetch=2.
  -qopt-report-file=<value>
                          Specify the filename or output stream (stdout, stderr) for the generated optimization report
  -qopt-report-names=<value>
                          Specifies whether mangled or unmangled names should appear in the optimization report.
  -qopt-report-phase=<value>
                          Specify one or more phases for which optimization reports are generated
  -qopt-report-stdout     Specify the generated optimization report should be directed to stdout
  -qopt-report=<value>    Generate an optimization report, min, med or max.
  -qopt-streaming-stores=<value>
                          Specifies whether streaming stores are generated.
  -qopt-zmm-usage=<value> Specifies the level of zmm registers usage, low or high
  -Qoption,<arg>           Qoption,<tool>,<args> to pass the comma separated arguments to the <tool>; <tool> can be asm for assembler (or) link/ld for linker (or) preprocessor for preprocessor (or) compiler for compiler
  -qoverride-limits       enables the user to skip throttling of loops in framework and DD.
  -qtbb                   Link Intel(R) Threading Building Blocks (Intel(R) TBB) libraries and bring in the associated headers
  -Qunused-arguments      Don't emit warning for unused driver arguments
  -Qy                     Emit metadata containing compiler name and version
  -regcall4               Set __regcall4 as a default calling convention to respect __regcall ABI v.4
  -regcall                Set __regcall as a default calling convention
  -relocatable-pch        Whether to build a relocatable precompiled header
  -reuse-exe=<exe>        Speed up FPGA aoc compile if the device code in <exe> is unchanged.
  -rewrite-legacy-objc    Rewrite Legacy Objective-C source to C++
  -rewrite-objc           Rewrite Objective-C source to C++
  --rocm-device-lib-path=<value>
                          ROCm device library path. Alternative to rocm-path.
  --rocm-path=<value>     ROCm installation path, used for finding and automatically linking required bitcode libraries.
  -Rpass-analysis=<value> Report transformation analysis from optimization passes whose name matches the given POSIX regular expression
  -Rpass-missed=<value>   Report missed transformations by optimization passes whose name matches the given POSIX regular expression
  -Rpass=<value>          Report transformations performed by optimization passes whose name matches the given POSIX regular expression
  -rtlib=<value>          Compiler runtime library to use
  -R<remark>              Enable the specified remark
  -save-stats=<value>     Save llvm statistics.
  -save-stats             Save llvm statistics.
  -save-temps=<value>     Save intermediate compilation results. <arg> can be set to 'cwd' for current working directory, or 'obj' which will save temporary files in the same directory as the final output file
  -save-temps             Alias for --save-temps=cwd
  -serialize-diagnostics <value>
                          Serialize compiler diagnostics to a file
  -shared-intel           link Intel provided libraries dynamically
  -shared-libsan          Dynamically link the sanitizer runtime
  -sox=<value>            Enable saving of compiler options, version and additional information in the executable.  Use -no-sox to disable (DEFAULT). Valid arguments: profile - Includes data when profile was used for functions that were compiled with PGO enabling options such as -fprofile-use and -fprofile-instr-use, inline - Includes a list of the functions that were inlined in each object, secure - Strip out directory names and options that use them.
  -sox                    Enable saving of compiler options in the executable
  --start-no-unused-arguments
                          Don't emit warnings about unused arguments for the following arguments
  -static-intel           link Intel provided libraries statically
  -static-libsan          Statically link the sanitizer runtime (Not supported for ASan, TSan or UBSan on darwin)
  -static-openmp          Use the static host OpenMP runtime while linking.
  -std=<value>            Language standard to compile for
  -stdlib++-isystem <directory>
                          Use directory as the C++ standard library include path
  -stdlib=<value>         C++ standard library to use
  -strict-ansi            strict ANSI conformance dialect
  -sycl-std=<value>       SYCL language standard to compile for.
  --symbol-graph-dir=<value>
                          Directory in which to emit symbol graphs.
  --system-header-prefix=<prefix>
                          Treat all #include paths starting with <prefix> as including a system header.
  -S                      Only run preprocess and compilation steps
  --target=<value>        Generate code for the given target
  -tbb                    Link Intel(R) Threading Building Blocks (Intel(R) TBB) libraries and bring in the associated headers
  -time                   Time individual commands
  -traceback              Generate traceback debug information
  -traditional-cpp        Enable some traditional CPP emulation
  -trigraphs              Process trigraph sequences
  -T <script>             Specify <script> as linker script
  -undef                  undef all system defines
  -unroll<value>          Set maximum number of times to unroll loops.  Omit n to use default heuristics.  Use 0 to disable the loop unroller.
  -unwindlib=<value>      Unwind library to use
  -use-msasm              enables the use of blocks and entire functions of assembly code within a C or C++ file
  -U <macro>              Undefine macro <macro>
  -vec-threshold<value>   Sets a threshold for the vectorization of loops based on the probability of profitable execution of the vectorized loop in parallel.
  -vecabi=<value>         Determines which vector function ABI the compiler uses to create or call vector functions. The 'gcc' (default) argument enforces compatibility with gcc. The 'cmdtarget' argument uses an extended set of vector functions.
  -vec                    Enable the loop vectorization passes
  --verify-debug-info     Verify the binary representation of debug output
  -verify-pch             Load and verify that a pre-compiled header file is not stale
  --version               Print version information
  -vfsoverlay <value>     Overlay the virtual filesystem described by file over the real file system. Additionally, pass this overlay file to the linker if it supports it
  -v                      Show commands to run and use verbose output
  -Wa,<arg>               Pass the comma separated arguments in <arg> to the assembler
  --wasm-opt              Enable the wasm-opt optimizer (default)
  -Wcheck-unicode-security
                          Enable detection and warn about Unicode constructs that can be exploited by using bi-directional formatting codes, zero-width characters in strings and use of zero-width characters and homoglyphs in identifiers. Done by using clang-tidy
  -Wdeprecated            Enable warnings for deprecated constructs and define __DEPRECATED
  -Winvalid-constexpr     Enable checking of constexpr function bodies for validity within a constant expression context
  -Wl,<arg>               Pass the comma separated arguments in <arg> to the linker
  -Wno-invalid-constexpr  Disable checking of constexpr function bodies for validity within a constant expression context
  -Wno-sycl-strict        Disable warnings which enforce strict SYCL language compatibility.
  -working-directory <value>
                          Resolve file paths relative to the specified directory
  -Wp,<arg>               Pass the comma separated arguments in <arg> to the preprocessor
  -W<warning>             Enable the specified warning
  -w                      Suppress all warnings
  -Xanalyzer <arg>        Pass <arg> to the static analyzer
  -Xarch_device <arg>     Pass <arg> to the CUDA/HIP device compilation
  -Xarch_host <arg>       Pass <arg> to the CUDA/HIP host compilation
  -Xassembler <arg>       Pass <arg> to the assembler
  -Xclang=<arg>           Alias for -Xclang
  -Xclang <arg>           Pass <arg> to clang -cc1
  -Xcuda-fatbinary <arg>  Pass <arg> to fatbinary invocation
  -Xcuda-ptxas <arg>      Pass <arg> to the ptxas assembler
  -Xlinker <arg>          Pass <arg> to the linker
  -Xoffload-linker<triple> <arg>
                          Pass <arg> to the offload linkers or the ones idenfied by -<triple>
  -Xopenmp-target-backend=<triple> <arg>
                          Pass <arg> to the OpenMP based backend identified by <triple>. Depending on the triple (spir64, spir64_gen, spir64_x86_64), the arg passed will be interpreted by the corresponding AOT tool or runtime consumer.
  -Xopenmp-target-backend <arg>
                          Pass <arg> to the OpenMP based target backend.
  -Xopenmp-target-frontend=<value>
                          Pass <arg> to the OpenMP based target frontend identified by <triple>.
  -Xopenmp-target-frontend <value>
                          Pass <arg> to the OpenMP based target frontend.
  -Xopenmp-target-linker=<triple> <arg>
                          Pass <arg> to the SYCL based target linker identified by <triple>.
  -Xopenmp-target-linker <arg>
                          Pass <arg> to the SYCL based target linker.
  -Xopenmp-target=<triple> <arg>
                          Pass <arg> to the target offloading toolchain identified by <triple>.
  -Xopenmp-target <arg>   Pass <arg> to the target offloading toolchain.
  -Xpreprocessor <arg>    Pass <arg> to the preprocessor
  -Xsycl-target-backend=<triple> <arg>
                          Pass <arg> to the SYCL based backend identified by <triple>. Depending on the triple (spir64, spir64_gen, spir64_x86_64, spir64_fpga), the arg passed will be interpreted by the corresponding AOT tool or runtime consumer.
  -Xsycl-target-backend <arg>
                          Pass <arg> to the SYCL based target backend.
  -Xsycl-target-frontend=<triple> <arg>
                          Pass <arg> to the SYCL based target frontend identified by <triple>.
  -Xsycl-target-frontend <arg>
                          Pass <arg> to the SYCL based target frontend.
  -Xsycl-target-linker=<triple> <arg>
                          Pass <arg> to the SYCL based target linker identified by <triple>.
  -Xsycl-target-linker <arg>
                          Pass <arg> to the SYCL based target linker.
  -Xs <arg>               Pass <arg> to the offline compiler.
  -Xs<arg>                Pass <arg> to the offline compiler, adding the option specifier '-' to the <arg>.
  -x <language>           Treat subsequent input files as having type <language>
  -x<code>                Generate specialized code to run exclusively on processors indicated by <code>.
  -z <arg>                Pass -z <arg> to the linker
dxc compatibility options.:
  --dxv-path=<value>  DXIL validator installation path
  -fspv-target-env=<value>
                      Specify the target environment
  -hlsl-entry <value> Entry point name for hlsl
Executing: mpiicc -cc=icx --help | head -n 500
Detected CLANG compiler
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers  -fPIC -Wno-implicit-int  /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

            Output from compiling with  -fPIC -Wno-implicit-int

Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers  -fPIC -Wno-int-conversion  /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

            Output from compiling with  -fPIC -Wno-int-conversion

Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers  -fPIC -Wno-implicit-function-declaration  /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

            Output from compiling with  -fPIC -Wno-implicit-function-declaration

Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers  -fPIC -Wno-deprecated-non-prototype  /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

            Output from compiling with  -fPIC -Wno-deprecated-non-prototype

Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers  -fPIC -fno-common  /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

            Output from compiling with  -fPIC -fno-common

=============================================================================================
TESTING: checkSharedLinkerPaths from config.setCompilers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/setCompilers.py:2523)
  Determine the shared linker path options
       - IRIX: -rpath
       - Linux, OSF: -Wl,-rpath,
       - Solaris: -R
       - FreeBSD: -Wl,-R,
Executing: mpiicc -cc=icx -V
stdout:
Intel(R) oneAPI DPC++/C++ Compiler for applications running on Intel(R) 64, Version 2025.0.0 Build 20241008
Copyright (C) 1985-2024 Intel Corporation. All rights reserved.
          Trying C linker flag -Wl,-rpath,
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers  -fPIC  /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest  -Wl,-rpath,/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4   -fPIC /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o 
            Valid C linker flag -Wl,-rpath,/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4
Executing: mpiicc -cc=icx -V
stdout:
Intel(R) oneAPI DPC++/C++ Compiler for applications running on Intel(R) 64, Version 2025.0.0 Build 20241008
Copyright (C) 1985-2024 Intel Corporation. All rights reserved.
          Trying Cxx linker flag -Wl,-rpath,
Executing: mpiicpc -cxx=icpx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers   -std=gnu++20 -fPIC  /tmp/petsc-m5p55c3k/config.setCompilers/conftest.cc 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

Executing: mpiicpc -cxx=icpx  -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest  -Wl,-rpath,/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4   /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o 
            Valid Cxx linker flag -Wl,-rpath,/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4
Executing: mpiicc -cc=icx -V
stdout:
Intel(R) oneAPI DPC++/C++ Compiler for applications running on Intel(R) 64, Version 2025.0.0 Build 20241008
Copyright (C) 1985-2024 Intel Corporation. All rights reserved.
          Trying FC linker flag -Wl,-rpath,
Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers  -fPIC  /tmp/petsc-m5p55c3k/config.setCompilers/conftest.F90 
Successful compile:
Source:
      program main

      end

Executing: mpiifort -fc=ifx  -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest  -Wl,-rpath,/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4   -fPIC /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o 
            Valid FC linker flag -Wl,-rpath,/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4
=============================================================================================
TESTING: checkLibC from config.setCompilers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/setCompilers.py:2565)
  Test whether we need to explicitly include libc in shared linking
       - Mac OSX requires an explicit reference to libc for shared linking
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers  -fPIC  /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <stdlib.h> 
int foo(void) {void *chunk = malloc(31); free(chunk); return 0;}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.setCompilers/libconftest.so  -shared  -fPIC /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o 
          Shared linking does not require an explicit libc reference
=============================================================================================
TESTING: checkDynamicLinker from config.setCompilers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/setCompilers.py:2611)
  Check that the linker can dynamically load shared libraries
Checking for header: dlfcn.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <dlfcn.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
              Defined "HAVE_DLFCN_H" to "1"
            Checking for functions [dlopen dlsym dlclose] in library [''] []
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.libraries  -fPIC  /tmp/petsc-m5p55c3k/config.libraries/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
char dlopen(void);
static void _check_dlopen(void) { dlopen(); }
char dlsym(void);
static void _check_dlsym(void) { dlsym(); }
char dlclose(void);
static void _check_dlclose(void) { dlclose(); }

int main(void) {
_check_dlopen();
_check_dlsym();
_check_dlclose();
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.libraries/conftest    -fPIC /tmp/petsc-m5p55c3k/config.libraries/conftest.o   
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers  -fPIC  /tmp/petsc-m5p55c3k/config.compilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
char dlopen(void);
static void _check_dlopen(void) { dlopen(); }
char dlsym(void);
static void _check_dlsym(void) { dlsym(); }
char dlclose(void);
static void _check_dlclose(void) { dlclose(); }
void dummy(void) {_check_dlopen();
_check_dlsym();
_check_dlclose();}

Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers  -fPIC  /tmp/petsc-m5p55c3k/config.compilers/conftest.F90 
Successful compile:
Source:
      program main
      print*,'testing'
      stop
      end
 
Executing: mpiifort -fc=ifx  -o /tmp/petsc-m5p55c3k/config.compilers/conftest    -fPIC /tmp/petsc-m5p55c3k/config.compilers/conftest.o /tmp/petsc-m5p55c3k/config.compilers/confc.o   
          Checking dynamic linker mpiicc -cc=icx using flags ['-shared']
    Checking for program /opt/intel/oneapi/mpi/2021.14/bin/mpiicc...found
              Defined make macro "DYNAMICLINKER" to "mpiicc -cc=icx"
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.setCompilers  -fPIC  /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest  -shared   -fPIC /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o 
            Valid C linker flag -shared
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.setCompilers  -fPIC  /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <stdio.h>
int foo(void) {printf("test");return 0;}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.setCompilers/libconftest.so  -shared  -fPIC /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o 
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.setCompilers  -fPIC  /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <dlfcn.h>
#include <stdio.h>

int main(void) {

void *handle = dlopen("/tmp/petsc-m5p55c3k/config.setCompilers/libconftest.so", 0);
int (*foo)(void) = (int (*)(void)) dlsym(handle, "foo");

if (!foo) {
  printf("Could not load symbol\n");
  return -1;
}
if ((*foo)()) {
  printf("Invalid return from foo()\n");
  return -1;
}
if (dlclose(handle)) {
  printf("Could not close library\n");
  return -1;
}

  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest    -fPIC /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o 
          Using dynamic linker mpiicc -cc=icx with flags ['-shared'] and library extension so
=============================================================================================
TESTING: checkPragma from config.setCompilers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/setCompilers.py:2056)
  Check for all available applicable languages whether they complain (including warnings!) about potentially unknown pragmas
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.setCompilers  -fPIC -Wunknown-pragmas   /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

                  Output from compiling with  -fPIC -Wunknown-pragmas 

Added C compiler flag -Wunknown-pragmas
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.setCompilers  -fPIC -Wunknown-pragmas  /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#pragma GCC poison TEST

int main(void) {
  return 0;
}

Executing: mpiicpc -cxx=icpx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers  -Wunknown-pragmas   -std=gnu++20 -fPIC  /tmp/petsc-m5p55c3k/config.setCompilers/conftest.cc 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

                  Output from compiling with  -Wunknown-pragmas 

Added Cxx compiler flag -Wunknown-pragmas
Executing: mpiicpc -cxx=icpx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers  -Wunknown-pragmas  -std=gnu++20 -fPIC  /tmp/petsc-m5p55c3k/config.setCompilers/conftest.cc 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#pragma GCC poison TEST

int main(void) {
  return 0;
}

=============================================================================================
TESTING: checkAtFileOption from config.setCompilers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/setCompilers.py:2803)
  Check if linker supports @file option
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.setCompilers  -fPIC  /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest  @/tmp/petsc-m5p55c3k/config.setCompilers/optfile   -fPIC /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o 
            Valid C linker flag @/tmp/petsc-m5p55c3k/config.setCompilers/optfile
            Defined make macro "PCC_AT_FILE" to "1"
=============================================================================================
TESTING: output from config.setCompilers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/setCompilers.py:2660)
  Output module data as defines and substitutions
            Substituting "CC" with "mpiicc -cc=icx"
            Substituting "CFLAGS" with " -fPIC"
            Defined make macro "CC_LINKER_SLFLAG" to "-Wl,-rpath,"
            Substituting "CPP" with "mpiicc -cc=icx -E"
            Substituting "CPPFLAGS" with ""
            Substituting "CXX" with "mpiicpc -cxx=icpx"
            Substituting "CXX_CXXFLAGS" with " -std=gnu++20 -fPIC"
            Substituting "CXXFLAGS" with ""
            Substituting "CXX_LINKER_SLFLAG" with "-Wl,-rpath,"
            Substituting "CXXPP" with "mpiicpc -cxx=icpx -E"
            Substituting "CXXPPFLAGS" with ""
            Substituting "FC" with "mpiifort -fc=ifx"
            Substituting "FFLAGS" with " -fPIC"
            Defined make macro "FC_LINKER_SLFLAG" to "-Wl,-rpath,"
            Substituting "LDFLAGS" with ""
            Substituting "FPP" with "mpiifort -fc=ifx -E"
            Substituting "FPPFLAGS" with ""
            Substituting "LIBS" with ""
            Substituting "SHARED_LIBRARY_FLAG" with "-shared"
    child config.setCompilers took 7.650442 seconds
=============================================================================================
TESTING: configureIndexSize from PETSc.options.indexTypes(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/PETSc/options/indexTypes.py:38)
  Determine the size of PETSc indices (32 or 64-bit), from -with-64-bit-indices
            Defined make macro "PETSC_INDEX_SIZE" to "32"
    child PETSc.options.indexTypes took 0.000862 seconds
=============================================================================================
TESTING: configureCompilerFlags from config.compilerFlags(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/compilerFlags.py:82)
  Get the default compiler flags
Executing: mpiicc -cc=icx --version
stdout:
Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)
Target: x86_64-unknown-linux-gnu
Thread model: posix
InstalledDir: /opt/intel/oneapi/compiler/2025.0/bin/compiler
Configuration file: /opt/intel/oneapi/compiler/2025.0/bin/compiler/../icx.cfg
getCompilerVersion: mpiicc -cc=icx Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)
              Defined make macro "C_VERSION" to "Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)"
Executing: mpiicc -cc=icx -show
stdout: icx -I"/opt/intel/oneapi/mpi/2021.14/include" -L"/opt/intel/oneapi/mpi/2021.14/lib" -L"/opt/intel/oneapi/mpi/2021.14/lib" -Xlinker --enable-new-dtags -Xlinker -rpath -Xlinker "/opt/intel/oneapi/mpi/2021.14/lib" -Xlinker -rpath -Xlinker "/opt/intel/oneapi/mpi/2021.14/lib" -lmpifort -lmpi -ldl -lrt -lpthread
                Defined make macro "MPICC_SHOW" to "icx -I\"/opt/intel/oneapi/mpi/2021.14/include\" -L\"/opt/intel/oneapi/mpi/2021.14/lib\" -L\"/opt/intel/oneapi/mpi/2021.14/lib\" -Xlinker --enable-new-dtags -Xlinker -rpath -Xlinker \"/opt/intel/oneapi/mpi/2021.14/lib\" -Xlinker -rpath -Xlinker \"/opt/intel/oneapi/mpi/2021.14/lib\" -lmpifort -lmpi -ldl -lrt -lpthread"
Executing: mpiicc -cc=icx --help | head -n 20 
stdout:
OVERVIEW: Intel(R) oneAPI DPC++/C++ Compiler
USAGE: icx [options] file...
OPTIONS:
  -###                    Print (but do not run) the commands to run for this compilation
  -#x                     Show commands to run and use verbose output
  -#                      Print (but do not run) the commands to run for this compilation
  -align                  Align doubles to two words in structs (x86 only)
  --amdgpu-arch-tool=<value>
                          Tool used for detecting AMD GPU arch in the system.
  --analyzer-output <value>
                          Static analyzer report output format (html|plist|plist-multi-file|plist-html|sarif|sarif-html|text).
  --analyze               Run the static analyzer
  -ansi-alias             enable use of ANSI aliasing rules optimizations user asserts that the program adheres to these rules
  -arcmt-migrate-emit-errors
                          Emit ARC errors even if the migrator can fix them
  -arcmt-migrate-report-output <value>
                          Output path for the plist report
  -ax<codes>              generate multiple, processor-specific, auto-dispatched code paths for Intel® processors, specified by <codes>, if there is a performance benefit
Executing: mpiicc -cc=icx --help
stdout:
OVERVIEW: Intel(R) oneAPI DPC++/C++ Compiler
USAGE: icx [options] file...
OPTIONS:
  -###                    Print (but do not run) the commands to run for this compilation
  -#x                     Show commands to run and use verbose output
  -#                      Print (but do not run) the commands to run for this compilation
  -align                  Align doubles to two words in structs (x86 only)
  --amdgpu-arch-tool=<value>
                          Tool used for detecting AMD GPU arch in the system.
  --analyzer-output <value>
                          Static analyzer report output format (html|plist|plist-multi-file|plist-html|sarif|sarif-html|text).
  --analyze               Run the static analyzer
  -ansi-alias             enable use of ANSI aliasing rules optimizations user asserts that the program adheres to these rules
  -arcmt-migrate-emit-errors
                          Emit ARC errors even if the migrator can fix them
  -arcmt-migrate-report-output <value>
                          Output path for the plist report
  -ax<codes>              generate multiple, processor-specific, auto-dispatched code paths for Intel® processors, specified by <codes>, if there is a performance benefit
  -B <prefix>             Search $prefix$file for executables, libraries, and data files. If $prefix is a directory, search $prefix/$file
  -b <arg>                Pass -b <arg> to the linker on AIX
  -CC                     Include comments from within macros in preprocessed output
  -cl-denorms-are-zero    OpenCL only. Allow denormals to be flushed to zero.
  -cl-ext=<value>         OpenCL only. Enable or disable OpenCL extensions/optional features. The argument is a comma-separated sequence of one or more extension names, each prefixed by '+' or '-'.
  -cl-fast-relaxed-math   OpenCL only. Sets -cl-finite-math-only and -cl-unsafe-math-optimizations, and defines __FAST_RELAXED_MATH__.
  -cl-finite-math-only    OpenCL only. Allow floating-point optimizations that assume arguments and results are not NaNs or +-Inf.
  -cl-fp32-correctly-rounded-divide-sqrt
                          OpenCL only. Specify that single precision floating-point divide and sqrt used in the program source are correctly rounded.
  -cl-kernel-arg-info     OpenCL only. Generate kernel argument metadata.
  -cl-mad-enable          OpenCL only. Allow use of less precise MAD computations in the generated binary.
  -cl-no-signed-zeros     OpenCL only. Allow use of less precise no signed zeros computations in the generated binary.
  -cl-no-stdinc           OpenCL only. Disables all standard includes containing non-native compiler types and functions.
  -cl-opt-disable         OpenCL only. This option disables all optimizations. By default optimizations are enabled.
  -cl-single-precision-constant
                          OpenCL only. Treat double precision floating-point constant as single precision constant.
  -cl-std=<value>         OpenCL language standard to compile for.
  -cl-strict-aliasing     OpenCL only. This option is added for compatibility with OpenCL 1.0.
  -cl-uniform-work-group-size
                          OpenCL only. Defines that the global work-size be a multiple of the work-group size specified to clEnqueueNDRangeKernel
  -cl-unsafe-math-optimizations
                          OpenCL only. Allow unsafe floating-point optimizations.  Also implies -cl-no-signed-zeros and -cl-mad-enable.
  --config=<file>         Specify configuration file
  --cuda-compile-host-device
                          Compile CUDA code for both host and device (default). Has no effect on non-CUDA compilations.
  --cuda-device-only      Compile CUDA code for device only
  --cuda-feature=<value>  Manually specify the CUDA feature to use
  --cuda-host-only        Compile CUDA code for host only. Has no effect on non-CUDA compilations.
  --cuda-include-ptx=<value>
                          Include PTX for the following GPU architecture (e.g. sm_35) or 'all'. May be specified more than once.
  --cuda-noopt-device-debug
                          Enable device-side debug info generation. Disables ptxas optimizations.
  --cuda-path-ignore-env  Ignore environment variables to detect CUDA installation
  --cuda-path=<value>     CUDA installation path
  -cuid=<value>           An ID for compilation unit, which should be the same for the same compilation unit but different for different compilation units. It is used to externalize device-side static variables for single source offloading languages CUDA and HIP so that they can be accessed by the host code of the same compilation unit.
  -cxx-isystem <directory>
                          Add directory to the C++ SYSTEM include search path
  -C                      Include comments in preprocessed output
  -c                      Only run preprocess, compile, and assemble steps
  -daal=<value>           Link Intel(R) Data Analytics Acceleration Library (Intel(R) DAAL) libraries and bring in the associated headers (parallel)
  -darwin-target-variant-triple <value>
                          Specify the darwin target variant triple
  -darwin-target-variant <value>
                          Generate code for an additional runtime variant of the deployment target
  -dD                     Print macro definitions in -E mode in addition to normal output
  -debug=<value>          Enable debug information. Valid args: none, all, full, minimal
  -dependency-dot <value> Filename to write DOT-formatted header dependencies to
  -dependency-file <value>
                          Filename (or -) to write dependency output to
  -device-math-lib=<value>
                          Control the addition of device math libraries when compiling for other devices.  Valid arguments are fp64, fp32
  -dI                     Print include directives in -E mode in addition to normal output
  -dM                     Print macro definitions in -E mode instead of normal output
  -dryrun                 Print (but do not run) the commands to run for this compilation
  -dsym-dir <dir>         Directory to output dSYM's (if any) to
  -dumpdir <dumppfx>      Use <dumpfpx> as a prefix to form auxiliary and dump file names
  -dumpmachine            Display the compiler's target processor
  -dumpversion            Display the version of the compiler
  -D <macro>=<value>      Define <macro> to <value> (or 1 if <value> omitted)
  --embed-dir=<dir>       Add directory to embed search path
  -emit-ast               Emit Clang AST files for source inputs
  --emit-extension-symbol-graphs
                          Generate additional symbol graphs for extended modules.
  -emit-interface-stubs   Generate Interface Stub Files.
  -emit-llvm              Use the LLVM representation for assembler and object files
  -emit-merged-ifs        Generate Interface Stub Files, emit merged text not binary.
  --emit-static-lib       Enable linker job to emit a static library.
  -emit-symbol-graph      Generate Extract API information as a side effect of compilation.
  --end-no-unused-arguments
                          Start emitting warnings for unused driver arguments
  -EP                     Preprocess to stdout, omitting #line directives.
  --extract-api-ignores=<value>
                          Comma separated list of files containing a new line separated list of API symbols to ignore when extracting API information.
  -extract-api            Extract API information
  -E                      Only run the preprocessor
  -faapcs-bitfield-load   Follows the AAPCS standard that all volatile bit-field write generates at least one load. (ARM only).
  -faapcs-bitfield-width  Follow the AAPCS standard requirement stating that volatile bit-field width is dictated by the field container type. (ARM only).
  -faddrsig               Emit an address-significance table
  -falign-functions=<value>
                          Align the start of functions on a 2 (DEFAULT) or <n> byte boundary where <n> is a power of 2.
  -falign-functions       align the start of functions to an optimal machine-dependent value.
  -falign-loops=<N>       N must be a power of two. Align loops to the boundary
  -falign-stack=assume-16-byte
                          Assume the stack is aligned on 16-byte boundaries
  -falign-stack=assume-4-byte
                          Assume the stack is aligned on 4-byte boundaries
  -falign-stack=maintain-16-byte
                          Do not assume any alignment, but maintain alignment in case the stack is already aligned
  -faligned-allocation    Enable C++17 aligned allocation functions
  -fallow-editor-placeholders
                          Treat editor placeholders as valid source code
  -faltivec-src-compat=<value>
                          Source-level compatibility for Altivec vectors (for PowerPC targets). This includes results of vector comparison (scalar for 'xl', vector for 'gcc') as well as behavior when initializing with a scalar (splatting for 'xl', element zero only for 'gcc'). For 'mixed', the compatibility is as 'gcc' for 'vector bool/vector pixel' and as 'xl' for other types. Current default is 'mixed'.
  -fansi-escape-codes     Use ANSI escape codes for diagnostics
  -fapinotes-modules      Enable module-based external API notes support
  -fapinotes-swift-version=<version>
                          Specify the Swift version to use when filtering API notes
  -fapinotes              Enable external API notes support
  -fapple-kext            Use Apple's kernel extensions ABI
  -fapple-link-rtlib      Force linking the clang builtins runtime library
  -fapple-pragma-pack     Enable Apple gcc-compatible #pragma pack handling
  -fapplication-extension Restrict code to those available for App Extensions
  -fapprox-func           Allow certain math function calls to be replaced with an approximately equivalent calculation
  -fargument-noalias      Enables 'noalias' attribute for all pointer-type arguments
  -fassume-nothrow-exception-dtor
                          Assume that exception objects' destructors are non-throwing
  -fasync-exceptions      Enable EH Asynchronous exceptions
  -fauto-import           MinGW specific. Enable code generation support for automatic dllimport, and enable support for it in the linker. Enabled by default.
  -fbasic-block-address-map
                          Emit the basic block address map section.
  -fbasic-block-sections=<value>
                          Place each function's basic blocks in unique sections (ELF Only)
  -fbinutils-version=<major.minor>
                          Produced object files can use all ELF features supported by this binutils version and newer. If -fno-integrated-as is specified, the generated assembly will consider GNU as support. 'none' means that all ELF features can be used, regardless of binutils support. Defaults to 2.26.
  -fblocks                Enable the 'blocks' language feature
  -fborland-extensions    Accept non-standard constructs supported by the Borland compiler
  -fbuild-session-file=<file>
                          Use the last modification time of <file> as the build session timestamp
  -fbuild-session-timestamp=<time since Epoch in seconds>
                          Time when the current build session started
  -fbuiltin-module-map    Load the clang builtins module map file.
  -fc++-abi=<value>       C++ ABI to use. This will override the target C++ ABI.
  -fcall-saved-x10        Make the x10 register call-saved (AArch64 only)
  -fcall-saved-x11        Make the x11 register call-saved (AArch64 only)
  -fcall-saved-x12        Make the x12 register call-saved (AArch64 only)
  -fcall-saved-x13        Make the x13 register call-saved (AArch64 only)
  -fcall-saved-x14        Make the x14 register call-saved (AArch64 only)
  -fcall-saved-x15        Make the x15 register call-saved (AArch64 only)
  -fcall-saved-x18        Make the x18 register call-saved (AArch64 only)
  -fcall-saved-x8         Make the x8 register call-saved (AArch64 only)
  -fcall-saved-x9         Make the x9 register call-saved (AArch64 only)
  -fcaret-diagnostics-max-lines=<value>
                          Set the maximum number of source lines to show in a caret diagnostic (0 = no limit).
  -fcf-protection=<value> Instrument control-flow architecture protection
  -fcf-protection         Enable cf-protection in 'full' mode
  -fchar8_t               Enable C++ builtin type char8_t
  -fcheck-new             Do not assume C++ operator new may not return NULL
  -fclang-abi-compat=<version>
                          Attempt to match the ABI of Clang <version>
  -fclangir               Use the ClangIR pipeline to compile
  -fcolor-diagnostics     Enable colors in diagnostics
  -fcomment-block-commands=<arg>
                          Treat each comma separated argument in <arg> as a documentation comment block command
  -fcommon                Place uninitialized global variables in a common block
  -fcomplete-member-pointers
                          Require member pointer base types to be complete if they would be significant under the Microsoft ABI
  -fconstexpr-backtrace-limit=<value>
                          Set the maximum number of entries to print in a constexpr evaluation backtrace (0 = no limit)
  -fconstexpr-depth=<value>
                          Set the maximum depth of recursive constexpr function calls
  -fconstexpr-steps=<value>
                          Set the maximum number of steps in constexpr function evaluation
  -fcoro-aligned-allocation
                          Prefer aligned allocation for C++ Coroutines
  -fcoroutines            Enable support for the C++ Coroutines
  -fcoverage-compilation-dir=<value>
                          The compilation directory to embed in the coverage mapping.
  -fcoverage-mapping      Generate coverage mapping to enable code coverage analysis
  -fcoverage-mcdc         Enable MC/DC criteria when generating code coverage
  -fcoverage-prefix-map=<old>=<new>
                          remap file source paths <old> to <new> in coverage mapping. If there are multiple options, prefix replacement is applied in reverse order starting from the last one
  -fcrash-diagnostics-dir=<dir>
                          Put crash-report files in <dir>
  -fcrash-diagnostics=<value>
                          Set level of crash diagnostic reporting, (option: off, compiler, all)
  -fcrash-diagnostics     Enable crash diagnostic reporting (default)
  -fcs-profile-generate=<directory>
                          Generate instrumented code to collect context sensitive execution counts into <directory>/default.profraw (overridden by LLVM_PROFILE_FILE env var)
  -fcs-profile-generate   Generate instrumented code to collect context sensitive execution counts into default.profraw (overridden by LLVM_PROFILE_FILE env var)
  -fcuda-prec-sqrt        Specify that sqrt is correctly rounded (for CUDA devices)
  -fcuda-short-ptr        Use 32-bit pointers for accessing const/local/shared address spaces
  -fcx-fortran-rules      Range reduction is enabled for complex arithmetic operations.
  -fcx-limited-range      Basic algebraic expansions of complex arithmetic operations involving are enabled.
  -fcxx-exceptions        Enable C++ exceptions
  -fcxx-modules           Enable modules for C++
  -fdata-sections         Place each data in its own section
  -fdebug-compilation-dir=<value>
                          The compilation directory to embed in the debug info
  -fdebug-default-version=<value>
                          Default DWARF version to use, if a -g option caused DWARF debug info to be produced
  -fdebug-info-for-profiling
                          Emit extra debug info to make sample profile more accurate
  -fdebug-macro           Emit macro debug information
  -fdebug-prefix-map=<old>=<new>
                          For paths in debug info, remap directory <old> to <new>. If multiple options match a path, the last option wins
  -fdebug-ranges-base-address
                          Use DWARF base address selection entries in .debug_ranges
  -fdebug-types-section   Place debug types in their own section (ELF Only)
  -fdeclspec              Allow __declspec as a keyword
  -fdefine-target-os-macros
                          Enable predefined target OS macros
  -fdelayed-template-parsing
                          Parse templated function definitions at the end of the translation unit
  -fdelete-null-pointer-checks
                          Treat usage of null pointers as undefined behavior (default)
  -fdiagnostics-absolute-paths
                          Print absolute paths in diagnostics
  -fdiagnostics-hotness-threshold=<value>
                          Prevent optimization remarks from being output if they do not have at least this profile count. Use 'auto' to apply the threshold from profile summary
  -fdiagnostics-misexpect-tolerance=<value>
                          Prevent misexpect diagnostics from being output if the profile counts are within N% of the expected. 
  -fdiagnostics-parseable-fixits
                          Print fix-its in machine parseable form
  -fdiagnostics-print-source-range-info
                          Print source range spans in numeric form
  -fdiagnostics-show-hotness
                          Enable profile hotness information in diagnostic line
  -fdiagnostics-show-note-include-stack
                          Display include stacks for diagnostic notes
  -fdiagnostics-show-option
                          Print option name with mappable diagnostics
  -fdiagnostics-show-template-tree
                          Print a template comparison tree for differing templates
  -fdigraphs              Enable alternative token representations '<:', ':>', '<%', '%>', '%:', '%:%:' (default)
  -fdirect-access-external-data
                          Don't use GOT indirection to reference external data symbols
  -fdisable-block-signature-string
                          Disable block signature string)
  -fdiscard-value-names   Discard value names in LLVM IR
  -fdollars-in-identifiers
                          Allow '$' in identifiers
  -fdriver-only           Only run the driver.
  -fdwarf-exceptions      Use DWARF style exceptions
  -feliminate-unused-debug-types
                          Do not emit  debug info for defined but unused types
  -fembed-bitcode-marker  Embed placeholder LLVM IR data as a marker
  -fembed-bitcode=<option>
                          Embed LLVM bitcode
  -fembed-bitcode         Embed LLVM IR bitcode as data
  -fembed-offload-object=<value>
                          Embed Offloading device-side binary into host object file as a section.
  -femit-all-decls        Emit all declarations, even if unused
  -femit-class-debug-always
                          Emit debug information for a C++ class into each object file where the class is used. This flag is useful for tools which are unable to resolve incomplete type descriptions.  Using this option may cause a large increase in the size of the debug information
  -femit-compact-unwind-non-canonical
                          Try emitting Compact-Unwind for non-canonical entries. Maybe overriden by other constraints
  -femit-dwarf-unwind=<value>
                          When to emit DWARF unwind (EH frame) info
  -femulated-tls          Use emutls functions to access thread_local variables
  -fenable-matrix         Enable matrix data type and related builtin functions
  -fexceptions            Enable support for exception handling
  -fexcess-precision=<value>
                          Allows control over excess precision on targets where native support for the precision types is not available. By default, excess precision is used to calculate intermediate results following the rules specified in ISO C99.
  -fexperimental-late-parse-attributes
                          Enable experimental late parsing of attributes
  -fexperimental-library  Control whether unstable and experimental library features are enabled. This option enables various library features that are either experimental (also known as TSes), or have been but are not stable yet in the selected Standard Library implementation. It is not recommended to use this option in production code, since neither ABI nor API stability are guaranteed. This is intended to provide a preview of features that will ship in the future for experimentation purposes
  -fexperimental-modules-reduced-bmi
                          Generate the reduced BMI
  -fexperimental-new-constant-interpreter
                          Enable the experimental new constant interpreter
  -fexperimental-openacc-macro-override <value>
                          Overrides the _OPENACC macro value for experimental testing during OpenACC support development
  -fexperimental-relative-c++-abi-vtables
                          Use the experimental C++ class ABI for classes with virtual tables
  -fexperimental-sanitize-metadata-ignorelist=<value>
                          Disable sanitizer metadata for modules and functions that match the provided special case list
  -fexperimental-sanitize-metadata=<value>
                          Specify the type of metadata to emit for binary analysis sanitizers
  -fexperimental-strict-floating-point
                          Enables the use of non-default rounding modes and non-default exception handling on targets that are not currently ready.
  -fextend-arguments=<value>
                          Controls how scalar integer arguments are extended in calls to unprototyped and varargs functions
  -ffast-math             Allow aggressive, lossy floating-point optimizations
  -ffat-lto-objects       Enable fat LTO object support
  -ffile-compilation-dir=<value>
                          The compilation directory to embed in the debug info and coverage mapping.
  -ffile-prefix-map=<value>
                          remap file source paths in debug info, predefined preprocessor macros and __builtin_FILE(). Implies -ffile-reproducible.
  -ffile-reproducible     Use the target's platform-specific path separator character when expanding the __FILE__ macro
  -ffine-grained-bitfield-accesses
                          Use separate accesses for consecutive bitfield runs with legal widths and alignments.
  -ffinite-loops          Assume all non-trivial loops are finite.
  -ffinite-math-only      Allow floating-point optimizations that assume arguments and results are not NaNs or +-inf. This defines the \_\_FINITE\_MATH\_ONLY\_\_ preprocessor macro.
  -ffixed-a0              Reserve the a0 register (M68k only)
  -ffixed-a1              Reserve the a1 register (M68k only)
  -ffixed-a2              Reserve the a2 register (M68k only)
  -ffixed-a3              Reserve the a3 register (M68k only)
  -ffixed-a4              Reserve the a4 register (M68k only)
  -ffixed-a5              Reserve the a5 register (M68k only)
  -ffixed-a6              Reserve the a6 register (M68k only)
  -ffixed-d0              Reserve the d0 register (M68k only)
  -ffixed-d1              Reserve the d1 register (M68k only)
  -ffixed-d2              Reserve the d2 register (M68k only)
  -ffixed-d3              Reserve the d3 register (M68k only)
  -ffixed-d4              Reserve the d4 register (M68k only)
  -ffixed-d5              Reserve the d5 register (M68k only)
  -ffixed-d6              Reserve the d6 register (M68k only)
  -ffixed-d7              Reserve the d7 register (M68k only)
  -ffixed-g1              Reserve the G1 register (SPARC only)
  -ffixed-g2              Reserve the G2 register (SPARC only)
  -ffixed-g3              Reserve the G3 register (SPARC only)
  -ffixed-g4              Reserve the G4 register (SPARC only)
  -ffixed-g5              Reserve the G5 register (SPARC only)
  -ffixed-g6              Reserve the G6 register (SPARC only)
  -ffixed-g7              Reserve the G7 register (SPARC only)
  -ffixed-i0              Reserve the I0 register (SPARC only)
  -ffixed-i1              Reserve the I1 register (SPARC only)
  -ffixed-i2              Reserve the I2 register (SPARC only)
  -ffixed-i3              Reserve the I3 register (SPARC only)
  -ffixed-i4              Reserve the I4 register (SPARC only)
  -ffixed-i5              Reserve the I5 register (SPARC only)
  -ffixed-l0              Reserve the L0 register (SPARC only)
  -ffixed-l1              Reserve the L1 register (SPARC only)
  -ffixed-l2              Reserve the L2 register (SPARC only)
  -ffixed-l3              Reserve the L3 register (SPARC only)
  -ffixed-l4              Reserve the L4 register (SPARC only)
  -ffixed-l5              Reserve the L5 register (SPARC only)
  -ffixed-l6              Reserve the L6 register (SPARC only)
  -ffixed-l7              Reserve the L7 register (SPARC only)
  -ffixed-o0              Reserve the O0 register (SPARC only)
  -ffixed-o1              Reserve the O1 register (SPARC only)
  -ffixed-o2              Reserve the O2 register (SPARC only)
  -ffixed-o3              Reserve the O3 register (SPARC only)
  -ffixed-o4              Reserve the O4 register (SPARC only)
  -ffixed-o5              Reserve the O5 register (SPARC only)
  -ffixed-point           Enable fixed point types
  -ffixed-r19             Reserve register r19 (Hexagon only)
  -ffixed-r9              Reserve the r9 register (ARM only)
  -ffixed-x10             Reserve the x10 register (AArch64/RISC-V only)
  -ffixed-x11             Reserve the x11 register (AArch64/RISC-V only)
  -ffixed-x12             Reserve the x12 register (AArch64/RISC-V only)
  -ffixed-x13             Reserve the x13 register (AArch64/RISC-V only)
  -ffixed-x14             Reserve the x14 register (AArch64/RISC-V only)
  -ffixed-x15             Reserve the x15 register (AArch64/RISC-V only)
  -ffixed-x16             Reserve the x16 register (AArch64/RISC-V only)
  -ffixed-x17             Reserve the x17 register (AArch64/RISC-V only)
  -ffixed-x18             Reserve the x18 register (AArch64/RISC-V only)
  -ffixed-x19             Reserve the x19 register (AArch64/RISC-V only)
  -ffixed-x1              Reserve the x1 register (AArch64/RISC-V only)
  -ffixed-x20             Reserve the x20 register (AArch64/RISC-V only)
  -ffixed-x21             Reserve the x21 register (AArch64/RISC-V only)
  -ffixed-x22             Reserve the x22 register (AArch64/RISC-V only)
  -ffixed-x23             Reserve the x23 register (AArch64/RISC-V only)
  -ffixed-x24             Reserve the x24 register (AArch64/RISC-V only)
  -ffixed-x25             Reserve the x25 register (AArch64/RISC-V only)
  -ffixed-x26             Reserve the x26 register (AArch64/RISC-V only)
  -ffixed-x27             Reserve the x27 register (AArch64/RISC-V only)
  -ffixed-x28             Reserve the x28 register (AArch64/RISC-V only)
  -ffixed-x29             Reserve the x29 register (AArch64/RISC-V only)
  -ffixed-x2              Reserve the x2 register (AArch64/RISC-V only)
  -ffixed-x30             Reserve the x30 register (AArch64/RISC-V only)
  -ffixed-x31             Reserve the x31 register (AArch64/RISC-V only)
  -ffixed-x3              Reserve the x3 register (AArch64/RISC-V only)
  -ffixed-x4              Reserve the x4 register (AArch64/RISC-V only)
  -ffixed-x5              Reserve the x5 register (AArch64/RISC-V only)
  -ffixed-x6              Reserve the x6 register (AArch64/RISC-V only)
  -ffixed-x7              Reserve the x7 register (AArch64/RISC-V only)
  -ffixed-x8              Reserve the x8 register (AArch64/RISC-V only)
  -ffixed-x9              Reserve the x9 register (AArch64/RISC-V only)
  -fforce-check-cxx20-modules-input-files
                          Check the input source files from C++20 modules explicitly
  -fforce-dwarf-frame     Always emit a debug frame section
  -fforce-emit-vtables    Emits more virtual tables to improve devirtualization
  -fforce-enable-int128   Enable support for int128_t type
  -ffp-accuracy=<value>   Specifies the required accuracy for floating-point operations and library calls.
  -ffp-contract=<value>   Form fused FP ops (e.g. FMAs)
  -ffp-eval-method=<value>
                          Specifies the evaluation method to use for floating-point arithmetic.
  -ffp-exception-behavior=<value>
                          Specifies the exception behavior of floating-point operations.
  -ffp-model=<value>      Controls the semantics of floating-point calculations.
  -ffreestanding          Assert that the compilation takes place in a freestanding environment
  -ffuchsia-api-level=<value>
                          Set Fuchsia API level
  -ffunction-sections     Place each function in its own section
  -fglobal-isel           Enables the global instruction selector
  -fgnu-keywords          Allow GNU-extension keywords regardless of language standard
  -fgnu-runtime           Generate output compatible with the standard GNU Objective-C runtime
  -fgnu89-inline          Use the gnu89 inline semantics
  -fgnuc-version=<value>  Sets various macros to claim compatibility with the given GCC version (default is 4.2.1)
  -fgpu-allow-device-init Allow device side init function in HIP (experimental)
  -fgpu-approx-transcendentals
                          Use approximate transcendental functions
  -fgpu-default-stream=<value>
                          Specify default stream. The default value is 'legacy'. (CUDA/HIP only)
  -fgpu-defer-diag        Defer host/device related diagnostic messages for CUDA/HIP
  -fgpu-flush-denormals-to-zero
                          Flush denormal floating point values to zero in CUDA/HIP device mode.
  -fgpu-rdc               Generate relocatable device code, also known as separate compilation mode
  -fgpu-sanitize          Enable sanitizer for supported offloading devices
  -fhelp                  Display available options
  -fhip-emit-relocatable  Compile HIP source to relocatable
  -fhip-fp32-correctly-rounded-divide-sqrt
                          Specify that single precision floating-point divide and sqrt used in the program source are correctly rounded (HIP device compilation only)
  -fhip-kernel-arg-name   Specify that kernel argument names are preserved (HIP only)
  -fhip-new-launch-api    Use new kernel launching API for HIP
  -fhlsl-strict-availability
                          Enables strict availability diagnostic mode for HLSL built-in functions.
  -fhls                   Enable Intel FPGA High Level Synthesis extensions
  -fhonor-infinities      Specify that floating-point optimizations are not allowed that assume arguments and results are not +-inf.
  -fhonor-nan-compares    Honor NaN compares with fast math
  -fhonor-nans            Specify that floating-point optimizations are not allowed that assume arguments and results are not NANs.
  -fignore-exceptions     Enable support for ignoring exception handling constructs
  -fimf-absolute-error=<value>
                          Define the maximum allowable absolute error for math library function results
  -fimf-accuracy-bits=<value>
                          Define the relative error, measured by the number of correct bits,for math library function results
  -fimf-arch-consistency=<value>
                          Ensures that the math library functions produce consistent results across different implementations of the same architecture
  -fimf-domain-exclusion=<value>
                          Indicates the input arguments domain on which math functions must provide correct results.
  -fimf-max-error=<value> defines the maximum allowable relative error, measured in ulps, for math library function results
  -fimf-precision=<value> Defines the accuracy (precision) for math library functions.
  -fimf-use-svml=<value>  Instruct the compiler to implement math library functions using the Short Vector Math Library(SVML)
  -fimplicit-module-maps  Implicitly search the file system for module map files.
  -fincremental-extensions
                          Enable incremental processing extensions such as processingstatements on the global scope.
  -finline-functions      Inline suitable functions
  -finline-hint-functions Inline functions which are (explicitly or implicitly) marked inline
  -finline-max-stacksize=<value>
                          Suppress inlining of functions whose stack size exceeds the given value
  -finput-charset=<value> Specify the default character set for source files
  -finstrument-function-entry-bare
                          Instrument function entry only, after inlining, without arguments to the instrumentation call
  -finstrument-functions-after-inlining
                          Like -finstrument-functions, but insert the calls after inlining
  -finstrument-functions  Generate calls to instrument function entry and exit
  -fintegrated-as         Enable the integrated assembler
  -fintegrated-cc1        Run cc1 in-process
  -fintegrated-objemitter Use internal machine object code emitter.
  -fintel-long-double-size=<value>
                          Overrides the size of long double from the architecture/OS defaults.
  -fintelfpga             Perform ahead-of-time compilation for FPGA
  -fiopenmp-simd          Same as -qopenmp-simd
  -fiopenmp               Same as -qopenmp
  -fjmc                   Enable just-my-code debugging
  -fjump-tables           Use jump tables for lowering switches
  -fkeep-persistent-storage-variables
                          Enable keeping all variables that have a persistent storage duration, including global, static and thread-local variables, to guarantee that they can be directly addressed
  -fkeep-static-consts    Keep static const variables even if unused
  -fkeep-system-includes  Instead of expanding system headers when emitting preprocessor output, preserve the #include directive. Useful when producing preprocessed output for test case reduction. May produce incorrect output if preprocessor symbols that control the included content (e.g. _XOPEN_SOURCE) are defined in the including source file. The portability of the resulting source to other compilation environments is not guaranteed.
                          
                          Only valid with -E.
  -flax-vector-conversions=<value>
                          Enable implicit vector bit-casts
  -flink-huge-device-code Generate and use a custom linker script for huge device code sections
  -flto-jobs=<value>      Controls the backend parallelism of -flto=thin (default of 0 means the number of threads will be derived from the number of CPUs detected)
  -flto=auto              Enable LTO in 'full' mode
  -flto=jobserver         Enable LTO in 'full' mode
  -flto=<value>           Set LTO mode
  -flto                   Enable LTO in 'full' mode
  -fmacro-backtrace-limit=<value>
                          Set the maximum number of entries to print in a macro expansion backtrace (0 = no limit)
  -fmacro-prefix-map=<value>
                          remap file source paths in predefined preprocessor macros and __builtin_FILE(). Implies -ffile-reproducible.
  -fmaintain-32-byte-stack-align
                          Do not assume any alignment, but maintain alignment in case the stack is already aligned
  -fmath-errno            Require math functions to indicate errors by setting errno
  -fmax-tokens=<value>    Max total number of preprocessed tokens for -Wmax-tokens.
  -fmax-type-align=<value>
                          Specify the maximum alignment to enforce on pointers lacking an explicit alignment
  -fma                    Enable the combining of floating point multiples and add/subtract operations.
  -fmemory-profile-use=<pathname>
                          Use memory profile for profile-guided memory optimization
  -fmemory-profile=<directory>
                          Enable heap memory profiling and dump results into <directory>
  -fmemory-profile        Enable heap memory profiling
  -fmerge-all-constants   Allow merging of constants
  -fmerge-debug-strings   Merge identical debug strings in different object files.
  -fmessage-length=<value>
                          Format message diagnostics so that they fit within N columns
  -fminimize-whitespace   Ignore the whitespace from the input file when emitting preprocessor output. It will only contain whitespace when necessary, e.g. to keep two minus signs from merging into to an increment operator. Useful with the -P option to normalize whitespace such that two files with only formatting changes are equal.
                          
                          Only valid with -E on C-like inputs and incompatible with -traditional-cpp.
  -fmodule-file=[<name>=]<file>
                          Specify the mapping of module name to precompiled module file, or load a module file if name is omitted.
  -fmodule-header=<kind>  Build a C++20 Header Unit from a header that should be found in the user (fmodule-header=user) or system (fmodule-header=system) search path.
  -fmodule-header         Build a C++20 Header Unit from a header
  -fmodule-map-file=<file>
                          Load this module map file
  -fmodule-name=<name>    Specify the name of the module to build
  -fmodule-output=<value> Save intermediate module file results when compiling a standard C++ module unit.
  -fmodule-output         Save intermediate module file results when compiling a standard C++ module unit.
  -fmodules-cache-path=<directory>
                          Specify the module cache path
  -fmodules-decluse       Require declaration of modules used within a module
  -fmodules-disable-diagnostic-validation
                          Disable validation of the diagnostic options when loading the module
  -fmodules-ignore-macro=<value>
                          Ignore the definition of the given macro when building and loading modules
  -fmodules-prune-after=<seconds>
                          Specify the interval (in seconds) after which a module file will be considered unused
  -fmodules-prune-interval=<seconds>
                          Specify the interval (in seconds) between attempts to prune the module cache
  -fmodules-search-all    Search even non-imported modules to resolve references
  -fmodules-strict-decluse
                          Like -fmodules-decluse but requires all headers to be in modules
  -fmodules-user-build-path <directory>
                          Specify the module user build path
  -fmodules-validate-input-files-content
                          Validate PCM input files based on content if mtime differs
  -fmodules-validate-once-per-build-session
                          Don't verify input files for the modules if the module has been successfully validated or loaded during this build session
  -fmodules-validate-system-headers
                          Validate the system headers that a module depends on when loading the module
  -fmodules               Enable the 'modules' language feature
  -fms-compatibility-version=<value>
                          Dot-separated value representing the Microsoft compiler version number to report in _MSC_VER (0 = don't define it (default))
  -fms-compatibility      Enable full Microsoft Visual C++ compatibility
  -fms-define-stdc        Define '__STDC__' to '1' in MSVC Compatibility mode
  -fms-extensions         Accept some non-standard constructs supported by the Microsoft compiler
  -fms-hotpatch           Ensure that all functions can be hotpatched at runtime
  -fms-runtime-lib=<value>
                          Select Windows run-time library
  -fms-volatile           Volatile loads and stores have acquire and release semantics
  -fmsc-version=<value>   Microsoft compiler version number to report in _MSC_VER (0 = don't define it (default))
  -fnew-alignment=<align> Specifies the largest alignment guaranteed by '::operator new(size_t)'
  -fnew-infallible        Enable treating throwing global C++ operator new as always returning valid memory (annotates with __attribute__((returns_nonnull)) and throw()). This is detectable in source.
  -fno-aapcs-bitfield-width
                          Do not follow the AAPCS standard requirement stating that volatile bit-field width is dictated by the field container type. (ARM only).
  -fno-access-control     Disable C++ access control
  -fno-addrsig            Don't emit an address-significance table
  -fno-alias              Enables 'noalias' attribute for all pointer-type arguments
  -fno-align-functions    Aligns on a 2-byte boundary
  -fno-apinotes-modules   Disable module-based external API notes support
  -fno-apinotes           Disable external API notes support
  -fno-assume-sane-operator-new
                          Don't assume that C++'s global operator new can't alias any pointer
  -fno-assume-unique-vtables
                          Disable optimizations based on vtable pointer identity
  -fno-assumptions        Disable codegen and compile-time checks for C++23's [[assume]] attribute
  -fno-auto-import        MinGW specific. Disable support for automatic dllimport in code generation and linking
  -fno-autolink           Disable generation of linker directives for automatic library linking
  -fno-builtin-<value>    Disable implicit builtin knowledge of a specific function
  -fno-builtin            Disable implicit builtin knowledge of functions
  -fno-bundle-offload-arch
                          Specify that the offload bundler should not identify a bundle with specific arch. For example, the bundle for `nvptx64-nvidia-cuda-sm_80` uses the bundle tag `nvptx64-nvidia-cuda` when used. This allows .o files to contain .bc bundles that are unspecific to a particular arch version.
  -fno-c++-static-destructors
                          Disable C++ static destructor registration
  -fno-char8_t            Disable C++ builtin type char8_t
  -fno-clangir            Use the AST -> LLVM pipeline to compile
  -fno-color-diagnostics  Disable colors in diagnostics
  -fno-common             Compile common globals like normal definitions
  -fno-complete-member-pointers
                          Do not require member pointer base types to be complete if they would be significant under the Microsoft ABI
  -fno-constant-cfstrings Disable creation of CodeFoundation-type constant strings
  -fno-convergent-functions
                          Assume all functions may be convergent.
  -fno-coverage-mapping   Disable code coverage analysis
  -fno-coverage-mcdc      Disable MC/DC coverage criteria
  -fno-crash-diagnostics  Disable auto-generation of preprocessed source files and a script for reproduction during a clang crash
  -fno-cuda-prec-sqrt     Don't specify that sqrt is correctly rounded (for CUDA devices)
  -fno-cx-fortran-rules   Range reduction is disabled for complex arithmetic operations
  -fno-cx-limited-range   Basic algebraic expansions of complex arithmetic operations involving are disabled.
  -fno-cxx-modules        Disable modules for C++
  -fno-debug-macro        Do not emit macro debug information
  -fno-declspec           Disallow __declspec as a keyword
  -fno-define-target-os-macros
                          Disable predefined target OS macros
  -fno-delayed-template-parsing
                          Disable delayed template parsing
  -fno-delete-null-pointer-checks
                          Do not treat usage of null pointers as undefined behavior
  -fno-diagnostics-fixit-info
                          Do not include fixit information in diagnostics
  -fno-diagnostics-show-line-numbers
                          Show line numbers in diagnostic code snippets
  -fno-digraphs           Disallow alternative token representations '<:', ':>', '<%', '%>', '%:', '%:%:'
  -fno-direct-access-external-data
                          Use GOT indirection to reference external data symbols
  -fno-disable-block-signature-string
                          Don't disable block signature string)
  -fno-discard-value-names
                          Do not discard value names in LLVM IR
  -fno-dollars-in-identifiers
                          Disallow '$' in identifiers
  -fno-elide-constructors Disable C++ copy constructor elision
  -fno-elide-type         Do not elide types when printing diagnostics
  -fno-eliminate-unused-debug-types
                          Emit  debug info for defined but unused types
  -fno-emit-class-debug-always
                          Emit debug information for a C++ class in only one object file
  -fno-exceptions         Disable support for exception handling
  -fno-experimental-late-parse-attributes
                          Disable experimental late parsing of attributes
  -fno-experimental-relative-c++-abi-vtables
                          Do not use the experimental C++ class ABI for classes with virtual tables
  -fno-experimental-sanitize-metadata=<value>
                          Disable emitting metadata for binary analysis sanitizers
  -fno-fat-lto-objects    Disable fat LTO object support
  -fno-file-reproducible  Use the host's platform-specific path separator character when expanding the __FILE__ macro
  -fno-fine-grained-bitfield-accesses
                          Use large-integer access for consecutive bitfield runs.
  -fno-finite-loops       Do not assume that any loop is finite.
  -fno-fixed-point        Disable fixed point types
  -fno-force-enable-int128
                          Disable support for int128_t type
  -fno-global-isel        Disables the global instruction selector
  -fno-gnu-inline-asm     Disable GNU style inline asm
  -fno-gpu-allow-device-init
                          Don't allow device side init function in HIP (experimental)
  -fno-gpu-approx-transcendentals
                          Don't use approximate transcendental functions
  -fno-gpu-defer-diag     Don't defer host/device related diagnostic messages for CUDA/HIP
  -fno-hip-emit-relocatable
                          Do not override toolchain to compile HIP source to relocatable
  -fno-hip-fp32-correctly-rounded-divide-sqrt
                          Don't specify that single precision floating-point divide and sqrt used in the program source are correctly rounded (HIP device compilation only)
  -fno-hip-kernel-arg-name
                          Don't specify that kernel argument names are preserved (HIP only)
  -fno-hip-new-launch-api Don't use new kernel launching API for HIP
  -fno-honor-nan-compares Do not honor NaN compares with fast math
  -fno-integrated-as      Disable the integrated assembler
  -fno-integrated-cc1     Spawn a separate process for each cc1
  -fno-integrated-objemitter
                          Use external machine object code emitter.
  -fno-jump-tables        Do not use jump tables for lowering switches
  -fno-keep-persistent-storage-variables
                          Disable keeping all variables that have a persistent storage duration, including global, static and thread-local variables, to guarantee that they can be directly addressed
  -fno-keep-static-consts Don't keep static const variables even if unused
  -fno-knr-functions      Disable support for K&R C function declarations
  -fno-link-huge-device-code
                          Do not generate or use a custom linker script for huge device code sections (default)
  -fno-lto                Disable LTO mode (default)
  -fno-memory-profile     Disable heap memory profiling
  -fno-merge-all-constants
                          Disallow merging of constants
  -fno-merge-debug-strings
                           Do not mergeidentical debug strings in different object files.
  -fno-modules-check-relocated<value>
                          Skip checks for relocated modules when loading PCM files
  -fno-modules-validate-textual-header-includes
                          Do not enforce -fmodules-decluse and private header restrictions for textual headers. This flag will be removed in a future Clang release.
  -fno-new-infallible     Disable treating throwing global C++ operator new as always returning valid memory (annotates with __attribute__((returns_nonnull)) and throw()). This is detectable in source.
  -fno-objc-avoid-heapify-local-blocks
                          Don't try to avoid heapifying local blocks
  -fno-objc-infer-related-result-type
                          do not infer Objective-C related result type based on method family
  -fno-offload-lto        Disable LTO mode (default) for offload compilation
  -fno-offload-uniform-block
                          Don't assume that kernels are launched with uniform block sizes (default true for CUDA/HIP and false otherwise)
  -fno-openmp-device-lib=<value>
                          Control exclusion of device libraries from device binary linkage. Valid arguments are libc, libm-fp32, libm-fp64, all
  -fno-openmp-extensions  Disable all Clang extensions for OpenMP directives and clauses
  -fno-operator-names     Do not treat C++ operator name keywords as synonyms for operators
  -fno-optimize-sibling-calls
                          Disable tail call optimization, keeping the call stack accurate
  -fno-pch-codegen        Do not generate code for uses of this PCH that assumes an explicit object file will be built for the PCH
  -fno-pch-debuginfo      Do not generate debug info for types in an object file built from this PCH and do not generate them elsewhere
  -fno-plt                Use GOT indirection instead of PLT to make external function calls (x86 only)
  -fno-preserve-as-comments
                          Do not preserve comments in inline assembly
  -fno-profile-generate   Disable generation of profile instrumentation.
  -fno-profile-instr-generate
                          Disable generation of profile instrumentation.
  -fno-profile-instr-use  Disable using instrumentation data for profile-guided optimization
  -fno-pseudo-probe-for-profiling
                          Do not emit pseudo probes for sample profiling
  -fno-raw-string-literals
                          Disable raw string literals
  -fno-register-global-dtors-with-atexit
                          Don't use atexit or __cxa_atexit to register global destructors
  -fno-relaxed-template-template-args
                          Disable C++17 relaxed template template argument matching
  -fno-rtlib-add-rpath    Do not add -rpath with architecture-specific resource directory to the linker flags. When --hip-link is specified, do not add -rpath with HIP runtime library directory to the linker flags
  -fno-rtlib-defaultlib   On Windows, do not emit /defaultlib: directives to link compiler-rt libraries
  -fno-rtti-data          Disable generation of RTTI data
  -fno-rtti               Disable generation of rtti information
  -fno-sanitize-address-globals-dead-stripping
                          Disable linker dead stripping of globals in AddressSanitizer
  -fno-sanitize-address-outline-instrumentation
                          Use default code inlining logic for the address sanitizer
  -fno-sanitize-address-poison-custom-array-cookie
                          Disable poisoning array cookies when using custom operator new[] in AddressSanitizer
  -fno-sanitize-address-use-after-scope
                          Disable use-after-scope detection in AddressSanitizer
  -fno-sanitize-address-use-odr-indicator
                          Disable ODR indicator globals
  -fno-sanitize-cfi-canonical-jump-tables
                          Do not make the jump table addresses canonical in the symbol table
  -fno-sanitize-cfi-cross-dso
                          Disable control flow integrity (CFI) checks for cross-DSO calls.
  -fno-sanitize-coverage=<value>
                          Disable features of coverage instrumentation for Sanitizers
  -fno-sanitize-hwaddress-experimental-aliasing
                          Disable aliasing mode in HWAddressSanitizer
  -fno-sanitize-ignorelist
                          Don't use ignorelist file for sanitizers
  -fno-sanitize-memory-param-retval
                          Disable detection of uninitialized parameters and return values
  -fno-sanitize-memory-track-origins
                          Disable origins tracking in MemorySanitizer
  -fno-sanitize-memory-use-after-dtor
                          Disable use-after-destroy detection in MemorySanitizer
  -fno-sanitize-recover=<value>
                          Disable recovery for specified sanitizers
  -fno-sanitize-stable-abi
                          Conventional ABI instrumentation for sanitizer runtime. Default: Conventional
  -fno-sanitize-stats     Disable sanitizer statistics gathering.
  -fno-sanitize-thread-atomics
                          Disable atomic operations instrumentation in ThreadSanitizer
  -fno-sanitize-thread-func-entry-exit
                          Disable function entry/exit instrumentation in ThreadSanitizer
  -fno-sanitize-thread-memory-access
                          Disable memory access instrumentation in ThreadSanitizer
  -fno-sanitize-trap=<value>
                          Disable trapping for specified sanitizers
  -fno-sanitize-trap      Disable trapping for all sanitizers
  -fno-short-wchar        Force wchar_t to be an unsigned int
  -fno-show-column        Do not include column number on diagnostics
  -fno-show-source-location
                          Do not include source location information with diagnostics
  -fno-signed-char        char is unsigned
  -fno-signed-zeros       Allow optimizations that ignore the sign of floating point zeros
  -fno-skip-odr-check-in-gmf
                          Perform ODR checks for decls in the global module fragment.
  -fno-spell-checking     Disable spell-checking
  -fno-split-machine-functions
                          Disable late function splitting using profile information (x86 ELF/COFF)
  -fno-split-stack        Wouldn't use segmented stack
  -fno-stack-clash-protection
                          Disable stack clash protection
  -fno-stack-protector    Disable the use of stack protectors
  -fno-standalone-debug   Limit debug information produced to reduce size of debug binary
  -fno-strict-aliasing    Disable optimizations based on strict aliasing rules
  -fno-strict-float-cast-overflow
                          Relax language rules and try to match the behavior of the target's native float-to-int conversion instructions
  -fno-strict-return      Don't treat control flow paths that fall off the end of a non-void function as unreachable
  -fno-sycl-add-default-spec-consts-image
                          Turns off generation of device image where all specialization constant usages are replaced with default values.
  -fno-sycl-allow-device-dependencies
                          Do not allow dependencies between device code images (default)
  -fno-sycl-dead-args-optimization
                          Disables elimination of DPC++ dead kernel arguments
  -fno-sycl-decompose-functor
                          Do not decompose SYCL functor if possible (experimental, CUDA only)
  -fno-sycl-device-code-split-esimd
                          do not split ESIMD and SYCL device code into separate device binary images. Has effect only for SPIR-based targets. (experimental)
  -fno-sycl-device-lib-jit-link
                          Disables sycl device library jit link (experimental)
  -fno-sycl-device-lib=<value>
                          Control exclusion of device libraries from device binary linkage. Valid arguments are libc, libm-fp32, libm-fp64, all
  -fno-sycl-early-optimizations
                          Disable standard optimization pipeline for SYCL device compiler
  -fno-sycl-esimd-force-stateless-mem
                          Do not enforce using stateless memory accesses.
  -fno-sycl-explicit-simd Disable SYCL explicit SIMD extension. (deprecated)
  -fno-sycl-force-inline-kernel-lambda
                          Disallow force inline SYCL kernels lambda in entry point
  -fno-sycl-id-queries-fit-in-int
                          Do not assume that SYCL ID queries fit within MAX_INT.
  -fno-sycl-instrument-device-code
                          Do not add Instrumentation and Tracing Technology (ITT) instrumentation intrinsics calls (experimental)
  -fno-sycl-libspirv      Disable check for libspirv
  -fno-sycl-link-spirv    Disable adding of the default (spir64) triple when discovered in user specified objects and archives.
  -fno-sycl-pstl-offload  Disable offloading of C++ standard parallel algorithms.
  -fno-sycl-rdc           Generate relocatable device code during SYCL offload target compilation. Use of ‘-fno-sycl-rdc’ in combination with ‘-c’ will produce final device binaries within the generated fat object. When using this option, each kernel must be self-contained within its translation unit (source file).  Therefore, the use of SYCL_EXTERNAL is disallowed when this option is enabled.
  -fno-sycl-remove-unused-external-funcs
                          Prevent removal of unused `SYCL_EXTERNAL` functions
  -fno-sycl-unnamed-lambda
                          Disallow unnamed SYCL lambda kernels
  -fno-sycl-use-bitcode   Use SPIR-V instead of LLVM bitcode in fat objects (deprecated)
  -fno-sycl-use-footer    Disable usage of the integration footer during SYCL enabled compilations.
  -fno-sycl               Disables SYCL kernels compilation for device
  -fno-system-debug       Do not emit debug information for declarations in system headers
  -fno-temp-file          Directly create compilation output files. This may lead to incorrect incremental builds if the compiler crashes
  -fno-threadsafe-statics Do not emit code to make initialization of local statics thread safe
  -fno-trigraphs          Do not process trigraph sequences
  -fno-unified-lto        Use distinct LTO pipelines
  -fno-unique-section-names
                          Don't use unique names for text and data sections
  -fno-unroll-loops       Turn off loop unroller
  -fno-use-cxa-atexit     Don't use __cxa_atexit for calling destructors
  -fno-use-init-array     Use .ctors/.dtors instead of .init_array/.fini_array
  -fno-vec-allow-scalar-stores
                          When this option is set, an explicit simd loop (for example, one set with #pragma omp simd) will not be vectorized if it contains a store to a scalar variable that is not marked as private, lastprivate, or reduction.
  -fno-vec-peel-loops     Disable peel loop vectorization.
  -fno-vec-remainder-loops
                          Disable remainder loop vectorization.
  -fno-vec-with-mask      Disable vectorization for short trip-count loops with masking.
  -fno-verify-intermediate-code
                          Disable verification of LLVM IR
  -fno-visibility-inlines-hidden-static-local-var
                          Disables -fvisibility-inlines-hidden-static-local-var (this is the default on non-darwin targets)
  -fno-xray-function-index
                          Omit function index section at the expense of single-function patching performance
  -fno-zero-initialized-in-bss
                          Don't place zero initialized data in BSS
  -fobjc-arc-exceptions   Use EH-safe code when synthesizing retains and releases in -fobjc-arc
  -fobjc-arc              Synthesize retain and release calls for Objective-C pointers
  -fobjc-avoid-heapify-local-blocks
                          Try to avoid heapifying local blocks
  -fobjc-disable-direct-methods-for-testing
                          Ignore attribute objc_direct so that direct methods can be tested
  -fobjc-encode-cxx-class-template-spec
                          Fully encode c++ class template specialization
  -fobjc-exceptions       Enable Objective-C exceptions
  -fobjc-runtime=<value>  Specify the target Objective-C runtime kind and version
  -fobjc-weak             Enable ARC-style weak references in Objective-C
  -foffload-implicit-host-device-templates
                          Template functions or specializations without host, device and global attributes have implicit host device attributes (CUDA/HIP only)
  -foffload-lto=<value>   Set LTO mode for offload compilation
  -foffload-lto           Enable LTO in 'full' mode for offload compilation
  -foffload-uniform-block Assume that kernels are launched with uniform block sizes (default true for CUDA/HIP and false otherwise)
  -fomit-frame-pointer    Omit the frame pointer from functions that don't need it. Some stack unwinding cases, such as profilers and sanitizers, may prefer specifying -fno-omit-frame-pointer. On many targets, -O1 and higher omit the frame pointer by default. -m[no-]omit-leaf-frame-pointer takes precedence for leaf functions
  -fopenacc               Enable OpenACC
  -fopenmp-concurrent-host-device-compile<value>
                          Enable parallel compilation of host and device compilation steps when performing OpenMP offload compiles using -fopenmp-targets. (experimental)
  -fopenmp-declare-target-scalar-defaultmap=<value>
                          Assume that a scalar declare target variable with implicit data-mapping referenced in a 'target' construct has the same value in the host and device environment
  -fopenmp-device-lib=<value>
                          Control inclusion of device libraries into device binary linkage. Valid arguments are libc, libm-fp32, libm-fp64, all
  -fopenmp-device-link    Perform device link during compilation step instead of link step (-c compilations).  Use for offload compilations to produce final device binaries within the generated fat object.
  -fopenmp-extensions     Enable all Clang extensions for OpenMP directives and clauses
  -fopenmp-force-usm      Force behvaior as if the user specified pragma omp requires unified_shared_memory.
  -fopenmp-offload-mandatory
                          Do not create a host fallback if offloading to the device fails.
  -fopenmp-simd           Emit OpenMP code only for SIMD-based constructs. Advanced users who prefer to use OpenMP* as it is implemented by the LLVM community can get most of that functionality by using -fopenmp-simd.
  -fopenmp-target-buffers=<value>
                          Allow access to target objects of 4GB or larger in target code.
  -fopenmp-target-debug   Enable debugging in the OpenMP offloading device RTL
  -fopenmp-target-default-sub-group-size=<value>
                          Specify the default sub-group size of SPMD kernels generated for OpenMP target constructs for SPIR64
  -fopenmp-target-jit     Emit code that can be JIT compiled for OpenMP offloading. Implies -foffload-lto=full
  -fopenmp-targets=<value>
                          Specify comma-separated list of triples that correspond to OpenMP offloading targets to be supported.  Valid triples include spir64_gen, spir64_x86_64 and spir64
  -fopenmp-version=<value>
                          Set OpenMP version (e.g. 45 for OpenMP 4.5, 51 for OpenMP 5.1). Default value is 51 for Clang
  -fopenmp                Parse OpenMP pragmas and generate parallel code. Advanced users who prefer to use OpenMP* as it is implemented by the LLVM community can get most of that functionality by using -fopenmp.
  -foperator-arrow-depth=<value>
                          Maximum number of 'operator->'s to call for a member access
  -foptimization-record-file=<file>
                          Specify the output name of the file containing the optimization remarks. Implies -fsave-optimization-record. On Darwin platforms, this cannot be used with multiple -arch <arch> options.
  -foptimization-record-passes=<regex>
                          Only include passes which match a specified regular expression in the generated optimization record (by default, include all passes)
  -forder-file-instrumentation
                          Generate instrumented code to collect order file into default.profraw file (overridden by '=' form of option or LLVM_PROFILE_FILE env var)
  -fortlib                Allow for Fortran generated objects to be mixed and matched and linked in with the C/C++ compiler to pull in the needed libraries.
  -fp-model=<value>       Controls the semantics of floating-point calculations.
  -fp-speculation=<value> Specifies the exception behavior of floating-point operations.
  -fpack-struct=<value>   Specify the default maximum struct packing alignment
  -fpascal-strings        Recognize and construct Pascal-style string literals
  -fpass-plugin=<dsopath> Load pass plugin from a dynamic shared object file (only with new pass manager).
  -fpatchable-function-entry=<N,M>
                          Generate M NOPs before function entry and N-M NOPs after function entry
  -fpcc-struct-return     Override the default ABI to return all structs on the stack
  -fpch-codegen           Generate code for uses of this PCH that assumes an explicit object file will be built for the PCH
  -fpch-debuginfo         Generate debug info for types in an object file built from this PCH and do not generate them elsewhere
  -fpch-instantiate-templates
                          Instantiate templates already while building a PCH
  -fpch-validate-input-files-content
                          Validate PCH input files based on content if mtime differs
  -fplugin-arg-<name>-<arg>
                          Pass <arg> to plugin <name>
  -fplugin=<dsopath>      Load the named plugin (dynamic shared object)
  -fprebuilt-implicit-modules
                          Look up implicit modules in the prebuilt module path
  -fprebuilt-module-path=<directory>
                          Specify the prebuilt module path
  -fpreview-breaking-changes
                          When specified, it informs the compiler driver and compilation phases that it is allowed to break backward compatibility. When this option is specified the compiler will also set the macro __INTEL_PREVIEW_BREAKING_CHANGES.
                          When this option is used in conjunction with -fsycl, the driver will link against an alternate form of libsycl, libsycl-preview.
  -fproc-stat-report=<value>
                          Save subprocess statistics to the given file
  -fproc-stat-report<value>
                          Print subprocess statistics
  -fprofile-arcs          Instrument code to produce gcov data files (*.gcda)
  -fprofile-dwo-dir=<value>
                          Directory to store .dwo files when using -fprofile-sample-generate and -gsplit-dwarf. (experimental)
  -fprofile-exclude-files=<value>
                          Instrument only functions from files where names don't match all the regexes separated by a semi-colon
  -fprofile-filter-files=<value>
                          Instrument only functions from files where names match any regex separated by a semi-colon
  -fprofile-function-groups=<N>
                          Partition functions into N groups and select only functions in group i to be instrumented using -fprofile-selected-function-group
  -fprofile-generate=<directory>
                          Generate instrumented code to collect execution counts into <directory>/default.profraw (overridden by LLVM_PROFILE_FILE env var)
  -fprofile-generate      Generate instrumented code to collect execution counts into default.profraw (overridden by LLVM_PROFILE_FILE env var)
  -fprofile-instr-generate=<file>
                          Generate instrumented code to collect execution counts into <file> (overridden by LLVM_PROFILE_FILE env var)
  -fprofile-instr-generate
                          Generate instrumented code to collect execution counts into default.profraw file (overridden by '=' form of option or LLVM_PROFILE_FILE env var)
  -fprofile-instr-use=<value>
                          Use instrumentation data for profile-guided optimization
  -fprofile-list=<value>  Filename defining the list of functions/files to instrument. The file uses the sanitizer special case list format.
  -fprofile-ml-use        Use pre-trained machine learning model for profile guided optimizations.(deprecated)
  -fprofile-remapping-file=<file>
                          Use the remappings described in <file> to match the profile data against names in the program
  -fprofile-sample-accurate
                          Specifies that the sample profile is accurate
  -fprofile-sample-generate=<value>
                          Enable compiler and linker generating information and adjusting optimizations for Sample-based Profile Guided Optimizations (SPGO). Vaild arguments are none, keep-all-opt, med-fidelity, max-fidelity. (experimental)
  -fprofile-sample-use=<value>
                          Enable compiler and linker using information for Sample-based Profile Guided Optimizations (SPGO). (experimental)
  -fprofile-selected-function-group=<i>
                          Partition functions into N groups using -fprofile-function-groups and select only functions in group i to be instrumented. The valid range is 0 to N-1 inclusive
  -fprofile-update=<method>
                          Set update method of profile counters
  -fprofile-use=<pathname>
                          Use instrumentation data for profile-guided optimization. If pathname is a directory, it reads from <pathname>/default.profdata. Otherwise, it reads from file <pathname>.
  -fprotect-parens        Determines whether the optimizer honors parentheses when floating-point expressions are evaluated
  -fpseudo-probe-for-profiling
                          Emit pseudo probes for sample profiling
  -fptrauth-auth-traps    Enable traps on authentication failures
  -fptrauth-calls         Enable signing and authentication of all indirect calls
  -fptrauth-function-pointer-type-discrimination
                          Enable type discrimination on C function pointers
  -fptrauth-init-fini     Enable signing of function pointers in init/fini arrays
  -fptrauth-intrinsics    Enable pointer authentication intrinsics
  -fptrauth-returns       Enable signing and authentication of return addresses
  -fptrauth-vtable-pointer-address-discrimination
                          Enable address discrimination of vtable pointers
  -fptrauth-vtable-pointer-type-discrimination
                          Enable type discrimination of vtable pointers
  -frandomize-layout-seed-file=<file>
                          File holding the seed used by the randomize structure layout feature
  -frandomize-layout-seed=<seed>
                          The seed used by the randomize structure layout feature
  -fraw-string-literals   Enable raw string literals
  -freciprocal-math       Allow division operations to be reassociated
  -freg-struct-return     Override the default ABI to return small structs in registers
  -fregister-global-dtors-with-atexit
                          Use atexit or __cxa_atexit to register global destructors
  -frelaxed-template-template-args
                          Enable C++17 relaxed template template argument matching
  -fropi                  Generate read-only position independent code (ARM only)
  -frounding-math         Disable floating point optimizations that assume the default rounding mode.
  -frtlib-add-rpath       Add -rpath with architecture-specific resource directory to the linker flags. When --hip-link is specified, also add -rpath with HIP runtime library directory to the linker flags
  -frtlib-defaultlib      On Windows, emit /defaultlib: directives to link compiler-rt libraries (default)
  -frwpi                  Generate read-write position independent code (ARM only)
  -fsafe-buffer-usage-suggestions
                          Display suggestions to update code associated with -Wunsafe-buffer-usage warnings
  -fsample-profile-use-profi
                          Use profi to infer block and edge counts
  -fsanitize-address-destructor=<value>
                          Set the kind of module destructors emitted by AddressSanitizer instrumentation. These destructors are emitted to unregister instrumented global variables when code is unloaded (e.g. via `dlclose()`).
  -fsanitize-address-field-padding=<value>
                          Level of field padding for AddressSanitizer
  -fsanitize-address-globals-dead-stripping
                          Enable linker dead stripping of globals in AddressSanitizer
  -fsanitize-address-outline-instrumentation
                          Always generate function calls for address sanitizer instrumentation
  -fsanitize-address-poison-custom-array-cookie
                          Enable poisoning array cookies when using custom operator new[] in AddressSanitizer
  -fsanitize-address-use-after-return=<mode>
                          Select the mode of detecting stack use-after-return in AddressSanitizer
  -fsanitize-address-use-after-scope
                          Enable use-after-scope detection in AddressSanitizer
  -fsanitize-address-use-odr-indicator
                          Enable ODR indicator globals to avoid false ODR violation reports in partially sanitized programs at the cost of an increase in binary size
  -fsanitize-cfi-canonical-jump-tables
                          Make the jump table addresses canonical in the symbol table
  -fsanitize-cfi-cross-dso
                          Enable control flow integrity (CFI) checks for cross-DSO calls.
  -fsanitize-cfi-icall-experimental-normalize-integers
                          Normalize integers in CFI indirect call type signature checks
  -fsanitize-cfi-icall-generalize-pointers
                          Generalize pointers in CFI indirect call type signature checks
  -fsanitize-coverage-allowlist=<value>
                          Restrict sanitizer coverage instrumentation exclusively to modules and functions that match the provided special case list, except the blocked ones
  -fsanitize-coverage-ignorelist=<value>
                          Disable sanitizer coverage instrumentation for modules and functions that match the provided special case list, even the allowed ones
  -fsanitize-coverage=<value>
                          Specify the type of coverage instrumentation for Sanitizers
  -fsanitize-hwaddress-abi=<value>
                          Select the HWAddressSanitizer ABI to target (interceptor or platform, default interceptor). This option is currently unused.
  -fsanitize-hwaddress-experimental-aliasing
                          Enable aliasing mode in HWAddressSanitizer
  -fsanitize-ignorelist=<value>
                          Path to ignorelist file for sanitizers
  -fsanitize-memory-param-retval
                          Enable detection of uninitialized parameters and return values
  -fsanitize-memory-track-origins=<value>
                          Enable origins tracking in MemorySanitizer
  -fsanitize-memory-track-origins
                          Enable origins tracking in MemorySanitizer
  -fsanitize-memory-use-after-dtor
                          Enable use-after-destroy detection in MemorySanitizer
  -fsanitize-memtag-mode=<value>
                          Set default MTE mode to 'sync' (default) or 'async'
  -fsanitize-recover=<value>
                          Enable recovery for specified sanitizers
  -fsanitize-stable-abi   Stable  ABI instrumentation for sanitizer runtime. Default: Conventional
  -fsanitize-stats        Enable sanitizer statistics gathering.
  -fsanitize-system-ignorelist=<value>
                          Path to system ignorelist file for sanitizers
  -fsanitize-thread-atomics
                          Enable atomic operations instrumentation in ThreadSanitizer (default)
  -fsanitize-thread-func-entry-exit
                          Enable function entry/exit instrumentation in ThreadSanitizer (default)
  -fsanitize-thread-memory-access
                          Enable memory access instrumentation in ThreadSanitizer (default)
  -fsanitize-trap=<value> Enable trapping for specified sanitizers
  -fsanitize-trap         Enable trapping for all sanitizers
  -fsanitize-undefined-strip-path-components=<number>
                          Strip (or keep only, if negative) a given number of path components when emitting check metadata.
  -fsanitize=<check>      Turn on runtime checks for various forms of undefined or suspicious behavior. See user manual for available checks
  -fsave-optimization-record=<format>
                          Generate an optimization record file in a specific format
  -fsave-optimization-record
                          Generate a YAML optimization record file
  -fseh-exceptions        Use SEH style exceptions
  -fseparate-named-sections
                          Use separate unique sections for named sections (ELF Only)
  -fshort-enums           Allocate to an enum type only as many bytes as it needs for the declared range of possible values
  -fshort-wchar           Force wchar_t to be a short unsigned int
  -fshow-overloads=<value>
                          Which overload candidates to show when overload resolution fails. Defaults to 'all'
  -fshow-skipped-includes Show skipped includes in -H output.
  -fsigned-char           char is signed
  -fsized-deallocation    Enable C++14 sized global deallocation functions
  -fsjlj-exceptions       Use SjLj style exceptions
  -fskip-odr-check-in-gmf Skip ODR checks for decls in the global module fragment.
  -fslp-vectorize         Enable the superword-level parallelism vectorization passes
  -fspell-checking-limit=<value>
                          Set the maximum number of times to perform spell checking on unrecognized identifiers (0 = no limit)
  -fsplit-dwarf-inlining  Provide minimal debug info in the object/executable to facilitate online symbolication/stack traces in the absence of .dwo/.dwp files when using Split DWARF
  -fsplit-lto-unit        Enables splitting of the LTO unit
  -fsplit-machine-functions
                          Enable late function splitting using profile information (x86 ELF/COFF)
  -fsplit-stack           Use segmented stack
  -fstack-clash-protection
                          Enable stack clash protection
  -fstack-limit-register=<value>
                          Limits the stack register size
  -fstack-protector-all   Enable stack protectors for all functions
  -fstack-protector-strong
                          Enable stack protectors for some functions vulnerable to stack smashing. Compared to -fstack-protector, this uses a stronger heuristic that includes functions containing arrays of any size (and any type), as well as any calls to alloca or the taking of an address from a local variable
  -fstack-protector       Enable stack protectors for some functions vulnerable to stack smashing. This uses a loose heuristic which considers functions vulnerable if they contain a char (or 8bit integer) array or constant sized calls to alloca , which are of greater size than ssp-buffer-size (default: 8 bytes). All variable sized calls to alloca are considered vulnerable. A function with a stack protector has a guard value added to the stack frame that is checked on function exit. The guard value must be positioned in the stack frame such that a buffer overflow from a vulnerable variable will overwrite the guard value before overwriting the function's return address. The reference stack guard value is stored in a global variable.
  -fstack-security-check  Enable overflow security checks
  -fstack-size-section    Emit section containing metadata on function stack sizes
  -fstack-usage           Emit .su file containing information on function stack sizes
  -fstandalone-debug      Emit full debug info for all types used by the program
  -fstrict-aliasing       Enable optimizations based on strict aliasing rules
  -fstrict-enums          Enable optimizations based on the strict definition of an enum's value range
  -fstrict-flex-arrays=<n>
                          Enable optimizations based on the strict definition of flexible arrays
  -fstrict-float-cast-overflow
                          Assume that overflowing float-to-int casts are undefined (default)
  -fstrict-vtable-pointers
                          Enable optimizations based on the strict rules for overwriting polymorphic C++ objects
  -fswift-async-fp=<option>
                          Control emission of Swift async extended frame info
  -fsycl-add-default-spec-consts-image
                          Generates a copy of every device image that uses a specialization constant and replaces all usages of specialization constant with default values specified by specialization_id. If a device image doesn't use a specialization constant at all then no copy is generated. This option is only useful if used in conjunction with Ahead of Time Compilation (-fsycl-target command line option).
  -fsycl-allow-device-dependencies
                          Allow dependencies between device code images
  -fsycl-dead-args-optimization
                          Enables elimination of DPC++ dead kernel arguments
  -fsycl-decompose-functor
                          Do decompose SYCL functor if possible (experimental, CUDA only)
  -fsycl-default-sub-group-size <value>
                          Set the default sub group size for SYCL kernels
  -fsycl-device-code-split-esimd
                          split ESIMD device code from SYCL into a separate device binary image (default). Has effect only for SPIR-based targets. (experimental)
  -fsycl-device-code-split=<value>
                          Perform SYCL device code split: per_kernel (device code module is created for each SYCL kernel) | per_source (device code module is created for each source (translation unit)) | off (no device code split). | auto (use heuristic to select the best way of splitting device code). Default is 'auto' - use heuristic to distribute device code across modules
  -fsycl-device-code-split
                          Perform SYCL device code split in the 'auto' mode, i.e. use heuristic to distribute device code across modules
  -fsycl-device-lib-jit-link
                          Enables sycl device library jit link (experimental)
  -fsycl-device-lib=<value>
                          Control inclusion of device libraries into device binary linkage. Valid arguments are libc, libm-fp32, libm-fp64, libimf-fp32, libimf-fp64, libimf-bf16, all
  -fsycl-device-obj=<value>
                          Specify format of device code stored in the resulting object. Valid values are: spirv, llvmir (default)
  -fsycl-device-only      Compile SYCL kernels for device
  -fsycl-disable-range-rounding
                          Deprecated: please use -fsycl-range-rounding=disable instead.
  -fsycl-dump-device-code=<value>
                          Dump device code into the user provided directory.
  -fsycl-early-optimizations
                          Enable standard optimization pipeline for SYCL device compiler
  -fsycl-embed-ir         Embed LLVM IR for runtime kernel fusion
  -fsycl-enable-function-pointers
                          Experimental Feature: Enables function pointers and support for virtual functions for DPC++ kernels and device functions.
  -fsycl-esimd-force-stateless-mem
                          Enforce using stateless memory accesses. Convert stateful accesses via SYCL accessors to stateless within ESIMD kernels. Enabled by default.
  -fsycl-exp-range-rounding
                          Use experimental range rounding.
  -fsycl-explicit-simd    Enable SYCL explicit SIMD extension. (deprecated)
  -fsycl-footer-path=<value>
                          Specify the location of the temporary source file with the included integration footer.
  -fsycl-force-inline-kernel-lambda
                          Allow force inline SYCL kernels lambda in entry point
  -fsycl-force-target=<value>
                          Force the usage of the given triple when extracting device code from any given objects on the command line
  -fsycl-fp32-prec-sqrt   SYCL only. Specify that single precision floating-point sqrt is correctly rounded.
  -fsycl-fp64-conv-emu    Enable fp64 partial emulation for kernels with only fp64 conversion operations and no fp64 computation operations (requires Intel GPU backend supporting fp64 partial emulation).
  -fsycl-help=<value>     Emit help information from the related offline compilation tool. Valid values: all, fpga, gen, x86_64.
  -fsycl-help             Emit help information from all of the offline compilation tools
  -fsycl-host-compiler-options=<value>
                          When performing the host compilation with -fsycl-host-compiler specified, use the given options during that compile. Options are expected to be a quoted list of space separated options.
  -fsycl-host-compiler=<value>
                          Specify C++ compiler binary to perform host compilation with during SYCL offload compiles.
  -fsycl-id-queries-fit-in-int
                          Assume that SYCL ID queries fit within MAX_INT.
  -fsycl-instrument-device-code
                          Add Instrumentation and Tracing Technology (ITT) instrumentation intrinsics calls (experimental)
  -fsycl-libspirv-path=<value>
                          Path to libspirv library
  -fsycl-link=<value>     Generate partially linked device and host object to be used at various stages of compilation
  -fsycl-link             Generate partially linked device object to be used with the host link
  -fsycl-max-parallel-link-jobs=<value>
                          Experimental feature: Controls the maximum parallelism of actions performed on SYCL device code post-link, i.e. the generation of SPIR-V device images or AOT compilation of each device image.
  -fsycl-optimize-non-user-code
                          Option used in conjunction with -O0 to optimize SYCL framework utility functions and leave user's kernel code unoptimized. (experimental)
  -fsycl-pstl-offload=<value>
                          Enable offloading of C++ standard parallel algorithms. Valid arguments are gpu and cpu.
  -fsycl-pstl-offload     Enable offloading of C++ standard parallel algorithms.
  -fsycl-range-rounding=<value>
                          Options for range rounding of SYCL range kernels: disable (do not generate range rounded kernels) force (only generate range rounded kernels) on (generate range rounded kernels as well as unrounded kernels). Default is 'on'
  -fsycl-remove-unused-external-funcs
                          Allow removal of unused `SYCL_EXTERNAL` functions (default)
  -fsycl-targets=<value>  Specify comma-separated list of triples that correspond to SYCL offloading targets to be supported. Valid triples include spir64_gen, spir64_x86_64, spir64_fpga and spir64
  -fsycl-unnamed-lambda   Allow unnamed SYCL lambda kernels
  -fsycl-use-bitcode      Use LLVM bitcode instead of SPIR-V in fat objects (deprecated)
  -fsycl                  Enables SYCL kernels compilation for device
  -fsyntax-only           Run the preprocessor, parser and semantic analysis stages
  -fsystem-debug          Emit debug information for declarations in system headers
  -fsystem-module         Build this module as a system module. Only used with -emit-module
  -ftarget-compile-fast   Experimental feature: Reduce target compilation time, with potential runtime performance trade-off.
  -ftarget-export-symbols Expose exported symbols in a generated target library to allow for visibilty to other modules.
  -ftarget-register-alloc-mode=<value>
                          Specify a register allocation mode for specific hardware for use by supported target backends.
  -ftemplate-backtrace-limit=<value>
                          Set the maximum number of entries to print in a template instantiation backtrace (0 = no limit)
  -ftemplate-depth=<value>
                          Set the maximum depth of recursive template instantiation
  -ftest-coverage         Produce gcov notes files (*.gcno)
  -fthin-link-bitcode=<value>
                          Write minimized bitcode to <file> for the ThinLTO thin link only
  -fthinlto-index=<value> Perform ThinLTO importing using provided function summary index
  -ftime-report=<value>   (For new pass manager) 'per-pass': one report for each pass; 'per-pass-run': one report for each pass invocation
  -ftime-trace-granularity=<value>
                          Minimum time granularity (in microseconds) traced by time profiler
  -ftime-trace=<value>    Similar to -ftime-trace. Specify the JSON file or a directory which will contain the JSON file
  -ftime-trace            Turn on time profiler. Generates JSON file based on output filename.
  -ftrap-function=<value> Issue call to specified function rather than a trap instruction
  -ftrapv-handler=<function name>
                          Specify the function to be called on overflow
  -ftrapv                 Trap on integer overflow
  -ftrigraphs             Process trigraph sequences
  -ftrivial-auto-var-init-max-size=<value>
                          Stop initializing trivial automatic stack variables if var size exceeds the specified number of instances (in bytes)
  -ftrivial-auto-var-init-stop-after=<value>
                          Stop initializing trivial automatic stack variables after the specified number of instances
  -ftrivial-auto-var-init=<value>
                          Initialize trivial automatic stack variables. Defaults to 'uninitialized'
  -ftz                    Enable flush denormal results to zero
  -funified-lto           Use the unified LTO pipeline
  -funique-basic-block-section-names
                          Use unique names for basic block sections (ELF Only)
  -funique-internal-linkage-names
                          Uniqueify Internal Linkage Symbol Names by appending the MD5 hash of the module path
  -funroll-loops          Turn on loop unroller
  -funsafe-math-optimizations
                          Allow unsafe floating-point math optimizations which may decrease precision
  -fuse-complex-intrinsics
                          Determines whether to lower _Complex operations to LLVM complex intrinsics
  -fuse-cuid=<value>      Method to generate ID's for compilation units for single source offloading languages CUDA and HIP: 'hash' (ID's generated by hashing file path and command line options) | 'random' (ID's generated as random numbers) | 'none' (disabled). Default is 'hash'. This option will be overridden by option '-cuid=[ID]' if it is specified.
  -fuse-line-directives   Use #line in preprocessed output
  -fvalidate-ast-input-files-content
                          Compute and store the hash of input files used to build an AST. Files with mismatching mtime's are considered valid if both contents is identical
  -fvec-allow-scalar-stores
                          When this option is set, an explicit simd loop (for example, one set with #pragma omp simd) will be vectorized even if it contains a store to a scalar variable that is not marked as private, lastprivate, or reduction.
  -fvec-peel-loops        Enable peel loop vectorization.
  -fvec-remainder-loops   Enable remainder loop vectorization.
  -fvec-with-mask         Enable vectorization for short trip-count loops with masking.
  -fveclib=<value>        Use the given vector functions library
  -fvectorize             Enable the loop vectorization passes
  -fverbose-asm           Generate verbose assembly output
  -fverify-intermediate-code
                          Enable verification of LLVM IR
  -fvirtual-function-elimination
                          Enables dead virtual function elimination optimization. Requires -flto=full
  -fvisibility-dllexport=<value>
                          The visibility for dllexport definitions. If Keep is specified the visibility is not adjusted [-fvisibility-from-dllstorageclass]
  -fvisibility-externs-dllimport=<value>
                          The visibility for dllimport external declarations. If Keep is specified the visibility is not adjusted [-fvisibility-from-dllstorageclass]
  -fvisibility-externs-nodllstorageclass=<value>
                          The visibility for external declarations without an explicit DLL storage class. If Keep is specified the visibility is not adjusted [-fvisibility-from-dllstorageclass]
  -fvisibility-from-dllstorageclass
                          Override the visibility of globals based on their final DLL storage class.
  -fvisibility-global-new-delete-hidden
                          Give global C++ operator new and delete declarations hidden visibility
  -fvisibility-global-new-delete=<value>
                          The visibility for global C++ operator new and delete declarations. If 'source' is specified the visibility is not adjusted
  -fvisibility-inlines-hidden-static-local-var
                          When -fvisibility-inlines-hidden is enabled, static variables in inline C++ member functions will also be given hidden visibility by default
  -fvisibility-inlines-hidden
                          Give inline C++ member functions hidden visibility by default
  -fvisibility-ms-compat  Give global types 'default' visibility and global functions and variables 'hidden' visibility by default
  -fvisibility-nodllstorageclass=<value>
                          The visibility for definitions without an explicit DLL storage class. If Keep is specified the visibility is not adjusted [-fvisibility-from-dllstorageclass]
  -fvisibility=<value>    Set the default symbol visibility for all global definitions
  -fwasm-exceptions       Use WebAssembly style exceptions
  -fwhole-program-vtables Enables whole-program vtable optimization. Requires -flto
  -fwrapv                 Treat signed integer overflow as two's complement
  -fwritable-strings      Store string literals as writable data
  -fxl-pragma-pack        Enable IBM XL #pragma pack handling
  -fxray-always-emit-customevents
                          Always emit __xray_customevent(...) calls even if the containing function is not always instrumented
  -fxray-always-emit-typedevents
                          Always emit __xray_typedevent(...) calls even if the containing function is not always instrumented
  -fxray-always-instrument=<value>
                          DEPRECATED: Filename defining the whitelist for imbuing the 'always instrument' XRay attribute.
  -fxray-attr-list=<value>
                          Filename defining the list of functions/types for imbuing XRay attributes.
  -fxray-function-groups=<value>
                          Only instrument 1 of N groups
  -fxray-ignore-loops     Don't instrument functions with loops unless they also meet the minimum function size
  -fxray-instruction-threshold=<value>
                          Sets the minimum function size to instrument with XRay
  -fxray-instrumentation-bundle=<value>
                          Select which XRay instrumentation points to emit. Options: all, none, function-entry, function-exit, function, custom. Default is 'all'.  'function' includes both 'function-entry' and 'function-exit'.
  -fxray-instrument       Generate XRay instrumentation sleds on function entry and exit
  -fxray-link-deps        Link XRay runtime library when -fxray-instrument is specified (default)
  -fxray-modes=<value>    List of modes to link in by default into XRay instrumented binaries.
  -fxray-never-instrument=<value>
                          DEPRECATED: Filename defining the whitelist for imbuing the 'never instrument' XRay attribute.
  -fxray-selected-function-group=<value>
                          When using -fxray-function-groups, select which group of functions to instrument. Valid range is 0 to fxray-function-groups - 1
  -fzero-call-used-regs=<value>
                          Clear call-used registers upon function return (AArch64/x86 only)
  -fzvector               Enable System z vector language extension
  -F <value>              Add directory to framework include search path
  --gcc-install-dir=<value>
                          Use GCC installation in the specified directory. The directory ends with path components like 'lib{,32,64}/gcc{,-cross}/$triple/$version'. Note: executables (e.g. ld) used by the compiler are not overridden by the selected GCC installation
  --gcc-toolchain=<value> Specify a directory where Clang can find 'include' and 'lib{,32,64}/gcc{,-cross}/$triple/$version'. Clang will use the GCC installation with the largest version
  --gcc-triple=<value>    Search for the GCC installation with the specified triple.
  -gcodeview-command-line Emit compiler path and command line into CodeView debug information
  -gcodeview-ghash        Emit type record hashes in a .debug$H section
  -gcodeview              Generate CodeView debug information
  -gdwarf-2               Generate source-level debug information with dwarf version 2
  -gdwarf-3               Generate source-level debug information with dwarf version 3
  -gdwarf-4               Generate source-level debug information with dwarf version 4
  -gdwarf-5               Generate source-level debug information with dwarf version 5
  -gdwarf32               Enables DWARF32 format for ELF binaries, if debug information emission is enabled.
  -gdwarf64               Enables DWARF64 format for ELF binaries, if debug information emission is enabled.
  -gdwarf                 Generate source-level debug information with the default dwarf version
  -gembed-source          Embed source text in DWARF debug sections
  -gen-reproducer=<value> Emit reproducer on (option: off, crash (default), error, always)
  -gintel-sti             Generate Intel STI debug information
  -gline-directives-only  Emit debug line info directives only
  -gline-tables-only      Emit debug line number tables only
  -global-hoist           Enable external globals are load safe (default)
  -gmodules               Generate debug info with external references to clang modules or precompiled headers
  -gno-codeview-command-line
                          Don't emit compiler path and command line into CodeView debug information
  -gno-embed-source       Restore the default behavior of not embedding source text in DWARF debug sections
  -gno-inline-line-tables Don't emit inline line tables.
  --gpu-bundle-output     Bundle output files of HIP device compilation
  --gpu-instrument-lib=<value>
                          Instrument device library for HIP, which is a LLVM bitcode containing __cyg_profile_func_enter and __cyg_profile_func_exit
  --gpu-max-threads-per-block=<value>
                          Default max threads per block for kernel launch bounds for HIP
  -gpulibc                Link the LLVM C Library for GPUs
  -gsplit-dwarf=<value>   Set DWARF fission mode
  -gstrict-dwarf          Restrict DWARF features to those defined in the specified version, avoiding features from later versions.
  -gz=<value>             DWARF debug sections compression type
  -G <size>               Put objects of at most <size> bytes into small data section (MIPS / Hexagon)
  -g                      Generate source-level debug information
  --help-hidden           Display help for hidden options
  -help                   Display available options
  --hip-device-lib=<value>
                          HIP device library
  --hip-link              Link clang-offload-bundler bundles for HIP
  --hip-path=<value>      HIP runtime installation path, used for finding HIP version and adding HIP include path.
  --hip-version=<value>   HIP version in the format of major.minor.patch
  --hipspv-pass-plugin=<dsopath>
                          path to a pass plugin for HIP to SPIR-V passes.
  --hipstdpar-interpose-alloc
                          Replace all memory allocation / deallocation calls with hipManagedMalloc / hipFree equivalents
  --hipstdpar-path=<value>
                          HIP Standard Parallel Algorithm Acceleration library path, used for finding and implicitly including the library header
  --hipstdpar-prim-path=<value>
                          rocPrim path, required by the HIP Standard Parallel Algorithm Acceleration library, used to implicitly include the rocPrim library
  --hipstdpar-thrust-path=<value>
                          rocThrust path, required by the HIP Standard Parallel Algorithm Acceleration library, used to implicitly include the rocThrust library
  --hipstdpar             Enable HIP acceleration for standard parallel algorithms
  -H                      Show header includes and nesting depth
  -I-                     Restrict all prior -I flags to double-quoted inclusion and remove current directory from include path
  -iapinotes-modules <directory>
                          Add directory to the API notes search path referenced by module name
  -ibuiltininc            Enable builtin #include directories even when -nostdinc is used before or after -ibuiltininc. Using -nobuiltininc after the option disables it
  -idirafter <value>      Add directory to AFTER include search path
  -iframeworkwithsysroot <directory>
                          Add directory to SYSTEM framework search path, absolute paths are relative to -isysroot
  -iframework <value>     Add directory to SYSTEM framework search path
  -imacros <file>         Include macros from file before parsing
  -include-pch <file>     Include precompiled header file
  -include <file>         Include file before parsing
  -index-header-map       Make the next included directory (-I or -F) an indexer header map
  -inline-forceinline     Treat inline routines as forceinline
  -inline-level=<value>   Set function inlining level where: 0 is disable, 1 is inline marked functions and 2 is inline at compilers discretion
  --intel                 Run in Intel Compiler mode
  -ipo                    Enable LTO in 'full' mode
  -ipp-link=<value>       Link Intel(R) IPP libraries in requested manner (static,dynamic,shared)
  -ipp=<value>            Link commonly used Intel(R) Integrated Performace Primitives (Intel(R) IPP) libraries and bring in the associated headers (common,crypto,nonpic,nonpic_crypto)
  -iprefix <dir>          Set the -iwithprefix/-iwithprefixbefore prefix
  -iquote <directory>     Add directory to QUOTE include search path
  -isysroot <dir>         Set the system root directory (usually /)
  -isystem-after <directory>
                          Add directory to end of the SYSTEM include search path
  -isystem <directory>    Add directory to SYSTEM include search path
  -ivfsoverlay-lib <value>
                          Load the virtual filesystem from shared library
  -ivfsoverlay <value>    Overlay the virtual filesystem described by file over the real file system
  -iwithprefixbefore <dir>
                          Set directory to include search path with prefix
  -iwithprefix <dir>      Set directory to SYSTEM include search path with prefix
  -iwithsysroot <directory>
                          Add directory to SYSTEM include search path, absolute paths are relative to -isysroot
  -I <dir>                Add directory to the end of the list of include search paths
  --libomptarget-amdgcn-bc-path=<value>
                          Path to libomptarget-amdgcn bitcode library
  --libomptarget-amdgpu-bc-path=<value>
                          Path to libomptarget-amdgcn bitcode library
  --libomptarget-nvptx-bc-path=<value>
                          Path to libomptarget-nvptx bitcode library
  -L <dir>                Add directory to library search path
  -mabi=quadword-atomics  Enable quadword atomics ABI on AIX (AIX PPC64 only). Uses lqarx/stqcx. instructions.
  -mabicalls              Enable SVR4-style position-independent code (Mips only)
  -maix-shared-lib-tls-model-opt
                          For shared library loaded with the main program, change local-dynamic access(es) to initial-exec access(es) at the function level (AIX 64-bit only).
  -maix-small-local-dynamic-tls
                          Produce a faster access sequence for local-dynamic TLS variables where the offset from the TLS base is encoded as an immediate operand (AIX 64-bit only). This access sequence is not used for variables larger than 32KB.
  -maix-small-local-exec-tls
                          Produce a faster access sequence for local-exec TLS variables where the offset from the TLS base is encoded as an immediate operand (AIX 64-bit only). This access sequence is not used for variables larger than 32KB.
  -maix-struct-return     Return all structs in memory (PPC32 only)
  -malign-branch-boundary=<value>
                          Specify the boundary's size to align branches
  -malign-branch=<value>  Specify types of branches to align
  -malign-double          Align doubles to two words in structs (x86 only)
  -maltivec               Enable AltiVec vector initializer syntax
  -mamdgpu-ieee           Sets the IEEE bit in the expected default floating point  mode register. Floating point opcodes that support exception flag gathering quiet and propagate signaling NaN inputs per IEEE 754-2008. This option changes the ABI. (AMDGPU only)
  -mamdgpu-precise-memory-op
                          Enable precise memory mode (AMDGPU only)
  -mapx-features=<value>  Enable features of APX
  -mapx-inline-asm-use-gpr32
                          Enable use of GPR32 in inline assembly for APX
  -march=<value>          For a list of available architectures for the target use '-mcpu=help'
  -marm64x<value>         Link as a hybrid ARM64X image
  -mauto-arch=<codes>     generate multiple, processor-specific, auto-dispatched code paths for X86 processors, specified by <codes>, if there is a performance benefit
  -mbackchain             Link stack frames through backchain on System Z
  -mbranch-protection=<value>
                          Enforce targets of indirect branches and function returns
  -mbranches-within-32B-boundaries
                          Align selected branches (fused, jcc, jmp) within 32-byte boundary
  -mcabac                 Enable CABAC instructions
  -mcmse                  Allow use of CMSE (Armv8-M Security Extensions)
  -mcode-object-version=<value>
                          Specify code object ABI version. Defaults to 5. (AMDGPU only)
  -mconstructor-aliases   Enable emitting complete constructors and destructors as aliases when possible
  -mcpu=<value>           For a list of available CPUs for the target use '-mcpu=help'
  -mcrbits                Control the CR-bit tracking feature on PowerPC. ``-mcrbits`` (the enablement of CR-bit tracking support) is the default for POWER8 and above, as well as for all other CPUs when optimization is applied (-O2 and above).
  -mcrc                   Allow use of CRC instructions (ARM/Mips only)
  -mcumode                Specify CU wavefront execution mode (AMDGPU only)
  -mdaz-ftz               Globally set the denormals-are-zero (DAZ) and flush-to-zero (FTZ) bits in the floating-point control register on program startup
  -mdebug-line-version=<value>
                          Set debug line version used when generating debug information
  -mdefault-visibility-export-mapping=<value>
                          Mapping between default visibility and export
  -mdouble=<n             Force double to be <n> bits
  -MD                     Write a depfile containing user and system headers
  -meabi <value>          Set EABI type. Default depends on triple)
  -membedded-data         Place constants in the .rodata section instead of the .sdata section even if they meet the -G <size> threshold (MIPS)
  -menable-experimental-extensions
                          Enable use of experimental RISC-V extensions.
  -mexec-model=<value>    Execution model (WebAssembly only)
  -mexecute-only          Disallow generation of data access to code sections (ARM only)
  -mextern-sdata          Assume that externally defined data is in the small data if it meets the -G <size> threshold (MIPS)
  -mfentry                Insert calls to fentry at function entry (x86/SystemZ only)
  -mfix-cmse-cve-2021-35465
                          Work around VLLDM erratum CVE-2021-35465 (ARM only)
  -mfix-cortex-a53-835769 Workaround Cortex-A53 erratum 835769 (AArch64 only)
  -mfix-cortex-a57-aes-1742098
                          Work around Cortex-A57 Erratum 1742098 (ARM only)
  -mfix-cortex-a72-aes-1655431
                          Work around Cortex-A72 Erratum 1655431 (ARM only)
  -mforced-sw-shadow-stack
                          Force using software shadow stack when shadow-stack enabled
  -mfp32                  Use 32-bit floating point registers (MIPS only)
  -mfp64                  Use 64-bit floating point registers (MIPS only)
  -mframe-chain=<value>   Select the frame chain model used to emit frame records (Arm only).
  -mfunction-return=<value>
                          Replace returns with jumps to ``__x86_return_thunk`` (x86 only, error otherwise)
  -MF <file>              Write depfile output from -MMD, -MD, -MM, or -M to <file>
  -mgeneral-regs-only     Generate code which only uses the general purpose registers (AArch64/x86 only)
  -mglobal-merge          Enable merging of globals
  -mgpopt                 Use GP relative accesses for symbols known to be in a small data section (MIPS)
  -mguard=<value>         Enable or disable Control Flow Guard checks and guard tables emission
  -MG                     Add missing headers to depfile
  -mharden-sls=<value>    Select straight-line speculation hardening scope (ARM/AArch64/X86 only). <arg> must be: all, none, retbr(ARM/AArch64), blr(ARM/AArch64), comdat(ARM/AArch64), nocomdat(ARM/AArch64), return(X86), indirect-jmp(X86)
  -mhvx-ieee-fp           Enable Hexagon HVX IEEE floating-point
  -mhvx-length=<value>    Set Hexagon Vector Length
  -mhvx-qfloat            Enable Hexagon HVX QFloat instructions
  -mhvx=<value>           Enable Hexagon Vector eXtensions
  -mhvx                   Enable Hexagon Vector eXtensions
  -miamcu                 Use Intel MCU ABI
  -mignore-xcoff-visibility
                          Not emit the visibility attribute for asm in AIX OS or give all symbols 'unspecified' visibility in XCOFF object file
  --migrate               Run the migrator
  -mincremental-linker-compatible
                          (integrated-as) Emit an object file which can be used with an incremental linker
  -mindirect-branch-cs-prefix
                          Add cs prefix to call and jmp to indirect thunk
  -mindirect-jump=<value> Change indirect jump instructions to inhibit speculation
  -mintrinsic-promote     Force certain functions using intrinsics to promote their architectures and make the intrinsic headers included by default
  -mios-version-min=<value>
                          Set iOS deployment target
  -MJ <value>             Write a compilation database entry per input
  -mlasx                  Enable Loongson Advanced SIMD Extension (LASX).
  -mlink-builtin-bitcode-postopt
                          Link builtin bitcodes after the optimization pipeline
  -mllvm-lto <value>      Additional arguments to forward to LLVM's option processing. Similar to -mllvm, but will also pass the given argument to the LTO step when appropriate.
  -mllvm=<arg>            Alias for -mllvm
  -mllvm <value>          Additional arguments to forward to LLVM's option processing
  -mlocal-sdata           Extend the -G behaviour to object local data (MIPS)
  -mlong-calls            Generate branches with extended addressability, usually via indirect jumps.
  -mlong-double-128       Force long double to be 128 bits
  -mlong-double-64        Force long double to be 64 bits
  -mlong-double-80        Force long double to be 80 bits, padded to 128 bits for storage
  -mlr-for-calls-only     Do not allocate the LR register for general purpose usage, only for calls. (AArch64 only)
  -mlsx                   Enable Loongson SIMD Extension (LSX).
  -mlvi-cfi               Enable only control-flow mitigations for Load Value Injection (LVI)
  -mlvi-hardening         Enable all mitigations for Load Value Injection (LVI)
  -mmacos-version-min=<value>
                          Set macOS deployment target
  -mmadd4                 Enable the generation of 4-operand madd.s, madd.d and related instructions.
  -mmark-bti-property     Add .note.gnu.property with BTI to assembly files (AArch64 only)
  -MMD                    Write a depfile containing user headers
  -mmemops                Enable generation of memop instructions
  -mmlir <value>          Additional arguments to forward to MLIR's option processing
  -mms-bitfields          Set the default structure layout to be compatible with the Microsoft compiler standard
  -mmsa                   Enable MSA ASE (MIPS only)
  -mmt                    Enable MT ASE (MIPS only)
  -MM                     Like -MMD, but also implies -E and writes to stdout by default
  -mno-abicalls           Disable SVR4-style position-independent code (Mips only)
  -mno-amdgpu-precise-memory-op
                          Disable precise memory mode (AMDGPU only)
  -mno-apx-features=<value>
                          Disable features of APX
  -mno-bti-at-return-twice
                          Do not add a BTI instruction after a setjmp or other return-twice construct (Arm/AArch64 only)
  -mno-constructor-aliases
                          Disable emitting complete constructors and destructors as aliases when possible
  -mno-crc                Disallow use of CRC instructions (Mips only)
  -mno-cumode             Specify WGP wavefront execution mode (AMDGPU only)
  -mno-daz-ftz            Do not globally set the denormals-are-zero (DAZ) and flush-to-zero (FTZ) bits in the floating-point control register on program startup
  -mno-embedded-data      Do not place constants in the .rodata section instead of the .sdata if they meet the -G <size> threshold (MIPS)
  -mno-execute-only       Allow generation of data access to code sections (ARM only)
  -mno-extern-sdata       Do not assume that externally defined data is in the small data if it meets the -G <size> threshold (MIPS)
  -mno-fix-cmse-cve-2021-35465
                          Don't work around VLLDM erratum CVE-2021-35465 (ARM only)
  -mno-fix-cortex-a53-835769
                          Don't workaround Cortex-A53 erratum 835769 (AArch64 only)
  -mno-fix-cortex-a57-aes-1742098
                          Don't work around Cortex-A57 Erratum 1742098 (ARM only)
  -mno-fix-cortex-a72-aes-1655431
                          Don't work around Cortex-A72 Erratum 1655431 (ARM only)
  -mno-fmv                Disable function multiversioning
  -mno-forced-sw-shadow-stack
                          Not force using software shadow stack when shadow-stack enabled
  -mno-gather             Disable generation of gather instructions in auto-vectorization(x86 only)
  -mno-global-merge       Disable merging of globals
  -mno-gpopt              Do not use GP relative accesses for symbols known to be in a small data section (MIPS)
  -mno-hvx-ieee-fp        Disable Hexagon HVX IEEE floating-point
  -mno-hvx-qfloat         Disable Hexagon HVX QFloat instructions
  -mno-hvx                Disable Hexagon Vector eXtensions
  -mno-implicit-float     Don't generate implicit floating point or vector instructions
  -mno-incremental-linker-compatible
                          (integrated-as) Emit an object file which cannot be used with an incremental linker
  -mno-lasx               Disable Loongson Advanced SIMD Extension (LASX).
  -mno-local-sdata        Do not extend the -G behaviour to object local data (MIPS)
  -mno-long-calls         Restore the default behaviour of not generating long calls
  -mno-lsx                Disable Loongson SIMD Extension (LSX).
  -mno-lvi-cfi            Disable control-flow mitigations for Load Value Injection (LVI)
  -mno-lvi-hardening      Disable mitigations for Load Value Injection (LVI)
  -mno-madd4              Disable the generation of 4-operand madd.s, madd.d and related instructions.
  -mno-memops             Disable generation of memop instructions
  -mno-movt               Disallow use of movt/movw pairs (ARM only)
  -mno-ms-bitfields       Do not set the default structure layout to be compatible with the Microsoft compiler standard
  -mno-msa                Disable MSA ASE (MIPS only)
  -mno-mt                 Disable MT ASE (MIPS only)
  -mno-neg-immediates     Disallow converting instructions with negative immediates to their negation or inversion.
  -mno-nvj                Disable generation of new-value jumps
  -mno-nvs                Disable generation of new-value stores
  -mno-outline-atomics    Don't generate local calls to out-of-line atomic operations
  -mno-outline            Disable function outlining (AArch64 only)
  -mno-packets            Disable generation of instruction packets
  -mno-pic-data-is-text-relative
                          Don't assume data segments are relative to text segment
  -mno-regnames           Use only register numbers when writing assembly output
  -mno-relax              Disable linker relaxation
  -mno-restrict-it        Allow generation of complex IT blocks.
  -mno-save-restore       Disable using library calls for save and restore
  -mno-scalar-strict-align
                          Allow scalar memory accesses to be unaligned (RISC-V only)
  -mno-scatter            Disable generation of scatter instructions in auto-vectorization(x86 only)
  -mno-seses              Disable speculative execution side effect suppression (SESES)
  -mno-stack-arg-probe    Disable stack probes which are enabled by default
  -mno-strict-align       Allow memory accesses to be unaligned (AArch64/LoongArch/RISC-V only)
  -mno-tgsplit            Disable threadgroup split execution mode (AMDGPU only)
  -mno-tls-direct-seg-refs
                          Disable direct TLS access through segment registers
  -mno-tocdata=<value>    Specifies a list of variables to be exempt from the TOC datatransformation.
  -mno-tocdata            This is the default. TOC data transformation is not applied to anyvariables. Only variables specified explicitly in -mtocdata= willhave the TOC data transformation.
  -mno-unaligned-access   Force all memory accesses to be aligned (AArch32/MIPSr6 only)
  -mno-unaligned-symbols  Expect external char-aligned symbols to be without ABI alignment (SystemZ only)
  -mno-vector-strict-align
                          Allow vector memory accesses to be unaligned (RISC-V only)
  -mno-wavefrontsize64    Specify wavefront size 32 mode (AMDGPU only)
  -mnocrc                 Disallow use of CRC instructions (ARM only)
  -mnop-mcount            Generate mcount/__fentry__ calls as nops. To activate they need to be patched in.
  -mnvj                   Enable generation of new-value jumps
  -mnvs                   Enable generation of new-value stores
  -module-dependency-dir <value>
                          Directory to dump module dependencies to
  -module-file-info       Provide information about a particular module file
  -momit-leaf-frame-pointer
                          Omit frame pointer setup for leaf functions
  -moutline-atomics       Generate local calls to out-of-line atomic operations
  -moutline               Enable function outlining (AArch64 only)
  -mpacked-stack          Use packed stack layout (SystemZ only).
  -mpackets               Enable generation of instruction packets
  -mpad-max-prefix-size=<value>
                          Specify maximum number of prefixes to use for padding
  -mpic-data-is-text-relative
                          Assume data segments are relative to text segment
  -mprefer-vector-width=<value>
                          Specifies preferred vector width for auto-vectorization. Defaults to 'none' which allows target specific decisions.
  -mprintf-kind=<value>   Specify the printf lowering scheme (AMDGPU only), allowed values are "hostcall"(printing happens during kernel execution, this scheme relies on hostcalls which require system to support pcie atomics) and "buffered"(printing happens after all kernel threads exit, this uses a printf buffer and does not rely on pcie atomic support)
  -MP                     Create phony target for each dependency (other than main file)
  -mqdsp6-compat          Enable hexagon-qdsp6 backward compatibility
  -MQ <value>             Specify name of main file output to quote in depfile
  -mrecip=<value>         Control use of approximate reciprocal and reciprocal square root instructions followed by <n> iterations of Newton-Raphson refinement. <value> = ( ['!'] ['vec-'] ('rcp'|'sqrt') [('h'|'s'|'d')] [':'<n>] ) | 'all' | 'default' | 'none'
  -mrecip                 Equivalent to '-mrecip=all'
  -mrecord-mcount         Generate a __mcount_loc section entry for each __fentry__ call.
  -mregnames              Use full register names when writing assembly output
  -mrelax-all             (integrated-as) Relax all machine instructions
  -mrelax                 Enable linker relaxation
  -mrestrict-it           Disallow generation of complex IT blocks. It is off by default.
  -mrtd                   Make StdCall calling convention the default
  -mrvv-vector-bits=<value>
                          Specify the size in bits of an RVV vector register
  -msave-restore          Enable using library calls for save and restore
  -mscalar-strict-align   Force all scalar memory accesses to be aligned (RISC-V only)
  -mseses                 Enable speculative execution side effect suppression (SESES). Includes LVI control flow integrity mitigations
  -msign-return-address=<value>
                          Select return address signing scope
  -msimd=<value>          Select the SIMD extension(s) to be enabled in LoongArch either 'none', 'lsx', 'lasx'.
  -mskip-rax-setup        Skip setting up RAX register when passing variable arguments (x86 only)
  -msmall-data-limit=<value>
                          Put global and static data smaller than the limit into a special section
  -msoft-float            Use software floating point
  -msse2avx               Specify that the assembler should encode SSE instructions with VEX prefix
  -mstack-alignment=<value>
                          Set the stack alignment
  -mstack-arg-probe       Enable stack probes
  -mstack-probe-size=<value>
                          Set the stack probe size
  -mstack-protector-guard-offset=<value>
                          Use the given offset for addressing the stack-protector guard
  -mstack-protector-guard-reg=<value>
                          Use the given reg for addressing the stack-protector guard
  -mstack-protector-guard-symbol=<value>
                          Use the given symbol for addressing the stack-protector guard
  -mstack-protector-guard=<value>
                          Use the given guard (global, tls) for addressing the stack-protector guard
  -mstackrealignext       Force realign the stack at entry to every external function
  -mstackrealign          Force realign the stack at entry to every function
  -mstrict-align          Force all memory accesses to be aligned (AArch64/LoongArch/RISC-V only)
  -msve-vector-bits=<value>
                          Specify the size in bits of an SVE vector register. Defaults to the vector length agnostic value of "scalable". (AArch64 only)
  -msvr4-struct-return    Return small structs in registers (PPC32 only)
  -mtargetos=<value>      Set the deployment target to be the specified OS and OS version
  -mtgsplit               Enable threadgroup split execution mode (AMDGPU only)
  -mthread-model <value>  The thread model to use. Defaults to 'posix')
  -mtls-dialect=<value>   Which thread-local storage dialect to use for dynamic accesses of TLS variables
  -mtls-direct-seg-refs   Enable direct TLS access through segment registers (default)
  -mtls-size=<value>      Specify bit size of immediate TLS offsets (AArch64 ELF only): 12 (for 4KB) | 24 (for 16MB, default) | 32 (for 4GB) | 48 (for 256TB, needs -mcmodel=large)
  -mtocdata=<value>       Specifies a list of variables to which the TOC data transformationwill be applied.
  -mtocdata               All suitable variables will have the TOC data transformation applied
  -mtp=<value>            Thread pointer access method. For AArch32: 'soft' uses a function call, or 'tpidrurw', 'tpidruro' or 'tpidrprw' use the three CP15 registers. 'cp15' is an alias for 'tpidruro'. For AArch64: 'tpidr_el0', 'tpidr_el1', 'tpidr_el2', 'tpidr_el3' or 'tpidrro_el0' use the five system registers. 'elN' is an alias for 'tpidr_elN'.
  -mtune=<value>          Only supported on AArch64, PowerPC, RISC-V, SPARC, SystemZ, and X86
  -MT <value>             Specify name of main file output in depfile
  -munaligned-access      Allow memory accesses to be unaligned (AArch32/MIPSr6 only)
  -munaligned-symbols     Expect external char-aligned symbols to be without ABI alignment (SystemZ only)
  -munsafe-fp-atomics     Enable generation of unsafe floating point atomic instructions. May generate more efficient code, but may not respect rounding and denormal modes, and may give incorrect results for certain memory destinations. (AMDGPU only)
  -mvector-strict-align   Force all vector memory accesses to be aligned (RISC-V only)
  -mvevpu                 Emit VPU instructions for VE
  -MV                     Use NMake/Jom format for the depfile
  -mwavefrontsize64       Specify wavefront size 64 mode (AMDGPU only)
  -mxcoff-build-id=<0xHEXSTRING>
                          On AIX, request creation of a build-id string, "0xHEXSTRING", in the string table of the loader section inside the linked binary
  -mxcoff-roptr           Place constant objects with relocatable address values in the RO data section and add -bforceimprw to the linker flags (AIX only)
  -mzos-hlq-clang=<ClangHLQ>
                          High level qualifier for z/OS C++RT side deck datasets
  -mzos-hlq-csslib=<CsslibHLQ>
                          High level qualifier for z/OS CSSLIB dataset
  -mzos-hlq-le=<LeHLQ>    High level qualifier for z/OS Language Environment datasets
  -mzos-sys-include=<SysInclude>
                          Path to system headers on z/OS
  -M                      Like -MD, but also implies -E and writes to stdout by default
  -no-ansi-alias          disable use of ANSI aliasing rules optimizations
  --no-cuda-include-ptx=<value>
                          Do not include PTX for the following GPU architecture (e.g. sm_35) or 'all'. May be specified more than once.
  --no-cuda-version-check Don't error out if the detected version of the CUDA install is too low for the requested CUDA gpu architecture.
  --no-default-config     Disable loading default configuration files
  -no-fma                 Disable the combining of floating point multiples and add/subtract operations.
  -no-ftz                 Disable flush denormal results to zero
  -no-global-hoist        Disable external globals are load safe
  --no-gpu-bundle-output  Do not bundle output files of HIP device compilation
  -no-hip-rt              Do not link against HIP runtime libraries
  -no-intel-lib=<value>   Restrict linking of Intel specific libraries. Valid arguments are libirc, libimf, libirng, libsvml
  -no-intel-lib           Restrict linking of all Intel specific libraries.
  -no-ipo                 Disable LTO mode (default)
  --no-offload-arch=<value>
                          Remove CUDA/HIP offloading device architecture (e.g. sm_35, gfx906) from the list of devices to compile for. 'all' resets the list to its default value.
  --no-offload-new-driver Don't Use the new driver for offloading compilation.
  -no-parallel-source-info
                          Disable emission of source location information for parallel code generation.
  -no-sox                 Disable saving of compiler options in the executable
  --no-system-header-prefix=<prefix>
                          Treat all #include paths starting with <prefix> as not including a system header.
  -no-vec                 Disable the loop vectorization passes
  --no-wasm-opt           Disable the wasm-opt optimizer
  -nobuiltininc           Disable builtin #include directories
  -nogpuinc               Do not add include paths for CUDA/HIP and do not include the default CUDA/HIP wrapper headers
  -nogpulib               Do not link device library for CUDA/HIP device compilation
  -nohipwrapperinc        Do not include the default HIP wrapper headers and include paths
  -nolib-inline           disable inline expansion of intrinsic functions
  -nolibsycl              Do not link SYCL runtime library
  -nostdinc++             Disable standard #include directories for the C++ standard library
  --nvptx-arch-tool=<value>
                          Tool used for detecting NVIDIA GPU arch in the system.
  -ObjC++                 Treat source input files as Objective-C++ inputs
  -objcmt-allowlist-dir-path=<value>
                          Only modify files with a filename contained in the provided directory path
  -objcmt-atomic-property Make migration to 'atomic' properties
  -objcmt-migrate-all     Enable migration to modern ObjC
  -objcmt-migrate-annotation
                          Enable migration to property and method annotations
  -objcmt-migrate-designated-init
                          Enable migration to infer NS_DESIGNATED_INITIALIZER for initializer methods
  -objcmt-migrate-instancetype
                          Enable migration to infer instancetype for method result type
  -objcmt-migrate-literals
                          Enable migration to modern ObjC literals
  -objcmt-migrate-ns-macros
                          Enable migration to NS_ENUM/NS_OPTIONS macros
  -objcmt-migrate-property-dot-syntax
                          Enable migration of setter/getter messages to property-dot syntax
  -objcmt-migrate-property
                          Enable migration to modern ObjC property
  -objcmt-migrate-protocol-conformance
                          Enable migration to add protocol conformance on classes
  -objcmt-migrate-readonly-property
                          Enable migration to modern ObjC readonly property
  -objcmt-migrate-readwrite-property
                          Enable migration to modern ObjC readwrite property
  -objcmt-migrate-subscripting
                          Enable migration to modern ObjC subscripting
  -objcmt-ns-nonatomic-iosonly
                          Enable migration to use NS_NONATOMIC_IOSONLY macro for setting property's 'atomic' attribute
  -objcmt-returns-innerpointer-property
                          Enable migration to annotate property with NS_RETURNS_INNER_POINTER
  -objcmt-whitelist-dir-path=<value>
                          Alias for -objcmt-allowlist-dir-path
  -ObjC                   Treat source input files as Objective-C inputs
  -object-file-name=<file>
                          Set the output <file> for debug infos
  --offload-arch=<value>  Specify an offloading device architecture for CUDA, HIP, or OpenMP. (e.g. sm_35). If 'native' is used the compiler will detect locally installed architectures. For HIP offloading, the device architecture can be followed by target ID features delimited by a colon (e.g. gfx908:xnack+:sramecc-). May be specified more than once.
  --offload-compress      Compress offload device binaries (HIP only)
  --offload-device-only   Only compile for the offloading device.
  --offload-host-device   Compile for both the offloading host and device (default).
  --offload-host-only     Only compile for the offloading host.
  --offload-link          Use the new offloading linker to perform the link job.
  --offload-new-driver    Use the new driver for offloading compilation.
  --offload=<value>       Specify comma-separated list of offloading target triples (CUDA and HIP only)
  -o <file>               Write output to <file>
  -parallel-source-info=<value>
                          Emit source location information for parallel code generation with OpenMP and auto-parallelization.
  -pch-use <file>         Include precompiled header file
  -pc <value>             Initialize X87 floating point precision to single, double or double extended. Valid values of 32, 64 and 80
  -pedantic               Warn on language extensions
  -pg                     Enable mcount instrumentation
  -pipe                   Use pipes between commands, when possible
  --precompile            Only precompile the input
  --pretty-sgf            Emit pretty printed symbol graphs
  -print-diagnostic-options
                          Print all of Clang's warning options
  -print-effective-triple Print the effective target triple
  -print-enabled-extensions
                          Print the extensions enabled by the given target and -march/-mcpu options. (AArch64 and RISC-V only)
  -print-file-name=<file> Print the full library path of <file>
  -print-ivar-layout      Enable Objective-C Ivar layout bitmap print trace
  -print-libgcc-file-name Print the library path for the currently used compiler runtime library ("libgcc.a" or "libclang_rt.builtins.*.a")
  -print-library-module-manifest-path
                          Print the path for the C++ Standard library module manifest
  -print-multi-flags-experimental
                          Print the flags used for selecting multilibs (experimental)
  -print-prog-name=<name> Print the full program path of <name>
  -print-resource-dir     Print the resource directory pathname
  -print-rocm-search-dirs Print the paths used for finding ROCm installation
  -print-runtime-dir      Print the directory pathname containing Clang's runtime libraries
  -print-search-dirs      Print the paths used for finding libraries and programs
  -print-supported-cpus   Print supported cpu models for the given target (if target is not specified, it will print the supported cpus for the default target)
  -print-supported-extensions
                          Print supported -march extensions (RISC-V, AArch64 and ARM only)
  -print-target-triple    Print the normalized target triple
  -print-targets          Print the registered targets
  -pthread                Support POSIX threads in generated code
  --ptxas-path=<value>    Path to ptxas (used for compiling CUDA code)
  -P                      Disable linemarker output in -E mode
  -p                      Enable mcount instrumentation with prof
  -qactypes               Enable compile and link support for the Algorithmic C Data-types (AC types)
  -qdaal=<value>          Link Intel(R) Data Analytics Acceleration Library (Intel(R) DAAL) libraries and bring in the associated headers (parallel)
  -qipp-link=<value>      Link Intel(R) IPP libraries in requested manner (static,dynamic,shared)
  -qipp=<value>           Link commonly used Intel(R) Integrated Performace Primitives (Intel(R) IPP) libraries and bring in the associated headers (common,crypto,nonpic,nonpic_crypto)
  -qmkl-ilp64=<value>     Link commonly used Intel(R) Math Kernel ILP64 Variant Library (Intel(R) MKL) and bring in the associated headers (parallel,sequential,cluster)("cluster" is not supported in DPC++)
  -qmkl-sycl-impl=<value> Limit linking of SYCL-specific implementations of the Intel(R) Math Kernel Library to specified in argument. Valid arguments: blas, lapack, dft, sparse, rng, stats, vm.
  -qmkl=<value>           Link commonly used Intel(R) Math Kernel Library (Intel(R) MKL) and bring in the associated headers (parallel,sequential,cluster)("cluster" is not supported in DPC++)
  -qno-actypes            Disable the compile and link support for the Algorithmic C Data-types (AC types)
  -qno-openmp             Disable OpenMP support
  -qno-opt-dynamic-align  Disable peeling to optimize alignment for vectorization.
  -qno-opt-jump-tables    Do not use jump tables for lowering switches
  -qno-opt-matmul         Disables compiler-generated Matrix Multiply (matmul) library call
  -qno-opt-mem-layout-trans
                          Disable memory layout transformations
  -qno-opt-multiple-gather-scatter-by-shuffles
                          Disables the optimization for multiple adjacent gather/scatter type vector memory references
  -qno-opt-prefetch       Disable prefetching.
  -Qn                     Do not emit metadata containing compiler name and version
  -qopenmp-link=<value>   Choose whether to link with the static or dynamic OpenMP libraries. Default is dynamic.
  -qopenmp-simd           Emit OpenMP code only for SIMD-based constructs.
  -qopenmp-stubs          enables the user to compile OpenMP programs in sequential mode. The OpenMP directives are ignored and a stub OpenMP library is linked.
  -qopenmp-threadprivate=<value>
                          Choose which threadprivate implementation to use: compat or legacy.
  -qopenmp                Parse OpenMP pragmas and generate parallel code.
  -qopt-assume-no-loop-carried-dep=<value>
                          Set a level of performance tuning for loops.  0 - The compiler does not assume there is loop-carried dependencies (default).  1 - Assume there are no loop-carried dependencies for innermost loops.  2 - Assume there are no loop-carried dependencies for all loop levels.
  -qopt-dword-index-for-array-of-structs=<value>
                          When specified allows the compiler to use dword indexes to access elements of arrays of structs which in size do not exceed val bytes. The arrays in question should contain no more than INT_MAX / sizeof(element) elements. Allowed values for val are: 16, 32, default is 16.
  -qopt-dynamic-align     Enable peeling to optimize alignment for vectorization.
  -qopt-for-throughput=<value>
                          Optimize for throughput performance, assuming multiple jobs are running.  The memory optimizations for single job versus multiple jobs can be tuned in different ways by the compiler. Valid arguments: multi-job, single-job
  -qopt-jump-tables       Control the generation of jump tables
  -qopt-matmul            Enables compiler-generated Matrix Multiply (matmul) library call
  -qopt-mem-layout-trans=<value>
                          Control the level of memory layout transformations performed by the compiler
  -qopt-multiple-gather-scatter-by-shuffles
                          Enables the optimization for multiple adjacent gather/scatter type vector memory references
  -qopt-prefetch-distance=<value>
                          Specify the prefetch distance to be used for compiler generated prefetches inside loops. Value indicates distance from memory to L2 cache.
  -qopt-prefetch-loads-only
                          Only insert prefetches based on the loads inside the loop. Stores are ignored.
  -qopt-prefetch=<value>  Enable levels of prefetch insertion, where 0 disables.  Values of 1 - 5 are available.  Default is 2.
  -qopt-prefetch          Enable prefetch insertion.  Same as -qopt-prefetch=2.
  -qopt-report-file=<value>
                          Specify the filename or output stream (stdout, stderr) for the generated optimization report
  -qopt-report-names=<value>
                          Specifies whether mangled or unmangled names should appear in the optimization report.
  -qopt-report-phase=<value>
                          Specify one or more phases for which optimization reports are generated
  -qopt-report-stdout     Specify the generated optimization report should be directed to stdout
  -qopt-report=<value>    Generate an optimization report, min, med or max.
  -qopt-streaming-stores=<value>
                          Specifies whether streaming stores are generated.
  -qopt-zmm-usage=<value> Specifies the level of zmm registers usage, low or high
  -Qoption,<arg>           Qoption,<tool>,<args> to pass the comma separated arguments to the <tool>; <tool> can be asm for assembler (or) link/ld for linker (or) preprocessor for preprocessor (or) compiler for compiler
  -qoverride-limits       enables the user to skip throttling of loops in framework and DD.
  -qtbb                   Link Intel(R) Threading Building Blocks (Intel(R) TBB) libraries and bring in the associated headers
  -Qunused-arguments      Don't emit warning for unused driver arguments
  -Qy                     Emit metadata containing compiler name and version
  -regcall4               Set __regcall4 as a default calling convention to respect __regcall ABI v.4
  -regcall                Set __regcall as a default calling convention
  -relocatable-pch        Whether to build a relocatable precompiled header
  -reuse-exe=<exe>        Speed up FPGA aoc compile if the device code in <exe> is unchanged.
  -rewrite-legacy-objc    Rewrite Legacy Objective-C source to C++
  -rewrite-objc           Rewrite Objective-C source to C++
  --rocm-device-lib-path=<value>
                          ROCm device library path. Alternative to rocm-path.
  --rocm-path=<value>     ROCm installation path, used for finding and automatically linking required bitcode libraries.
  -Rpass-analysis=<value> Report transformation analysis from optimization passes whose name matches the given POSIX regular expression
  -Rpass-missed=<value>   Report missed transformations by optimization passes whose name matches the given POSIX regular expression
  -Rpass=<value>          Report transformations performed by optimization passes whose name matches the given POSIX regular expression
  -rtlib=<value>          Compiler runtime library to use
  -R<remark>              Enable the specified remark
  -save-stats=<value>     Save llvm statistics.
  -save-stats             Save llvm statistics.
  -save-temps=<value>     Save intermediate compilation results. <arg> can be set to 'cwd' for current working directory, or 'obj' which will save temporary files in the same directory as the final output file
  -save-temps             Alias for --save-temps=cwd
  -serialize-diagnostics <value>
                          Serialize compiler diagnostics to a file
  -shared-intel           link Intel provided libraries dynamically
  -shared-libsan          Dynamically link the sanitizer runtime
  -sox=<value>            Enable saving of compiler options, version and additional information in the executable.  Use -no-sox to disable (DEFAULT). Valid arguments: profile - Includes data when profile was used for functions that were compiled with PGO enabling options such as -fprofile-use and -fprofile-instr-use, inline - Includes a list of the functions that were inlined in each object, secure - Strip out directory names and options that use them.
  -sox                    Enable saving of compiler options in the executable
  --start-no-unused-arguments
                          Don't emit warnings about unused arguments for the following arguments
  -static-intel           link Intel provided libraries statically
  -static-libsan          Statically link the sanitizer runtime (Not supported for ASan, TSan or UBSan on darwin)
  -static-openmp          Use the static host OpenMP runtime while linking.
  -std=<value>            Language standard to compile for
  -stdlib++-isystem <directory>
                          Use directory as the C++ standard library include path
  -stdlib=<value>         C++ standard library to use
  -strict-ansi            strict ANSI conformance dialect
  -sycl-std=<value>       SYCL language standard to compile for.
  --symbol-graph-dir=<value>
                          Directory in which to emit symbol graphs.
  --system-header-prefix=<prefix>
                          Treat all #include paths starting with <prefix> as including a system header.
  -S                      Only run preprocess and compilation steps
  --target=<value>        Generate code for the given target
  -tbb                    Link Intel(R) Threading Building Blocks (Intel(R) TBB) libraries and bring in the associated headers
  -time                   Time individual commands
  -traceback              Generate traceback debug information
  -traditional-cpp        Enable some traditional CPP emulation
  -trigraphs              Process trigraph sequences
  -T <script>             Specify <script> as linker script
  -undef                  undef all system defines
  -unroll<value>          Set maximum number of times to unroll loops.  Omit n to use default heuristics.  Use 0 to disable the loop unroller.
  -unwindlib=<value>      Unwind library to use
  -use-msasm              enables the use of blocks and entire functions of assembly code within a C or C++ file
  -U <macro>              Undefine macro <macro>
  -vec-threshold<value>   Sets a threshold for the vectorization of loops based on the probability of profitable execution of the vectorized loop in parallel.
  -vecabi=<value>         Determines which vector function ABI the compiler uses to create or call vector functions. The 'gcc' (default) argument enforces compatibility with gcc. The 'cmdtarget' argument uses an extended set of vector functions.
  -vec                    Enable the loop vectorization passes
  --verify-debug-info     Verify the binary representation of debug output
  -verify-pch             Load and verify that a pre-compiled header file is not stale
  --version               Print version information
  -vfsoverlay <value>     Overlay the virtual filesystem described by file over the real file system. Additionally, pass this overlay file to the linker if it supports it
  -v                      Show commands to run and use verbose output
  -Wa,<arg>               Pass the comma separated arguments in <arg> to the assembler
  --wasm-opt              Enable the wasm-opt optimizer (default)
  -Wcheck-unicode-security
                          Enable detection and warn about Unicode constructs that can be exploited by using bi-directional formatting codes, zero-width characters in strings and use of zero-width characters and homoglyphs in identifiers. Done by using clang-tidy
  -Wdeprecated            Enable warnings for deprecated constructs and define __DEPRECATED
  -Winvalid-constexpr     Enable checking of constexpr function bodies for validity within a constant expression context
  -Wl,<arg>               Pass the comma separated arguments in <arg> to the linker
  -Wno-invalid-constexpr  Disable checking of constexpr function bodies for validity within a constant expression context
  -Wno-sycl-strict        Disable warnings which enforce strict SYCL language compatibility.
  -working-directory <value>
                          Resolve file paths relative to the specified directory
  -Wp,<arg>               Pass the comma separated arguments in <arg> to the preprocessor
  -W<warning>             Enable the specified warning
  -w                      Suppress all warnings
  -Xanalyzer <arg>        Pass <arg> to the static analyzer
  -Xarch_device <arg>     Pass <arg> to the CUDA/HIP device compilation
  -Xarch_host <arg>       Pass <arg> to the CUDA/HIP host compilation
  -Xassembler <arg>       Pass <arg> to the assembler
  -Xclang=<arg>           Alias for -Xclang
  -Xclang <arg>           Pass <arg> to clang -cc1
  -Xcuda-fatbinary <arg>  Pass <arg> to fatbinary invocation
  -Xcuda-ptxas <arg>      Pass <arg> to the ptxas assembler
  -Xlinker <arg>          Pass <arg> to the linker
  -Xoffload-linker<triple> <arg>
                          Pass <arg> to the offload linkers or the ones idenfied by -<triple>
  -Xopenmp-target-backend=<triple> <arg>
                          Pass <arg> to the OpenMP based backend identified by <triple>. Depending on the triple (spir64, spir64_gen, spir64_x86_64), the arg passed will be interpreted by the corresponding AOT tool or runtime consumer.
  -Xopenmp-target-backend <arg>
                          Pass <arg> to the OpenMP based target backend.
  -Xopenmp-target-frontend=<value>
                          Pass <arg> to the OpenMP based target frontend identified by <triple>.
  -Xopenmp-target-frontend <value>
                          Pass <arg> to the OpenMP based target frontend.
  -Xopenmp-target-linker=<triple> <arg>
                          Pass <arg> to the SYCL based target linker identified by <triple>.
  -Xopenmp-target-linker <arg>
                          Pass <arg> to the SYCL based target linker.
  -Xopenmp-target=<triple> <arg>
                          Pass <arg> to the target offloading toolchain identified by <triple>.
  -Xopenmp-target <arg>   Pass <arg> to the target offloading toolchain.
  -Xpreprocessor <arg>    Pass <arg> to the preprocessor
  -Xsycl-target-backend=<triple> <arg>
                          Pass <arg> to the SYCL based backend identified by <triple>. Depending on the triple (spir64, spir64_gen, spir64_x86_64, spir64_fpga), the arg passed will be interpreted by the corresponding AOT tool or runtime consumer.
  -Xsycl-target-backend <arg>
                          Pass <arg> to the SYCL based target backend.
  -Xsycl-target-frontend=<triple> <arg>
                          Pass <arg> to the SYCL based target frontend identified by <triple>.
  -Xsycl-target-frontend <arg>
                          Pass <arg> to the SYCL based target frontend.
  -Xsycl-target-linker=<triple> <arg>
                          Pass <arg> to the SYCL based target linker identified by <triple>.
  -Xsycl-target-linker <arg>
                          Pass <arg> to the SYCL based target linker.
  -Xs <arg>               Pass <arg> to the offline compiler.
  -Xs<arg>                Pass <arg> to the offline compiler, adding the option specifier '-' to the <arg>.
  -x <language>           Treat subsequent input files as having type <language>
  -x<code>                Generate specialized code to run exclusively on processors indicated by <code>.
  -z <arg>                Pass -z <arg> to the linker
dxc compatibility options.:
  --dxv-path=<value>  DXIL validator installation path
  -fspv-target-env=<value>
                      Specify the target environment
  -hlsl-entry <value> Entry point name for hlsl
Executing: mpiicc -cc=icx --help | head -n 500
Detected CLANG compiler
Executing: mpiicc -cc=icx --version
stdout:
Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)
Target: x86_64-unknown-linux-gnu
Thread model: posix
InstalledDir: /opt/intel/oneapi/compiler/2025.0/bin/compiler
Configuration file: /opt/intel/oneapi/compiler/2025.0/bin/compiler/../icx.cfg
Did not detect Gcc110plus compiler
Executing: mpiicc -cc=icx --help | head -n 500
Detected CLANG compiler
          Trying C compiler flag -Wall
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.setCompilers  -fPIC -Wall   /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

              Output from compiling with  -fPIC -Wall 

Added C compiler flag -Wall
          Trying C compiler flag -Wwrite-strings
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.setCompilers  -fPIC -Wall -Wwrite-strings   /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

              Output from compiling with  -fPIC -Wall -Wwrite-strings 

Added C compiler flag -Wwrite-strings
          Trying C compiler flag -Wno-unknown-pragmas
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.setCompilers  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas   /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

              Output from compiling with  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas 

Added C compiler flag -Wno-unknown-pragmas
          Trying C compiler flag -Wno-lto-type-mismatch
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.setCompilers  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -Wno-lto-type-mismatch   /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
stdout:
warning: unknown warning option '-Wno-lto-type-mismatch'; did you mean '-Wno-selector-type-mismatch'? [-Wunknown-warning-option]
1 warning generated.
Possible ERROR while running compiler:exit code 0
stderr:
warning: unknown warning option '-Wno-lto-type-mismatch'; did you mean '-Wno-selector-type-mismatch'? [-Wunknown-warning-option]
1 warning generated.
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

              Output from compiling with  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -Wno-lto-type-mismatch 
warning: unknown warning option '-Wno-lto-type-mismatch'; did you mean '-Wno-selector-type-mismatch'? [-Wunknown-warning-option]
1 warning generated.
              Rejecting compiler flag -Wno-lto-type-mismatch  due to 
warning: unknown warning option '-Wno-lto-type-mismatch'; did you mean '-Wno-selector-type-mismatch'? [-Wunknown-warning-option]
1 warning generated.
          Rejected C compiler flag -Wno-lto-type-mismatch
          Trying C compiler flag -fstack-protector
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.setCompilers  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector   /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

              Output from compiling with  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector 

Added C compiler flag -fstack-protector
          Trying C compiler flag -mfp16-format=ieee
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.setCompilers  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -mfp16-format=ieee   /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
stdout: icx: error: unknown argument: '-mfp16-format=ieee'
Possible ERROR while running compiler: exit code 1
stderr:
icx: error: unknown argument: '-mfp16-format=ieee'
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

              Output from compiling with  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -mfp16-format=ieee 
icx: error: unknown argument: '-mfp16-format=ieee'

PETSc Error: No output file produced
              Rejecting compiler flag -mfp16-format=ieee  due to nonzero status from link
          Rejected C compiler flag -mfp16-format=ieee
          Trying C compiler flag -Qunused-arguments
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.setCompilers  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments   /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

              Output from compiling with  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments 

Added C compiler flag -Qunused-arguments
          Trying C compiler flag -fvisibility=hidden
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.setCompilers  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden   /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

              Output from compiling with  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden 

Added C compiler flag -fvisibility=hidden
          Trying C compiler flag -O2 -march=native -mtune=native
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.setCompilers  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

              Output from compiling with  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native 

Added C compiler flag -O2 -march=native -mtune=native
Executing: mpiicpc -cxx=icpx --version
stdout:
Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)
Target: x86_64-unknown-linux-gnu
Thread model: posix
InstalledDir: /opt/intel/oneapi/compiler/2025.0/bin/compiler
Configuration file: /opt/intel/oneapi/compiler/2025.0/bin/compiler/../icpx.cfg
getCompilerVersion: mpiicpc -cxx=icpx Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)
              Defined make macro "Cxx_VERSION" to "Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)"
Executing: mpiicpc -cxx=icpx -show
stdout: icpx -I"/opt/intel/oneapi/mpi/2021.14/include" -L"/opt/intel/oneapi/mpi/2021.14/lib" -L"/opt/intel/oneapi/mpi/2021.14/lib" -Xlinker --enable-new-dtags -Xlinker -rpath -Xlinker "/opt/intel/oneapi/mpi/2021.14/lib" -Xlinker -rpath -Xlinker "/opt/intel/oneapi/mpi/2021.14/lib" -lmpicxx -lmpifort -lmpi -ldl -lrt -lpthread
                Defined make macro "MPICXX_SHOW" to "icpx -I"/opt/intel/oneapi/mpi/2021.14/include" -L"/opt/intel/oneapi/mpi/2021.14/lib" -L"/opt/intel/oneapi/mpi/2021.14/lib" -Xlinker --enable-new-dtags -Xlinker -rpath -Xlinker "/opt/intel/oneapi/mpi/2021.14/lib" -Xlinker -rpath -Xlinker "/opt/intel/oneapi/mpi/2021.14/lib" -lmpicxx -lmpifort -lmpi -ldl -lrt -lpthread"
Executing: mpiicpc -cxx=icpx --help | head -n 20 
stdout:
OVERVIEW: Intel(R) oneAPI DPC++/C++ Compiler
USAGE: icpx [options] file...
OPTIONS:
  -###                    Print (but do not run) the commands to run for this compilation
  -#x                     Show commands to run and use verbose output
  -#                      Print (but do not run) the commands to run for this compilation
  -align                  Align doubles to two words in structs (x86 only)
  --amdgpu-arch-tool=<value>
                          Tool used for detecting AMD GPU arch in the system.
  --analyzer-output <value>
                          Static analyzer report output format (html|plist|plist-multi-file|plist-html|sarif|sarif-html|text).
  --analyze               Run the static analyzer
  -ansi-alias             enable use of ANSI aliasing rules optimizations user asserts that the program adheres to these rules
  -arcmt-migrate-emit-errors
                          Emit ARC errors even if the migrator can fix them
  -arcmt-migrate-report-output <value>
                          Output path for the plist report
  -ax<codes>              generate multiple, processor-specific, auto-dispatched code paths for Intel® processors, specified by <codes>, if there is a performance benefit
Executing: mpiicpc -cxx=icpx --help
stdout:
OVERVIEW: Intel(R) oneAPI DPC++/C++ Compiler
USAGE: icpx [options] file...
OPTIONS:
  -###                    Print (but do not run) the commands to run for this compilation
  -#x                     Show commands to run and use verbose output
  -#                      Print (but do not run) the commands to run for this compilation
  -align                  Align doubles to two words in structs (x86 only)
  --amdgpu-arch-tool=<value>
                          Tool used for detecting AMD GPU arch in the system.
  --analyzer-output <value>
                          Static analyzer report output format (html|plist|plist-multi-file|plist-html|sarif|sarif-html|text).
  --analyze               Run the static analyzer
  -ansi-alias             enable use of ANSI aliasing rules optimizations user asserts that the program adheres to these rules
  -arcmt-migrate-emit-errors
                          Emit ARC errors even if the migrator can fix them
  -arcmt-migrate-report-output <value>
                          Output path for the plist report
  -ax<codes>              generate multiple, processor-specific, auto-dispatched code paths for Intel® processors, specified by <codes>, if there is a performance benefit
  -B <prefix>             Search $prefix$file for executables, libraries, and data files. If $prefix is a directory, search $prefix/$file
  -b <arg>                Pass -b <arg> to the linker on AIX
  -CC                     Include comments from within macros in preprocessed output
  -cl-denorms-are-zero    OpenCL only. Allow denormals to be flushed to zero.
  -cl-ext=<value>         OpenCL only. Enable or disable OpenCL extensions/optional features. The argument is a comma-separated sequence of one or more extension names, each prefixed by '+' or '-'.
  -cl-fast-relaxed-math   OpenCL only. Sets -cl-finite-math-only and -cl-unsafe-math-optimizations, and defines __FAST_RELAXED_MATH__.
  -cl-finite-math-only    OpenCL only. Allow floating-point optimizations that assume arguments and results are not NaNs or +-Inf.
  -cl-fp32-correctly-rounded-divide-sqrt
                          OpenCL only. Specify that single precision floating-point divide and sqrt used in the program source are correctly rounded.
  -cl-kernel-arg-info     OpenCL only. Generate kernel argument metadata.
  -cl-mad-enable          OpenCL only. Allow use of less precise MAD computations in the generated binary.
  -cl-no-signed-zeros     OpenCL only. Allow use of less precise no signed zeros computations in the generated binary.
  -cl-no-stdinc           OpenCL only. Disables all standard includes containing non-native compiler types and functions.
  -cl-opt-disable         OpenCL only. This option disables all optimizations. By default optimizations are enabled.
  -cl-single-precision-constant
                          OpenCL only. Treat double precision floating-point constant as single precision constant.
  -cl-std=<value>         OpenCL language standard to compile for.
  -cl-strict-aliasing     OpenCL only. This option is added for compatibility with OpenCL 1.0.
  -cl-uniform-work-group-size
                          OpenCL only. Defines that the global work-size be a multiple of the work-group size specified to clEnqueueNDRangeKernel
  -cl-unsafe-math-optimizations
                          OpenCL only. Allow unsafe floating-point optimizations.  Also implies -cl-no-signed-zeros and -cl-mad-enable.
  --config=<file>         Specify configuration file
  --cuda-compile-host-device
                          Compile CUDA code for both host and device (default). Has no effect on non-CUDA compilations.
  --cuda-device-only      Compile CUDA code for device only
  --cuda-feature=<value>  Manually specify the CUDA feature to use
  --cuda-host-only        Compile CUDA code for host only. Has no effect on non-CUDA compilations.
  --cuda-include-ptx=<value>
                          Include PTX for the following GPU architecture (e.g. sm_35) or 'all'. May be specified more than once.
  --cuda-noopt-device-debug
                          Enable device-side debug info generation. Disables ptxas optimizations.
  --cuda-path-ignore-env  Ignore environment variables to detect CUDA installation
  --cuda-path=<value>     CUDA installation path
  -cuid=<value>           An ID for compilation unit, which should be the same for the same compilation unit but different for different compilation units. It is used to externalize device-side static variables for single source offloading languages CUDA and HIP so that they can be accessed by the host code of the same compilation unit.
  -cxx-isystem <directory>
                          Add directory to the C++ SYSTEM include search path
  -C                      Include comments in preprocessed output
  -c                      Only run preprocess, compile, and assemble steps
  -daal=<value>           Link Intel(R) Data Analytics Acceleration Library (Intel(R) DAAL) libraries and bring in the associated headers (parallel)
  -darwin-target-variant-triple <value>
                          Specify the darwin target variant triple
  -darwin-target-variant <value>
                          Generate code for an additional runtime variant of the deployment target
  -dD                     Print macro definitions in -E mode in addition to normal output
  -debug=<value>          Enable debug information. Valid args: none, all, full, minimal
  -dependency-dot <value> Filename to write DOT-formatted header dependencies to
  -dependency-file <value>
                          Filename (or -) to write dependency output to
  -device-math-lib=<value>
                          Control the addition of device math libraries when compiling for other devices.  Valid arguments are fp64, fp32
  -dI                     Print include directives in -E mode in addition to normal output
  -dM                     Print macro definitions in -E mode instead of normal output
  -dryrun                 Print (but do not run) the commands to run for this compilation
  -dsym-dir <dir>         Directory to output dSYM's (if any) to
  -dumpdir <dumppfx>      Use <dumpfpx> as a prefix to form auxiliary and dump file names
  -dumpmachine            Display the compiler's target processor
  -dumpversion            Display the version of the compiler
  -D <macro>=<value>      Define <macro> to <value> (or 1 if <value> omitted)
  --embed-dir=<dir>       Add directory to embed search path
  -emit-ast               Emit Clang AST files for source inputs
  --emit-extension-symbol-graphs
                          Generate additional symbol graphs for extended modules.
  -emit-interface-stubs   Generate Interface Stub Files.
  -emit-llvm              Use the LLVM representation for assembler and object files
  -emit-merged-ifs        Generate Interface Stub Files, emit merged text not binary.
  --emit-static-lib       Enable linker job to emit a static library.
  -emit-symbol-graph      Generate Extract API information as a side effect of compilation.
  --end-no-unused-arguments
                          Start emitting warnings for unused driver arguments
  -EP                     Preprocess to stdout, omitting #line directives.
  --extract-api-ignores=<value>
                          Comma separated list of files containing a new line separated list of API symbols to ignore when extracting API information.
  -extract-api            Extract API information
  -E                      Only run the preprocessor
  -faapcs-bitfield-load   Follows the AAPCS standard that all volatile bit-field write generates at least one load. (ARM only).
  -faapcs-bitfield-width  Follow the AAPCS standard requirement stating that volatile bit-field width is dictated by the field container type. (ARM only).
  -faddrsig               Emit an address-significance table
  -falign-functions=<value>
                          Align the start of functions on a 2 (DEFAULT) or <n> byte boundary where <n> is a power of 2.
  -falign-functions       align the start of functions to an optimal machine-dependent value.
  -falign-loops=<N>       N must be a power of two. Align loops to the boundary
  -falign-stack=assume-16-byte
                          Assume the stack is aligned on 16-byte boundaries
  -falign-stack=assume-4-byte
                          Assume the stack is aligned on 4-byte boundaries
  -falign-stack=maintain-16-byte
                          Do not assume any alignment, but maintain alignment in case the stack is already aligned
  -faligned-allocation    Enable C++17 aligned allocation functions
  -fallow-editor-placeholders
                          Treat editor placeholders as valid source code
  -faltivec-src-compat=<value>
                          Source-level compatibility for Altivec vectors (for PowerPC targets). This includes results of vector comparison (scalar for 'xl', vector for 'gcc') as well as behavior when initializing with a scalar (splatting for 'xl', element zero only for 'gcc'). For 'mixed', the compatibility is as 'gcc' for 'vector bool/vector pixel' and as 'xl' for other types. Current default is 'mixed'.
  -fansi-escape-codes     Use ANSI escape codes for diagnostics
  -fapinotes-modules      Enable module-based external API notes support
  -fapinotes-swift-version=<version>
                          Specify the Swift version to use when filtering API notes
  -fapinotes              Enable external API notes support
  -fapple-kext            Use Apple's kernel extensions ABI
  -fapple-link-rtlib      Force linking the clang builtins runtime library
  -fapple-pragma-pack     Enable Apple gcc-compatible #pragma pack handling
  -fapplication-extension Restrict code to those available for App Extensions
  -fapprox-func           Allow certain math function calls to be replaced with an approximately equivalent calculation
  -fargument-noalias      Enables 'noalias' attribute for all pointer-type arguments
  -fassume-nothrow-exception-dtor
                          Assume that exception objects' destructors are non-throwing
  -fasync-exceptions      Enable EH Asynchronous exceptions
  -fauto-import           MinGW specific. Enable code generation support for automatic dllimport, and enable support for it in the linker. Enabled by default.
  -fbasic-block-address-map
                          Emit the basic block address map section.
  -fbasic-block-sections=<value>
                          Place each function's basic blocks in unique sections (ELF Only)
  -fbinutils-version=<major.minor>
                          Produced object files can use all ELF features supported by this binutils version and newer. If -fno-integrated-as is specified, the generated assembly will consider GNU as support. 'none' means that all ELF features can be used, regardless of binutils support. Defaults to 2.26.
  -fblocks                Enable the 'blocks' language feature
  -fborland-extensions    Accept non-standard constructs supported by the Borland compiler
  -fbuild-session-file=<file>
                          Use the last modification time of <file> as the build session timestamp
  -fbuild-session-timestamp=<time since Epoch in seconds>
                          Time when the current build session started
  -fbuiltin-module-map    Load the clang builtins module map file.
  -fc++-abi=<value>       C++ ABI to use. This will override the target C++ ABI.
  -fcall-saved-x10        Make the x10 register call-saved (AArch64 only)
  -fcall-saved-x11        Make the x11 register call-saved (AArch64 only)
  -fcall-saved-x12        Make the x12 register call-saved (AArch64 only)
  -fcall-saved-x13        Make the x13 register call-saved (AArch64 only)
  -fcall-saved-x14        Make the x14 register call-saved (AArch64 only)
  -fcall-saved-x15        Make the x15 register call-saved (AArch64 only)
  -fcall-saved-x18        Make the x18 register call-saved (AArch64 only)
  -fcall-saved-x8         Make the x8 register call-saved (AArch64 only)
  -fcall-saved-x9         Make the x9 register call-saved (AArch64 only)
  -fcaret-diagnostics-max-lines=<value>
                          Set the maximum number of source lines to show in a caret diagnostic (0 = no limit).
  -fcf-protection=<value> Instrument control-flow architecture protection
  -fcf-protection         Enable cf-protection in 'full' mode
  -fchar8_t               Enable C++ builtin type char8_t
  -fcheck-new             Do not assume C++ operator new may not return NULL
  -fclang-abi-compat=<version>
                          Attempt to match the ABI of Clang <version>
  -fclangir               Use the ClangIR pipeline to compile
  -fcolor-diagnostics     Enable colors in diagnostics
  -fcomment-block-commands=<arg>
                          Treat each comma separated argument in <arg> as a documentation comment block command
  -fcommon                Place uninitialized global variables in a common block
  -fcomplete-member-pointers
                          Require member pointer base types to be complete if they would be significant under the Microsoft ABI
  -fconstexpr-backtrace-limit=<value>
                          Set the maximum number of entries to print in a constexpr evaluation backtrace (0 = no limit)
  -fconstexpr-depth=<value>
                          Set the maximum depth of recursive constexpr function calls
  -fconstexpr-steps=<value>
                          Set the maximum number of steps in constexpr function evaluation
  -fcoro-aligned-allocation
                          Prefer aligned allocation for C++ Coroutines
  -fcoroutines            Enable support for the C++ Coroutines
  -fcoverage-compilation-dir=<value>
                          The compilation directory to embed in the coverage mapping.
  -fcoverage-mapping      Generate coverage mapping to enable code coverage analysis
  -fcoverage-mcdc         Enable MC/DC criteria when generating code coverage
  -fcoverage-prefix-map=<old>=<new>
                          remap file source paths <old> to <new> in coverage mapping. If there are multiple options, prefix replacement is applied in reverse order starting from the last one
  -fcrash-diagnostics-dir=<dir>
                          Put crash-report files in <dir>
  -fcrash-diagnostics=<value>
                          Set level of crash diagnostic reporting, (option: off, compiler, all)
  -fcrash-diagnostics     Enable crash diagnostic reporting (default)
  -fcs-profile-generate=<directory>
                          Generate instrumented code to collect context sensitive execution counts into <directory>/default.profraw (overridden by LLVM_PROFILE_FILE env var)
  -fcs-profile-generate   Generate instrumented code to collect context sensitive execution counts into default.profraw (overridden by LLVM_PROFILE_FILE env var)
  -fcuda-prec-sqrt        Specify that sqrt is correctly rounded (for CUDA devices)
  -fcuda-short-ptr        Use 32-bit pointers for accessing const/local/shared address spaces
  -fcx-fortran-rules      Range reduction is enabled for complex arithmetic operations.
  -fcx-limited-range      Basic algebraic expansions of complex arithmetic operations involving are enabled.
  -fcxx-exceptions        Enable C++ exceptions
  -fcxx-modules           Enable modules for C++
  -fdata-sections         Place each data in its own section
  -fdebug-compilation-dir=<value>
                          The compilation directory to embed in the debug info
  -fdebug-default-version=<value>
                          Default DWARF version to use, if a -g option caused DWARF debug info to be produced
  -fdebug-info-for-profiling
                          Emit extra debug info to make sample profile more accurate
  -fdebug-macro           Emit macro debug information
  -fdebug-prefix-map=<old>=<new>
                          For paths in debug info, remap directory <old> to <new>. If multiple options match a path, the last option wins
  -fdebug-ranges-base-address
                          Use DWARF base address selection entries in .debug_ranges
  -fdebug-types-section   Place debug types in their own section (ELF Only)
  -fdeclspec              Allow __declspec as a keyword
  -fdefine-target-os-macros
                          Enable predefined target OS macros
  -fdelayed-template-parsing
                          Parse templated function definitions at the end of the translation unit
  -fdelete-null-pointer-checks
                          Treat usage of null pointers as undefined behavior (default)
  -fdiagnostics-absolute-paths
                          Print absolute paths in diagnostics
  -fdiagnostics-hotness-threshold=<value>
                          Prevent optimization remarks from being output if they do not have at least this profile count. Use 'auto' to apply the threshold from profile summary
  -fdiagnostics-misexpect-tolerance=<value>
                          Prevent misexpect diagnostics from being output if the profile counts are within N% of the expected. 
  -fdiagnostics-parseable-fixits
                          Print fix-its in machine parseable form
  -fdiagnostics-print-source-range-info
                          Print source range spans in numeric form
  -fdiagnostics-show-hotness
                          Enable profile hotness information in diagnostic line
  -fdiagnostics-show-note-include-stack
                          Display include stacks for diagnostic notes
  -fdiagnostics-show-option
                          Print option name with mappable diagnostics
  -fdiagnostics-show-template-tree
                          Print a template comparison tree for differing templates
  -fdigraphs              Enable alternative token representations '<:', ':>', '<%', '%>', '%:', '%:%:' (default)
  -fdirect-access-external-data
                          Don't use GOT indirection to reference external data symbols
  -fdisable-block-signature-string
                          Disable block signature string)
  -fdiscard-value-names   Discard value names in LLVM IR
  -fdollars-in-identifiers
                          Allow '$' in identifiers
  -fdriver-only           Only run the driver.
  -fdwarf-exceptions      Use DWARF style exceptions
  -feliminate-unused-debug-types
                          Do not emit  debug info for defined but unused types
  -fembed-bitcode-marker  Embed placeholder LLVM IR data as a marker
  -fembed-bitcode=<option>
                          Embed LLVM bitcode
  -fembed-bitcode         Embed LLVM IR bitcode as data
  -fembed-offload-object=<value>
                          Embed Offloading device-side binary into host object file as a section.
  -femit-all-decls        Emit all declarations, even if unused
  -femit-class-debug-always
                          Emit debug information for a C++ class into each object file where the class is used. This flag is useful for tools which are unable to resolve incomplete type descriptions.  Using this option may cause a large increase in the size of the debug information
  -femit-compact-unwind-non-canonical
                          Try emitting Compact-Unwind for non-canonical entries. Maybe overriden by other constraints
  -femit-dwarf-unwind=<value>
                          When to emit DWARF unwind (EH frame) info
  -femulated-tls          Use emutls functions to access thread_local variables
  -fenable-matrix         Enable matrix data type and related builtin functions
  -fexceptions            Enable support for exception handling
  -fexcess-precision=<value>
                          Allows control over excess precision on targets where native support for the precision types is not available. By default, excess precision is used to calculate intermediate results following the rules specified in ISO C99.
  -fexperimental-late-parse-attributes
                          Enable experimental late parsing of attributes
  -fexperimental-library  Control whether unstable and experimental library features are enabled. This option enables various library features that are either experimental (also known as TSes), or have been but are not stable yet in the selected Standard Library implementation. It is not recommended to use this option in production code, since neither ABI nor API stability are guaranteed. This is intended to provide a preview of features that will ship in the future for experimentation purposes
  -fexperimental-modules-reduced-bmi
                          Generate the reduced BMI
  -fexperimental-new-constant-interpreter
                          Enable the experimental new constant interpreter
  -fexperimental-openacc-macro-override <value>
                          Overrides the _OPENACC macro value for experimental testing during OpenACC support development
  -fexperimental-relative-c++-abi-vtables
                          Use the experimental C++ class ABI for classes with virtual tables
  -fexperimental-sanitize-metadata-ignorelist=<value>
                          Disable sanitizer metadata for modules and functions that match the provided special case list
  -fexperimental-sanitize-metadata=<value>
                          Specify the type of metadata to emit for binary analysis sanitizers
  -fexperimental-strict-floating-point
                          Enables the use of non-default rounding modes and non-default exception handling on targets that are not currently ready.
  -fextend-arguments=<value>
                          Controls how scalar integer arguments are extended in calls to unprototyped and varargs functions
  -ffast-math             Allow aggressive, lossy floating-point optimizations
  -ffat-lto-objects       Enable fat LTO object support
  -ffile-compilation-dir=<value>
                          The compilation directory to embed in the debug info and coverage mapping.
  -ffile-prefix-map=<value>
                          remap file source paths in debug info, predefined preprocessor macros and __builtin_FILE(). Implies -ffile-reproducible.
  -ffile-reproducible     Use the target's platform-specific path separator character when expanding the __FILE__ macro
  -ffine-grained-bitfield-accesses
                          Use separate accesses for consecutive bitfield runs with legal widths and alignments.
  -ffinite-loops          Assume all non-trivial loops are finite.
  -ffinite-math-only      Allow floating-point optimizations that assume arguments and results are not NaNs or +-inf. This defines the \_\_FINITE\_MATH\_ONLY\_\_ preprocessor macro.
  -ffixed-a0              Reserve the a0 register (M68k only)
  -ffixed-a1              Reserve the a1 register (M68k only)
  -ffixed-a2              Reserve the a2 register (M68k only)
  -ffixed-a3              Reserve the a3 register (M68k only)
  -ffixed-a4              Reserve the a4 register (M68k only)
  -ffixed-a5              Reserve the a5 register (M68k only)
  -ffixed-a6              Reserve the a6 register (M68k only)
  -ffixed-d0              Reserve the d0 register (M68k only)
  -ffixed-d1              Reserve the d1 register (M68k only)
  -ffixed-d2              Reserve the d2 register (M68k only)
  -ffixed-d3              Reserve the d3 register (M68k only)
  -ffixed-d4              Reserve the d4 register (M68k only)
  -ffixed-d5              Reserve the d5 register (M68k only)
  -ffixed-d6              Reserve the d6 register (M68k only)
  -ffixed-d7              Reserve the d7 register (M68k only)
  -ffixed-g1              Reserve the G1 register (SPARC only)
  -ffixed-g2              Reserve the G2 register (SPARC only)
  -ffixed-g3              Reserve the G3 register (SPARC only)
  -ffixed-g4              Reserve the G4 register (SPARC only)
  -ffixed-g5              Reserve the G5 register (SPARC only)
  -ffixed-g6              Reserve the G6 register (SPARC only)
  -ffixed-g7              Reserve the G7 register (SPARC only)
  -ffixed-i0              Reserve the I0 register (SPARC only)
  -ffixed-i1              Reserve the I1 register (SPARC only)
  -ffixed-i2              Reserve the I2 register (SPARC only)
  -ffixed-i3              Reserve the I3 register (SPARC only)
  -ffixed-i4              Reserve the I4 register (SPARC only)
  -ffixed-i5              Reserve the I5 register (SPARC only)
  -ffixed-l0              Reserve the L0 register (SPARC only)
  -ffixed-l1              Reserve the L1 register (SPARC only)
  -ffixed-l2              Reserve the L2 register (SPARC only)
  -ffixed-l3              Reserve the L3 register (SPARC only)
  -ffixed-l4              Reserve the L4 register (SPARC only)
  -ffixed-l5              Reserve the L5 register (SPARC only)
  -ffixed-l6              Reserve the L6 register (SPARC only)
  -ffixed-l7              Reserve the L7 register (SPARC only)
  -ffixed-o0              Reserve the O0 register (SPARC only)
  -ffixed-o1              Reserve the O1 register (SPARC only)
  -ffixed-o2              Reserve the O2 register (SPARC only)
  -ffixed-o3              Reserve the O3 register (SPARC only)
  -ffixed-o4              Reserve the O4 register (SPARC only)
  -ffixed-o5              Reserve the O5 register (SPARC only)
  -ffixed-point           Enable fixed point types
  -ffixed-r19             Reserve register r19 (Hexagon only)
  -ffixed-r9              Reserve the r9 register (ARM only)
  -ffixed-x10             Reserve the x10 register (AArch64/RISC-V only)
  -ffixed-x11             Reserve the x11 register (AArch64/RISC-V only)
  -ffixed-x12             Reserve the x12 register (AArch64/RISC-V only)
  -ffixed-x13             Reserve the x13 register (AArch64/RISC-V only)
  -ffixed-x14             Reserve the x14 register (AArch64/RISC-V only)
  -ffixed-x15             Reserve the x15 register (AArch64/RISC-V only)
  -ffixed-x16             Reserve the x16 register (AArch64/RISC-V only)
  -ffixed-x17             Reserve the x17 register (AArch64/RISC-V only)
  -ffixed-x18             Reserve the x18 register (AArch64/RISC-V only)
  -ffixed-x19             Reserve the x19 register (AArch64/RISC-V only)
  -ffixed-x1              Reserve the x1 register (AArch64/RISC-V only)
  -ffixed-x20             Reserve the x20 register (AArch64/RISC-V only)
  -ffixed-x21             Reserve the x21 register (AArch64/RISC-V only)
  -ffixed-x22             Reserve the x22 register (AArch64/RISC-V only)
  -ffixed-x23             Reserve the x23 register (AArch64/RISC-V only)
  -ffixed-x24             Reserve the x24 register (AArch64/RISC-V only)
  -ffixed-x25             Reserve the x25 register (AArch64/RISC-V only)
  -ffixed-x26             Reserve the x26 register (AArch64/RISC-V only)
  -ffixed-x27             Reserve the x27 register (AArch64/RISC-V only)
  -ffixed-x28             Reserve the x28 register (AArch64/RISC-V only)
  -ffixed-x29             Reserve the x29 register (AArch64/RISC-V only)
  -ffixed-x2              Reserve the x2 register (AArch64/RISC-V only)
  -ffixed-x30             Reserve the x30 register (AArch64/RISC-V only)
  -ffixed-x31             Reserve the x31 register (AArch64/RISC-V only)
  -ffixed-x3              Reserve the x3 register (AArch64/RISC-V only)
  -ffixed-x4              Reserve the x4 register (AArch64/RISC-V only)
  -ffixed-x5              Reserve the x5 register (AArch64/RISC-V only)
  -ffixed-x6              Reserve the x6 register (AArch64/RISC-V only)
  -ffixed-x7              Reserve the x7 register (AArch64/RISC-V only)
  -ffixed-x8              Reserve the x8 register (AArch64/RISC-V only)
  -ffixed-x9              Reserve the x9 register (AArch64/RISC-V only)
  -fforce-check-cxx20-modules-input-files
                          Check the input source files from C++20 modules explicitly
  -fforce-dwarf-frame     Always emit a debug frame section
  -fforce-emit-vtables    Emits more virtual tables to improve devirtualization
  -fforce-enable-int128   Enable support for int128_t type
  -ffp-accuracy=<value>   Specifies the required accuracy for floating-point operations and library calls.
  -ffp-contract=<value>   Form fused FP ops (e.g. FMAs)
  -ffp-eval-method=<value>
                          Specifies the evaluation method to use for floating-point arithmetic.
  -ffp-exception-behavior=<value>
                          Specifies the exception behavior of floating-point operations.
  -ffp-model=<value>      Controls the semantics of floating-point calculations.
  -ffreestanding          Assert that the compilation takes place in a freestanding environment
  -ffuchsia-api-level=<value>
                          Set Fuchsia API level
  -ffunction-sections     Place each function in its own section
  -fglobal-isel           Enables the global instruction selector
  -fgnu-keywords          Allow GNU-extension keywords regardless of language standard
  -fgnu-runtime           Generate output compatible with the standard GNU Objective-C runtime
  -fgnu89-inline          Use the gnu89 inline semantics
  -fgnuc-version=<value>  Sets various macros to claim compatibility with the given GCC version (default is 4.2.1)
  -fgpu-allow-device-init Allow device side init function in HIP (experimental)
  -fgpu-approx-transcendentals
                          Use approximate transcendental functions
  -fgpu-default-stream=<value>
                          Specify default stream. The default value is 'legacy'. (CUDA/HIP only)
  -fgpu-defer-diag        Defer host/device related diagnostic messages for CUDA/HIP
  -fgpu-flush-denormals-to-zero
                          Flush denormal floating point values to zero in CUDA/HIP device mode.
  -fgpu-rdc               Generate relocatable device code, also known as separate compilation mode
  -fgpu-sanitize          Enable sanitizer for supported offloading devices
  -fhelp                  Display available options
  -fhip-emit-relocatable  Compile HIP source to relocatable
  -fhip-fp32-correctly-rounded-divide-sqrt
                          Specify that single precision floating-point divide and sqrt used in the program source are correctly rounded (HIP device compilation only)
  -fhip-kernel-arg-name   Specify that kernel argument names are preserved (HIP only)
  -fhip-new-launch-api    Use new kernel launching API for HIP
  -fhlsl-strict-availability
                          Enables strict availability diagnostic mode for HLSL built-in functions.
  -fhls                   Enable Intel FPGA High Level Synthesis extensions
  -fhonor-infinities      Specify that floating-point optimizations are not allowed that assume arguments and results are not +-inf.
  -fhonor-nan-compares    Honor NaN compares with fast math
  -fhonor-nans            Specify that floating-point optimizations are not allowed that assume arguments and results are not NANs.
  -fignore-exceptions     Enable support for ignoring exception handling constructs
  -fimf-absolute-error=<value>
                          Define the maximum allowable absolute error for math library function results
  -fimf-accuracy-bits=<value>
                          Define the relative error, measured by the number of correct bits,for math library function results
  -fimf-arch-consistency=<value>
                          Ensures that the math library functions produce consistent results across different implementations of the same architecture
  -fimf-domain-exclusion=<value>
                          Indicates the input arguments domain on which math functions must provide correct results.
  -fimf-max-error=<value> defines the maximum allowable relative error, measured in ulps, for math library function results
  -fimf-precision=<value> Defines the accuracy (precision) for math library functions.
  -fimf-use-svml=<value>  Instruct the compiler to implement math library functions using the Short Vector Math Library(SVML)
  -fimplicit-module-maps  Implicitly search the file system for module map files.
  -fincremental-extensions
                          Enable incremental processing extensions such as processingstatements on the global scope.
  -finline-functions      Inline suitable functions
  -finline-hint-functions Inline functions which are (explicitly or implicitly) marked inline
  -finline-max-stacksize=<value>
                          Suppress inlining of functions whose stack size exceeds the given value
  -finput-charset=<value> Specify the default character set for source files
  -finstrument-function-entry-bare
                          Instrument function entry only, after inlining, without arguments to the instrumentation call
  -finstrument-functions-after-inlining
                          Like -finstrument-functions, but insert the calls after inlining
  -finstrument-functions  Generate calls to instrument function entry and exit
  -fintegrated-as         Enable the integrated assembler
  -fintegrated-cc1        Run cc1 in-process
  -fintegrated-objemitter Use internal machine object code emitter.
  -fintel-long-double-size=<value>
                          Overrides the size of long double from the architecture/OS defaults.
  -fintelfpga             Perform ahead-of-time compilation for FPGA
  -fiopenmp-simd          Same as -qopenmp-simd
  -fiopenmp               Same as -qopenmp
  -fjmc                   Enable just-my-code debugging
  -fjump-tables           Use jump tables for lowering switches
  -fkeep-persistent-storage-variables
                          Enable keeping all variables that have a persistent storage duration, including global, static and thread-local variables, to guarantee that they can be directly addressed
  -fkeep-static-consts    Keep static const variables even if unused
  -fkeep-system-includes  Instead of expanding system headers when emitting preprocessor output, preserve the #include directive. Useful when producing preprocessed output for test case reduction. May produce incorrect output if preprocessor symbols that control the included content (e.g. _XOPEN_SOURCE) are defined in the including source file. The portability of the resulting source to other compilation environments is not guaranteed.
                          
                          Only valid with -E.
  -flax-vector-conversions=<value>
                          Enable implicit vector bit-casts
  -flink-huge-device-code Generate and use a custom linker script for huge device code sections
  -flto-jobs=<value>      Controls the backend parallelism of -flto=thin (default of 0 means the number of threads will be derived from the number of CPUs detected)
  -flto=auto              Enable LTO in 'full' mode
  -flto=jobserver         Enable LTO in 'full' mode
  -flto=<value>           Set LTO mode
  -flto                   Enable LTO in 'full' mode
  -fmacro-backtrace-limit=<value>
                          Set the maximum number of entries to print in a macro expansion backtrace (0 = no limit)
  -fmacro-prefix-map=<value>
                          remap file source paths in predefined preprocessor macros and __builtin_FILE(). Implies -ffile-reproducible.
  -fmaintain-32-byte-stack-align
                          Do not assume any alignment, but maintain alignment in case the stack is already aligned
  -fmath-errno            Require math functions to indicate errors by setting errno
  -fmax-tokens=<value>    Max total number of preprocessed tokens for -Wmax-tokens.
  -fmax-type-align=<value>
                          Specify the maximum alignment to enforce on pointers lacking an explicit alignment
  -fma                    Enable the combining of floating point multiples and add/subtract operations.
  -fmemory-profile-use=<pathname>
                          Use memory profile for profile-guided memory optimization
  -fmemory-profile=<directory>
                          Enable heap memory profiling and dump results into <directory>
  -fmemory-profile        Enable heap memory profiling
  -fmerge-all-constants   Allow merging of constants
  -fmerge-debug-strings   Merge identical debug strings in different object files.
  -fmessage-length=<value>
                          Format message diagnostics so that they fit within N columns
  -fminimize-whitespace   Ignore the whitespace from the input file when emitting preprocessor output. It will only contain whitespace when necessary, e.g. to keep two minus signs from merging into to an increment operator. Useful with the -P option to normalize whitespace such that two files with only formatting changes are equal.
                          
                          Only valid with -E on C-like inputs and incompatible with -traditional-cpp.
  -fmodule-file=[<name>=]<file>
                          Specify the mapping of module name to precompiled module file, or load a module file if name is omitted.
  -fmodule-header=<kind>  Build a C++20 Header Unit from a header that should be found in the user (fmodule-header=user) or system (fmodule-header=system) search path.
  -fmodule-header         Build a C++20 Header Unit from a header
  -fmodule-map-file=<file>
                          Load this module map file
  -fmodule-name=<name>    Specify the name of the module to build
  -fmodule-output=<value> Save intermediate module file results when compiling a standard C++ module unit.
  -fmodule-output         Save intermediate module file results when compiling a standard C++ module unit.
  -fmodules-cache-path=<directory>
                          Specify the module cache path
  -fmodules-decluse       Require declaration of modules used within a module
  -fmodules-disable-diagnostic-validation
                          Disable validation of the diagnostic options when loading the module
  -fmodules-ignore-macro=<value>
                          Ignore the definition of the given macro when building and loading modules
  -fmodules-prune-after=<seconds>
                          Specify the interval (in seconds) after which a module file will be considered unused
  -fmodules-prune-interval=<seconds>
                          Specify the interval (in seconds) between attempts to prune the module cache
  -fmodules-search-all    Search even non-imported modules to resolve references
  -fmodules-strict-decluse
                          Like -fmodules-decluse but requires all headers to be in modules
  -fmodules-user-build-path <directory>
                          Specify the module user build path
  -fmodules-validate-input-files-content
                          Validate PCM input files based on content if mtime differs
  -fmodules-validate-once-per-build-session
                          Don't verify input files for the modules if the module has been successfully validated or loaded during this build session
  -fmodules-validate-system-headers
                          Validate the system headers that a module depends on when loading the module
  -fmodules               Enable the 'modules' language feature
  -fms-compatibility-version=<value>
                          Dot-separated value representing the Microsoft compiler version number to report in _MSC_VER (0 = don't define it (default))
  -fms-compatibility      Enable full Microsoft Visual C++ compatibility
  -fms-define-stdc        Define '__STDC__' to '1' in MSVC Compatibility mode
  -fms-extensions         Accept some non-standard constructs supported by the Microsoft compiler
  -fms-hotpatch           Ensure that all functions can be hotpatched at runtime
  -fms-runtime-lib=<value>
                          Select Windows run-time library
  -fms-volatile           Volatile loads and stores have acquire and release semantics
  -fmsc-version=<value>   Microsoft compiler version number to report in _MSC_VER (0 = don't define it (default))
  -fnew-alignment=<align> Specifies the largest alignment guaranteed by '::operator new(size_t)'
  -fnew-infallible        Enable treating throwing global C++ operator new as always returning valid memory (annotates with __attribute__((returns_nonnull)) and throw()). This is detectable in source.
  -fno-aapcs-bitfield-width
                          Do not follow the AAPCS standard requirement stating that volatile bit-field width is dictated by the field container type. (ARM only).
  -fno-access-control     Disable C++ access control
  -fno-addrsig            Don't emit an address-significance table
  -fno-alias              Enables 'noalias' attribute for all pointer-type arguments
  -fno-align-functions    Aligns on a 2-byte boundary
  -fno-apinotes-modules   Disable module-based external API notes support
  -fno-apinotes           Disable external API notes support
  -fno-assume-sane-operator-new
                          Don't assume that C++'s global operator new can't alias any pointer
  -fno-assume-unique-vtables
                          Disable optimizations based on vtable pointer identity
  -fno-assumptions        Disable codegen and compile-time checks for C++23's [[assume]] attribute
  -fno-auto-import        MinGW specific. Disable support for automatic dllimport in code generation and linking
  -fno-autolink           Disable generation of linker directives for automatic library linking
  -fno-builtin-<value>    Disable implicit builtin knowledge of a specific function
  -fno-builtin            Disable implicit builtin knowledge of functions
  -fno-bundle-offload-arch
                          Specify that the offload bundler should not identify a bundle with specific arch. For example, the bundle for `nvptx64-nvidia-cuda-sm_80` uses the bundle tag `nvptx64-nvidia-cuda` when used. This allows .o files to contain .bc bundles that are unspecific to a particular arch version.
  -fno-c++-static-destructors
                          Disable C++ static destructor registration
  -fno-char8_t            Disable C++ builtin type char8_t
  -fno-clangir            Use the AST -> LLVM pipeline to compile
  -fno-color-diagnostics  Disable colors in diagnostics
  -fno-common             Compile common globals like normal definitions
  -fno-complete-member-pointers
                          Do not require member pointer base types to be complete if they would be significant under the Microsoft ABI
  -fno-constant-cfstrings Disable creation of CodeFoundation-type constant strings
  -fno-convergent-functions
                          Assume all functions may be convergent.
  -fno-coverage-mapping   Disable code coverage analysis
  -fno-coverage-mcdc      Disable MC/DC coverage criteria
  -fno-crash-diagnostics  Disable auto-generation of preprocessed source files and a script for reproduction during a clang crash
  -fno-cuda-prec-sqrt     Don't specify that sqrt is correctly rounded (for CUDA devices)
  -fno-cx-fortran-rules   Range reduction is disabled for complex arithmetic operations
  -fno-cx-limited-range   Basic algebraic expansions of complex arithmetic operations involving are disabled.
  -fno-cxx-modules        Disable modules for C++
  -fno-debug-macro        Do not emit macro debug information
  -fno-declspec           Disallow __declspec as a keyword
  -fno-define-target-os-macros
                          Disable predefined target OS macros
  -fno-delayed-template-parsing
                          Disable delayed template parsing
  -fno-delete-null-pointer-checks
                          Do not treat usage of null pointers as undefined behavior
  -fno-diagnostics-fixit-info
                          Do not include fixit information in diagnostics
  -fno-diagnostics-show-line-numbers
                          Show line numbers in diagnostic code snippets
  -fno-digraphs           Disallow alternative token representations '<:', ':>', '<%', '%>', '%:', '%:%:'
  -fno-direct-access-external-data
                          Use GOT indirection to reference external data symbols
  -fno-disable-block-signature-string
                          Don't disable block signature string)
  -fno-discard-value-names
                          Do not discard value names in LLVM IR
  -fno-dollars-in-identifiers
                          Disallow '$' in identifiers
  -fno-elide-constructors Disable C++ copy constructor elision
  -fno-elide-type         Do not elide types when printing diagnostics
  -fno-eliminate-unused-debug-types
                          Emit  debug info for defined but unused types
  -fno-emit-class-debug-always
                          Emit debug information for a C++ class in only one object file
  -fno-exceptions         Disable support for exception handling
  -fno-experimental-late-parse-attributes
                          Disable experimental late parsing of attributes
  -fno-experimental-relative-c++-abi-vtables
                          Do not use the experimental C++ class ABI for classes with virtual tables
  -fno-experimental-sanitize-metadata=<value>
                          Disable emitting metadata for binary analysis sanitizers
  -fno-fat-lto-objects    Disable fat LTO object support
  -fno-file-reproducible  Use the host's platform-specific path separator character when expanding the __FILE__ macro
  -fno-fine-grained-bitfield-accesses
                          Use large-integer access for consecutive bitfield runs.
  -fno-finite-loops       Do not assume that any loop is finite.
  -fno-fixed-point        Disable fixed point types
  -fno-force-enable-int128
                          Disable support for int128_t type
  -fno-global-isel        Disables the global instruction selector
  -fno-gnu-inline-asm     Disable GNU style inline asm
  -fno-gpu-allow-device-init
                          Don't allow device side init function in HIP (experimental)
  -fno-gpu-approx-transcendentals
                          Don't use approximate transcendental functions
  -fno-gpu-defer-diag     Don't defer host/device related diagnostic messages for CUDA/HIP
  -fno-hip-emit-relocatable
                          Do not override toolchain to compile HIP source to relocatable
  -fno-hip-fp32-correctly-rounded-divide-sqrt
                          Don't specify that single precision floating-point divide and sqrt used in the program source are correctly rounded (HIP device compilation only)
  -fno-hip-kernel-arg-name
                          Don't specify that kernel argument names are preserved (HIP only)
  -fno-hip-new-launch-api Don't use new kernel launching API for HIP
  -fno-honor-nan-compares Do not honor NaN compares with fast math
  -fno-integrated-as      Disable the integrated assembler
  -fno-integrated-cc1     Spawn a separate process for each cc1
  -fno-integrated-objemitter
                          Use external machine object code emitter.
  -fno-jump-tables        Do not use jump tables for lowering switches
  -fno-keep-persistent-storage-variables
                          Disable keeping all variables that have a persistent storage duration, including global, static and thread-local variables, to guarantee that they can be directly addressed
  -fno-keep-static-consts Don't keep static const variables even if unused
  -fno-knr-functions      Disable support for K&R C function declarations
  -fno-link-huge-device-code
                          Do not generate or use a custom linker script for huge device code sections (default)
  -fno-lto                Disable LTO mode (default)
  -fno-memory-profile     Disable heap memory profiling
  -fno-merge-all-constants
                          Disallow merging of constants
  -fno-merge-debug-strings
                           Do not mergeidentical debug strings in different object files.
  -fno-modules-check-relocated<value>
                          Skip checks for relocated modules when loading PCM files
  -fno-modules-validate-textual-header-includes
                          Do not enforce -fmodules-decluse and private header restrictions for textual headers. This flag will be removed in a future Clang release.
  -fno-new-infallible     Disable treating throwing global C++ operator new as always returning valid memory (annotates with __attribute__((returns_nonnull)) and throw()). This is detectable in source.
  -fno-objc-avoid-heapify-local-blocks
                          Don't try to avoid heapifying local blocks
  -fno-objc-infer-related-result-type
                          do not infer Objective-C related result type based on method family
  -fno-offload-lto        Disable LTO mode (default) for offload compilation
  -fno-offload-uniform-block
                          Don't assume that kernels are launched with uniform block sizes (default true for CUDA/HIP and false otherwise)
  -fno-openmp-device-lib=<value>
                          Control exclusion of device libraries from device binary linkage. Valid arguments are libc, libm-fp32, libm-fp64, all
  -fno-openmp-extensions  Disable all Clang extensions for OpenMP directives and clauses
  -fno-operator-names     Do not treat C++ operator name keywords as synonyms for operators
  -fno-optimize-sibling-calls
                          Disable tail call optimization, keeping the call stack accurate
  -fno-pch-codegen        Do not generate code for uses of this PCH that assumes an explicit object file will be built for the PCH
  -fno-pch-debuginfo      Do not generate debug info for types in an object file built from this PCH and do not generate them elsewhere
  -fno-plt                Use GOT indirection instead of PLT to make external function calls (x86 only)
  -fno-preserve-as-comments
                          Do not preserve comments in inline assembly
  -fno-profile-generate   Disable generation of profile instrumentation.
  -fno-profile-instr-generate
                          Disable generation of profile instrumentation.
  -fno-profile-instr-use  Disable using instrumentation data for profile-guided optimization
  -fno-pseudo-probe-for-profiling
                          Do not emit pseudo probes for sample profiling
  -fno-raw-string-literals
                          Disable raw string literals
  -fno-register-global-dtors-with-atexit
                          Don't use atexit or __cxa_atexit to register global destructors
  -fno-relaxed-template-template-args
                          Disable C++17 relaxed template template argument matching
  -fno-rtlib-add-rpath    Do not add -rpath with architecture-specific resource directory to the linker flags. When --hip-link is specified, do not add -rpath with HIP runtime library directory to the linker flags
  -fno-rtlib-defaultlib   On Windows, do not emit /defaultlib: directives to link compiler-rt libraries
  -fno-rtti-data          Disable generation of RTTI data
  -fno-rtti               Disable generation of rtti information
  -fno-sanitize-address-globals-dead-stripping
                          Disable linker dead stripping of globals in AddressSanitizer
  -fno-sanitize-address-outline-instrumentation
                          Use default code inlining logic for the address sanitizer
  -fno-sanitize-address-poison-custom-array-cookie
                          Disable poisoning array cookies when using custom operator new[] in AddressSanitizer
  -fno-sanitize-address-use-after-scope
                          Disable use-after-scope detection in AddressSanitizer
  -fno-sanitize-address-use-odr-indicator
                          Disable ODR indicator globals
  -fno-sanitize-cfi-canonical-jump-tables
                          Do not make the jump table addresses canonical in the symbol table
  -fno-sanitize-cfi-cross-dso
                          Disable control flow integrity (CFI) checks for cross-DSO calls.
  -fno-sanitize-coverage=<value>
                          Disable features of coverage instrumentation for Sanitizers
  -fno-sanitize-hwaddress-experimental-aliasing
                          Disable aliasing mode in HWAddressSanitizer
  -fno-sanitize-ignorelist
                          Don't use ignorelist file for sanitizers
  -fno-sanitize-memory-param-retval
                          Disable detection of uninitialized parameters and return values
  -fno-sanitize-memory-track-origins
                          Disable origins tracking in MemorySanitizer
  -fno-sanitize-memory-use-after-dtor
                          Disable use-after-destroy detection in MemorySanitizer
  -fno-sanitize-recover=<value>
                          Disable recovery for specified sanitizers
  -fno-sanitize-stable-abi
                          Conventional ABI instrumentation for sanitizer runtime. Default: Conventional
  -fno-sanitize-stats     Disable sanitizer statistics gathering.
  -fno-sanitize-thread-atomics
                          Disable atomic operations instrumentation in ThreadSanitizer
  -fno-sanitize-thread-func-entry-exit
                          Disable function entry/exit instrumentation in ThreadSanitizer
  -fno-sanitize-thread-memory-access
                          Disable memory access instrumentation in ThreadSanitizer
  -fno-sanitize-trap=<value>
                          Disable trapping for specified sanitizers
  -fno-sanitize-trap      Disable trapping for all sanitizers
  -fno-short-wchar        Force wchar_t to be an unsigned int
  -fno-show-column        Do not include column number on diagnostics
  -fno-show-source-location
                          Do not include source location information with diagnostics
  -fno-signed-char        char is unsigned
  -fno-signed-zeros       Allow optimizations that ignore the sign of floating point zeros
  -fno-skip-odr-check-in-gmf
                          Perform ODR checks for decls in the global module fragment.
  -fno-spell-checking     Disable spell-checking
  -fno-split-machine-functions
                          Disable late function splitting using profile information (x86 ELF/COFF)
  -fno-split-stack        Wouldn't use segmented stack
  -fno-stack-clash-protection
                          Disable stack clash protection
  -fno-stack-protector    Disable the use of stack protectors
  -fno-standalone-debug   Limit debug information produced to reduce size of debug binary
  -fno-strict-aliasing    Disable optimizations based on strict aliasing rules
  -fno-strict-float-cast-overflow
                          Relax language rules and try to match the behavior of the target's native float-to-int conversion instructions
  -fno-strict-return      Don't treat control flow paths that fall off the end of a non-void function as unreachable
  -fno-sycl-add-default-spec-consts-image
                          Turns off generation of device image where all specialization constant usages are replaced with default values.
  -fno-sycl-allow-device-dependencies
                          Do not allow dependencies between device code images (default)
  -fno-sycl-dead-args-optimization
                          Disables elimination of DPC++ dead kernel arguments
  -fno-sycl-decompose-functor
                          Do not decompose SYCL functor if possible (experimental, CUDA only)
  -fno-sycl-device-code-split-esimd
                          do not split ESIMD and SYCL device code into separate device binary images. Has effect only for SPIR-based targets. (experimental)
  -fno-sycl-device-lib-jit-link
                          Disables sycl device library jit link (experimental)
  -fno-sycl-device-lib=<value>
                          Control exclusion of device libraries from device binary linkage. Valid arguments are libc, libm-fp32, libm-fp64, all
  -fno-sycl-early-optimizations
                          Disable standard optimization pipeline for SYCL device compiler
  -fno-sycl-esimd-force-stateless-mem
                          Do not enforce using stateless memory accesses.
  -fno-sycl-explicit-simd Disable SYCL explicit SIMD extension. (deprecated)
  -fno-sycl-force-inline-kernel-lambda
                          Disallow force inline SYCL kernels lambda in entry point
  -fno-sycl-id-queries-fit-in-int
                          Do not assume that SYCL ID queries fit within MAX_INT.
  -fno-sycl-instrument-device-code
                          Do not add Instrumentation and Tracing Technology (ITT) instrumentation intrinsics calls (experimental)
  -fno-sycl-libspirv      Disable check for libspirv
  -fno-sycl-link-spirv    Disable adding of the default (spir64) triple when discovered in user specified objects and archives.
  -fno-sycl-pstl-offload  Disable offloading of C++ standard parallel algorithms.
  -fno-sycl-rdc           Generate relocatable device code during SYCL offload target compilation. Use of ‘-fno-sycl-rdc’ in combination with ‘-c’ will produce final device binaries within the generated fat object. When using this option, each kernel must be self-contained within its translation unit (source file).  Therefore, the use of SYCL_EXTERNAL is disallowed when this option is enabled.
  -fno-sycl-remove-unused-external-funcs
                          Prevent removal of unused `SYCL_EXTERNAL` functions
  -fno-sycl-unnamed-lambda
                          Disallow unnamed SYCL lambda kernels
  -fno-sycl-use-bitcode   Use SPIR-V instead of LLVM bitcode in fat objects (deprecated)
  -fno-sycl-use-footer    Disable usage of the integration footer during SYCL enabled compilations.
  -fno-sycl               Disables SYCL kernels compilation for device
  -fno-system-debug       Do not emit debug information for declarations in system headers
  -fno-temp-file          Directly create compilation output files. This may lead to incorrect incremental builds if the compiler crashes
  -fno-threadsafe-statics Do not emit code to make initialization of local statics thread safe
  -fno-trigraphs          Do not process trigraph sequences
  -fno-unified-lto        Use distinct LTO pipelines
  -fno-unique-section-names
                          Don't use unique names for text and data sections
  -fno-unroll-loops       Turn off loop unroller
  -fno-use-cxa-atexit     Don't use __cxa_atexit for calling destructors
  -fno-use-init-array     Use .ctors/.dtors instead of .init_array/.fini_array
  -fno-vec-allow-scalar-stores
                          When this option is set, an explicit simd loop (for example, one set with #pragma omp simd) will not be vectorized if it contains a store to a scalar variable that is not marked as private, lastprivate, or reduction.
  -fno-vec-peel-loops     Disable peel loop vectorization.
  -fno-vec-remainder-loops
                          Disable remainder loop vectorization.
  -fno-vec-with-mask      Disable vectorization for short trip-count loops with masking.
  -fno-verify-intermediate-code
                          Disable verification of LLVM IR
  -fno-visibility-inlines-hidden-static-local-var
                          Disables -fvisibility-inlines-hidden-static-local-var (this is the default on non-darwin targets)
  -fno-xray-function-index
                          Omit function index section at the expense of single-function patching performance
  -fno-zero-initialized-in-bss
                          Don't place zero initialized data in BSS
  -fobjc-arc-exceptions   Use EH-safe code when synthesizing retains and releases in -fobjc-arc
  -fobjc-arc              Synthesize retain and release calls for Objective-C pointers
  -fobjc-avoid-heapify-local-blocks
                          Try to avoid heapifying local blocks
  -fobjc-disable-direct-methods-for-testing
                          Ignore attribute objc_direct so that direct methods can be tested
  -fobjc-encode-cxx-class-template-spec
                          Fully encode c++ class template specialization
  -fobjc-exceptions       Enable Objective-C exceptions
  -fobjc-runtime=<value>  Specify the target Objective-C runtime kind and version
  -fobjc-weak             Enable ARC-style weak references in Objective-C
  -foffload-implicit-host-device-templates
                          Template functions or specializations without host, device and global attributes have implicit host device attributes (CUDA/HIP only)
  -foffload-lto=<value>   Set LTO mode for offload compilation
  -foffload-lto           Enable LTO in 'full' mode for offload compilation
  -foffload-uniform-block Assume that kernels are launched with uniform block sizes (default true for CUDA/HIP and false otherwise)
  -fomit-frame-pointer    Omit the frame pointer from functions that don't need it. Some stack unwinding cases, such as profilers and sanitizers, may prefer specifying -fno-omit-frame-pointer. On many targets, -O1 and higher omit the frame pointer by default. -m[no-]omit-leaf-frame-pointer takes precedence for leaf functions
  -fopenacc               Enable OpenACC
  -fopenmp-concurrent-host-device-compile<value>
                          Enable parallel compilation of host and device compilation steps when performing OpenMP offload compiles using -fopenmp-targets. (experimental)
  -fopenmp-declare-target-scalar-defaultmap=<value>
                          Assume that a scalar declare target variable with implicit data-mapping referenced in a 'target' construct has the same value in the host and device environment
  -fopenmp-device-lib=<value>
                          Control inclusion of device libraries into device binary linkage. Valid arguments are libc, libm-fp32, libm-fp64, all
  -fopenmp-device-link    Perform device link during compilation step instead of link step (-c compilations).  Use for offload compilations to produce final device binaries within the generated fat object.
  -fopenmp-extensions     Enable all Clang extensions for OpenMP directives and clauses
  -fopenmp-force-usm      Force behvaior as if the user specified pragma omp requires unified_shared_memory.
  -fopenmp-offload-mandatory
                          Do not create a host fallback if offloading to the device fails.
  -fopenmp-simd           Emit OpenMP code only for SIMD-based constructs. Advanced users who prefer to use OpenMP* as it is implemented by the LLVM community can get most of that functionality by using -fopenmp-simd.
  -fopenmp-target-buffers=<value>
                          Allow access to target objects of 4GB or larger in target code.
  -fopenmp-target-debug   Enable debugging in the OpenMP offloading device RTL
  -fopenmp-target-default-sub-group-size=<value>
                          Specify the default sub-group size of SPMD kernels generated for OpenMP target constructs for SPIR64
  -fopenmp-target-jit     Emit code that can be JIT compiled for OpenMP offloading. Implies -foffload-lto=full
  -fopenmp-targets=<value>
                          Specify comma-separated list of triples that correspond to OpenMP offloading targets to be supported.  Valid triples include spir64_gen, spir64_x86_64 and spir64
  -fopenmp-version=<value>
                          Set OpenMP version (e.g. 45 for OpenMP 4.5, 51 for OpenMP 5.1). Default value is 51 for Clang
  -fopenmp                Parse OpenMP pragmas and generate parallel code. Advanced users who prefer to use OpenMP* as it is implemented by the LLVM community can get most of that functionality by using -fopenmp.
  -foperator-arrow-depth=<value>
                          Maximum number of 'operator->'s to call for a member access
  -foptimization-record-file=<file>
                          Specify the output name of the file containing the optimization remarks. Implies -fsave-optimization-record. On Darwin platforms, this cannot be used with multiple -arch <arch> options.
  -foptimization-record-passes=<regex>
                          Only include passes which match a specified regular expression in the generated optimization record (by default, include all passes)
  -forder-file-instrumentation
                          Generate instrumented code to collect order file into default.profraw file (overridden by '=' form of option or LLVM_PROFILE_FILE env var)
  -fortlib                Allow for Fortran generated objects to be mixed and matched and linked in with the C/C++ compiler to pull in the needed libraries.
  -fp-model=<value>       Controls the semantics of floating-point calculations.
  -fp-speculation=<value> Specifies the exception behavior of floating-point operations.
  -fpack-struct=<value>   Specify the default maximum struct packing alignment
  -fpascal-strings        Recognize and construct Pascal-style string literals
  -fpass-plugin=<dsopath> Load pass plugin from a dynamic shared object file (only with new pass manager).
  -fpatchable-function-entry=<N,M>
                          Generate M NOPs before function entry and N-M NOPs after function entry
  -fpcc-struct-return     Override the default ABI to return all structs on the stack
  -fpch-codegen           Generate code for uses of this PCH that assumes an explicit object file will be built for the PCH
  -fpch-debuginfo         Generate debug info for types in an object file built from this PCH and do not generate them elsewhere
  -fpch-instantiate-templates
                          Instantiate templates already while building a PCH
  -fpch-validate-input-files-content
                          Validate PCH input files based on content if mtime differs
  -fplugin-arg-<name>-<arg>
                          Pass <arg> to plugin <name>
  -fplugin=<dsopath>      Load the named plugin (dynamic shared object)
  -fprebuilt-implicit-modules
                          Look up implicit modules in the prebuilt module path
  -fprebuilt-module-path=<directory>
                          Specify the prebuilt module path
  -fpreview-breaking-changes
                          When specified, it informs the compiler driver and compilation phases that it is allowed to break backward compatibility. When this option is specified the compiler will also set the macro __INTEL_PREVIEW_BREAKING_CHANGES.
                          When this option is used in conjunction with -fsycl, the driver will link against an alternate form of libsycl, libsycl-preview.
  -fproc-stat-report=<value>
                          Save subprocess statistics to the given file
  -fproc-stat-report<value>
                          Print subprocess statistics
  -fprofile-arcs          Instrument code to produce gcov data files (*.gcda)
  -fprofile-dwo-dir=<value>
                          Directory to store .dwo files when using -fprofile-sample-generate and -gsplit-dwarf. (experimental)
  -fprofile-exclude-files=<value>
                          Instrument only functions from files where names don't match all the regexes separated by a semi-colon
  -fprofile-filter-files=<value>
                          Instrument only functions from files where names match any regex separated by a semi-colon
  -fprofile-function-groups=<N>
                          Partition functions into N groups and select only functions in group i to be instrumented using -fprofile-selected-function-group
  -fprofile-generate=<directory>
                          Generate instrumented code to collect execution counts into <directory>/default.profraw (overridden by LLVM_PROFILE_FILE env var)
  -fprofile-generate      Generate instrumented code to collect execution counts into default.profraw (overridden by LLVM_PROFILE_FILE env var)
  -fprofile-instr-generate=<file>
                          Generate instrumented code to collect execution counts into <file> (overridden by LLVM_PROFILE_FILE env var)
  -fprofile-instr-generate
                          Generate instrumented code to collect execution counts into default.profraw file (overridden by '=' form of option or LLVM_PROFILE_FILE env var)
  -fprofile-instr-use=<value>
                          Use instrumentation data for profile-guided optimization
  -fprofile-list=<value>  Filename defining the list of functions/files to instrument. The file uses the sanitizer special case list format.
  -fprofile-ml-use        Use pre-trained machine learning model for profile guided optimizations.(deprecated)
  -fprofile-remapping-file=<file>
                          Use the remappings described in <file> to match the profile data against names in the program
  -fprofile-sample-accurate
                          Specifies that the sample profile is accurate
  -fprofile-sample-generate=<value>
                          Enable compiler and linker generating information and adjusting optimizations for Sample-based Profile Guided Optimizations (SPGO). Vaild arguments are none, keep-all-opt, med-fidelity, max-fidelity. (experimental)
  -fprofile-sample-use=<value>
                          Enable compiler and linker using information for Sample-based Profile Guided Optimizations (SPGO). (experimental)
  -fprofile-selected-function-group=<i>
                          Partition functions into N groups using -fprofile-function-groups and select only functions in group i to be instrumented. The valid range is 0 to N-1 inclusive
  -fprofile-update=<method>
                          Set update method of profile counters
  -fprofile-use=<pathname>
                          Use instrumentation data for profile-guided optimization. If pathname is a directory, it reads from <pathname>/default.profdata. Otherwise, it reads from file <pathname>.
  -fprotect-parens        Determines whether the optimizer honors parentheses when floating-point expressions are evaluated
  -fpseudo-probe-for-profiling
                          Emit pseudo probes for sample profiling
  -fptrauth-auth-traps    Enable traps on authentication failures
  -fptrauth-calls         Enable signing and authentication of all indirect calls
  -fptrauth-function-pointer-type-discrimination
                          Enable type discrimination on C function pointers
  -fptrauth-init-fini     Enable signing of function pointers in init/fini arrays
  -fptrauth-intrinsics    Enable pointer authentication intrinsics
  -fptrauth-returns       Enable signing and authentication of return addresses
  -fptrauth-vtable-pointer-address-discrimination
                          Enable address discrimination of vtable pointers
  -fptrauth-vtable-pointer-type-discrimination
                          Enable type discrimination of vtable pointers
  -frandomize-layout-seed-file=<file>
                          File holding the seed used by the randomize structure layout feature
  -frandomize-layout-seed=<seed>
                          The seed used by the randomize structure layout feature
  -fraw-string-literals   Enable raw string literals
  -freciprocal-math       Allow division operations to be reassociated
  -freg-struct-return     Override the default ABI to return small structs in registers
  -fregister-global-dtors-with-atexit
                          Use atexit or __cxa_atexit to register global destructors
  -frelaxed-template-template-args
                          Enable C++17 relaxed template template argument matching
  -fropi                  Generate read-only position independent code (ARM only)
  -frounding-math         Disable floating point optimizations that assume the default rounding mode.
  -frtlib-add-rpath       Add -rpath with architecture-specific resource directory to the linker flags. When --hip-link is specified, also add -rpath with HIP runtime library directory to the linker flags
  -frtlib-defaultlib      On Windows, emit /defaultlib: directives to link compiler-rt libraries (default)
  -frwpi                  Generate read-write position independent code (ARM only)
  -fsafe-buffer-usage-suggestions
                          Display suggestions to update code associated with -Wunsafe-buffer-usage warnings
  -fsample-profile-use-profi
                          Use profi to infer block and edge counts
  -fsanitize-address-destructor=<value>
                          Set the kind of module destructors emitted by AddressSanitizer instrumentation. These destructors are emitted to unregister instrumented global variables when code is unloaded (e.g. via `dlclose()`).
  -fsanitize-address-field-padding=<value>
                          Level of field padding for AddressSanitizer
  -fsanitize-address-globals-dead-stripping
                          Enable linker dead stripping of globals in AddressSanitizer
  -fsanitize-address-outline-instrumentation
                          Always generate function calls for address sanitizer instrumentation
  -fsanitize-address-poison-custom-array-cookie
                          Enable poisoning array cookies when using custom operator new[] in AddressSanitizer
  -fsanitize-address-use-after-return=<mode>
                          Select the mode of detecting stack use-after-return in AddressSanitizer
  -fsanitize-address-use-after-scope
                          Enable use-after-scope detection in AddressSanitizer
  -fsanitize-address-use-odr-indicator
                          Enable ODR indicator globals to avoid false ODR violation reports in partially sanitized programs at the cost of an increase in binary size
  -fsanitize-cfi-canonical-jump-tables
                          Make the jump table addresses canonical in the symbol table
  -fsanitize-cfi-cross-dso
                          Enable control flow integrity (CFI) checks for cross-DSO calls.
  -fsanitize-cfi-icall-experimental-normalize-integers
                          Normalize integers in CFI indirect call type signature checks
  -fsanitize-cfi-icall-generalize-pointers
                          Generalize pointers in CFI indirect call type signature checks
  -fsanitize-coverage-allowlist=<value>
                          Restrict sanitizer coverage instrumentation exclusively to modules and functions that match the provided special case list, except the blocked ones
  -fsanitize-coverage-ignorelist=<value>
                          Disable sanitizer coverage instrumentation for modules and functions that match the provided special case list, even the allowed ones
  -fsanitize-coverage=<value>
                          Specify the type of coverage instrumentation for Sanitizers
  -fsanitize-hwaddress-abi=<value>
                          Select the HWAddressSanitizer ABI to target (interceptor or platform, default interceptor). This option is currently unused.
  -fsanitize-hwaddress-experimental-aliasing
                          Enable aliasing mode in HWAddressSanitizer
  -fsanitize-ignorelist=<value>
                          Path to ignorelist file for sanitizers
  -fsanitize-memory-param-retval
                          Enable detection of uninitialized parameters and return values
  -fsanitize-memory-track-origins=<value>
                          Enable origins tracking in MemorySanitizer
  -fsanitize-memory-track-origins
                          Enable origins tracking in MemorySanitizer
  -fsanitize-memory-use-after-dtor
                          Enable use-after-destroy detection in MemorySanitizer
  -fsanitize-memtag-mode=<value>
                          Set default MTE mode to 'sync' (default) or 'async'
  -fsanitize-recover=<value>
                          Enable recovery for specified sanitizers
  -fsanitize-stable-abi   Stable  ABI instrumentation for sanitizer runtime. Default: Conventional
  -fsanitize-stats        Enable sanitizer statistics gathering.
  -fsanitize-system-ignorelist=<value>
                          Path to system ignorelist file for sanitizers
  -fsanitize-thread-atomics
                          Enable atomic operations instrumentation in ThreadSanitizer (default)
  -fsanitize-thread-func-entry-exit
                          Enable function entry/exit instrumentation in ThreadSanitizer (default)
  -fsanitize-thread-memory-access
                          Enable memory access instrumentation in ThreadSanitizer (default)
  -fsanitize-trap=<value> Enable trapping for specified sanitizers
  -fsanitize-trap         Enable trapping for all sanitizers
  -fsanitize-undefined-strip-path-components=<number>
                          Strip (or keep only, if negative) a given number of path components when emitting check metadata.
  -fsanitize=<check>      Turn on runtime checks for various forms of undefined or suspicious behavior. See user manual for available checks
  -fsave-optimization-record=<format>
                          Generate an optimization record file in a specific format
  -fsave-optimization-record
                          Generate a YAML optimization record file
  -fseh-exceptions        Use SEH style exceptions
  -fseparate-named-sections
                          Use separate unique sections for named sections (ELF Only)
  -fshort-enums           Allocate to an enum type only as many bytes as it needs for the declared range of possible values
  -fshort-wchar           Force wchar_t to be a short unsigned int
  -fshow-overloads=<value>
                          Which overload candidates to show when overload resolution fails. Defaults to 'all'
  -fshow-skipped-includes Show skipped includes in -H output.
  -fsigned-char           char is signed
  -fsized-deallocation    Enable C++14 sized global deallocation functions
  -fsjlj-exceptions       Use SjLj style exceptions
  -fskip-odr-check-in-gmf Skip ODR checks for decls in the global module fragment.
  -fslp-vectorize         Enable the superword-level parallelism vectorization passes
  -fspell-checking-limit=<value>
                          Set the maximum number of times to perform spell checking on unrecognized identifiers (0 = no limit)
  -fsplit-dwarf-inlining  Provide minimal debug info in the object/executable to facilitate online symbolication/stack traces in the absence of .dwo/.dwp files when using Split DWARF
  -fsplit-lto-unit        Enables splitting of the LTO unit
  -fsplit-machine-functions
                          Enable late function splitting using profile information (x86 ELF/COFF)
  -fsplit-stack           Use segmented stack
  -fstack-clash-protection
                          Enable stack clash protection
  -fstack-limit-register=<value>
                          Limits the stack register size
  -fstack-protector-all   Enable stack protectors for all functions
  -fstack-protector-strong
                          Enable stack protectors for some functions vulnerable to stack smashing. Compared to -fstack-protector, this uses a stronger heuristic that includes functions containing arrays of any size (and any type), as well as any calls to alloca or the taking of an address from a local variable
  -fstack-protector       Enable stack protectors for some functions vulnerable to stack smashing. This uses a loose heuristic which considers functions vulnerable if they contain a char (or 8bit integer) array or constant sized calls to alloca , which are of greater size than ssp-buffer-size (default: 8 bytes). All variable sized calls to alloca are considered vulnerable. A function with a stack protector has a guard value added to the stack frame that is checked on function exit. The guard value must be positioned in the stack frame such that a buffer overflow from a vulnerable variable will overwrite the guard value before overwriting the function's return address. The reference stack guard value is stored in a global variable.
  -fstack-security-check  Enable overflow security checks
  -fstack-size-section    Emit section containing metadata on function stack sizes
  -fstack-usage           Emit .su file containing information on function stack sizes
  -fstandalone-debug      Emit full debug info for all types used by the program
  -fstrict-aliasing       Enable optimizations based on strict aliasing rules
  -fstrict-enums          Enable optimizations based on the strict definition of an enum's value range
  -fstrict-flex-arrays=<n>
                          Enable optimizations based on the strict definition of flexible arrays
  -fstrict-float-cast-overflow
                          Assume that overflowing float-to-int casts are undefined (default)
  -fstrict-vtable-pointers
                          Enable optimizations based on the strict rules for overwriting polymorphic C++ objects
  -fswift-async-fp=<option>
                          Control emission of Swift async extended frame info
  -fsycl-add-default-spec-consts-image
                          Generates a copy of every device image that uses a specialization constant and replaces all usages of specialization constant with default values specified by specialization_id. If a device image doesn't use a specialization constant at all then no copy is generated. This option is only useful if used in conjunction with Ahead of Time Compilation (-fsycl-target command line option).
  -fsycl-allow-device-dependencies
                          Allow dependencies between device code images
  -fsycl-dead-args-optimization
                          Enables elimination of DPC++ dead kernel arguments
  -fsycl-decompose-functor
                          Do decompose SYCL functor if possible (experimental, CUDA only)
  -fsycl-default-sub-group-size <value>
                          Set the default sub group size for SYCL kernels
  -fsycl-device-code-split-esimd
                          split ESIMD device code from SYCL into a separate device binary image (default). Has effect only for SPIR-based targets. (experimental)
  -fsycl-device-code-split=<value>
                          Perform SYCL device code split: per_kernel (device code module is created for each SYCL kernel) | per_source (device code module is created for each source (translation unit)) | off (no device code split). | auto (use heuristic to select the best way of splitting device code). Default is 'auto' - use heuristic to distribute device code across modules
  -fsycl-device-code-split
                          Perform SYCL device code split in the 'auto' mode, i.e. use heuristic to distribute device code across modules
  -fsycl-device-lib-jit-link
                          Enables sycl device library jit link (experimental)
  -fsycl-device-lib=<value>
                          Control inclusion of device libraries into device binary linkage. Valid arguments are libc, libm-fp32, libm-fp64, libimf-fp32, libimf-fp64, libimf-bf16, all
  -fsycl-device-obj=<value>
                          Specify format of device code stored in the resulting object. Valid values are: spirv, llvmir (default)
  -fsycl-device-only      Compile SYCL kernels for device
  -fsycl-disable-range-rounding
                          Deprecated: please use -fsycl-range-rounding=disable instead.
  -fsycl-dump-device-code=<value>
                          Dump device code into the user provided directory.
  -fsycl-early-optimizations
                          Enable standard optimization pipeline for SYCL device compiler
  -fsycl-embed-ir         Embed LLVM IR for runtime kernel fusion
  -fsycl-enable-function-pointers
                          Experimental Feature: Enables function pointers and support for virtual functions for DPC++ kernels and device functions.
  -fsycl-esimd-force-stateless-mem
                          Enforce using stateless memory accesses. Convert stateful accesses via SYCL accessors to stateless within ESIMD kernels. Enabled by default.
  -fsycl-exp-range-rounding
                          Use experimental range rounding.
  -fsycl-explicit-simd    Enable SYCL explicit SIMD extension. (deprecated)
  -fsycl-footer-path=<value>
                          Specify the location of the temporary source file with the included integration footer.
  -fsycl-force-inline-kernel-lambda
                          Allow force inline SYCL kernels lambda in entry point
  -fsycl-force-target=<value>
                          Force the usage of the given triple when extracting device code from any given objects on the command line
  -fsycl-fp32-prec-sqrt   SYCL only. Specify that single precision floating-point sqrt is correctly rounded.
  -fsycl-fp64-conv-emu    Enable fp64 partial emulation for kernels with only fp64 conversion operations and no fp64 computation operations (requires Intel GPU backend supporting fp64 partial emulation).
  -fsycl-help=<value>     Emit help information from the related offline compilation tool. Valid values: all, fpga, gen, x86_64.
  -fsycl-help             Emit help information from all of the offline compilation tools
  -fsycl-host-compiler-options=<value>
                          When performing the host compilation with -fsycl-host-compiler specified, use the given options during that compile. Options are expected to be a quoted list of space separated options.
  -fsycl-host-compiler=<value>
                          Specify C++ compiler binary to perform host compilation with during SYCL offload compiles.
  -fsycl-id-queries-fit-in-int
                          Assume that SYCL ID queries fit within MAX_INT.
  -fsycl-instrument-device-code
                          Add Instrumentation and Tracing Technology (ITT) instrumentation intrinsics calls (experimental)
  -fsycl-libspirv-path=<value>
                          Path to libspirv library
  -fsycl-link=<value>     Generate partially linked device and host object to be used at various stages of compilation
  -fsycl-link             Generate partially linked device object to be used with the host link
  -fsycl-max-parallel-link-jobs=<value>
                          Experimental feature: Controls the maximum parallelism of actions performed on SYCL device code post-link, i.e. the generation of SPIR-V device images or AOT compilation of each device image.
  -fsycl-optimize-non-user-code
                          Option used in conjunction with -O0 to optimize SYCL framework utility functions and leave user's kernel code unoptimized. (experimental)
  -fsycl-pstl-offload=<value>
                          Enable offloading of C++ standard parallel algorithms. Valid arguments are gpu and cpu.
  -fsycl-pstl-offload     Enable offloading of C++ standard parallel algorithms.
  -fsycl-range-rounding=<value>
                          Options for range rounding of SYCL range kernels: disable (do not generate range rounded kernels) force (only generate range rounded kernels) on (generate range rounded kernels as well as unrounded kernels). Default is 'on'
  -fsycl-remove-unused-external-funcs
                          Allow removal of unused `SYCL_EXTERNAL` functions (default)
  -fsycl-targets=<value>  Specify comma-separated list of triples that correspond to SYCL offloading targets to be supported. Valid triples include spir64_gen, spir64_x86_64, spir64_fpga and spir64
  -fsycl-unnamed-lambda   Allow unnamed SYCL lambda kernels
  -fsycl-use-bitcode      Use LLVM bitcode instead of SPIR-V in fat objects (deprecated)
  -fsycl                  Enables SYCL kernels compilation for device
  -fsyntax-only           Run the preprocessor, parser and semantic analysis stages
  -fsystem-debug          Emit debug information for declarations in system headers
  -fsystem-module         Build this module as a system module. Only used with -emit-module
  -ftarget-compile-fast   Experimental feature: Reduce target compilation time, with potential runtime performance trade-off.
  -ftarget-export-symbols Expose exported symbols in a generated target library to allow for visibilty to other modules.
  -ftarget-register-alloc-mode=<value>
                          Specify a register allocation mode for specific hardware for use by supported target backends.
  -ftemplate-backtrace-limit=<value>
                          Set the maximum number of entries to print in a template instantiation backtrace (0 = no limit)
  -ftemplate-depth=<value>
                          Set the maximum depth of recursive template instantiation
  -ftest-coverage         Produce gcov notes files (*.gcno)
  -fthin-link-bitcode=<value>
                          Write minimized bitcode to <file> for the ThinLTO thin link only
  -fthinlto-index=<value> Perform ThinLTO importing using provided function summary index
  -ftime-report=<value>   (For new pass manager) 'per-pass': one report for each pass; 'per-pass-run': one report for each pass invocation
  -ftime-trace-granularity=<value>
                          Minimum time granularity (in microseconds) traced by time profiler
  -ftime-trace=<value>    Similar to -ftime-trace. Specify the JSON file or a directory which will contain the JSON file
  -ftime-trace            Turn on time profiler. Generates JSON file based on output filename.
  -ftrap-function=<value> Issue call to specified function rather than a trap instruction
  -ftrapv-handler=<function name>
                          Specify the function to be called on overflow
  -ftrapv                 Trap on integer overflow
  -ftrigraphs             Process trigraph sequences
  -ftrivial-auto-var-init-max-size=<value>
                          Stop initializing trivial automatic stack variables if var size exceeds the specified number of instances (in bytes)
  -ftrivial-auto-var-init-stop-after=<value>
                          Stop initializing trivial automatic stack variables after the specified number of instances
  -ftrivial-auto-var-init=<value>
                          Initialize trivial automatic stack variables. Defaults to 'uninitialized'
  -ftz                    Enable flush denormal results to zero
  -funified-lto           Use the unified LTO pipeline
  -funique-basic-block-section-names
                          Use unique names for basic block sections (ELF Only)
  -funique-internal-linkage-names
                          Uniqueify Internal Linkage Symbol Names by appending the MD5 hash of the module path
  -funroll-loops          Turn on loop unroller
  -funsafe-math-optimizations
                          Allow unsafe floating-point math optimizations which may decrease precision
  -fuse-complex-intrinsics
                          Determines whether to lower _Complex operations to LLVM complex intrinsics
  -fuse-cuid=<value>      Method to generate ID's for compilation units for single source offloading languages CUDA and HIP: 'hash' (ID's generated by hashing file path and command line options) | 'random' (ID's generated as random numbers) | 'none' (disabled). Default is 'hash'. This option will be overridden by option '-cuid=[ID]' if it is specified.
  -fuse-line-directives   Use #line in preprocessed output
  -fvalidate-ast-input-files-content
                          Compute and store the hash of input files used to build an AST. Files with mismatching mtime's are considered valid if both contents is identical
  -fvec-allow-scalar-stores
                          When this option is set, an explicit simd loop (for example, one set with #pragma omp simd) will be vectorized even if it contains a store to a scalar variable that is not marked as private, lastprivate, or reduction.
  -fvec-peel-loops        Enable peel loop vectorization.
  -fvec-remainder-loops   Enable remainder loop vectorization.
  -fvec-with-mask         Enable vectorization for short trip-count loops with masking.
  -fveclib=<value>        Use the given vector functions library
  -fvectorize             Enable the loop vectorization passes
  -fverbose-asm           Generate verbose assembly output
  -fverify-intermediate-code
                          Enable verification of LLVM IR
  -fvirtual-function-elimination
                          Enables dead virtual function elimination optimization. Requires -flto=full
  -fvisibility-dllexport=<value>
                          The visibility for dllexport definitions. If Keep is specified the visibility is not adjusted [-fvisibility-from-dllstorageclass]
  -fvisibility-externs-dllimport=<value>
                          The visibility for dllimport external declarations. If Keep is specified the visibility is not adjusted [-fvisibility-from-dllstorageclass]
  -fvisibility-externs-nodllstorageclass=<value>
                          The visibility for external declarations without an explicit DLL storage class. If Keep is specified the visibility is not adjusted [-fvisibility-from-dllstorageclass]
  -fvisibility-from-dllstorageclass
                          Override the visibility of globals based on their final DLL storage class.
  -fvisibility-global-new-delete-hidden
                          Give global C++ operator new and delete declarations hidden visibility
  -fvisibility-global-new-delete=<value>
                          The visibility for global C++ operator new and delete declarations. If 'source' is specified the visibility is not adjusted
  -fvisibility-inlines-hidden-static-local-var
                          When -fvisibility-inlines-hidden is enabled, static variables in inline C++ member functions will also be given hidden visibility by default
  -fvisibility-inlines-hidden
                          Give inline C++ member functions hidden visibility by default
  -fvisibility-ms-compat  Give global types 'default' visibility and global functions and variables 'hidden' visibility by default
  -fvisibility-nodllstorageclass=<value>
                          The visibility for definitions without an explicit DLL storage class. If Keep is specified the visibility is not adjusted [-fvisibility-from-dllstorageclass]
  -fvisibility=<value>    Set the default symbol visibility for all global definitions
  -fwasm-exceptions       Use WebAssembly style exceptions
  -fwhole-program-vtables Enables whole-program vtable optimization. Requires -flto
  -fwrapv                 Treat signed integer overflow as two's complement
  -fwritable-strings      Store string literals as writable data
  -fxl-pragma-pack        Enable IBM XL #pragma pack handling
  -fxray-always-emit-customevents
                          Always emit __xray_customevent(...) calls even if the containing function is not always instrumented
  -fxray-always-emit-typedevents
                          Always emit __xray_typedevent(...) calls even if the containing function is not always instrumented
  -fxray-always-instrument=<value>
                          DEPRECATED: Filename defining the whitelist for imbuing the 'always instrument' XRay attribute.
  -fxray-attr-list=<value>
                          Filename defining the list of functions/types for imbuing XRay attributes.
  -fxray-function-groups=<value>
                          Only instrument 1 of N groups
  -fxray-ignore-loops     Don't instrument functions with loops unless they also meet the minimum function size
  -fxray-instruction-threshold=<value>
                          Sets the minimum function size to instrument with XRay
  -fxray-instrumentation-bundle=<value>
                          Select which XRay instrumentation points to emit. Options: all, none, function-entry, function-exit, function, custom. Default is 'all'.  'function' includes both 'function-entry' and 'function-exit'.
  -fxray-instrument       Generate XRay instrumentation sleds on function entry and exit
  -fxray-link-deps        Link XRay runtime library when -fxray-instrument is specified (default)
  -fxray-modes=<value>    List of modes to link in by default into XRay instrumented binaries.
  -fxray-never-instrument=<value>
                          DEPRECATED: Filename defining the whitelist for imbuing the 'never instrument' XRay attribute.
  -fxray-selected-function-group=<value>
                          When using -fxray-function-groups, select which group of functions to instrument. Valid range is 0 to fxray-function-groups - 1
  -fzero-call-used-regs=<value>
                          Clear call-used registers upon function return (AArch64/x86 only)
  -fzvector               Enable System z vector language extension
  -F <value>              Add directory to framework include search path
  --gcc-install-dir=<value>
                          Use GCC installation in the specified directory. The directory ends with path components like 'lib{,32,64}/gcc{,-cross}/$triple/$version'. Note: executables (e.g. ld) used by the compiler are not overridden by the selected GCC installation
  --gcc-toolchain=<value> Specify a directory where Clang can find 'include' and 'lib{,32,64}/gcc{,-cross}/$triple/$version'. Clang will use the GCC installation with the largest version
  --gcc-triple=<value>    Search for the GCC installation with the specified triple.
  -gcodeview-command-line Emit compiler path and command line into CodeView debug information
  -gcodeview-ghash        Emit type record hashes in a .debug$H section
  -gcodeview              Generate CodeView debug information
  -gdwarf-2               Generate source-level debug information with dwarf version 2
  -gdwarf-3               Generate source-level debug information with dwarf version 3
  -gdwarf-4               Generate source-level debug information with dwarf version 4
  -gdwarf-5               Generate source-level debug information with dwarf version 5
  -gdwarf32               Enables DWARF32 format for ELF binaries, if debug information emission is enabled.
  -gdwarf64               Enables DWARF64 format for ELF binaries, if debug information emission is enabled.
  -gdwarf                 Generate source-level debug information with the default dwarf version
  -gembed-source          Embed source text in DWARF debug sections
  -gen-reproducer=<value> Emit reproducer on (option: off, crash (default), error, always)
  -gintel-sti             Generate Intel STI debug information
  -gline-directives-only  Emit debug line info directives only
  -gline-tables-only      Emit debug line number tables only
  -global-hoist           Enable external globals are load safe (default)
  -gmodules               Generate debug info with external references to clang modules or precompiled headers
  -gno-codeview-command-line
                          Don't emit compiler path and command line into CodeView debug information
  -gno-embed-source       Restore the default behavior of not embedding source text in DWARF debug sections
  -gno-inline-line-tables Don't emit inline line tables.
  --gpu-bundle-output     Bundle output files of HIP device compilation
  --gpu-instrument-lib=<value>
                          Instrument device library for HIP, which is a LLVM bitcode containing __cyg_profile_func_enter and __cyg_profile_func_exit
  --gpu-max-threads-per-block=<value>
                          Default max threads per block for kernel launch bounds for HIP
  -gpulibc                Link the LLVM C Library for GPUs
  -gsplit-dwarf=<value>   Set DWARF fission mode
  -gstrict-dwarf          Restrict DWARF features to those defined in the specified version, avoiding features from later versions.
  -gz=<value>             DWARF debug sections compression type
  -G <size>               Put objects of at most <size> bytes into small data section (MIPS / Hexagon)
  -g                      Generate source-level debug information
  --help-hidden           Display help for hidden options
  -help                   Display available options
  --hip-device-lib=<value>
                          HIP device library
  --hip-link              Link clang-offload-bundler bundles for HIP
  --hip-path=<value>      HIP runtime installation path, used for finding HIP version and adding HIP include path.
  --hip-version=<value>   HIP version in the format of major.minor.patch
  --hipspv-pass-plugin=<dsopath>
                          path to a pass plugin for HIP to SPIR-V passes.
  --hipstdpar-interpose-alloc
                          Replace all memory allocation / deallocation calls with hipManagedMalloc / hipFree equivalents
  --hipstdpar-path=<value>
                          HIP Standard Parallel Algorithm Acceleration library path, used for finding and implicitly including the library header
  --hipstdpar-prim-path=<value>
                          rocPrim path, required by the HIP Standard Parallel Algorithm Acceleration library, used to implicitly include the rocPrim library
  --hipstdpar-thrust-path=<value>
                          rocThrust path, required by the HIP Standard Parallel Algorithm Acceleration library, used to implicitly include the rocThrust library
  --hipstdpar             Enable HIP acceleration for standard parallel algorithms
  -H                      Show header includes and nesting depth
  -I-                     Restrict all prior -I flags to double-quoted inclusion and remove current directory from include path
  -iapinotes-modules <directory>
                          Add directory to the API notes search path referenced by module name
  -ibuiltininc            Enable builtin #include directories even when -nostdinc is used before or after -ibuiltininc. Using -nobuiltininc after the option disables it
  -idirafter <value>      Add directory to AFTER include search path
  -iframeworkwithsysroot <directory>
                          Add directory to SYSTEM framework search path, absolute paths are relative to -isysroot
  -iframework <value>     Add directory to SYSTEM framework search path
  -imacros <file>         Include macros from file before parsing
  -include-pch <file>     Include precompiled header file
  -include <file>         Include file before parsing
  -index-header-map       Make the next included directory (-I or -F) an indexer header map
  -inline-forceinline     Treat inline routines as forceinline
  -inline-level=<value>   Set function inlining level where: 0 is disable, 1 is inline marked functions and 2 is inline at compilers discretion
  --intel                 Run in Intel Compiler mode
  -ipo                    Enable LTO in 'full' mode
  -ipp-link=<value>       Link Intel(R) IPP libraries in requested manner (static,dynamic,shared)
  -ipp=<value>            Link commonly used Intel(R) Integrated Performace Primitives (Intel(R) IPP) libraries and bring in the associated headers (common,crypto,nonpic,nonpic_crypto)
  -iprefix <dir>          Set the -iwithprefix/-iwithprefixbefore prefix
  -iquote <directory>     Add directory to QUOTE include search path
  -isysroot <dir>         Set the system root directory (usually /)
  -isystem-after <directory>
                          Add directory to end of the SYSTEM include search path
  -isystem <directory>    Add directory to SYSTEM include search path
  -ivfsoverlay-lib <value>
                          Load the virtual filesystem from shared library
  -ivfsoverlay <value>    Overlay the virtual filesystem described by file over the real file system
  -iwithprefixbefore <dir>
                          Set directory to include search path with prefix
  -iwithprefix <dir>      Set directory to SYSTEM include search path with prefix
  -iwithsysroot <directory>
                          Add directory to SYSTEM include search path, absolute paths are relative to -isysroot
  -I <dir>                Add directory to the end of the list of include search paths
  --libomptarget-amdgcn-bc-path=<value>
                          Path to libomptarget-amdgcn bitcode library
  --libomptarget-amdgpu-bc-path=<value>
                          Path to libomptarget-amdgcn bitcode library
  --libomptarget-nvptx-bc-path=<value>
                          Path to libomptarget-nvptx bitcode library
  -L <dir>                Add directory to library search path
  -mabi=quadword-atomics  Enable quadword atomics ABI on AIX (AIX PPC64 only). Uses lqarx/stqcx. instructions.
  -mabicalls              Enable SVR4-style position-independent code (Mips only)
  -maix-shared-lib-tls-model-opt
                          For shared library loaded with the main program, change local-dynamic access(es) to initial-exec access(es) at the function level (AIX 64-bit only).
  -maix-small-local-dynamic-tls
                          Produce a faster access sequence for local-dynamic TLS variables where the offset from the TLS base is encoded as an immediate operand (AIX 64-bit only). This access sequence is not used for variables larger than 32KB.
  -maix-small-local-exec-tls
                          Produce a faster access sequence for local-exec TLS variables where the offset from the TLS base is encoded as an immediate operand (AIX 64-bit only). This access sequence is not used for variables larger than 32KB.
  -maix-struct-return     Return all structs in memory (PPC32 only)
  -malign-branch-boundary=<value>
                          Specify the boundary's size to align branches
  -malign-branch=<value>  Specify types of branches to align
  -malign-double          Align doubles to two words in structs (x86 only)
  -maltivec               Enable AltiVec vector initializer syntax
  -mamdgpu-ieee           Sets the IEEE bit in the expected default floating point  mode register. Floating point opcodes that support exception flag gathering quiet and propagate signaling NaN inputs per IEEE 754-2008. This option changes the ABI. (AMDGPU only)
  -mamdgpu-precise-memory-op
                          Enable precise memory mode (AMDGPU only)
  -mapx-features=<value>  Enable features of APX
  -mapx-inline-asm-use-gpr32
                          Enable use of GPR32 in inline assembly for APX
  -march=<value>          For a list of available architectures for the target use '-mcpu=help'
  -marm64x<value>         Link as a hybrid ARM64X image
  -mauto-arch=<codes>     generate multiple, processor-specific, auto-dispatched code paths for X86 processors, specified by <codes>, if there is a performance benefit
  -mbackchain             Link stack frames through backchain on System Z
  -mbranch-protection=<value>
                          Enforce targets of indirect branches and function returns
  -mbranches-within-32B-boundaries
                          Align selected branches (fused, jcc, jmp) within 32-byte boundary
  -mcabac                 Enable CABAC instructions
  -mcmse                  Allow use of CMSE (Armv8-M Security Extensions)
  -mcode-object-version=<value>
                          Specify code object ABI version. Defaults to 5. (AMDGPU only)
  -mconstructor-aliases   Enable emitting complete constructors and destructors as aliases when possible
  -mcpu=<value>           For a list of available CPUs for the target use '-mcpu=help'
  -mcrbits                Control the CR-bit tracking feature on PowerPC. ``-mcrbits`` (the enablement of CR-bit tracking support) is the default for POWER8 and above, as well as for all other CPUs when optimization is applied (-O2 and above).
  -mcrc                   Allow use of CRC instructions (ARM/Mips only)
  -mcumode                Specify CU wavefront execution mode (AMDGPU only)
  -mdaz-ftz               Globally set the denormals-are-zero (DAZ) and flush-to-zero (FTZ) bits in the floating-point control register on program startup
  -mdebug-line-version=<value>
                          Set debug line version used when generating debug information
  -mdefault-visibility-export-mapping=<value>
                          Mapping between default visibility and export
  -mdouble=<n             Force double to be <n> bits
  -MD                     Write a depfile containing user and system headers
  -meabi <value>          Set EABI type. Default depends on triple)
  -membedded-data         Place constants in the .rodata section instead of the .sdata section even if they meet the -G <size> threshold (MIPS)
  -menable-experimental-extensions
                          Enable use of experimental RISC-V extensions.
  -mexec-model=<value>    Execution model (WebAssembly only)
  -mexecute-only          Disallow generation of data access to code sections (ARM only)
  -mextern-sdata          Assume that externally defined data is in the small data if it meets the -G <size> threshold (MIPS)
  -mfentry                Insert calls to fentry at function entry (x86/SystemZ only)
  -mfix-cmse-cve-2021-35465
                          Work around VLLDM erratum CVE-2021-35465 (ARM only)
  -mfix-cortex-a53-835769 Workaround Cortex-A53 erratum 835769 (AArch64 only)
  -mfix-cortex-a57-aes-1742098
                          Work around Cortex-A57 Erratum 1742098 (ARM only)
  -mfix-cortex-a72-aes-1655431
                          Work around Cortex-A72 Erratum 1655431 (ARM only)
  -mforced-sw-shadow-stack
                          Force using software shadow stack when shadow-stack enabled
  -mfp32                  Use 32-bit floating point registers (MIPS only)
  -mfp64                  Use 64-bit floating point registers (MIPS only)
  -mframe-chain=<value>   Select the frame chain model used to emit frame records (Arm only).
  -mfunction-return=<value>
                          Replace returns with jumps to ``__x86_return_thunk`` (x86 only, error otherwise)
  -MF <file>              Write depfile output from -MMD, -MD, -MM, or -M to <file>
  -mgeneral-regs-only     Generate code which only uses the general purpose registers (AArch64/x86 only)
  -mglobal-merge          Enable merging of globals
  -mgpopt                 Use GP relative accesses for symbols known to be in a small data section (MIPS)
  -mguard=<value>         Enable or disable Control Flow Guard checks and guard tables emission
  -MG                     Add missing headers to depfile
  -mharden-sls=<value>    Select straight-line speculation hardening scope (ARM/AArch64/X86 only). <arg> must be: all, none, retbr(ARM/AArch64), blr(ARM/AArch64), comdat(ARM/AArch64), nocomdat(ARM/AArch64), return(X86), indirect-jmp(X86)
  -mhvx-ieee-fp           Enable Hexagon HVX IEEE floating-point
  -mhvx-length=<value>    Set Hexagon Vector Length
  -mhvx-qfloat            Enable Hexagon HVX QFloat instructions
  -mhvx=<value>           Enable Hexagon Vector eXtensions
  -mhvx                   Enable Hexagon Vector eXtensions
  -miamcu                 Use Intel MCU ABI
  -mignore-xcoff-visibility
                          Not emit the visibility attribute for asm in AIX OS or give all symbols 'unspecified' visibility in XCOFF object file
  --migrate               Run the migrator
  -mincremental-linker-compatible
                          (integrated-as) Emit an object file which can be used with an incremental linker
  -mindirect-branch-cs-prefix
                          Add cs prefix to call and jmp to indirect thunk
  -mindirect-jump=<value> Change indirect jump instructions to inhibit speculation
  -mintrinsic-promote     Force certain functions using intrinsics to promote their architectures and make the intrinsic headers included by default
  -mios-version-min=<value>
                          Set iOS deployment target
  -MJ <value>             Write a compilation database entry per input
  -mlasx                  Enable Loongson Advanced SIMD Extension (LASX).
  -mlink-builtin-bitcode-postopt
                          Link builtin bitcodes after the optimization pipeline
  -mllvm-lto <value>      Additional arguments to forward to LLVM's option processing. Similar to -mllvm, but will also pass the given argument to the LTO step when appropriate.
  -mllvm=<arg>            Alias for -mllvm
  -mllvm <value>          Additional arguments to forward to LLVM's option processing
  -mlocal-sdata           Extend the -G behaviour to object local data (MIPS)
  -mlong-calls            Generate branches with extended addressability, usually via indirect jumps.
  -mlong-double-128       Force long double to be 128 bits
  -mlong-double-64        Force long double to be 64 bits
  -mlong-double-80        Force long double to be 80 bits, padded to 128 bits for storage
  -mlr-for-calls-only     Do not allocate the LR register for general purpose usage, only for calls. (AArch64 only)
  -mlsx                   Enable Loongson SIMD Extension (LSX).
  -mlvi-cfi               Enable only control-flow mitigations for Load Value Injection (LVI)
  -mlvi-hardening         Enable all mitigations for Load Value Injection (LVI)
  -mmacos-version-min=<value>
                          Set macOS deployment target
  -mmadd4                 Enable the generation of 4-operand madd.s, madd.d and related instructions.
  -mmark-bti-property     Add .note.gnu.property with BTI to assembly files (AArch64 only)
  -MMD                    Write a depfile containing user headers
  -mmemops                Enable generation of memop instructions
  -mmlir <value>          Additional arguments to forward to MLIR's option processing
  -mms-bitfields          Set the default structure layout to be compatible with the Microsoft compiler standard
  -mmsa                   Enable MSA ASE (MIPS only)
  -mmt                    Enable MT ASE (MIPS only)
  -MM                     Like -MMD, but also implies -E and writes to stdout by default
  -mno-abicalls           Disable SVR4-style position-independent code (Mips only)
  -mno-amdgpu-precise-memory-op
                          Disable precise memory mode (AMDGPU only)
  -mno-apx-features=<value>
                          Disable features of APX
  -mno-bti-at-return-twice
                          Do not add a BTI instruction after a setjmp or other return-twice construct (Arm/AArch64 only)
  -mno-constructor-aliases
                          Disable emitting complete constructors and destructors as aliases when possible
  -mno-crc                Disallow use of CRC instructions (Mips only)
  -mno-cumode             Specify WGP wavefront execution mode (AMDGPU only)
  -mno-daz-ftz            Do not globally set the denormals-are-zero (DAZ) and flush-to-zero (FTZ) bits in the floating-point control register on program startup
  -mno-embedded-data      Do not place constants in the .rodata section instead of the .sdata if they meet the -G <size> threshold (MIPS)
  -mno-execute-only       Allow generation of data access to code sections (ARM only)
  -mno-extern-sdata       Do not assume that externally defined data is in the small data if it meets the -G <size> threshold (MIPS)
  -mno-fix-cmse-cve-2021-35465
                          Don't work around VLLDM erratum CVE-2021-35465 (ARM only)
  -mno-fix-cortex-a53-835769
                          Don't workaround Cortex-A53 erratum 835769 (AArch64 only)
  -mno-fix-cortex-a57-aes-1742098
                          Don't work around Cortex-A57 Erratum 1742098 (ARM only)
  -mno-fix-cortex-a72-aes-1655431
                          Don't work around Cortex-A72 Erratum 1655431 (ARM only)
  -mno-fmv                Disable function multiversioning
  -mno-forced-sw-shadow-stack
                          Not force using software shadow stack when shadow-stack enabled
  -mno-gather             Disable generation of gather instructions in auto-vectorization(x86 only)
  -mno-global-merge       Disable merging of globals
  -mno-gpopt              Do not use GP relative accesses for symbols known to be in a small data section (MIPS)
  -mno-hvx-ieee-fp        Disable Hexagon HVX IEEE floating-point
  -mno-hvx-qfloat         Disable Hexagon HVX QFloat instructions
  -mno-hvx                Disable Hexagon Vector eXtensions
  -mno-implicit-float     Don't generate implicit floating point or vector instructions
  -mno-incremental-linker-compatible
                          (integrated-as) Emit an object file which cannot be used with an incremental linker
  -mno-lasx               Disable Loongson Advanced SIMD Extension (LASX).
  -mno-local-sdata        Do not extend the -G behaviour to object local data (MIPS)
  -mno-long-calls         Restore the default behaviour of not generating long calls
  -mno-lsx                Disable Loongson SIMD Extension (LSX).
  -mno-lvi-cfi            Disable control-flow mitigations for Load Value Injection (LVI)
  -mno-lvi-hardening      Disable mitigations for Load Value Injection (LVI)
  -mno-madd4              Disable the generation of 4-operand madd.s, madd.d and related instructions.
  -mno-memops             Disable generation of memop instructions
  -mno-movt               Disallow use of movt/movw pairs (ARM only)
  -mno-ms-bitfields       Do not set the default structure layout to be compatible with the Microsoft compiler standard
  -mno-msa                Disable MSA ASE (MIPS only)
  -mno-mt                 Disable MT ASE (MIPS only)
  -mno-neg-immediates     Disallow converting instructions with negative immediates to their negation or inversion.
  -mno-nvj                Disable generation of new-value jumps
  -mno-nvs                Disable generation of new-value stores
  -mno-outline-atomics    Don't generate local calls to out-of-line atomic operations
  -mno-outline            Disable function outlining (AArch64 only)
  -mno-packets            Disable generation of instruction packets
  -mno-pic-data-is-text-relative
                          Don't assume data segments are relative to text segment
  -mno-regnames           Use only register numbers when writing assembly output
  -mno-relax              Disable linker relaxation
  -mno-restrict-it        Allow generation of complex IT blocks.
  -mno-save-restore       Disable using library calls for save and restore
  -mno-scalar-strict-align
                          Allow scalar memory accesses to be unaligned (RISC-V only)
  -mno-scatter            Disable generation of scatter instructions in auto-vectorization(x86 only)
  -mno-seses              Disable speculative execution side effect suppression (SESES)
  -mno-stack-arg-probe    Disable stack probes which are enabled by default
  -mno-strict-align       Allow memory accesses to be unaligned (AArch64/LoongArch/RISC-V only)
  -mno-tgsplit            Disable threadgroup split execution mode (AMDGPU only)
  -mno-tls-direct-seg-refs
                          Disable direct TLS access through segment registers
  -mno-tocdata=<value>    Specifies a list of variables to be exempt from the TOC datatransformation.
  -mno-tocdata            This is the default. TOC data transformation is not applied to anyvariables. Only variables specified explicitly in -mtocdata= willhave the TOC data transformation.
  -mno-unaligned-access   Force all memory accesses to be aligned (AArch32/MIPSr6 only)
  -mno-unaligned-symbols  Expect external char-aligned symbols to be without ABI alignment (SystemZ only)
  -mno-vector-strict-align
                          Allow vector memory accesses to be unaligned (RISC-V only)
  -mno-wavefrontsize64    Specify wavefront size 32 mode (AMDGPU only)
  -mnocrc                 Disallow use of CRC instructions (ARM only)
  -mnop-mcount            Generate mcount/__fentry__ calls as nops. To activate they need to be patched in.
  -mnvj                   Enable generation of new-value jumps
  -mnvs                   Enable generation of new-value stores
  -module-dependency-dir <value>
                          Directory to dump module dependencies to
  -module-file-info       Provide information about a particular module file
  -momit-leaf-frame-pointer
                          Omit frame pointer setup for leaf functions
  -moutline-atomics       Generate local calls to out-of-line atomic operations
  -moutline               Enable function outlining (AArch64 only)
  -mpacked-stack          Use packed stack layout (SystemZ only).
  -mpackets               Enable generation of instruction packets
  -mpad-max-prefix-size=<value>
                          Specify maximum number of prefixes to use for padding
  -mpic-data-is-text-relative
                          Assume data segments are relative to text segment
  -mprefer-vector-width=<value>
                          Specifies preferred vector width for auto-vectorization. Defaults to 'none' which allows target specific decisions.
  -mprintf-kind=<value>   Specify the printf lowering scheme (AMDGPU only), allowed values are "hostcall"(printing happens during kernel execution, this scheme relies on hostcalls which require system to support pcie atomics) and "buffered"(printing happens after all kernel threads exit, this uses a printf buffer and does not rely on pcie atomic support)
  -MP                     Create phony target for each dependency (other than main file)
  -mqdsp6-compat          Enable hexagon-qdsp6 backward compatibility
  -MQ <value>             Specify name of main file output to quote in depfile
  -mrecip=<value>         Control use of approximate reciprocal and reciprocal square root instructions followed by <n> iterations of Newton-Raphson refinement. <value> = ( ['!'] ['vec-'] ('rcp'|'sqrt') [('h'|'s'|'d')] [':'<n>] ) | 'all' | 'default' | 'none'
  -mrecip                 Equivalent to '-mrecip=all'
  -mrecord-mcount         Generate a __mcount_loc section entry for each __fentry__ call.
  -mregnames              Use full register names when writing assembly output
  -mrelax-all             (integrated-as) Relax all machine instructions
  -mrelax                 Enable linker relaxation
  -mrestrict-it           Disallow generation of complex IT blocks. It is off by default.
  -mrtd                   Make StdCall calling convention the default
  -mrvv-vector-bits=<value>
                          Specify the size in bits of an RVV vector register
  -msave-restore          Enable using library calls for save and restore
  -mscalar-strict-align   Force all scalar memory accesses to be aligned (RISC-V only)
  -mseses                 Enable speculative execution side effect suppression (SESES). Includes LVI control flow integrity mitigations
  -msign-return-address=<value>
                          Select return address signing scope
  -msimd=<value>          Select the SIMD extension(s) to be enabled in LoongArch either 'none', 'lsx', 'lasx'.
  -mskip-rax-setup        Skip setting up RAX register when passing variable arguments (x86 only)
  -msmall-data-limit=<value>
                          Put global and static data smaller than the limit into a special section
  -msoft-float            Use software floating point
  -msse2avx               Specify that the assembler should encode SSE instructions with VEX prefix
  -mstack-alignment=<value>
                          Set the stack alignment
  -mstack-arg-probe       Enable stack probes
  -mstack-probe-size=<value>
                          Set the stack probe size
  -mstack-protector-guard-offset=<value>
                          Use the given offset for addressing the stack-protector guard
  -mstack-protector-guard-reg=<value>
                          Use the given reg for addressing the stack-protector guard
  -mstack-protector-guard-symbol=<value>
                          Use the given symbol for addressing the stack-protector guard
  -mstack-protector-guard=<value>
                          Use the given guard (global, tls) for addressing the stack-protector guard
  -mstackrealignext       Force realign the stack at entry to every external function
  -mstackrealign          Force realign the stack at entry to every function
  -mstrict-align          Force all memory accesses to be aligned (AArch64/LoongArch/RISC-V only)
  -msve-vector-bits=<value>
                          Specify the size in bits of an SVE vector register. Defaults to the vector length agnostic value of "scalable". (AArch64 only)
  -msvr4-struct-return    Return small structs in registers (PPC32 only)
  -mtargetos=<value>      Set the deployment target to be the specified OS and OS version
  -mtgsplit               Enable threadgroup split execution mode (AMDGPU only)
  -mthread-model <value>  The thread model to use. Defaults to 'posix')
  -mtls-dialect=<value>   Which thread-local storage dialect to use for dynamic accesses of TLS variables
  -mtls-direct-seg-refs   Enable direct TLS access through segment registers (default)
  -mtls-size=<value>      Specify bit size of immediate TLS offsets (AArch64 ELF only): 12 (for 4KB) | 24 (for 16MB, default) | 32 (for 4GB) | 48 (for 256TB, needs -mcmodel=large)
  -mtocdata=<value>       Specifies a list of variables to which the TOC data transformationwill be applied.
  -mtocdata               All suitable variables will have the TOC data transformation applied
  -mtp=<value>            Thread pointer access method. For AArch32: 'soft' uses a function call, or 'tpidrurw', 'tpidruro' or 'tpidrprw' use the three CP15 registers. 'cp15' is an alias for 'tpidruro'. For AArch64: 'tpidr_el0', 'tpidr_el1', 'tpidr_el2', 'tpidr_el3' or 'tpidrro_el0' use the five system registers. 'elN' is an alias for 'tpidr_elN'.
  -mtune=<value>          Only supported on AArch64, PowerPC, RISC-V, SPARC, SystemZ, and X86
  -MT <value>             Specify name of main file output in depfile
  -munaligned-access      Allow memory accesses to be unaligned (AArch32/MIPSr6 only)
  -munaligned-symbols     Expect external char-aligned symbols to be without ABI alignment (SystemZ only)
  -munsafe-fp-atomics     Enable generation of unsafe floating point atomic instructions. May generate more efficient code, but may not respect rounding and denormal modes, and may give incorrect results for certain memory destinations. (AMDGPU only)
  -mvector-strict-align   Force all vector memory accesses to be aligned (RISC-V only)
  -mvevpu                 Emit VPU instructions for VE
  -MV                     Use NMake/Jom format for the depfile
  -mwavefrontsize64       Specify wavefront size 64 mode (AMDGPU only)
  -mxcoff-build-id=<0xHEXSTRING>
                          On AIX, request creation of a build-id string, "0xHEXSTRING", in the string table of the loader section inside the linked binary
  -mxcoff-roptr           Place constant objects with relocatable address values in the RO data section and add -bforceimprw to the linker flags (AIX only)
  -mzos-hlq-clang=<ClangHLQ>
                          High level qualifier for z/OS C++RT side deck datasets
  -mzos-hlq-csslib=<CsslibHLQ>
                          High level qualifier for z/OS CSSLIB dataset
  -mzos-hlq-le=<LeHLQ>    High level qualifier for z/OS Language Environment datasets
  -mzos-sys-include=<SysInclude>
                          Path to system headers on z/OS
  -M                      Like -MD, but also implies -E and writes to stdout by default
  -no-ansi-alias          disable use of ANSI aliasing rules optimizations
  --no-cuda-include-ptx=<value>
                          Do not include PTX for the following GPU architecture (e.g. sm_35) or 'all'. May be specified more than once.
  --no-cuda-version-check Don't error out if the detected version of the CUDA install is too low for the requested CUDA gpu architecture.
  --no-default-config     Disable loading default configuration files
  -no-fma                 Disable the combining of floating point multiples and add/subtract operations.
  -no-ftz                 Disable flush denormal results to zero
  -no-global-hoist        Disable external globals are load safe
  --no-gpu-bundle-output  Do not bundle output files of HIP device compilation
  -no-hip-rt              Do not link against HIP runtime libraries
  -no-intel-lib=<value>   Restrict linking of Intel specific libraries. Valid arguments are libirc, libimf, libirng, libsvml
  -no-intel-lib           Restrict linking of all Intel specific libraries.
  -no-ipo                 Disable LTO mode (default)
  --no-offload-arch=<value>
                          Remove CUDA/HIP offloading device architecture (e.g. sm_35, gfx906) from the list of devices to compile for. 'all' resets the list to its default value.
  --no-offload-new-driver Don't Use the new driver for offloading compilation.
  -no-parallel-source-info
                          Disable emission of source location information for parallel code generation.
  -no-sox                 Disable saving of compiler options in the executable
  --no-system-header-prefix=<prefix>
                          Treat all #include paths starting with <prefix> as not including a system header.
  -no-vec                 Disable the loop vectorization passes
  --no-wasm-opt           Disable the wasm-opt optimizer
  -nobuiltininc           Disable builtin #include directories
  -nogpuinc               Do not add include paths for CUDA/HIP and do not include the default CUDA/HIP wrapper headers
  -nogpulib               Do not link device library for CUDA/HIP device compilation
  -nohipwrapperinc        Do not include the default HIP wrapper headers and include paths
  -nolib-inline           disable inline expansion of intrinsic functions
  -nolibsycl              Do not link SYCL runtime library
  -nostdinc++             Disable standard #include directories for the C++ standard library
  --nvptx-arch-tool=<value>
                          Tool used for detecting NVIDIA GPU arch in the system.
  -ObjC++                 Treat source input files as Objective-C++ inputs
  -objcmt-allowlist-dir-path=<value>
                          Only modify files with a filename contained in the provided directory path
  -objcmt-atomic-property Make migration to 'atomic' properties
  -objcmt-migrate-all     Enable migration to modern ObjC
  -objcmt-migrate-annotation
                          Enable migration to property and method annotations
  -objcmt-migrate-designated-init
                          Enable migration to infer NS_DESIGNATED_INITIALIZER for initializer methods
  -objcmt-migrate-instancetype
                          Enable migration to infer instancetype for method result type
  -objcmt-migrate-literals
                          Enable migration to modern ObjC literals
  -objcmt-migrate-ns-macros
                          Enable migration to NS_ENUM/NS_OPTIONS macros
  -objcmt-migrate-property-dot-syntax
                          Enable migration of setter/getter messages to property-dot syntax
  -objcmt-migrate-property
                          Enable migration to modern ObjC property
  -objcmt-migrate-protocol-conformance
                          Enable migration to add protocol conformance on classes
  -objcmt-migrate-readonly-property
                          Enable migration to modern ObjC readonly property
  -objcmt-migrate-readwrite-property
                          Enable migration to modern ObjC readwrite property
  -objcmt-migrate-subscripting
                          Enable migration to modern ObjC subscripting
  -objcmt-ns-nonatomic-iosonly
                          Enable migration to use NS_NONATOMIC_IOSONLY macro for setting property's 'atomic' attribute
  -objcmt-returns-innerpointer-property
                          Enable migration to annotate property with NS_RETURNS_INNER_POINTER
  -objcmt-whitelist-dir-path=<value>
                          Alias for -objcmt-allowlist-dir-path
  -ObjC                   Treat source input files as Objective-C inputs
  -object-file-name=<file>
                          Set the output <file> for debug infos
  --offload-arch=<value>  Specify an offloading device architecture for CUDA, HIP, or OpenMP. (e.g. sm_35). If 'native' is used the compiler will detect locally installed architectures. For HIP offloading, the device architecture can be followed by target ID features delimited by a colon (e.g. gfx908:xnack+:sramecc-). May be specified more than once.
  --offload-compress      Compress offload device binaries (HIP only)
  --offload-device-only   Only compile for the offloading device.
  --offload-host-device   Compile for both the offloading host and device (default).
  --offload-host-only     Only compile for the offloading host.
  --offload-link          Use the new offloading linker to perform the link job.
  --offload-new-driver    Use the new driver for offloading compilation.
  --offload=<value>       Specify comma-separated list of offloading target triples (CUDA and HIP only)
  -o <file>               Write output to <file>
  -parallel-source-info=<value>
                          Emit source location information for parallel code generation with OpenMP and auto-parallelization.
  -pch-use <file>         Include precompiled header file
  -pc <value>             Initialize X87 floating point precision to single, double or double extended. Valid values of 32, 64 and 80
  -pedantic               Warn on language extensions
  -pg                     Enable mcount instrumentation
  -pipe                   Use pipes between commands, when possible
  --precompile            Only precompile the input
  --pretty-sgf            Emit pretty printed symbol graphs
  -print-diagnostic-options
                          Print all of Clang's warning options
  -print-effective-triple Print the effective target triple
  -print-enabled-extensions
                          Print the extensions enabled by the given target and -march/-mcpu options. (AArch64 and RISC-V only)
  -print-file-name=<file> Print the full library path of <file>
  -print-ivar-layout      Enable Objective-C Ivar layout bitmap print trace
  -print-libgcc-file-name Print the library path for the currently used compiler runtime library ("libgcc.a" or "libclang_rt.builtins.*.a")
  -print-library-module-manifest-path
                          Print the path for the C++ Standard library module manifest
  -print-multi-flags-experimental
                          Print the flags used for selecting multilibs (experimental)
  -print-prog-name=<name> Print the full program path of <name>
  -print-resource-dir     Print the resource directory pathname
  -print-rocm-search-dirs Print the paths used for finding ROCm installation
  -print-runtime-dir      Print the directory pathname containing Clang's runtime libraries
  -print-search-dirs      Print the paths used for finding libraries and programs
  -print-supported-cpus   Print supported cpu models for the given target (if target is not specified, it will print the supported cpus for the default target)
  -print-supported-extensions
                          Print supported -march extensions (RISC-V, AArch64 and ARM only)
  -print-target-triple    Print the normalized target triple
  -print-targets          Print the registered targets
  -pthread                Support POSIX threads in generated code
  --ptxas-path=<value>    Path to ptxas (used for compiling CUDA code)
  -P                      Disable linemarker output in -E mode
  -p                      Enable mcount instrumentation with prof
  -qactypes               Enable compile and link support for the Algorithmic C Data-types (AC types)
  -qdaal=<value>          Link Intel(R) Data Analytics Acceleration Library (Intel(R) DAAL) libraries and bring in the associated headers (parallel)
  -qipp-link=<value>      Link Intel(R) IPP libraries in requested manner (static,dynamic,shared)
  -qipp=<value>           Link commonly used Intel(R) Integrated Performace Primitives (Intel(R) IPP) libraries and bring in the associated headers (common,crypto,nonpic,nonpic_crypto)
  -qmkl-ilp64=<value>     Link commonly used Intel(R) Math Kernel ILP64 Variant Library (Intel(R) MKL) and bring in the associated headers (parallel,sequential,cluster)("cluster" is not supported in DPC++)
  -qmkl-sycl-impl=<value> Limit linking of SYCL-specific implementations of the Intel(R) Math Kernel Library to specified in argument. Valid arguments: blas, lapack, dft, sparse, rng, stats, vm.
  -qmkl=<value>           Link commonly used Intel(R) Math Kernel Library (Intel(R) MKL) and bring in the associated headers (parallel,sequential,cluster)("cluster" is not supported in DPC++)
  -qno-actypes            Disable the compile and link support for the Algorithmic C Data-types (AC types)
  -qno-openmp             Disable OpenMP support
  -qno-opt-dynamic-align  Disable peeling to optimize alignment for vectorization.
  -qno-opt-jump-tables    Do not use jump tables for lowering switches
  -qno-opt-matmul         Disables compiler-generated Matrix Multiply (matmul) library call
  -qno-opt-mem-layout-trans
                          Disable memory layout transformations
  -qno-opt-multiple-gather-scatter-by-shuffles
                          Disables the optimization for multiple adjacent gather/scatter type vector memory references
  -qno-opt-prefetch       Disable prefetching.
  -Qn                     Do not emit metadata containing compiler name and version
  -qopenmp-link=<value>   Choose whether to link with the static or dynamic OpenMP libraries. Default is dynamic.
  -qopenmp-simd           Emit OpenMP code only for SIMD-based constructs.
  -qopenmp-stubs          enables the user to compile OpenMP programs in sequential mode. The OpenMP directives are ignored and a stub OpenMP library is linked.
  -qopenmp-threadprivate=<value>
                          Choose which threadprivate implementation to use: compat or legacy.
  -qopenmp                Parse OpenMP pragmas and generate parallel code.
  -qopt-assume-no-loop-carried-dep=<value>
                          Set a level of performance tuning for loops.  0 - The compiler does not assume there is loop-carried dependencies (default).  1 - Assume there are no loop-carried dependencies for innermost loops.  2 - Assume there are no loop-carried dependencies for all loop levels.
  -qopt-dword-index-for-array-of-structs=<value>
                          When specified allows the compiler to use dword indexes to access elements of arrays of structs which in size do not exceed val bytes. The arrays in question should contain no more than INT_MAX / sizeof(element) elements. Allowed values for val are: 16, 32, default is 16.
  -qopt-dynamic-align     Enable peeling to optimize alignment for vectorization.
  -qopt-for-throughput=<value>
                          Optimize for throughput performance, assuming multiple jobs are running.  The memory optimizations for single job versus multiple jobs can be tuned in different ways by the compiler. Valid arguments: multi-job, single-job
  -qopt-jump-tables       Control the generation of jump tables
  -qopt-matmul            Enables compiler-generated Matrix Multiply (matmul) library call
  -qopt-mem-layout-trans=<value>
                          Control the level of memory layout transformations performed by the compiler
  -qopt-multiple-gather-scatter-by-shuffles
                          Enables the optimization for multiple adjacent gather/scatter type vector memory references
  -qopt-prefetch-distance=<value>
                          Specify the prefetch distance to be used for compiler generated prefetches inside loops. Value indicates distance from memory to L2 cache.
  -qopt-prefetch-loads-only
                          Only insert prefetches based on the loads inside the loop. Stores are ignored.
  -qopt-prefetch=<value>  Enable levels of prefetch insertion, where 0 disables.  Values of 1 - 5 are available.  Default is 2.
  -qopt-prefetch          Enable prefetch insertion.  Same as -qopt-prefetch=2.
  -qopt-report-file=<value>
                          Specify the filename or output stream (stdout, stderr) for the generated optimization report
  -qopt-report-names=<value>
                          Specifies whether mangled or unmangled names should appear in the optimization report.
  -qopt-report-phase=<value>
                          Specify one or more phases for which optimization reports are generated
  -qopt-report-stdout     Specify the generated optimization report should be directed to stdout
  -qopt-report=<value>    Generate an optimization report, min, med or max.
  -qopt-streaming-stores=<value>
                          Specifies whether streaming stores are generated.
  -qopt-zmm-usage=<value> Specifies the level of zmm registers usage, low or high
  -Qoption,<arg>           Qoption,<tool>,<args> to pass the comma separated arguments to the <tool>; <tool> can be asm for assembler (or) link/ld for linker (or) preprocessor for preprocessor (or) compiler for compiler
  -qoverride-limits       enables the user to skip throttling of loops in framework and DD.
  -qtbb                   Link Intel(R) Threading Building Blocks (Intel(R) TBB) libraries and bring in the associated headers
  -Qunused-arguments      Don't emit warning for unused driver arguments
  -Qy                     Emit metadata containing compiler name and version
  -regcall4               Set __regcall4 as a default calling convention to respect __regcall ABI v.4
  -regcall                Set __regcall as a default calling convention
  -relocatable-pch        Whether to build a relocatable precompiled header
  -reuse-exe=<exe>        Speed up FPGA aoc compile if the device code in <exe> is unchanged.
  -rewrite-legacy-objc    Rewrite Legacy Objective-C source to C++
  -rewrite-objc           Rewrite Objective-C source to C++
  --rocm-device-lib-path=<value>
                          ROCm device library path. Alternative to rocm-path.
  --rocm-path=<value>     ROCm installation path, used for finding and automatically linking required bitcode libraries.
  -Rpass-analysis=<value> Report transformation analysis from optimization passes whose name matches the given POSIX regular expression
  -Rpass-missed=<value>   Report missed transformations by optimization passes whose name matches the given POSIX regular expression
  -Rpass=<value>          Report transformations performed by optimization passes whose name matches the given POSIX regular expression
  -rtlib=<value>          Compiler runtime library to use
  -R<remark>              Enable the specified remark
  -save-stats=<value>     Save llvm statistics.
  -save-stats             Save llvm statistics.
  -save-temps=<value>     Save intermediate compilation results. <arg> can be set to 'cwd' for current working directory, or 'obj' which will save temporary files in the same directory as the final output file
  -save-temps             Alias for --save-temps=cwd
  -serialize-diagnostics <value>
                          Serialize compiler diagnostics to a file
  -shared-intel           link Intel provided libraries dynamically
  -shared-libsan          Dynamically link the sanitizer runtime
  -sox=<value>            Enable saving of compiler options, version and additional information in the executable.  Use -no-sox to disable (DEFAULT). Valid arguments: profile - Includes data when profile was used for functions that were compiled with PGO enabling options such as -fprofile-use and -fprofile-instr-use, inline - Includes a list of the functions that were inlined in each object, secure - Strip out directory names and options that use them.
  -sox                    Enable saving of compiler options in the executable
  --start-no-unused-arguments
                          Don't emit warnings about unused arguments for the following arguments
  -static-intel           link Intel provided libraries statically
  -static-libsan          Statically link the sanitizer runtime (Not supported for ASan, TSan or UBSan on darwin)
  -static-openmp          Use the static host OpenMP runtime while linking.
  -std=<value>            Language standard to compile for
  -stdlib++-isystem <directory>
                          Use directory as the C++ standard library include path
  -stdlib=<value>         C++ standard library to use
  -strict-ansi            strict ANSI conformance dialect
  -sycl-std=<value>       SYCL language standard to compile for.
  --symbol-graph-dir=<value>
                          Directory in which to emit symbol graphs.
  --system-header-prefix=<prefix>
                          Treat all #include paths starting with <prefix> as including a system header.
  -S                      Only run preprocess and compilation steps
  --target=<value>        Generate code for the given target
  -tbb                    Link Intel(R) Threading Building Blocks (Intel(R) TBB) libraries and bring in the associated headers
  -time                   Time individual commands
  -traceback              Generate traceback debug information
  -traditional-cpp        Enable some traditional CPP emulation
  -trigraphs              Process trigraph sequences
  -T <script>             Specify <script> as linker script
  -undef                  undef all system defines
  -unroll<value>          Set maximum number of times to unroll loops.  Omit n to use default heuristics.  Use 0 to disable the loop unroller.
  -unwindlib=<value>      Unwind library to use
  -use-msasm              enables the use of blocks and entire functions of assembly code within a C or C++ file
  -U <macro>              Undefine macro <macro>
  -vec-threshold<value>   Sets a threshold for the vectorization of loops based on the probability of profitable execution of the vectorized loop in parallel.
  -vecabi=<value>         Determines which vector function ABI the compiler uses to create or call vector functions. The 'gcc' (default) argument enforces compatibility with gcc. The 'cmdtarget' argument uses an extended set of vector functions.
  -vec                    Enable the loop vectorization passes
  --verify-debug-info     Verify the binary representation of debug output
  -verify-pch             Load and verify that a pre-compiled header file is not stale
  --version               Print version information
  -vfsoverlay <value>     Overlay the virtual filesystem described by file over the real file system. Additionally, pass this overlay file to the linker if it supports it
  -v                      Show commands to run and use verbose output
  -Wa,<arg>               Pass the comma separated arguments in <arg> to the assembler
  --wasm-opt              Enable the wasm-opt optimizer (default)
  -Wcheck-unicode-security
                          Enable detection and warn about Unicode constructs that can be exploited by using bi-directional formatting codes, zero-width characters in strings and use of zero-width characters and homoglyphs in identifiers. Done by using clang-tidy
  -Wdeprecated            Enable warnings for deprecated constructs and define __DEPRECATED
  -Winvalid-constexpr     Enable checking of constexpr function bodies for validity within a constant expression context
  -Wl,<arg>               Pass the comma separated arguments in <arg> to the linker
  -Wno-invalid-constexpr  Disable checking of constexpr function bodies for validity within a constant expression context
  -Wno-sycl-strict        Disable warnings which enforce strict SYCL language compatibility.
  -working-directory <value>
                          Resolve file paths relative to the specified directory
  -Wp,<arg>               Pass the comma separated arguments in <arg> to the preprocessor
  -W<warning>             Enable the specified warning
  -w                      Suppress all warnings
  -Xanalyzer <arg>        Pass <arg> to the static analyzer
  -Xarch_device <arg>     Pass <arg> to the CUDA/HIP device compilation
  -Xarch_host <arg>       Pass <arg> to the CUDA/HIP host compilation
  -Xassembler <arg>       Pass <arg> to the assembler
  -Xclang=<arg>           Alias for -Xclang
  -Xclang <arg>           Pass <arg> to clang -cc1
  -Xcuda-fatbinary <arg>  Pass <arg> to fatbinary invocation
  -Xcuda-ptxas <arg>      Pass <arg> to the ptxas assembler
  -Xlinker <arg>          Pass <arg> to the linker
  -Xoffload-linker<triple> <arg>
                          Pass <arg> to the offload linkers or the ones idenfied by -<triple>
  -Xopenmp-target-backend=<triple> <arg>
                          Pass <arg> to the OpenMP based backend identified by <triple>. Depending on the triple (spir64, spir64_gen, spir64_x86_64), the arg passed will be interpreted by the corresponding AOT tool or runtime consumer.
  -Xopenmp-target-backend <arg>
                          Pass <arg> to the OpenMP based target backend.
  -Xopenmp-target-frontend=<value>
                          Pass <arg> to the OpenMP based target frontend identified by <triple>.
  -Xopenmp-target-frontend <value>
                          Pass <arg> to the OpenMP based target frontend.
  -Xopenmp-target-linker=<triple> <arg>
                          Pass <arg> to the SYCL based target linker identified by <triple>.
  -Xopenmp-target-linker <arg>
                          Pass <arg> to the SYCL based target linker.
  -Xopenmp-target=<triple> <arg>
                          Pass <arg> to the target offloading toolchain identified by <triple>.
  -Xopenmp-target <arg>   Pass <arg> to the target offloading toolchain.
  -Xpreprocessor <arg>    Pass <arg> to the preprocessor
  -Xsycl-target-backend=<triple> <arg>
                          Pass <arg> to the SYCL based backend identified by <triple>. Depending on the triple (spir64, spir64_gen, spir64_x86_64, spir64_fpga), the arg passed will be interpreted by the corresponding AOT tool or runtime consumer.
  -Xsycl-target-backend <arg>
                          Pass <arg> to the SYCL based target backend.
  -Xsycl-target-frontend=<triple> <arg>
                          Pass <arg> to the SYCL based target frontend identified by <triple>.
  -Xsycl-target-frontend <arg>
                          Pass <arg> to the SYCL based target frontend.
  -Xsycl-target-linker=<triple> <arg>
                          Pass <arg> to the SYCL based target linker identified by <triple>.
  -Xsycl-target-linker <arg>
                          Pass <arg> to the SYCL based target linker.
  -Xs <arg>               Pass <arg> to the offline compiler.
  -Xs<arg>                Pass <arg> to the offline compiler, adding the option specifier '-' to the <arg>.
  -x <language>           Treat subsequent input files as having type <language>
  -x<code>                Generate specialized code to run exclusively on processors indicated by <code>.
  -z <arg>                Pass -z <arg> to the linker
dxc compatibility options.:
  --dxv-path=<value>  DXIL validator installation path
  -fspv-target-env=<value>
                      Specify the target environment
  -hlsl-entry <value> Entry point name for hlsl
Executing: mpiicpc -cxx=icpx --help | head -n 500
Detected CLANG compiler
Executing: mpiicpc -cxx=icpx --help | head -n 20 
stdout:
OVERVIEW: Intel(R) oneAPI DPC++/C++ Compiler
USAGE: icpx [options] file...
OPTIONS:
  -###                    Print (but do not run) the commands to run for this compilation
  -#x                     Show commands to run and use verbose output
  -#                      Print (but do not run) the commands to run for this compilation
  -align                  Align doubles to two words in structs (x86 only)
  --amdgpu-arch-tool=<value>
                          Tool used for detecting AMD GPU arch in the system.
  --analyzer-output <value>
                          Static analyzer report output format (html|plist|plist-multi-file|plist-html|sarif|sarif-html|text).
  --analyze               Run the static analyzer
  -ansi-alias             enable use of ANSI aliasing rules optimizations user asserts that the program adheres to these rules
  -arcmt-migrate-emit-errors
                          Emit ARC errors even if the migrator can fix them
  -arcmt-migrate-report-output <value>
                          Output path for the plist report
  -ax<codes>              generate multiple, processor-specific, auto-dispatched code paths for Intel® processors, specified by <codes>, if there is a performance benefit
Executing: mpiicpc -cxx=icpx --help
stdout:
OVERVIEW: Intel(R) oneAPI DPC++/C++ Compiler
USAGE: icpx [options] file...
OPTIONS:
  -###                    Print (but do not run) the commands to run for this compilation
  -#x                     Show commands to run and use verbose output
  -#                      Print (but do not run) the commands to run for this compilation
  -align                  Align doubles to two words in structs (x86 only)
  --amdgpu-arch-tool=<value>
                          Tool used for detecting AMD GPU arch in the system.
  --analyzer-output <value>
                          Static analyzer report output format (html|plist|plist-multi-file|plist-html|sarif|sarif-html|text).
  --analyze               Run the static analyzer
  -ansi-alias             enable use of ANSI aliasing rules optimizations user asserts that the program adheres to these rules
  -arcmt-migrate-emit-errors
                          Emit ARC errors even if the migrator can fix them
  -arcmt-migrate-report-output <value>
                          Output path for the plist report
  -ax<codes>              generate multiple, processor-specific, auto-dispatched code paths for Intel® processors, specified by <codes>, if there is a performance benefit
  -B <prefix>             Search $prefix$file for executables, libraries, and data files. If $prefix is a directory, search $prefix/$file
  -b <arg>                Pass -b <arg> to the linker on AIX
  -CC                     Include comments from within macros in preprocessed output
  -cl-denorms-are-zero    OpenCL only. Allow denormals to be flushed to zero.
  -cl-ext=<value>         OpenCL only. Enable or disable OpenCL extensions/optional features. The argument is a comma-separated sequence of one or more extension names, each prefixed by '+' or '-'.
  -cl-fast-relaxed-math   OpenCL only. Sets -cl-finite-math-only and -cl-unsafe-math-optimizations, and defines __FAST_RELAXED_MATH__.
  -cl-finite-math-only    OpenCL only. Allow floating-point optimizations that assume arguments and results are not NaNs or +-Inf.
  -cl-fp32-correctly-rounded-divide-sqrt
                          OpenCL only. Specify that single precision floating-point divide and sqrt used in the program source are correctly rounded.
  -cl-kernel-arg-info     OpenCL only. Generate kernel argument metadata.
  -cl-mad-enable          OpenCL only. Allow use of less precise MAD computations in the generated binary.
  -cl-no-signed-zeros     OpenCL only. Allow use of less precise no signed zeros computations in the generated binary.
  -cl-no-stdinc           OpenCL only. Disables all standard includes containing non-native compiler types and functions.
  -cl-opt-disable         OpenCL only. This option disables all optimizations. By default optimizations are enabled.
  -cl-single-precision-constant
                          OpenCL only. Treat double precision floating-point constant as single precision constant.
  -cl-std=<value>         OpenCL language standard to compile for.
  -cl-strict-aliasing     OpenCL only. This option is added for compatibility with OpenCL 1.0.
  -cl-uniform-work-group-size
                          OpenCL only. Defines that the global work-size be a multiple of the work-group size specified to clEnqueueNDRangeKernel
  -cl-unsafe-math-optimizations
                          OpenCL only. Allow unsafe floating-point optimizations.  Also implies -cl-no-signed-zeros and -cl-mad-enable.
  --config=<file>         Specify configuration file
  --cuda-compile-host-device
                          Compile CUDA code for both host and device (default). Has no effect on non-CUDA compilations.
  --cuda-device-only      Compile CUDA code for device only
  --cuda-feature=<value>  Manually specify the CUDA feature to use
  --cuda-host-only        Compile CUDA code for host only. Has no effect on non-CUDA compilations.
  --cuda-include-ptx=<value>
                          Include PTX for the following GPU architecture (e.g. sm_35) or 'all'. May be specified more than once.
  --cuda-noopt-device-debug
                          Enable device-side debug info generation. Disables ptxas optimizations.
  --cuda-path-ignore-env  Ignore environment variables to detect CUDA installation
  --cuda-path=<value>     CUDA installation path
  -cuid=<value>           An ID for compilation unit, which should be the same for the same compilation unit but different for different compilation units. It is used to externalize device-side static variables for single source offloading languages CUDA and HIP so that they can be accessed by the host code of the same compilation unit.
  -cxx-isystem <directory>
                          Add directory to the C++ SYSTEM include search path
  -C                      Include comments in preprocessed output
  -c                      Only run preprocess, compile, and assemble steps
  -daal=<value>           Link Intel(R) Data Analytics Acceleration Library (Intel(R) DAAL) libraries and bring in the associated headers (parallel)
  -darwin-target-variant-triple <value>
                          Specify the darwin target variant triple
  -darwin-target-variant <value>
                          Generate code for an additional runtime variant of the deployment target
  -dD                     Print macro definitions in -E mode in addition to normal output
  -debug=<value>          Enable debug information. Valid args: none, all, full, minimal
  -dependency-dot <value> Filename to write DOT-formatted header dependencies to
  -dependency-file <value>
                          Filename (or -) to write dependency output to
  -device-math-lib=<value>
                          Control the addition of device math libraries when compiling for other devices.  Valid arguments are fp64, fp32
  -dI                     Print include directives in -E mode in addition to normal output
  -dM                     Print macro definitions in -E mode instead of normal output
  -dryrun                 Print (but do not run) the commands to run for this compilation
  -dsym-dir <dir>         Directory to output dSYM's (if any) to
  -dumpdir <dumppfx>      Use <dumpfpx> as a prefix to form auxiliary and dump file names
  -dumpmachine            Display the compiler's target processor
  -dumpversion            Display the version of the compiler
  -D <macro>=<value>      Define <macro> to <value> (or 1 if <value> omitted)
  --embed-dir=<dir>       Add directory to embed search path
  -emit-ast               Emit Clang AST files for source inputs
  --emit-extension-symbol-graphs
                          Generate additional symbol graphs for extended modules.
  -emit-interface-stubs   Generate Interface Stub Files.
  -emit-llvm              Use the LLVM representation for assembler and object files
  -emit-merged-ifs        Generate Interface Stub Files, emit merged text not binary.
  --emit-static-lib       Enable linker job to emit a static library.
  -emit-symbol-graph      Generate Extract API information as a side effect of compilation.
  --end-no-unused-arguments
                          Start emitting warnings for unused driver arguments
  -EP                     Preprocess to stdout, omitting #line directives.
  --extract-api-ignores=<value>
                          Comma separated list of files containing a new line separated list of API symbols to ignore when extracting API information.
  -extract-api            Extract API information
  -E                      Only run the preprocessor
  -faapcs-bitfield-load   Follows the AAPCS standard that all volatile bit-field write generates at least one load. (ARM only).
  -faapcs-bitfield-width  Follow the AAPCS standard requirement stating that volatile bit-field width is dictated by the field container type. (ARM only).
  -faddrsig               Emit an address-significance table
  -falign-functions=<value>
                          Align the start of functions on a 2 (DEFAULT) or <n> byte boundary where <n> is a power of 2.
  -falign-functions       align the start of functions to an optimal machine-dependent value.
  -falign-loops=<N>       N must be a power of two. Align loops to the boundary
  -falign-stack=assume-16-byte
                          Assume the stack is aligned on 16-byte boundaries
  -falign-stack=assume-4-byte
                          Assume the stack is aligned on 4-byte boundaries
  -falign-stack=maintain-16-byte
                          Do not assume any alignment, but maintain alignment in case the stack is already aligned
  -faligned-allocation    Enable C++17 aligned allocation functions
  -fallow-editor-placeholders
                          Treat editor placeholders as valid source code
  -faltivec-src-compat=<value>
                          Source-level compatibility for Altivec vectors (for PowerPC targets). This includes results of vector comparison (scalar for 'xl', vector for 'gcc') as well as behavior when initializing with a scalar (splatting for 'xl', element zero only for 'gcc'). For 'mixed', the compatibility is as 'gcc' for 'vector bool/vector pixel' and as 'xl' for other types. Current default is 'mixed'.
  -fansi-escape-codes     Use ANSI escape codes for diagnostics
  -fapinotes-modules      Enable module-based external API notes support
  -fapinotes-swift-version=<version>
                          Specify the Swift version to use when filtering API notes
  -fapinotes              Enable external API notes support
  -fapple-kext            Use Apple's kernel extensions ABI
  -fapple-link-rtlib      Force linking the clang builtins runtime library
  -fapple-pragma-pack     Enable Apple gcc-compatible #pragma pack handling
  -fapplication-extension Restrict code to those available for App Extensions
  -fapprox-func           Allow certain math function calls to be replaced with an approximately equivalent calculation
  -fargument-noalias      Enables 'noalias' attribute for all pointer-type arguments
  -fassume-nothrow-exception-dtor
                          Assume that exception objects' destructors are non-throwing
  -fasync-exceptions      Enable EH Asynchronous exceptions
  -fauto-import           MinGW specific. Enable code generation support for automatic dllimport, and enable support for it in the linker. Enabled by default.
  -fbasic-block-address-map
                          Emit the basic block address map section.
  -fbasic-block-sections=<value>
                          Place each function's basic blocks in unique sections (ELF Only)
  -fbinutils-version=<major.minor>
                          Produced object files can use all ELF features supported by this binutils version and newer. If -fno-integrated-as is specified, the generated assembly will consider GNU as support. 'none' means that all ELF features can be used, regardless of binutils support. Defaults to 2.26.
  -fblocks                Enable the 'blocks' language feature
  -fborland-extensions    Accept non-standard constructs supported by the Borland compiler
  -fbuild-session-file=<file>
                          Use the last modification time of <file> as the build session timestamp
  -fbuild-session-timestamp=<time since Epoch in seconds>
                          Time when the current build session started
  -fbuiltin-module-map    Load the clang builtins module map file.
  -fc++-abi=<value>       C++ ABI to use. This will override the target C++ ABI.
  -fcall-saved-x10        Make the x10 register call-saved (AArch64 only)
  -fcall-saved-x11        Make the x11 register call-saved (AArch64 only)
  -fcall-saved-x12        Make the x12 register call-saved (AArch64 only)
  -fcall-saved-x13        Make the x13 register call-saved (AArch64 only)
  -fcall-saved-x14        Make the x14 register call-saved (AArch64 only)
  -fcall-saved-x15        Make the x15 register call-saved (AArch64 only)
  -fcall-saved-x18        Make the x18 register call-saved (AArch64 only)
  -fcall-saved-x8         Make the x8 register call-saved (AArch64 only)
  -fcall-saved-x9         Make the x9 register call-saved (AArch64 only)
  -fcaret-diagnostics-max-lines=<value>
                          Set the maximum number of source lines to show in a caret diagnostic (0 = no limit).
  -fcf-protection=<value> Instrument control-flow architecture protection
  -fcf-protection         Enable cf-protection in 'full' mode
  -fchar8_t               Enable C++ builtin type char8_t
  -fcheck-new             Do not assume C++ operator new may not return NULL
  -fclang-abi-compat=<version>
                          Attempt to match the ABI of Clang <version>
  -fclangir               Use the ClangIR pipeline to compile
  -fcolor-diagnostics     Enable colors in diagnostics
  -fcomment-block-commands=<arg>
                          Treat each comma separated argument in <arg> as a documentation comment block command
  -fcommon                Place uninitialized global variables in a common block
  -fcomplete-member-pointers
                          Require member pointer base types to be complete if they would be significant under the Microsoft ABI
  -fconstexpr-backtrace-limit=<value>
                          Set the maximum number of entries to print in a constexpr evaluation backtrace (0 = no limit)
  -fconstexpr-depth=<value>
                          Set the maximum depth of recursive constexpr function calls
  -fconstexpr-steps=<value>
                          Set the maximum number of steps in constexpr function evaluation
  -fcoro-aligned-allocation
                          Prefer aligned allocation for C++ Coroutines
  -fcoroutines            Enable support for the C++ Coroutines
  -fcoverage-compilation-dir=<value>
                          The compilation directory to embed in the coverage mapping.
  -fcoverage-mapping      Generate coverage mapping to enable code coverage analysis
  -fcoverage-mcdc         Enable MC/DC criteria when generating code coverage
  -fcoverage-prefix-map=<old>=<new>
                          remap file source paths <old> to <new> in coverage mapping. If there are multiple options, prefix replacement is applied in reverse order starting from the last one
  -fcrash-diagnostics-dir=<dir>
                          Put crash-report files in <dir>
  -fcrash-diagnostics=<value>
                          Set level of crash diagnostic reporting, (option: off, compiler, all)
  -fcrash-diagnostics     Enable crash diagnostic reporting (default)
  -fcs-profile-generate=<directory>
                          Generate instrumented code to collect context sensitive execution counts into <directory>/default.profraw (overridden by LLVM_PROFILE_FILE env var)
  -fcs-profile-generate   Generate instrumented code to collect context sensitive execution counts into default.profraw (overridden by LLVM_PROFILE_FILE env var)
  -fcuda-prec-sqrt        Specify that sqrt is correctly rounded (for CUDA devices)
  -fcuda-short-ptr        Use 32-bit pointers for accessing const/local/shared address spaces
  -fcx-fortran-rules      Range reduction is enabled for complex arithmetic operations.
  -fcx-limited-range      Basic algebraic expansions of complex arithmetic operations involving are enabled.
  -fcxx-exceptions        Enable C++ exceptions
  -fcxx-modules           Enable modules for C++
  -fdata-sections         Place each data in its own section
  -fdebug-compilation-dir=<value>
                          The compilation directory to embed in the debug info
  -fdebug-default-version=<value>
                          Default DWARF version to use, if a -g option caused DWARF debug info to be produced
  -fdebug-info-for-profiling
                          Emit extra debug info to make sample profile more accurate
  -fdebug-macro           Emit macro debug information
  -fdebug-prefix-map=<old>=<new>
                          For paths in debug info, remap directory <old> to <new>. If multiple options match a path, the last option wins
  -fdebug-ranges-base-address
                          Use DWARF base address selection entries in .debug_ranges
  -fdebug-types-section   Place debug types in their own section (ELF Only)
  -fdeclspec              Allow __declspec as a keyword
  -fdefine-target-os-macros
                          Enable predefined target OS macros
  -fdelayed-template-parsing
                          Parse templated function definitions at the end of the translation unit
  -fdelete-null-pointer-checks
                          Treat usage of null pointers as undefined behavior (default)
  -fdiagnostics-absolute-paths
                          Print absolute paths in diagnostics
  -fdiagnostics-hotness-threshold=<value>
                          Prevent optimization remarks from being output if they do not have at least this profile count. Use 'auto' to apply the threshold from profile summary
  -fdiagnostics-misexpect-tolerance=<value>
                          Prevent misexpect diagnostics from being output if the profile counts are within N% of the expected. 
  -fdiagnostics-parseable-fixits
                          Print fix-its in machine parseable form
  -fdiagnostics-print-source-range-info
                          Print source range spans in numeric form
  -fdiagnostics-show-hotness
                          Enable profile hotness information in diagnostic line
  -fdiagnostics-show-note-include-stack
                          Display include stacks for diagnostic notes
  -fdiagnostics-show-option
                          Print option name with mappable diagnostics
  -fdiagnostics-show-template-tree
                          Print a template comparison tree for differing templates
  -fdigraphs              Enable alternative token representations '<:', ':>', '<%', '%>', '%:', '%:%:' (default)
  -fdirect-access-external-data
                          Don't use GOT indirection to reference external data symbols
  -fdisable-block-signature-string
                          Disable block signature string)
  -fdiscard-value-names   Discard value names in LLVM IR
  -fdollars-in-identifiers
                          Allow '$' in identifiers
  -fdriver-only           Only run the driver.
  -fdwarf-exceptions      Use DWARF style exceptions
  -feliminate-unused-debug-types
                          Do not emit  debug info for defined but unused types
  -fembed-bitcode-marker  Embed placeholder LLVM IR data as a marker
  -fembed-bitcode=<option>
                          Embed LLVM bitcode
  -fembed-bitcode         Embed LLVM IR bitcode as data
  -fembed-offload-object=<value>
                          Embed Offloading device-side binary into host object file as a section.
  -femit-all-decls        Emit all declarations, even if unused
  -femit-class-debug-always
                          Emit debug information for a C++ class into each object file where the class is used. This flag is useful for tools which are unable to resolve incomplete type descriptions.  Using this option may cause a large increase in the size of the debug information
  -femit-compact-unwind-non-canonical
                          Try emitting Compact-Unwind for non-canonical entries. Maybe overriden by other constraints
  -femit-dwarf-unwind=<value>
                          When to emit DWARF unwind (EH frame) info
  -femulated-tls          Use emutls functions to access thread_local variables
  -fenable-matrix         Enable matrix data type and related builtin functions
  -fexceptions            Enable support for exception handling
  -fexcess-precision=<value>
                          Allows control over excess precision on targets where native support for the precision types is not available. By default, excess precision is used to calculate intermediate results following the rules specified in ISO C99.
  -fexperimental-late-parse-attributes
                          Enable experimental late parsing of attributes
  -fexperimental-library  Control whether unstable and experimental library features are enabled. This option enables various library features that are either experimental (also known as TSes), or have been but are not stable yet in the selected Standard Library implementation. It is not recommended to use this option in production code, since neither ABI nor API stability are guaranteed. This is intended to provide a preview of features that will ship in the future for experimentation purposes
  -fexperimental-modules-reduced-bmi
                          Generate the reduced BMI
  -fexperimental-new-constant-interpreter
                          Enable the experimental new constant interpreter
  -fexperimental-openacc-macro-override <value>
                          Overrides the _OPENACC macro value for experimental testing during OpenACC support development
  -fexperimental-relative-c++-abi-vtables
                          Use the experimental C++ class ABI for classes with virtual tables
  -fexperimental-sanitize-metadata-ignorelist=<value>
                          Disable sanitizer metadata for modules and functions that match the provided special case list
  -fexperimental-sanitize-metadata=<value>
                          Specify the type of metadata to emit for binary analysis sanitizers
  -fexperimental-strict-floating-point
                          Enables the use of non-default rounding modes and non-default exception handling on targets that are not currently ready.
  -fextend-arguments=<value>
                          Controls how scalar integer arguments are extended in calls to unprototyped and varargs functions
  -ffast-math             Allow aggressive, lossy floating-point optimizations
  -ffat-lto-objects       Enable fat LTO object support
  -ffile-compilation-dir=<value>
                          The compilation directory to embed in the debug info and coverage mapping.
  -ffile-prefix-map=<value>
                          remap file source paths in debug info, predefined preprocessor macros and __builtin_FILE(). Implies -ffile-reproducible.
  -ffile-reproducible     Use the target's platform-specific path separator character when expanding the __FILE__ macro
  -ffine-grained-bitfield-accesses
                          Use separate accesses for consecutive bitfield runs with legal widths and alignments.
  -ffinite-loops          Assume all non-trivial loops are finite.
  -ffinite-math-only      Allow floating-point optimizations that assume arguments and results are not NaNs or +-inf. This defines the \_\_FINITE\_MATH\_ONLY\_\_ preprocessor macro.
  -ffixed-a0              Reserve the a0 register (M68k only)
  -ffixed-a1              Reserve the a1 register (M68k only)
  -ffixed-a2              Reserve the a2 register (M68k only)
  -ffixed-a3              Reserve the a3 register (M68k only)
  -ffixed-a4              Reserve the a4 register (M68k only)
  -ffixed-a5              Reserve the a5 register (M68k only)
  -ffixed-a6              Reserve the a6 register (M68k only)
  -ffixed-d0              Reserve the d0 register (M68k only)
  -ffixed-d1              Reserve the d1 register (M68k only)
  -ffixed-d2              Reserve the d2 register (M68k only)
  -ffixed-d3              Reserve the d3 register (M68k only)
  -ffixed-d4              Reserve the d4 register (M68k only)
  -ffixed-d5              Reserve the d5 register (M68k only)
  -ffixed-d6              Reserve the d6 register (M68k only)
  -ffixed-d7              Reserve the d7 register (M68k only)
  -ffixed-g1              Reserve the G1 register (SPARC only)
  -ffixed-g2              Reserve the G2 register (SPARC only)
  -ffixed-g3              Reserve the G3 register (SPARC only)
  -ffixed-g4              Reserve the G4 register (SPARC only)
  -ffixed-g5              Reserve the G5 register (SPARC only)
  -ffixed-g6              Reserve the G6 register (SPARC only)
  -ffixed-g7              Reserve the G7 register (SPARC only)
  -ffixed-i0              Reserve the I0 register (SPARC only)
  -ffixed-i1              Reserve the I1 register (SPARC only)
  -ffixed-i2              Reserve the I2 register (SPARC only)
  -ffixed-i3              Reserve the I3 register (SPARC only)
  -ffixed-i4              Reserve the I4 register (SPARC only)
  -ffixed-i5              Reserve the I5 register (SPARC only)
  -ffixed-l0              Reserve the L0 register (SPARC only)
  -ffixed-l1              Reserve the L1 register (SPARC only)
  -ffixed-l2              Reserve the L2 register (SPARC only)
  -ffixed-l3              Reserve the L3 register (SPARC only)
  -ffixed-l4              Reserve the L4 register (SPARC only)
  -ffixed-l5              Reserve the L5 register (SPARC only)
  -ffixed-l6              Reserve the L6 register (SPARC only)
  -ffixed-l7              Reserve the L7 register (SPARC only)
  -ffixed-o0              Reserve the O0 register (SPARC only)
  -ffixed-o1              Reserve the O1 register (SPARC only)
  -ffixed-o2              Reserve the O2 register (SPARC only)
  -ffixed-o3              Reserve the O3 register (SPARC only)
  -ffixed-o4              Reserve the O4 register (SPARC only)
  -ffixed-o5              Reserve the O5 register (SPARC only)
  -ffixed-point           Enable fixed point types
  -ffixed-r19             Reserve register r19 (Hexagon only)
  -ffixed-r9              Reserve the r9 register (ARM only)
  -ffixed-x10             Reserve the x10 register (AArch64/RISC-V only)
  -ffixed-x11             Reserve the x11 register (AArch64/RISC-V only)
  -ffixed-x12             Reserve the x12 register (AArch64/RISC-V only)
  -ffixed-x13             Reserve the x13 register (AArch64/RISC-V only)
  -ffixed-x14             Reserve the x14 register (AArch64/RISC-V only)
  -ffixed-x15             Reserve the x15 register (AArch64/RISC-V only)
  -ffixed-x16             Reserve the x16 register (AArch64/RISC-V only)
  -ffixed-x17             Reserve the x17 register (AArch64/RISC-V only)
  -ffixed-x18             Reserve the x18 register (AArch64/RISC-V only)
  -ffixed-x19             Reserve the x19 register (AArch64/RISC-V only)
  -ffixed-x1              Reserve the x1 register (AArch64/RISC-V only)
  -ffixed-x20             Reserve the x20 register (AArch64/RISC-V only)
  -ffixed-x21             Reserve the x21 register (AArch64/RISC-V only)
  -ffixed-x22             Reserve the x22 register (AArch64/RISC-V only)
  -ffixed-x23             Reserve the x23 register (AArch64/RISC-V only)
  -ffixed-x24             Reserve the x24 register (AArch64/RISC-V only)
  -ffixed-x25             Reserve the x25 register (AArch64/RISC-V only)
  -ffixed-x26             Reserve the x26 register (AArch64/RISC-V only)
  -ffixed-x27             Reserve the x27 register (AArch64/RISC-V only)
  -ffixed-x28             Reserve the x28 register (AArch64/RISC-V only)
  -ffixed-x29             Reserve the x29 register (AArch64/RISC-V only)
  -ffixed-x2              Reserve the x2 register (AArch64/RISC-V only)
  -ffixed-x30             Reserve the x30 register (AArch64/RISC-V only)
  -ffixed-x31             Reserve the x31 register (AArch64/RISC-V only)
  -ffixed-x3              Reserve the x3 register (AArch64/RISC-V only)
  -ffixed-x4              Reserve the x4 register (AArch64/RISC-V only)
  -ffixed-x5              Reserve the x5 register (AArch64/RISC-V only)
  -ffixed-x6              Reserve the x6 register (AArch64/RISC-V only)
  -ffixed-x7              Reserve the x7 register (AArch64/RISC-V only)
  -ffixed-x8              Reserve the x8 register (AArch64/RISC-V only)
  -ffixed-x9              Reserve the x9 register (AArch64/RISC-V only)
  -fforce-check-cxx20-modules-input-files
                          Check the input source files from C++20 modules explicitly
  -fforce-dwarf-frame     Always emit a debug frame section
  -fforce-emit-vtables    Emits more virtual tables to improve devirtualization
  -fforce-enable-int128   Enable support for int128_t type
  -ffp-accuracy=<value>   Specifies the required accuracy for floating-point operations and library calls.
  -ffp-contract=<value>   Form fused FP ops (e.g. FMAs)
  -ffp-eval-method=<value>
                          Specifies the evaluation method to use for floating-point arithmetic.
  -ffp-exception-behavior=<value>
                          Specifies the exception behavior of floating-point operations.
  -ffp-model=<value>      Controls the semantics of floating-point calculations.
  -ffreestanding          Assert that the compilation takes place in a freestanding environment
  -ffuchsia-api-level=<value>
                          Set Fuchsia API level
  -ffunction-sections     Place each function in its own section
  -fglobal-isel           Enables the global instruction selector
  -fgnu-keywords          Allow GNU-extension keywords regardless of language standard
  -fgnu-runtime           Generate output compatible with the standard GNU Objective-C runtime
  -fgnu89-inline          Use the gnu89 inline semantics
  -fgnuc-version=<value>  Sets various macros to claim compatibility with the given GCC version (default is 4.2.1)
  -fgpu-allow-device-init Allow device side init function in HIP (experimental)
  -fgpu-approx-transcendentals
                          Use approximate transcendental functions
  -fgpu-default-stream=<value>
                          Specify default stream. The default value is 'legacy'. (CUDA/HIP only)
  -fgpu-defer-diag        Defer host/device related diagnostic messages for CUDA/HIP
  -fgpu-flush-denormals-to-zero
                          Flush denormal floating point values to zero in CUDA/HIP device mode.
  -fgpu-rdc               Generate relocatable device code, also known as separate compilation mode
  -fgpu-sanitize          Enable sanitizer for supported offloading devices
  -fhelp                  Display available options
  -fhip-emit-relocatable  Compile HIP source to relocatable
  -fhip-fp32-correctly-rounded-divide-sqrt
                          Specify that single precision floating-point divide and sqrt used in the program source are correctly rounded (HIP device compilation only)
  -fhip-kernel-arg-name   Specify that kernel argument names are preserved (HIP only)
  -fhip-new-launch-api    Use new kernel launching API for HIP
  -fhlsl-strict-availability
                          Enables strict availability diagnostic mode for HLSL built-in functions.
  -fhls                   Enable Intel FPGA High Level Synthesis extensions
  -fhonor-infinities      Specify that floating-point optimizations are not allowed that assume arguments and results are not +-inf.
  -fhonor-nan-compares    Honor NaN compares with fast math
  -fhonor-nans            Specify that floating-point optimizations are not allowed that assume arguments and results are not NANs.
  -fignore-exceptions     Enable support for ignoring exception handling constructs
  -fimf-absolute-error=<value>
                          Define the maximum allowable absolute error for math library function results
  -fimf-accuracy-bits=<value>
                          Define the relative error, measured by the number of correct bits,for math library function results
  -fimf-arch-consistency=<value>
                          Ensures that the math library functions produce consistent results across different implementations of the same architecture
  -fimf-domain-exclusion=<value>
                          Indicates the input arguments domain on which math functions must provide correct results.
  -fimf-max-error=<value> defines the maximum allowable relative error, measured in ulps, for math library function results
  -fimf-precision=<value> Defines the accuracy (precision) for math library functions.
  -fimf-use-svml=<value>  Instruct the compiler to implement math library functions using the Short Vector Math Library(SVML)
  -fimplicit-module-maps  Implicitly search the file system for module map files.
  -fincremental-extensions
                          Enable incremental processing extensions such as processingstatements on the global scope.
  -finline-functions      Inline suitable functions
  -finline-hint-functions Inline functions which are (explicitly or implicitly) marked inline
  -finline-max-stacksize=<value>
                          Suppress inlining of functions whose stack size exceeds the given value
  -finput-charset=<value> Specify the default character set for source files
  -finstrument-function-entry-bare
                          Instrument function entry only, after inlining, without arguments to the instrumentation call
  -finstrument-functions-after-inlining
                          Like -finstrument-functions, but insert the calls after inlining
  -finstrument-functions  Generate calls to instrument function entry and exit
  -fintegrated-as         Enable the integrated assembler
  -fintegrated-cc1        Run cc1 in-process
  -fintegrated-objemitter Use internal machine object code emitter.
  -fintel-long-double-size=<value>
                          Overrides the size of long double from the architecture/OS defaults.
  -fintelfpga             Perform ahead-of-time compilation for FPGA
  -fiopenmp-simd          Same as -qopenmp-simd
  -fiopenmp               Same as -qopenmp
  -fjmc                   Enable just-my-code debugging
  -fjump-tables           Use jump tables for lowering switches
  -fkeep-persistent-storage-variables
                          Enable keeping all variables that have a persistent storage duration, including global, static and thread-local variables, to guarantee that they can be directly addressed
  -fkeep-static-consts    Keep static const variables even if unused
  -fkeep-system-includes  Instead of expanding system headers when emitting preprocessor output, preserve the #include directive. Useful when producing preprocessed output for test case reduction. May produce incorrect output if preprocessor symbols that control the included content (e.g. _XOPEN_SOURCE) are defined in the including source file. The portability of the resulting source to other compilation environments is not guaranteed.
                          
                          Only valid with -E.
  -flax-vector-conversions=<value>
                          Enable implicit vector bit-casts
  -flink-huge-device-code Generate and use a custom linker script for huge device code sections
  -flto-jobs=<value>      Controls the backend parallelism of -flto=thin (default of 0 means the number of threads will be derived from the number of CPUs detected)
  -flto=auto              Enable LTO in 'full' mode
  -flto=jobserver         Enable LTO in 'full' mode
  -flto=<value>           Set LTO mode
  -flto                   Enable LTO in 'full' mode
  -fmacro-backtrace-limit=<value>
                          Set the maximum number of entries to print in a macro expansion backtrace (0 = no limit)
  -fmacro-prefix-map=<value>
                          remap file source paths in predefined preprocessor macros and __builtin_FILE(). Implies -ffile-reproducible.
  -fmaintain-32-byte-stack-align
                          Do not assume any alignment, but maintain alignment in case the stack is already aligned
  -fmath-errno            Require math functions to indicate errors by setting errno
  -fmax-tokens=<value>    Max total number of preprocessed tokens for -Wmax-tokens.
  -fmax-type-align=<value>
                          Specify the maximum alignment to enforce on pointers lacking an explicit alignment
  -fma                    Enable the combining of floating point multiples and add/subtract operations.
  -fmemory-profile-use=<pathname>
                          Use memory profile for profile-guided memory optimization
  -fmemory-profile=<directory>
                          Enable heap memory profiling and dump results into <directory>
  -fmemory-profile        Enable heap memory profiling
  -fmerge-all-constants   Allow merging of constants
  -fmerge-debug-strings   Merge identical debug strings in different object files.
  -fmessage-length=<value>
                          Format message diagnostics so that they fit within N columns
  -fminimize-whitespace   Ignore the whitespace from the input file when emitting preprocessor output. It will only contain whitespace when necessary, e.g. to keep two minus signs from merging into to an increment operator. Useful with the -P option to normalize whitespace such that two files with only formatting changes are equal.
                          
                          Only valid with -E on C-like inputs and incompatible with -traditional-cpp.
  -fmodule-file=[<name>=]<file>
                          Specify the mapping of module name to precompiled module file, or load a module file if name is omitted.
  -fmodule-header=<kind>  Build a C++20 Header Unit from a header that should be found in the user (fmodule-header=user) or system (fmodule-header=system) search path.
  -fmodule-header         Build a C++20 Header Unit from a header
  -fmodule-map-file=<file>
                          Load this module map file
  -fmodule-name=<name>    Specify the name of the module to build
  -fmodule-output=<value> Save intermediate module file results when compiling a standard C++ module unit.
  -fmodule-output         Save intermediate module file results when compiling a standard C++ module unit.
  -fmodules-cache-path=<directory>
                          Specify the module cache path
  -fmodules-decluse       Require declaration of modules used within a module
  -fmodules-disable-diagnostic-validation
                          Disable validation of the diagnostic options when loading the module
  -fmodules-ignore-macro=<value>
                          Ignore the definition of the given macro when building and loading modules
  -fmodules-prune-after=<seconds>
                          Specify the interval (in seconds) after which a module file will be considered unused
  -fmodules-prune-interval=<seconds>
                          Specify the interval (in seconds) between attempts to prune the module cache
  -fmodules-search-all    Search even non-imported modules to resolve references
  -fmodules-strict-decluse
                          Like -fmodules-decluse but requires all headers to be in modules
  -fmodules-user-build-path <directory>
                          Specify the module user build path
  -fmodules-validate-input-files-content
                          Validate PCM input files based on content if mtime differs
  -fmodules-validate-once-per-build-session
                          Don't verify input files for the modules if the module has been successfully validated or loaded during this build session
  -fmodules-validate-system-headers
                          Validate the system headers that a module depends on when loading the module
  -fmodules               Enable the 'modules' language feature
  -fms-compatibility-version=<value>
                          Dot-separated value representing the Microsoft compiler version number to report in _MSC_VER (0 = don't define it (default))
  -fms-compatibility      Enable full Microsoft Visual C++ compatibility
  -fms-define-stdc        Define '__STDC__' to '1' in MSVC Compatibility mode
  -fms-extensions         Accept some non-standard constructs supported by the Microsoft compiler
  -fms-hotpatch           Ensure that all functions can be hotpatched at runtime
  -fms-runtime-lib=<value>
                          Select Windows run-time library
  -fms-volatile           Volatile loads and stores have acquire and release semantics
  -fmsc-version=<value>   Microsoft compiler version number to report in _MSC_VER (0 = don't define it (default))
  -fnew-alignment=<align> Specifies the largest alignment guaranteed by '::operator new(size_t)'
  -fnew-infallible        Enable treating throwing global C++ operator new as always returning valid memory (annotates with __attribute__((returns_nonnull)) and throw()). This is detectable in source.
  -fno-aapcs-bitfield-width
                          Do not follow the AAPCS standard requirement stating that volatile bit-field width is dictated by the field container type. (ARM only).
  -fno-access-control     Disable C++ access control
  -fno-addrsig            Don't emit an address-significance table
  -fno-alias              Enables 'noalias' attribute for all pointer-type arguments
  -fno-align-functions    Aligns on a 2-byte boundary
  -fno-apinotes-modules   Disable module-based external API notes support
  -fno-apinotes           Disable external API notes support
  -fno-assume-sane-operator-new
                          Don't assume that C++'s global operator new can't alias any pointer
  -fno-assume-unique-vtables
                          Disable optimizations based on vtable pointer identity
  -fno-assumptions        Disable codegen and compile-time checks for C++23's [[assume]] attribute
  -fno-auto-import        MinGW specific. Disable support for automatic dllimport in code generation and linking
  -fno-autolink           Disable generation of linker directives for automatic library linking
  -fno-builtin-<value>    Disable implicit builtin knowledge of a specific function
  -fno-builtin            Disable implicit builtin knowledge of functions
  -fno-bundle-offload-arch
                          Specify that the offload bundler should not identify a bundle with specific arch. For example, the bundle for `nvptx64-nvidia-cuda-sm_80` uses the bundle tag `nvptx64-nvidia-cuda` when used. This allows .o files to contain .bc bundles that are unspecific to a particular arch version.
  -fno-c++-static-destructors
                          Disable C++ static destructor registration
  -fno-char8_t            Disable C++ builtin type char8_t
  -fno-clangir            Use the AST -> LLVM pipeline to compile
  -fno-color-diagnostics  Disable colors in diagnostics
  -fno-common             Compile common globals like normal definitions
  -fno-complete-member-pointers
                          Do not require member pointer base types to be complete if they would be significant under the Microsoft ABI
  -fno-constant-cfstrings Disable creation of CodeFoundation-type constant strings
  -fno-convergent-functions
                          Assume all functions may be convergent.
  -fno-coverage-mapping   Disable code coverage analysis
  -fno-coverage-mcdc      Disable MC/DC coverage criteria
  -fno-crash-diagnostics  Disable auto-generation of preprocessed source files and a script for reproduction during a clang crash
  -fno-cuda-prec-sqrt     Don't specify that sqrt is correctly rounded (for CUDA devices)
  -fno-cx-fortran-rules   Range reduction is disabled for complex arithmetic operations
  -fno-cx-limited-range   Basic algebraic expansions of complex arithmetic operations involving are disabled.
  -fno-cxx-modules        Disable modules for C++
  -fno-debug-macro        Do not emit macro debug information
  -fno-declspec           Disallow __declspec as a keyword
  -fno-define-target-os-macros
                          Disable predefined target OS macros
  -fno-delayed-template-parsing
                          Disable delayed template parsing
  -fno-delete-null-pointer-checks
                          Do not treat usage of null pointers as undefined behavior
  -fno-diagnostics-fixit-info
                          Do not include fixit information in diagnostics
  -fno-diagnostics-show-line-numbers
                          Show line numbers in diagnostic code snippets
  -fno-digraphs           Disallow alternative token representations '<:', ':>', '<%', '%>', '%:', '%:%:'
  -fno-direct-access-external-data
                          Use GOT indirection to reference external data symbols
  -fno-disable-block-signature-string
                          Don't disable block signature string)
  -fno-discard-value-names
                          Do not discard value names in LLVM IR
  -fno-dollars-in-identifiers
                          Disallow '$' in identifiers
  -fno-elide-constructors Disable C++ copy constructor elision
  -fno-elide-type         Do not elide types when printing diagnostics
  -fno-eliminate-unused-debug-types
                          Emit  debug info for defined but unused types
  -fno-emit-class-debug-always
                          Emit debug information for a C++ class in only one object file
  -fno-exceptions         Disable support for exception handling
  -fno-experimental-late-parse-attributes
                          Disable experimental late parsing of attributes
  -fno-experimental-relative-c++-abi-vtables
                          Do not use the experimental C++ class ABI for classes with virtual tables
  -fno-experimental-sanitize-metadata=<value>
                          Disable emitting metadata for binary analysis sanitizers
  -fno-fat-lto-objects    Disable fat LTO object support
  -fno-file-reproducible  Use the host's platform-specific path separator character when expanding the __FILE__ macro
  -fno-fine-grained-bitfield-accesses
                          Use large-integer access for consecutive bitfield runs.
  -fno-finite-loops       Do not assume that any loop is finite.
  -fno-fixed-point        Disable fixed point types
  -fno-force-enable-int128
                          Disable support for int128_t type
  -fno-global-isel        Disables the global instruction selector
  -fno-gnu-inline-asm     Disable GNU style inline asm
  -fno-gpu-allow-device-init
                          Don't allow device side init function in HIP (experimental)
  -fno-gpu-approx-transcendentals
                          Don't use approximate transcendental functions
  -fno-gpu-defer-diag     Don't defer host/device related diagnostic messages for CUDA/HIP
  -fno-hip-emit-relocatable
                          Do not override toolchain to compile HIP source to relocatable
  -fno-hip-fp32-correctly-rounded-divide-sqrt
                          Don't specify that single precision floating-point divide and sqrt used in the program source are correctly rounded (HIP device compilation only)
  -fno-hip-kernel-arg-name
                          Don't specify that kernel argument names are preserved (HIP only)
  -fno-hip-new-launch-api Don't use new kernel launching API for HIP
  -fno-honor-nan-compares Do not honor NaN compares with fast math
  -fno-integrated-as      Disable the integrated assembler
  -fno-integrated-cc1     Spawn a separate process for each cc1
  -fno-integrated-objemitter
                          Use external machine object code emitter.
  -fno-jump-tables        Do not use jump tables for lowering switches
  -fno-keep-persistent-storage-variables
                          Disable keeping all variables that have a persistent storage duration, including global, static and thread-local variables, to guarantee that they can be directly addressed
  -fno-keep-static-consts Don't keep static const variables even if unused
  -fno-knr-functions      Disable support for K&R C function declarations
  -fno-link-huge-device-code
                          Do not generate or use a custom linker script for huge device code sections (default)
  -fno-lto                Disable LTO mode (default)
  -fno-memory-profile     Disable heap memory profiling
  -fno-merge-all-constants
                          Disallow merging of constants
  -fno-merge-debug-strings
                           Do not mergeidentical debug strings in different object files.
  -fno-modules-check-relocated<value>
                          Skip checks for relocated modules when loading PCM files
  -fno-modules-validate-textual-header-includes
                          Do not enforce -fmodules-decluse and private header restrictions for textual headers. This flag will be removed in a future Clang release.
  -fno-new-infallible     Disable treating throwing global C++ operator new as always returning valid memory (annotates with __attribute__((returns_nonnull)) and throw()). This is detectable in source.
  -fno-objc-avoid-heapify-local-blocks
                          Don't try to avoid heapifying local blocks
  -fno-objc-infer-related-result-type
                          do not infer Objective-C related result type based on method family
  -fno-offload-lto        Disable LTO mode (default) for offload compilation
  -fno-offload-uniform-block
                          Don't assume that kernels are launched with uniform block sizes (default true for CUDA/HIP and false otherwise)
  -fno-openmp-device-lib=<value>
                          Control exclusion of device libraries from device binary linkage. Valid arguments are libc, libm-fp32, libm-fp64, all
  -fno-openmp-extensions  Disable all Clang extensions for OpenMP directives and clauses
  -fno-operator-names     Do not treat C++ operator name keywords as synonyms for operators
  -fno-optimize-sibling-calls
                          Disable tail call optimization, keeping the call stack accurate
  -fno-pch-codegen        Do not generate code for uses of this PCH that assumes an explicit object file will be built for the PCH
  -fno-pch-debuginfo      Do not generate debug info for types in an object file built from this PCH and do not generate them elsewhere
  -fno-plt                Use GOT indirection instead of PLT to make external function calls (x86 only)
  -fno-preserve-as-comments
                          Do not preserve comments in inline assembly
  -fno-profile-generate   Disable generation of profile instrumentation.
  -fno-profile-instr-generate
                          Disable generation of profile instrumentation.
  -fno-profile-instr-use  Disable using instrumentation data for profile-guided optimization
  -fno-pseudo-probe-for-profiling
                          Do not emit pseudo probes for sample profiling
  -fno-raw-string-literals
                          Disable raw string literals
  -fno-register-global-dtors-with-atexit
                          Don't use atexit or __cxa_atexit to register global destructors
  -fno-relaxed-template-template-args
                          Disable C++17 relaxed template template argument matching
  -fno-rtlib-add-rpath    Do not add -rpath with architecture-specific resource directory to the linker flags. When --hip-link is specified, do not add -rpath with HIP runtime library directory to the linker flags
  -fno-rtlib-defaultlib   On Windows, do not emit /defaultlib: directives to link compiler-rt libraries
  -fno-rtti-data          Disable generation of RTTI data
  -fno-rtti               Disable generation of rtti information
  -fno-sanitize-address-globals-dead-stripping
                          Disable linker dead stripping of globals in AddressSanitizer
  -fno-sanitize-address-outline-instrumentation
                          Use default code inlining logic for the address sanitizer
  -fno-sanitize-address-poison-custom-array-cookie
                          Disable poisoning array cookies when using custom operator new[] in AddressSanitizer
  -fno-sanitize-address-use-after-scope
                          Disable use-after-scope detection in AddressSanitizer
  -fno-sanitize-address-use-odr-indicator
                          Disable ODR indicator globals
  -fno-sanitize-cfi-canonical-jump-tables
                          Do not make the jump table addresses canonical in the symbol table
  -fno-sanitize-cfi-cross-dso
                          Disable control flow integrity (CFI) checks for cross-DSO calls.
  -fno-sanitize-coverage=<value>
                          Disable features of coverage instrumentation for Sanitizers
  -fno-sanitize-hwaddress-experimental-aliasing
                          Disable aliasing mode in HWAddressSanitizer
  -fno-sanitize-ignorelist
                          Don't use ignorelist file for sanitizers
  -fno-sanitize-memory-param-retval
                          Disable detection of uninitialized parameters and return values
  -fno-sanitize-memory-track-origins
                          Disable origins tracking in MemorySanitizer
  -fno-sanitize-memory-use-after-dtor
                          Disable use-after-destroy detection in MemorySanitizer
  -fno-sanitize-recover=<value>
                          Disable recovery for specified sanitizers
  -fno-sanitize-stable-abi
                          Conventional ABI instrumentation for sanitizer runtime. Default: Conventional
  -fno-sanitize-stats     Disable sanitizer statistics gathering.
  -fno-sanitize-thread-atomics
                          Disable atomic operations instrumentation in ThreadSanitizer
  -fno-sanitize-thread-func-entry-exit
                          Disable function entry/exit instrumentation in ThreadSanitizer
  -fno-sanitize-thread-memory-access
                          Disable memory access instrumentation in ThreadSanitizer
  -fno-sanitize-trap=<value>
                          Disable trapping for specified sanitizers
  -fno-sanitize-trap      Disable trapping for all sanitizers
  -fno-short-wchar        Force wchar_t to be an unsigned int
  -fno-show-column        Do not include column number on diagnostics
  -fno-show-source-location
                          Do not include source location information with diagnostics
  -fno-signed-char        char is unsigned
  -fno-signed-zeros       Allow optimizations that ignore the sign of floating point zeros
  -fno-skip-odr-check-in-gmf
                          Perform ODR checks for decls in the global module fragment.
  -fno-spell-checking     Disable spell-checking
  -fno-split-machine-functions
                          Disable late function splitting using profile information (x86 ELF/COFF)
  -fno-split-stack        Wouldn't use segmented stack
  -fno-stack-clash-protection
                          Disable stack clash protection
  -fno-stack-protector    Disable the use of stack protectors
  -fno-standalone-debug   Limit debug information produced to reduce size of debug binary
  -fno-strict-aliasing    Disable optimizations based on strict aliasing rules
  -fno-strict-float-cast-overflow
                          Relax language rules and try to match the behavior of the target's native float-to-int conversion instructions
  -fno-strict-return      Don't treat control flow paths that fall off the end of a non-void function as unreachable
  -fno-sycl-add-default-spec-consts-image
                          Turns off generation of device image where all specialization constant usages are replaced with default values.
  -fno-sycl-allow-device-dependencies
                          Do not allow dependencies between device code images (default)
  -fno-sycl-dead-args-optimization
                          Disables elimination of DPC++ dead kernel arguments
  -fno-sycl-decompose-functor
                          Do not decompose SYCL functor if possible (experimental, CUDA only)
  -fno-sycl-device-code-split-esimd
                          do not split ESIMD and SYCL device code into separate device binary images. Has effect only for SPIR-based targets. (experimental)
  -fno-sycl-device-lib-jit-link
                          Disables sycl device library jit link (experimental)
  -fno-sycl-device-lib=<value>
                          Control exclusion of device libraries from device binary linkage. Valid arguments are libc, libm-fp32, libm-fp64, all
  -fno-sycl-early-optimizations
                          Disable standard optimization pipeline for SYCL device compiler
  -fno-sycl-esimd-force-stateless-mem
                          Do not enforce using stateless memory accesses.
  -fno-sycl-explicit-simd Disable SYCL explicit SIMD extension. (deprecated)
  -fno-sycl-force-inline-kernel-lambda
                          Disallow force inline SYCL kernels lambda in entry point
  -fno-sycl-id-queries-fit-in-int
                          Do not assume that SYCL ID queries fit within MAX_INT.
  -fno-sycl-instrument-device-code
                          Do not add Instrumentation and Tracing Technology (ITT) instrumentation intrinsics calls (experimental)
  -fno-sycl-libspirv      Disable check for libspirv
  -fno-sycl-link-spirv    Disable adding of the default (spir64) triple when discovered in user specified objects and archives.
  -fno-sycl-pstl-offload  Disable offloading of C++ standard parallel algorithms.
  -fno-sycl-rdc           Generate relocatable device code during SYCL offload target compilation. Use of ‘-fno-sycl-rdc’ in combination with ‘-c’ will produce final device binaries within the generated fat object. When using this option, each kernel must be self-contained within its translation unit (source file).  Therefore, the use of SYCL_EXTERNAL is disallowed when this option is enabled.
  -fno-sycl-remove-unused-external-funcs
                          Prevent removal of unused `SYCL_EXTERNAL` functions
  -fno-sycl-unnamed-lambda
                          Disallow unnamed SYCL lambda kernels
  -fno-sycl-use-bitcode   Use SPIR-V instead of LLVM bitcode in fat objects (deprecated)
  -fno-sycl-use-footer    Disable usage of the integration footer during SYCL enabled compilations.
  -fno-sycl               Disables SYCL kernels compilation for device
  -fno-system-debug       Do not emit debug information for declarations in system headers
  -fno-temp-file          Directly create compilation output files. This may lead to incorrect incremental builds if the compiler crashes
  -fno-threadsafe-statics Do not emit code to make initialization of local statics thread safe
  -fno-trigraphs          Do not process trigraph sequences
  -fno-unified-lto        Use distinct LTO pipelines
  -fno-unique-section-names
                          Don't use unique names for text and data sections
  -fno-unroll-loops       Turn off loop unroller
  -fno-use-cxa-atexit     Don't use __cxa_atexit for calling destructors
  -fno-use-init-array     Use .ctors/.dtors instead of .init_array/.fini_array
  -fno-vec-allow-scalar-stores
                          When this option is set, an explicit simd loop (for example, one set with #pragma omp simd) will not be vectorized if it contains a store to a scalar variable that is not marked as private, lastprivate, or reduction.
  -fno-vec-peel-loops     Disable peel loop vectorization.
  -fno-vec-remainder-loops
                          Disable remainder loop vectorization.
  -fno-vec-with-mask      Disable vectorization for short trip-count loops with masking.
  -fno-verify-intermediate-code
                          Disable verification of LLVM IR
  -fno-visibility-inlines-hidden-static-local-var
                          Disables -fvisibility-inlines-hidden-static-local-var (this is the default on non-darwin targets)
  -fno-xray-function-index
                          Omit function index section at the expense of single-function patching performance
  -fno-zero-initialized-in-bss
                          Don't place zero initialized data in BSS
  -fobjc-arc-exceptions   Use EH-safe code when synthesizing retains and releases in -fobjc-arc
  -fobjc-arc              Synthesize retain and release calls for Objective-C pointers
  -fobjc-avoid-heapify-local-blocks
                          Try to avoid heapifying local blocks
  -fobjc-disable-direct-methods-for-testing
                          Ignore attribute objc_direct so that direct methods can be tested
  -fobjc-encode-cxx-class-template-spec
                          Fully encode c++ class template specialization
  -fobjc-exceptions       Enable Objective-C exceptions
  -fobjc-runtime=<value>  Specify the target Objective-C runtime kind and version
  -fobjc-weak             Enable ARC-style weak references in Objective-C
  -foffload-implicit-host-device-templates
                          Template functions or specializations without host, device and global attributes have implicit host device attributes (CUDA/HIP only)
  -foffload-lto=<value>   Set LTO mode for offload compilation
  -foffload-lto           Enable LTO in 'full' mode for offload compilation
  -foffload-uniform-block Assume that kernels are launched with uniform block sizes (default true for CUDA/HIP and false otherwise)
  -fomit-frame-pointer    Omit the frame pointer from functions that don't need it. Some stack unwinding cases, such as profilers and sanitizers, may prefer specifying -fno-omit-frame-pointer. On many targets, -O1 and higher omit the frame pointer by default. -m[no-]omit-leaf-frame-pointer takes precedence for leaf functions
  -fopenacc               Enable OpenACC
  -fopenmp-concurrent-host-device-compile<value>
                          Enable parallel compilation of host and device compilation steps when performing OpenMP offload compiles using -fopenmp-targets. (experimental)
  -fopenmp-declare-target-scalar-defaultmap=<value>
                          Assume that a scalar declare target variable with implicit data-mapping referenced in a 'target' construct has the same value in the host and device environment
  -fopenmp-device-lib=<value>
                          Control inclusion of device libraries into device binary linkage. Valid arguments are libc, libm-fp32, libm-fp64, all
  -fopenmp-device-link    Perform device link during compilation step instead of link step (-c compilations).  Use for offload compilations to produce final device binaries within the generated fat object.
  -fopenmp-extensions     Enable all Clang extensions for OpenMP directives and clauses
  -fopenmp-force-usm      Force behvaior as if the user specified pragma omp requires unified_shared_memory.
  -fopenmp-offload-mandatory
                          Do not create a host fallback if offloading to the device fails.
  -fopenmp-simd           Emit OpenMP code only for SIMD-based constructs. Advanced users who prefer to use OpenMP* as it is implemented by the LLVM community can get most of that functionality by using -fopenmp-simd.
  -fopenmp-target-buffers=<value>
                          Allow access to target objects of 4GB or larger in target code.
  -fopenmp-target-debug   Enable debugging in the OpenMP offloading device RTL
  -fopenmp-target-default-sub-group-size=<value>
                          Specify the default sub-group size of SPMD kernels generated for OpenMP target constructs for SPIR64
  -fopenmp-target-jit     Emit code that can be JIT compiled for OpenMP offloading. Implies -foffload-lto=full
  -fopenmp-targets=<value>
                          Specify comma-separated list of triples that correspond to OpenMP offloading targets to be supported.  Valid triples include spir64_gen, spir64_x86_64 and spir64
  -fopenmp-version=<value>
                          Set OpenMP version (e.g. 45 for OpenMP 4.5, 51 for OpenMP 5.1). Default value is 51 for Clang
  -fopenmp                Parse OpenMP pragmas and generate parallel code. Advanced users who prefer to use OpenMP* as it is implemented by the LLVM community can get most of that functionality by using -fopenmp.
  -foperator-arrow-depth=<value>
                          Maximum number of 'operator->'s to call for a member access
  -foptimization-record-file=<file>
                          Specify the output name of the file containing the optimization remarks. Implies -fsave-optimization-record. On Darwin platforms, this cannot be used with multiple -arch <arch> options.
  -foptimization-record-passes=<regex>
                          Only include passes which match a specified regular expression in the generated optimization record (by default, include all passes)
  -forder-file-instrumentation
                          Generate instrumented code to collect order file into default.profraw file (overridden by '=' form of option or LLVM_PROFILE_FILE env var)
  -fortlib                Allow for Fortran generated objects to be mixed and matched and linked in with the C/C++ compiler to pull in the needed libraries.
  -fp-model=<value>       Controls the semantics of floating-point calculations.
  -fp-speculation=<value> Specifies the exception behavior of floating-point operations.
  -fpack-struct=<value>   Specify the default maximum struct packing alignment
  -fpascal-strings        Recognize and construct Pascal-style string literals
  -fpass-plugin=<dsopath> Load pass plugin from a dynamic shared object file (only with new pass manager).
  -fpatchable-function-entry=<N,M>
                          Generate M NOPs before function entry and N-M NOPs after function entry
  -fpcc-struct-return     Override the default ABI to return all structs on the stack
  -fpch-codegen           Generate code for uses of this PCH that assumes an explicit object file will be built for the PCH
  -fpch-debuginfo         Generate debug info for types in an object file built from this PCH and do not generate them elsewhere
  -fpch-instantiate-templates
                          Instantiate templates already while building a PCH
  -fpch-validate-input-files-content
                          Validate PCH input files based on content if mtime differs
  -fplugin-arg-<name>-<arg>
                          Pass <arg> to plugin <name>
  -fplugin=<dsopath>      Load the named plugin (dynamic shared object)
  -fprebuilt-implicit-modules
                          Look up implicit modules in the prebuilt module path
  -fprebuilt-module-path=<directory>
                          Specify the prebuilt module path
  -fpreview-breaking-changes
                          When specified, it informs the compiler driver and compilation phases that it is allowed to break backward compatibility. When this option is specified the compiler will also set the macro __INTEL_PREVIEW_BREAKING_CHANGES.
                          When this option is used in conjunction with -fsycl, the driver will link against an alternate form of libsycl, libsycl-preview.
  -fproc-stat-report=<value>
                          Save subprocess statistics to the given file
  -fproc-stat-report<value>
                          Print subprocess statistics
  -fprofile-arcs          Instrument code to produce gcov data files (*.gcda)
  -fprofile-dwo-dir=<value>
                          Directory to store .dwo files when using -fprofile-sample-generate and -gsplit-dwarf. (experimental)
  -fprofile-exclude-files=<value>
                          Instrument only functions from files where names don't match all the regexes separated by a semi-colon
  -fprofile-filter-files=<value>
                          Instrument only functions from files where names match any regex separated by a semi-colon
  -fprofile-function-groups=<N>
                          Partition functions into N groups and select only functions in group i to be instrumented using -fprofile-selected-function-group
  -fprofile-generate=<directory>
                          Generate instrumented code to collect execution counts into <directory>/default.profraw (overridden by LLVM_PROFILE_FILE env var)
  -fprofile-generate      Generate instrumented code to collect execution counts into default.profraw (overridden by LLVM_PROFILE_FILE env var)
  -fprofile-instr-generate=<file>
                          Generate instrumented code to collect execution counts into <file> (overridden by LLVM_PROFILE_FILE env var)
  -fprofile-instr-generate
                          Generate instrumented code to collect execution counts into default.profraw file (overridden by '=' form of option or LLVM_PROFILE_FILE env var)
  -fprofile-instr-use=<value>
                          Use instrumentation data for profile-guided optimization
  -fprofile-list=<value>  Filename defining the list of functions/files to instrument. The file uses the sanitizer special case list format.
  -fprofile-ml-use        Use pre-trained machine learning model for profile guided optimizations.(deprecated)
  -fprofile-remapping-file=<file>
                          Use the remappings described in <file> to match the profile data against names in the program
  -fprofile-sample-accurate
                          Specifies that the sample profile is accurate
  -fprofile-sample-generate=<value>
                          Enable compiler and linker generating information and adjusting optimizations for Sample-based Profile Guided Optimizations (SPGO). Vaild arguments are none, keep-all-opt, med-fidelity, max-fidelity. (experimental)
  -fprofile-sample-use=<value>
                          Enable compiler and linker using information for Sample-based Profile Guided Optimizations (SPGO). (experimental)
  -fprofile-selected-function-group=<i>
                          Partition functions into N groups using -fprofile-function-groups and select only functions in group i to be instrumented. The valid range is 0 to N-1 inclusive
  -fprofile-update=<method>
                          Set update method of profile counters
  -fprofile-use=<pathname>
                          Use instrumentation data for profile-guided optimization. If pathname is a directory, it reads from <pathname>/default.profdata. Otherwise, it reads from file <pathname>.
  -fprotect-parens        Determines whether the optimizer honors parentheses when floating-point expressions are evaluated
  -fpseudo-probe-for-profiling
                          Emit pseudo probes for sample profiling
  -fptrauth-auth-traps    Enable traps on authentication failures
  -fptrauth-calls         Enable signing and authentication of all indirect calls
  -fptrauth-function-pointer-type-discrimination
                          Enable type discrimination on C function pointers
  -fptrauth-init-fini     Enable signing of function pointers in init/fini arrays
  -fptrauth-intrinsics    Enable pointer authentication intrinsics
  -fptrauth-returns       Enable signing and authentication of return addresses
  -fptrauth-vtable-pointer-address-discrimination
                          Enable address discrimination of vtable pointers
  -fptrauth-vtable-pointer-type-discrimination
                          Enable type discrimination of vtable pointers
  -frandomize-layout-seed-file=<file>
                          File holding the seed used by the randomize structure layout feature
  -frandomize-layout-seed=<seed>
                          The seed used by the randomize structure layout feature
  -fraw-string-literals   Enable raw string literals
  -freciprocal-math       Allow division operations to be reassociated
  -freg-struct-return     Override the default ABI to return small structs in registers
  -fregister-global-dtors-with-atexit
                          Use atexit or __cxa_atexit to register global destructors
  -frelaxed-template-template-args
                          Enable C++17 relaxed template template argument matching
  -fropi                  Generate read-only position independent code (ARM only)
  -frounding-math         Disable floating point optimizations that assume the default rounding mode.
  -frtlib-add-rpath       Add -rpath with architecture-specific resource directory to the linker flags. When --hip-link is specified, also add -rpath with HIP runtime library directory to the linker flags
  -frtlib-defaultlib      On Windows, emit /defaultlib: directives to link compiler-rt libraries (default)
  -frwpi                  Generate read-write position independent code (ARM only)
  -fsafe-buffer-usage-suggestions
                          Display suggestions to update code associated with -Wunsafe-buffer-usage warnings
  -fsample-profile-use-profi
                          Use profi to infer block and edge counts
  -fsanitize-address-destructor=<value>
                          Set the kind of module destructors emitted by AddressSanitizer instrumentation. These destructors are emitted to unregister instrumented global variables when code is unloaded (e.g. via `dlclose()`).
  -fsanitize-address-field-padding=<value>
                          Level of field padding for AddressSanitizer
  -fsanitize-address-globals-dead-stripping
                          Enable linker dead stripping of globals in AddressSanitizer
  -fsanitize-address-outline-instrumentation
                          Always generate function calls for address sanitizer instrumentation
  -fsanitize-address-poison-custom-array-cookie
                          Enable poisoning array cookies when using custom operator new[] in AddressSanitizer
  -fsanitize-address-use-after-return=<mode>
                          Select the mode of detecting stack use-after-return in AddressSanitizer
  -fsanitize-address-use-after-scope
                          Enable use-after-scope detection in AddressSanitizer
  -fsanitize-address-use-odr-indicator
                          Enable ODR indicator globals to avoid false ODR violation reports in partially sanitized programs at the cost of an increase in binary size
  -fsanitize-cfi-canonical-jump-tables
                          Make the jump table addresses canonical in the symbol table
  -fsanitize-cfi-cross-dso
                          Enable control flow integrity (CFI) checks for cross-DSO calls.
  -fsanitize-cfi-icall-experimental-normalize-integers
                          Normalize integers in CFI indirect call type signature checks
  -fsanitize-cfi-icall-generalize-pointers
                          Generalize pointers in CFI indirect call type signature checks
  -fsanitize-coverage-allowlist=<value>
                          Restrict sanitizer coverage instrumentation exclusively to modules and functions that match the provided special case list, except the blocked ones
  -fsanitize-coverage-ignorelist=<value>
                          Disable sanitizer coverage instrumentation for modules and functions that match the provided special case list, even the allowed ones
  -fsanitize-coverage=<value>
                          Specify the type of coverage instrumentation for Sanitizers
  -fsanitize-hwaddress-abi=<value>
                          Select the HWAddressSanitizer ABI to target (interceptor or platform, default interceptor). This option is currently unused.
  -fsanitize-hwaddress-experimental-aliasing
                          Enable aliasing mode in HWAddressSanitizer
  -fsanitize-ignorelist=<value>
                          Path to ignorelist file for sanitizers
  -fsanitize-memory-param-retval
                          Enable detection of uninitialized parameters and return values
  -fsanitize-memory-track-origins=<value>
                          Enable origins tracking in MemorySanitizer
  -fsanitize-memory-track-origins
                          Enable origins tracking in MemorySanitizer
  -fsanitize-memory-use-after-dtor
                          Enable use-after-destroy detection in MemorySanitizer
  -fsanitize-memtag-mode=<value>
                          Set default MTE mode to 'sync' (default) or 'async'
  -fsanitize-recover=<value>
                          Enable recovery for specified sanitizers
  -fsanitize-stable-abi   Stable  ABI instrumentation for sanitizer runtime. Default: Conventional
  -fsanitize-stats        Enable sanitizer statistics gathering.
  -fsanitize-system-ignorelist=<value>
                          Path to system ignorelist file for sanitizers
  -fsanitize-thread-atomics
                          Enable atomic operations instrumentation in ThreadSanitizer (default)
  -fsanitize-thread-func-entry-exit
                          Enable function entry/exit instrumentation in ThreadSanitizer (default)
  -fsanitize-thread-memory-access
                          Enable memory access instrumentation in ThreadSanitizer (default)
  -fsanitize-trap=<value> Enable trapping for specified sanitizers
  -fsanitize-trap         Enable trapping for all sanitizers
  -fsanitize-undefined-strip-path-components=<number>
                          Strip (or keep only, if negative) a given number of path components when emitting check metadata.
  -fsanitize=<check>      Turn on runtime checks for various forms of undefined or suspicious behavior. See user manual for available checks
  -fsave-optimization-record=<format>
                          Generate an optimization record file in a specific format
  -fsave-optimization-record
                          Generate a YAML optimization record file
  -fseh-exceptions        Use SEH style exceptions
  -fseparate-named-sections
                          Use separate unique sections for named sections (ELF Only)
  -fshort-enums           Allocate to an enum type only as many bytes as it needs for the declared range of possible values
  -fshort-wchar           Force wchar_t to be a short unsigned int
  -fshow-overloads=<value>
                          Which overload candidates to show when overload resolution fails. Defaults to 'all'
  -fshow-skipped-includes Show skipped includes in -H output.
  -fsigned-char           char is signed
  -fsized-deallocation    Enable C++14 sized global deallocation functions
  -fsjlj-exceptions       Use SjLj style exceptions
  -fskip-odr-check-in-gmf Skip ODR checks for decls in the global module fragment.
  -fslp-vectorize         Enable the superword-level parallelism vectorization passes
  -fspell-checking-limit=<value>
                          Set the maximum number of times to perform spell checking on unrecognized identifiers (0 = no limit)
  -fsplit-dwarf-inlining  Provide minimal debug info in the object/executable to facilitate online symbolication/stack traces in the absence of .dwo/.dwp files when using Split DWARF
  -fsplit-lto-unit        Enables splitting of the LTO unit
  -fsplit-machine-functions
                          Enable late function splitting using profile information (x86 ELF/COFF)
  -fsplit-stack           Use segmented stack
  -fstack-clash-protection
                          Enable stack clash protection
  -fstack-limit-register=<value>
                          Limits the stack register size
  -fstack-protector-all   Enable stack protectors for all functions
  -fstack-protector-strong
                          Enable stack protectors for some functions vulnerable to stack smashing. Compared to -fstack-protector, this uses a stronger heuristic that includes functions containing arrays of any size (and any type), as well as any calls to alloca or the taking of an address from a local variable
  -fstack-protector       Enable stack protectors for some functions vulnerable to stack smashing. This uses a loose heuristic which considers functions vulnerable if they contain a char (or 8bit integer) array or constant sized calls to alloca , which are of greater size than ssp-buffer-size (default: 8 bytes). All variable sized calls to alloca are considered vulnerable. A function with a stack protector has a guard value added to the stack frame that is checked on function exit. The guard value must be positioned in the stack frame such that a buffer overflow from a vulnerable variable will overwrite the guard value before overwriting the function's return address. The reference stack guard value is stored in a global variable.
  -fstack-security-check  Enable overflow security checks
  -fstack-size-section    Emit section containing metadata on function stack sizes
  -fstack-usage           Emit .su file containing information on function stack sizes
  -fstandalone-debug      Emit full debug info for all types used by the program
  -fstrict-aliasing       Enable optimizations based on strict aliasing rules
  -fstrict-enums          Enable optimizations based on the strict definition of an enum's value range
  -fstrict-flex-arrays=<n>
                          Enable optimizations based on the strict definition of flexible arrays
  -fstrict-float-cast-overflow
                          Assume that overflowing float-to-int casts are undefined (default)
  -fstrict-vtable-pointers
                          Enable optimizations based on the strict rules for overwriting polymorphic C++ objects
  -fswift-async-fp=<option>
                          Control emission of Swift async extended frame info
  -fsycl-add-default-spec-consts-image
                          Generates a copy of every device image that uses a specialization constant and replaces all usages of specialization constant with default values specified by specialization_id. If a device image doesn't use a specialization constant at all then no copy is generated. This option is only useful if used in conjunction with Ahead of Time Compilation (-fsycl-target command line option).
  -fsycl-allow-device-dependencies
                          Allow dependencies between device code images
  -fsycl-dead-args-optimization
                          Enables elimination of DPC++ dead kernel arguments
  -fsycl-decompose-functor
                          Do decompose SYCL functor if possible (experimental, CUDA only)
  -fsycl-default-sub-group-size <value>
                          Set the default sub group size for SYCL kernels
  -fsycl-device-code-split-esimd
                          split ESIMD device code from SYCL into a separate device binary image (default). Has effect only for SPIR-based targets. (experimental)
  -fsycl-device-code-split=<value>
                          Perform SYCL device code split: per_kernel (device code module is created for each SYCL kernel) | per_source (device code module is created for each source (translation unit)) | off (no device code split). | auto (use heuristic to select the best way of splitting device code). Default is 'auto' - use heuristic to distribute device code across modules
  -fsycl-device-code-split
                          Perform SYCL device code split in the 'auto' mode, i.e. use heuristic to distribute device code across modules
  -fsycl-device-lib-jit-link
                          Enables sycl device library jit link (experimental)
  -fsycl-device-lib=<value>
                          Control inclusion of device libraries into device binary linkage. Valid arguments are libc, libm-fp32, libm-fp64, libimf-fp32, libimf-fp64, libimf-bf16, all
  -fsycl-device-obj=<value>
                          Specify format of device code stored in the resulting object. Valid values are: spirv, llvmir (default)
  -fsycl-device-only      Compile SYCL kernels for device
  -fsycl-disable-range-rounding
                          Deprecated: please use -fsycl-range-rounding=disable instead.
  -fsycl-dump-device-code=<value>
                          Dump device code into the user provided directory.
  -fsycl-early-optimizations
                          Enable standard optimization pipeline for SYCL device compiler
  -fsycl-embed-ir         Embed LLVM IR for runtime kernel fusion
  -fsycl-enable-function-pointers
                          Experimental Feature: Enables function pointers and support for virtual functions for DPC++ kernels and device functions.
  -fsycl-esimd-force-stateless-mem
                          Enforce using stateless memory accesses. Convert stateful accesses via SYCL accessors to stateless within ESIMD kernels. Enabled by default.
  -fsycl-exp-range-rounding
                          Use experimental range rounding.
  -fsycl-explicit-simd    Enable SYCL explicit SIMD extension. (deprecated)
  -fsycl-footer-path=<value>
                          Specify the location of the temporary source file with the included integration footer.
  -fsycl-force-inline-kernel-lambda
                          Allow force inline SYCL kernels lambda in entry point
  -fsycl-force-target=<value>
                          Force the usage of the given triple when extracting device code from any given objects on the command line
  -fsycl-fp32-prec-sqrt   SYCL only. Specify that single precision floating-point sqrt is correctly rounded.
  -fsycl-fp64-conv-emu    Enable fp64 partial emulation for kernels with only fp64 conversion operations and no fp64 computation operations (requires Intel GPU backend supporting fp64 partial emulation).
  -fsycl-help=<value>     Emit help information from the related offline compilation tool. Valid values: all, fpga, gen, x86_64.
  -fsycl-help             Emit help information from all of the offline compilation tools
  -fsycl-host-compiler-options=<value>
                          When performing the host compilation with -fsycl-host-compiler specified, use the given options during that compile. Options are expected to be a quoted list of space separated options.
  -fsycl-host-compiler=<value>
                          Specify C++ compiler binary to perform host compilation with during SYCL offload compiles.
  -fsycl-id-queries-fit-in-int
                          Assume that SYCL ID queries fit within MAX_INT.
  -fsycl-instrument-device-code
                          Add Instrumentation and Tracing Technology (ITT) instrumentation intrinsics calls (experimental)
  -fsycl-libspirv-path=<value>
                          Path to libspirv library
  -fsycl-link=<value>     Generate partially linked device and host object to be used at various stages of compilation
  -fsycl-link             Generate partially linked device object to be used with the host link
  -fsycl-max-parallel-link-jobs=<value>
                          Experimental feature: Controls the maximum parallelism of actions performed on SYCL device code post-link, i.e. the generation of SPIR-V device images or AOT compilation of each device image.
  -fsycl-optimize-non-user-code
                          Option used in conjunction with -O0 to optimize SYCL framework utility functions and leave user's kernel code unoptimized. (experimental)
  -fsycl-pstl-offload=<value>
                          Enable offloading of C++ standard parallel algorithms. Valid arguments are gpu and cpu.
  -fsycl-pstl-offload     Enable offloading of C++ standard parallel algorithms.
  -fsycl-range-rounding=<value>
                          Options for range rounding of SYCL range kernels: disable (do not generate range rounded kernels) force (only generate range rounded kernels) on (generate range rounded kernels as well as unrounded kernels). Default is 'on'
  -fsycl-remove-unused-external-funcs
                          Allow removal of unused `SYCL_EXTERNAL` functions (default)
  -fsycl-targets=<value>  Specify comma-separated list of triples that correspond to SYCL offloading targets to be supported. Valid triples include spir64_gen, spir64_x86_64, spir64_fpga and spir64
  -fsycl-unnamed-lambda   Allow unnamed SYCL lambda kernels
  -fsycl-use-bitcode      Use LLVM bitcode instead of SPIR-V in fat objects (deprecated)
  -fsycl                  Enables SYCL kernels compilation for device
  -fsyntax-only           Run the preprocessor, parser and semantic analysis stages
  -fsystem-debug          Emit debug information for declarations in system headers
  -fsystem-module         Build this module as a system module. Only used with -emit-module
  -ftarget-compile-fast   Experimental feature: Reduce target compilation time, with potential runtime performance trade-off.
  -ftarget-export-symbols Expose exported symbols in a generated target library to allow for visibilty to other modules.
  -ftarget-register-alloc-mode=<value>
                          Specify a register allocation mode for specific hardware for use by supported target backends.
  -ftemplate-backtrace-limit=<value>
                          Set the maximum number of entries to print in a template instantiation backtrace (0 = no limit)
  -ftemplate-depth=<value>
                          Set the maximum depth of recursive template instantiation
  -ftest-coverage         Produce gcov notes files (*.gcno)
  -fthin-link-bitcode=<value>
                          Write minimized bitcode to <file> for the ThinLTO thin link only
  -fthinlto-index=<value> Perform ThinLTO importing using provided function summary index
  -ftime-report=<value>   (For new pass manager) 'per-pass': one report for each pass; 'per-pass-run': one report for each pass invocation
  -ftime-trace-granularity=<value>
                          Minimum time granularity (in microseconds) traced by time profiler
  -ftime-trace=<value>    Similar to -ftime-trace. Specify the JSON file or a directory which will contain the JSON file
  -ftime-trace            Turn on time profiler. Generates JSON file based on output filename.
  -ftrap-function=<value> Issue call to specified function rather than a trap instruction
  -ftrapv-handler=<function name>
                          Specify the function to be called on overflow
  -ftrapv                 Trap on integer overflow
  -ftrigraphs             Process trigraph sequences
  -ftrivial-auto-var-init-max-size=<value>
                          Stop initializing trivial automatic stack variables if var size exceeds the specified number of instances (in bytes)
  -ftrivial-auto-var-init-stop-after=<value>
                          Stop initializing trivial automatic stack variables after the specified number of instances
  -ftrivial-auto-var-init=<value>
                          Initialize trivial automatic stack variables. Defaults to 'uninitialized'
  -ftz                    Enable flush denormal results to zero
  -funified-lto           Use the unified LTO pipeline
  -funique-basic-block-section-names
                          Use unique names for basic block sections (ELF Only)
  -funique-internal-linkage-names
                          Uniqueify Internal Linkage Symbol Names by appending the MD5 hash of the module path
  -funroll-loops          Turn on loop unroller
  -funsafe-math-optimizations
                          Allow unsafe floating-point math optimizations which may decrease precision
  -fuse-complex-intrinsics
                          Determines whether to lower _Complex operations to LLVM complex intrinsics
  -fuse-cuid=<value>      Method to generate ID's for compilation units for single source offloading languages CUDA and HIP: 'hash' (ID's generated by hashing file path and command line options) | 'random' (ID's generated as random numbers) | 'none' (disabled). Default is 'hash'. This option will be overridden by option '-cuid=[ID]' if it is specified.
  -fuse-line-directives   Use #line in preprocessed output
  -fvalidate-ast-input-files-content
                          Compute and store the hash of input files used to build an AST. Files with mismatching mtime's are considered valid if both contents is identical
  -fvec-allow-scalar-stores
                          When this option is set, an explicit simd loop (for example, one set with #pragma omp simd) will be vectorized even if it contains a store to a scalar variable that is not marked as private, lastprivate, or reduction.
  -fvec-peel-loops        Enable peel loop vectorization.
  -fvec-remainder-loops   Enable remainder loop vectorization.
  -fvec-with-mask         Enable vectorization for short trip-count loops with masking.
  -fveclib=<value>        Use the given vector functions library
  -fvectorize             Enable the loop vectorization passes
  -fverbose-asm           Generate verbose assembly output
  -fverify-intermediate-code
                          Enable verification of LLVM IR
  -fvirtual-function-elimination
                          Enables dead virtual function elimination optimization. Requires -flto=full
  -fvisibility-dllexport=<value>
                          The visibility for dllexport definitions. If Keep is specified the visibility is not adjusted [-fvisibility-from-dllstorageclass]
  -fvisibility-externs-dllimport=<value>
                          The visibility for dllimport external declarations. If Keep is specified the visibility is not adjusted [-fvisibility-from-dllstorageclass]
  -fvisibility-externs-nodllstorageclass=<value>
                          The visibility for external declarations without an explicit DLL storage class. If Keep is specified the visibility is not adjusted [-fvisibility-from-dllstorageclass]
  -fvisibility-from-dllstorageclass
                          Override the visibility of globals based on their final DLL storage class.
  -fvisibility-global-new-delete-hidden
                          Give global C++ operator new and delete declarations hidden visibility
  -fvisibility-global-new-delete=<value>
                          The visibility for global C++ operator new and delete declarations. If 'source' is specified the visibility is not adjusted
  -fvisibility-inlines-hidden-static-local-var
                          When -fvisibility-inlines-hidden is enabled, static variables in inline C++ member functions will also be given hidden visibility by default
  -fvisibility-inlines-hidden
                          Give inline C++ member functions hidden visibility by default
  -fvisibility-ms-compat  Give global types 'default' visibility and global functions and variables 'hidden' visibility by default
  -fvisibility-nodllstorageclass=<value>
                          The visibility for definitions without an explicit DLL storage class. If Keep is specified the visibility is not adjusted [-fvisibility-from-dllstorageclass]
  -fvisibility=<value>    Set the default symbol visibility for all global definitions
  -fwasm-exceptions       Use WebAssembly style exceptions
  -fwhole-program-vtables Enables whole-program vtable optimization. Requires -flto
  -fwrapv                 Treat signed integer overflow as two's complement
  -fwritable-strings      Store string literals as writable data
  -fxl-pragma-pack        Enable IBM XL #pragma pack handling
  -fxray-always-emit-customevents
                          Always emit __xray_customevent(...) calls even if the containing function is not always instrumented
  -fxray-always-emit-typedevents
                          Always emit __xray_typedevent(...) calls even if the containing function is not always instrumented
  -fxray-always-instrument=<value>
                          DEPRECATED: Filename defining the whitelist for imbuing the 'always instrument' XRay attribute.
  -fxray-attr-list=<value>
                          Filename defining the list of functions/types for imbuing XRay attributes.
  -fxray-function-groups=<value>
                          Only instrument 1 of N groups
  -fxray-ignore-loops     Don't instrument functions with loops unless they also meet the minimum function size
  -fxray-instruction-threshold=<value>
                          Sets the minimum function size to instrument with XRay
  -fxray-instrumentation-bundle=<value>
                          Select which XRay instrumentation points to emit. Options: all, none, function-entry, function-exit, function, custom. Default is 'all'.  'function' includes both 'function-entry' and 'function-exit'.
  -fxray-instrument       Generate XRay instrumentation sleds on function entry and exit
  -fxray-link-deps        Link XRay runtime library when -fxray-instrument is specified (default)
  -fxray-modes=<value>    List of modes to link in by default into XRay instrumented binaries.
  -fxray-never-instrument=<value>
                          DEPRECATED: Filename defining the whitelist for imbuing the 'never instrument' XRay attribute.
  -fxray-selected-function-group=<value>
                          When using -fxray-function-groups, select which group of functions to instrument. Valid range is 0 to fxray-function-groups - 1
  -fzero-call-used-regs=<value>
                          Clear call-used registers upon function return (AArch64/x86 only)
  -fzvector               Enable System z vector language extension
  -F <value>              Add directory to framework include search path
  --gcc-install-dir=<value>
                          Use GCC installation in the specified directory. The directory ends with path components like 'lib{,32,64}/gcc{,-cross}/$triple/$version'. Note: executables (e.g. ld) used by the compiler are not overridden by the selected GCC installation
  --gcc-toolchain=<value> Specify a directory where Clang can find 'include' and 'lib{,32,64}/gcc{,-cross}/$triple/$version'. Clang will use the GCC installation with the largest version
  --gcc-triple=<value>    Search for the GCC installation with the specified triple.
  -gcodeview-command-line Emit compiler path and command line into CodeView debug information
  -gcodeview-ghash        Emit type record hashes in a .debug$H section
  -gcodeview              Generate CodeView debug information
  -gdwarf-2               Generate source-level debug information with dwarf version 2
  -gdwarf-3               Generate source-level debug information with dwarf version 3
  -gdwarf-4               Generate source-level debug information with dwarf version 4
  -gdwarf-5               Generate source-level debug information with dwarf version 5
  -gdwarf32               Enables DWARF32 format for ELF binaries, if debug information emission is enabled.
  -gdwarf64               Enables DWARF64 format for ELF binaries, if debug information emission is enabled.
  -gdwarf                 Generate source-level debug information with the default dwarf version
  -gembed-source          Embed source text in DWARF debug sections
  -gen-reproducer=<value> Emit reproducer on (option: off, crash (default), error, always)
  -gintel-sti             Generate Intel STI debug information
  -gline-directives-only  Emit debug line info directives only
  -gline-tables-only      Emit debug line number tables only
  -global-hoist           Enable external globals are load safe (default)
  -gmodules               Generate debug info with external references to clang modules or precompiled headers
  -gno-codeview-command-line
                          Don't emit compiler path and command line into CodeView debug information
  -gno-embed-source       Restore the default behavior of not embedding source text in DWARF debug sections
  -gno-inline-line-tables Don't emit inline line tables.
  --gpu-bundle-output     Bundle output files of HIP device compilation
  --gpu-instrument-lib=<value>
                          Instrument device library for HIP, which is a LLVM bitcode containing __cyg_profile_func_enter and __cyg_profile_func_exit
  --gpu-max-threads-per-block=<value>
                          Default max threads per block for kernel launch bounds for HIP
  -gpulibc                Link the LLVM C Library for GPUs
  -gsplit-dwarf=<value>   Set DWARF fission mode
  -gstrict-dwarf          Restrict DWARF features to those defined in the specified version, avoiding features from later versions.
  -gz=<value>             DWARF debug sections compression type
  -G <size>               Put objects of at most <size> bytes into small data section (MIPS / Hexagon)
  -g                      Generate source-level debug information
  --help-hidden           Display help for hidden options
  -help                   Display available options
  --hip-device-lib=<value>
                          HIP device library
  --hip-link              Link clang-offload-bundler bundles for HIP
  --hip-path=<value>      HIP runtime installation path, used for finding HIP version and adding HIP include path.
  --hip-version=<value>   HIP version in the format of major.minor.patch
  --hipspv-pass-plugin=<dsopath>
                          path to a pass plugin for HIP to SPIR-V passes.
  --hipstdpar-interpose-alloc
                          Replace all memory allocation / deallocation calls with hipManagedMalloc / hipFree equivalents
  --hipstdpar-path=<value>
                          HIP Standard Parallel Algorithm Acceleration library path, used for finding and implicitly including the library header
  --hipstdpar-prim-path=<value>
                          rocPrim path, required by the HIP Standard Parallel Algorithm Acceleration library, used to implicitly include the rocPrim library
  --hipstdpar-thrust-path=<value>
                          rocThrust path, required by the HIP Standard Parallel Algorithm Acceleration library, used to implicitly include the rocThrust library
  --hipstdpar             Enable HIP acceleration for standard parallel algorithms
  -H                      Show header includes and nesting depth
  -I-                     Restrict all prior -I flags to double-quoted inclusion and remove current directory from include path
  -iapinotes-modules <directory>
                          Add directory to the API notes search path referenced by module name
  -ibuiltininc            Enable builtin #include directories even when -nostdinc is used before or after -ibuiltininc. Using -nobuiltininc after the option disables it
  -idirafter <value>      Add directory to AFTER include search path
  -iframeworkwithsysroot <directory>
                          Add directory to SYSTEM framework search path, absolute paths are relative to -isysroot
  -iframework <value>     Add directory to SYSTEM framework search path
  -imacros <file>         Include macros from file before parsing
  -include-pch <file>     Include precompiled header file
  -include <file>         Include file before parsing
  -index-header-map       Make the next included directory (-I or -F) an indexer header map
  -inline-forceinline     Treat inline routines as forceinline
  -inline-level=<value>   Set function inlining level where: 0 is disable, 1 is inline marked functions and 2 is inline at compilers discretion
  --intel                 Run in Intel Compiler mode
  -ipo                    Enable LTO in 'full' mode
  -ipp-link=<value>       Link Intel(R) IPP libraries in requested manner (static,dynamic,shared)
  -ipp=<value>            Link commonly used Intel(R) Integrated Performace Primitives (Intel(R) IPP) libraries and bring in the associated headers (common,crypto,nonpic,nonpic_crypto)
  -iprefix <dir>          Set the -iwithprefix/-iwithprefixbefore prefix
  -iquote <directory>     Add directory to QUOTE include search path
  -isysroot <dir>         Set the system root directory (usually /)
  -isystem-after <directory>
                          Add directory to end of the SYSTEM include search path
  -isystem <directory>    Add directory to SYSTEM include search path
  -ivfsoverlay-lib <value>
                          Load the virtual filesystem from shared library
  -ivfsoverlay <value>    Overlay the virtual filesystem described by file over the real file system
  -iwithprefixbefore <dir>
                          Set directory to include search path with prefix
  -iwithprefix <dir>      Set directory to SYSTEM include search path with prefix
  -iwithsysroot <directory>
                          Add directory to SYSTEM include search path, absolute paths are relative to -isysroot
  -I <dir>                Add directory to the end of the list of include search paths
  --libomptarget-amdgcn-bc-path=<value>
                          Path to libomptarget-amdgcn bitcode library
  --libomptarget-amdgpu-bc-path=<value>
                          Path to libomptarget-amdgcn bitcode library
  --libomptarget-nvptx-bc-path=<value>
                          Path to libomptarget-nvptx bitcode library
  -L <dir>                Add directory to library search path
  -mabi=quadword-atomics  Enable quadword atomics ABI on AIX (AIX PPC64 only). Uses lqarx/stqcx. instructions.
  -mabicalls              Enable SVR4-style position-independent code (Mips only)
  -maix-shared-lib-tls-model-opt
                          For shared library loaded with the main program, change local-dynamic access(es) to initial-exec access(es) at the function level (AIX 64-bit only).
  -maix-small-local-dynamic-tls
                          Produce a faster access sequence for local-dynamic TLS variables where the offset from the TLS base is encoded as an immediate operand (AIX 64-bit only). This access sequence is not used for variables larger than 32KB.
  -maix-small-local-exec-tls
                          Produce a faster access sequence for local-exec TLS variables where the offset from the TLS base is encoded as an immediate operand (AIX 64-bit only). This access sequence is not used for variables larger than 32KB.
  -maix-struct-return     Return all structs in memory (PPC32 only)
  -malign-branch-boundary=<value>
                          Specify the boundary's size to align branches
  -malign-branch=<value>  Specify types of branches to align
  -malign-double          Align doubles to two words in structs (x86 only)
  -maltivec               Enable AltiVec vector initializer syntax
  -mamdgpu-ieee           Sets the IEEE bit in the expected default floating point  mode register. Floating point opcodes that support exception flag gathering quiet and propagate signaling NaN inputs per IEEE 754-2008. This option changes the ABI. (AMDGPU only)
  -mamdgpu-precise-memory-op
                          Enable precise memory mode (AMDGPU only)
  -mapx-features=<value>  Enable features of APX
  -mapx-inline-asm-use-gpr32
                          Enable use of GPR32 in inline assembly for APX
  -march=<value>          For a list of available architectures for the target use '-mcpu=help'
  -marm64x<value>         Link as a hybrid ARM64X image
  -mauto-arch=<codes>     generate multiple, processor-specific, auto-dispatched code paths for X86 processors, specified by <codes>, if there is a performance benefit
  -mbackchain             Link stack frames through backchain on System Z
  -mbranch-protection=<value>
                          Enforce targets of indirect branches and function returns
  -mbranches-within-32B-boundaries
                          Align selected branches (fused, jcc, jmp) within 32-byte boundary
  -mcabac                 Enable CABAC instructions
  -mcmse                  Allow use of CMSE (Armv8-M Security Extensions)
  -mcode-object-version=<value>
                          Specify code object ABI version. Defaults to 5. (AMDGPU only)
  -mconstructor-aliases   Enable emitting complete constructors and destructors as aliases when possible
  -mcpu=<value>           For a list of available CPUs for the target use '-mcpu=help'
  -mcrbits                Control the CR-bit tracking feature on PowerPC. ``-mcrbits`` (the enablement of CR-bit tracking support) is the default for POWER8 and above, as well as for all other CPUs when optimization is applied (-O2 and above).
  -mcrc                   Allow use of CRC instructions (ARM/Mips only)
  -mcumode                Specify CU wavefront execution mode (AMDGPU only)
  -mdaz-ftz               Globally set the denormals-are-zero (DAZ) and flush-to-zero (FTZ) bits in the floating-point control register on program startup
  -mdebug-line-version=<value>
                          Set debug line version used when generating debug information
  -mdefault-visibility-export-mapping=<value>
                          Mapping between default visibility and export
  -mdouble=<n             Force double to be <n> bits
  -MD                     Write a depfile containing user and system headers
  -meabi <value>          Set EABI type. Default depends on triple)
  -membedded-data         Place constants in the .rodata section instead of the .sdata section even if they meet the -G <size> threshold (MIPS)
  -menable-experimental-extensions
                          Enable use of experimental RISC-V extensions.
  -mexec-model=<value>    Execution model (WebAssembly only)
  -mexecute-only          Disallow generation of data access to code sections (ARM only)
  -mextern-sdata          Assume that externally defined data is in the small data if it meets the -G <size> threshold (MIPS)
  -mfentry                Insert calls to fentry at function entry (x86/SystemZ only)
  -mfix-cmse-cve-2021-35465
                          Work around VLLDM erratum CVE-2021-35465 (ARM only)
  -mfix-cortex-a53-835769 Workaround Cortex-A53 erratum 835769 (AArch64 only)
  -mfix-cortex-a57-aes-1742098
                          Work around Cortex-A57 Erratum 1742098 (ARM only)
  -mfix-cortex-a72-aes-1655431
                          Work around Cortex-A72 Erratum 1655431 (ARM only)
  -mforced-sw-shadow-stack
                          Force using software shadow stack when shadow-stack enabled
  -mfp32                  Use 32-bit floating point registers (MIPS only)
  -mfp64                  Use 64-bit floating point registers (MIPS only)
  -mframe-chain=<value>   Select the frame chain model used to emit frame records (Arm only).
  -mfunction-return=<value>
                          Replace returns with jumps to ``__x86_return_thunk`` (x86 only, error otherwise)
  -MF <file>              Write depfile output from -MMD, -MD, -MM, or -M to <file>
  -mgeneral-regs-only     Generate code which only uses the general purpose registers (AArch64/x86 only)
  -mglobal-merge          Enable merging of globals
  -mgpopt                 Use GP relative accesses for symbols known to be in a small data section (MIPS)
  -mguard=<value>         Enable or disable Control Flow Guard checks and guard tables emission
  -MG                     Add missing headers to depfile
  -mharden-sls=<value>    Select straight-line speculation hardening scope (ARM/AArch64/X86 only). <arg> must be: all, none, retbr(ARM/AArch64), blr(ARM/AArch64), comdat(ARM/AArch64), nocomdat(ARM/AArch64), return(X86), indirect-jmp(X86)
  -mhvx-ieee-fp           Enable Hexagon HVX IEEE floating-point
  -mhvx-length=<value>    Set Hexagon Vector Length
  -mhvx-qfloat            Enable Hexagon HVX QFloat instructions
  -mhvx=<value>           Enable Hexagon Vector eXtensions
  -mhvx                   Enable Hexagon Vector eXtensions
  -miamcu                 Use Intel MCU ABI
  -mignore-xcoff-visibility
                          Not emit the visibility attribute for asm in AIX OS or give all symbols 'unspecified' visibility in XCOFF object file
  --migrate               Run the migrator
  -mincremental-linker-compatible
                          (integrated-as) Emit an object file which can be used with an incremental linker
  -mindirect-branch-cs-prefix
                          Add cs prefix to call and jmp to indirect thunk
  -mindirect-jump=<value> Change indirect jump instructions to inhibit speculation
  -mintrinsic-promote     Force certain functions using intrinsics to promote their architectures and make the intrinsic headers included by default
  -mios-version-min=<value>
                          Set iOS deployment target
  -MJ <value>             Write a compilation database entry per input
  -mlasx                  Enable Loongson Advanced SIMD Extension (LASX).
  -mlink-builtin-bitcode-postopt
                          Link builtin bitcodes after the optimization pipeline
  -mllvm-lto <value>      Additional arguments to forward to LLVM's option processing. Similar to -mllvm, but will also pass the given argument to the LTO step when appropriate.
  -mllvm=<arg>            Alias for -mllvm
  -mllvm <value>          Additional arguments to forward to LLVM's option processing
  -mlocal-sdata           Extend the -G behaviour to object local data (MIPS)
  -mlong-calls            Generate branches with extended addressability, usually via indirect jumps.
  -mlong-double-128       Force long double to be 128 bits
  -mlong-double-64        Force long double to be 64 bits
  -mlong-double-80        Force long double to be 80 bits, padded to 128 bits for storage
  -mlr-for-calls-only     Do not allocate the LR register for general purpose usage, only for calls. (AArch64 only)
  -mlsx                   Enable Loongson SIMD Extension (LSX).
  -mlvi-cfi               Enable only control-flow mitigations for Load Value Injection (LVI)
  -mlvi-hardening         Enable all mitigations for Load Value Injection (LVI)
  -mmacos-version-min=<value>
                          Set macOS deployment target
  -mmadd4                 Enable the generation of 4-operand madd.s, madd.d and related instructions.
  -mmark-bti-property     Add .note.gnu.property with BTI to assembly files (AArch64 only)
  -MMD                    Write a depfile containing user headers
  -mmemops                Enable generation of memop instructions
  -mmlir <value>          Additional arguments to forward to MLIR's option processing
  -mms-bitfields          Set the default structure layout to be compatible with the Microsoft compiler standard
  -mmsa                   Enable MSA ASE (MIPS only)
  -mmt                    Enable MT ASE (MIPS only)
  -MM                     Like -MMD, but also implies -E and writes to stdout by default
  -mno-abicalls           Disable SVR4-style position-independent code (Mips only)
  -mno-amdgpu-precise-memory-op
                          Disable precise memory mode (AMDGPU only)
  -mno-apx-features=<value>
                          Disable features of APX
  -mno-bti-at-return-twice
                          Do not add a BTI instruction after a setjmp or other return-twice construct (Arm/AArch64 only)
  -mno-constructor-aliases
                          Disable emitting complete constructors and destructors as aliases when possible
  -mno-crc                Disallow use of CRC instructions (Mips only)
  -mno-cumode             Specify WGP wavefront execution mode (AMDGPU only)
  -mno-daz-ftz            Do not globally set the denormals-are-zero (DAZ) and flush-to-zero (FTZ) bits in the floating-point control register on program startup
  -mno-embedded-data      Do not place constants in the .rodata section instead of the .sdata if they meet the -G <size> threshold (MIPS)
  -mno-execute-only       Allow generation of data access to code sections (ARM only)
  -mno-extern-sdata       Do not assume that externally defined data is in the small data if it meets the -G <size> threshold (MIPS)
  -mno-fix-cmse-cve-2021-35465
                          Don't work around VLLDM erratum CVE-2021-35465 (ARM only)
  -mno-fix-cortex-a53-835769
                          Don't workaround Cortex-A53 erratum 835769 (AArch64 only)
  -mno-fix-cortex-a57-aes-1742098
                          Don't work around Cortex-A57 Erratum 1742098 (ARM only)
  -mno-fix-cortex-a72-aes-1655431
                          Don't work around Cortex-A72 Erratum 1655431 (ARM only)
  -mno-fmv                Disable function multiversioning
  -mno-forced-sw-shadow-stack
                          Not force using software shadow stack when shadow-stack enabled
  -mno-gather             Disable generation of gather instructions in auto-vectorization(x86 only)
  -mno-global-merge       Disable merging of globals
  -mno-gpopt              Do not use GP relative accesses for symbols known to be in a small data section (MIPS)
  -mno-hvx-ieee-fp        Disable Hexagon HVX IEEE floating-point
  -mno-hvx-qfloat         Disable Hexagon HVX QFloat instructions
  -mno-hvx                Disable Hexagon Vector eXtensions
  -mno-implicit-float     Don't generate implicit floating point or vector instructions
  -mno-incremental-linker-compatible
                          (integrated-as) Emit an object file which cannot be used with an incremental linker
  -mno-lasx               Disable Loongson Advanced SIMD Extension (LASX).
  -mno-local-sdata        Do not extend the -G behaviour to object local data (MIPS)
  -mno-long-calls         Restore the default behaviour of not generating long calls
  -mno-lsx                Disable Loongson SIMD Extension (LSX).
  -mno-lvi-cfi            Disable control-flow mitigations for Load Value Injection (LVI)
  -mno-lvi-hardening      Disable mitigations for Load Value Injection (LVI)
  -mno-madd4              Disable the generation of 4-operand madd.s, madd.d and related instructions.
  -mno-memops             Disable generation of memop instructions
  -mno-movt               Disallow use of movt/movw pairs (ARM only)
  -mno-ms-bitfields       Do not set the default structure layout to be compatible with the Microsoft compiler standard
  -mno-msa                Disable MSA ASE (MIPS only)
  -mno-mt                 Disable MT ASE (MIPS only)
  -mno-neg-immediates     Disallow converting instructions with negative immediates to their negation or inversion.
  -mno-nvj                Disable generation of new-value jumps
  -mno-nvs                Disable generation of new-value stores
  -mno-outline-atomics    Don't generate local calls to out-of-line atomic operations
  -mno-outline            Disable function outlining (AArch64 only)
  -mno-packets            Disable generation of instruction packets
  -mno-pic-data-is-text-relative
                          Don't assume data segments are relative to text segment
  -mno-regnames           Use only register numbers when writing assembly output
  -mno-relax              Disable linker relaxation
  -mno-restrict-it        Allow generation of complex IT blocks.
  -mno-save-restore       Disable using library calls for save and restore
  -mno-scalar-strict-align
                          Allow scalar memory accesses to be unaligned (RISC-V only)
  -mno-scatter            Disable generation of scatter instructions in auto-vectorization(x86 only)
  -mno-seses              Disable speculative execution side effect suppression (SESES)
  -mno-stack-arg-probe    Disable stack probes which are enabled by default
  -mno-strict-align       Allow memory accesses to be unaligned (AArch64/LoongArch/RISC-V only)
  -mno-tgsplit            Disable threadgroup split execution mode (AMDGPU only)
  -mno-tls-direct-seg-refs
                          Disable direct TLS access through segment registers
  -mno-tocdata=<value>    Specifies a list of variables to be exempt from the TOC datatransformation.
  -mno-tocdata            This is the default. TOC data transformation is not applied to anyvariables. Only variables specified explicitly in -mtocdata= willhave the TOC data transformation.
  -mno-unaligned-access   Force all memory accesses to be aligned (AArch32/MIPSr6 only)
  -mno-unaligned-symbols  Expect external char-aligned symbols to be without ABI alignment (SystemZ only)
  -mno-vector-strict-align
                          Allow vector memory accesses to be unaligned (RISC-V only)
  -mno-wavefrontsize64    Specify wavefront size 32 mode (AMDGPU only)
  -mnocrc                 Disallow use of CRC instructions (ARM only)
  -mnop-mcount            Generate mcount/__fentry__ calls as nops. To activate they need to be patched in.
  -mnvj                   Enable generation of new-value jumps
  -mnvs                   Enable generation of new-value stores
  -module-dependency-dir <value>
                          Directory to dump module dependencies to
  -module-file-info       Provide information about a particular module file
  -momit-leaf-frame-pointer
                          Omit frame pointer setup for leaf functions
  -moutline-atomics       Generate local calls to out-of-line atomic operations
  -moutline               Enable function outlining (AArch64 only)
  -mpacked-stack          Use packed stack layout (SystemZ only).
  -mpackets               Enable generation of instruction packets
  -mpad-max-prefix-size=<value>
                          Specify maximum number of prefixes to use for padding
  -mpic-data-is-text-relative
                          Assume data segments are relative to text segment
  -mprefer-vector-width=<value>
                          Specifies preferred vector width for auto-vectorization. Defaults to 'none' which allows target specific decisions.
  -mprintf-kind=<value>   Specify the printf lowering scheme (AMDGPU only), allowed values are "hostcall"(printing happens during kernel execution, this scheme relies on hostcalls which require system to support pcie atomics) and "buffered"(printing happens after all kernel threads exit, this uses a printf buffer and does not rely on pcie atomic support)
  -MP                     Create phony target for each dependency (other than main file)
  -mqdsp6-compat          Enable hexagon-qdsp6 backward compatibility
  -MQ <value>             Specify name of main file output to quote in depfile
  -mrecip=<value>         Control use of approximate reciprocal and reciprocal square root instructions followed by <n> iterations of Newton-Raphson refinement. <value> = ( ['!'] ['vec-'] ('rcp'|'sqrt') [('h'|'s'|'d')] [':'<n>] ) | 'all' | 'default' | 'none'
  -mrecip                 Equivalent to '-mrecip=all'
  -mrecord-mcount         Generate a __mcount_loc section entry for each __fentry__ call.
  -mregnames              Use full register names when writing assembly output
  -mrelax-all             (integrated-as) Relax all machine instructions
  -mrelax                 Enable linker relaxation
  -mrestrict-it           Disallow generation of complex IT blocks. It is off by default.
  -mrtd                   Make StdCall calling convention the default
  -mrvv-vector-bits=<value>
                          Specify the size in bits of an RVV vector register
  -msave-restore          Enable using library calls for save and restore
  -mscalar-strict-align   Force all scalar memory accesses to be aligned (RISC-V only)
  -mseses                 Enable speculative execution side effect suppression (SESES). Includes LVI control flow integrity mitigations
  -msign-return-address=<value>
                          Select return address signing scope
  -msimd=<value>          Select the SIMD extension(s) to be enabled in LoongArch either 'none', 'lsx', 'lasx'.
  -mskip-rax-setup        Skip setting up RAX register when passing variable arguments (x86 only)
  -msmall-data-limit=<value>
                          Put global and static data smaller than the limit into a special section
  -msoft-float            Use software floating point
  -msse2avx               Specify that the assembler should encode SSE instructions with VEX prefix
  -mstack-alignment=<value>
                          Set the stack alignment
  -mstack-arg-probe       Enable stack probes
  -mstack-probe-size=<value>
                          Set the stack probe size
  -mstack-protector-guard-offset=<value>
                          Use the given offset for addressing the stack-protector guard
  -mstack-protector-guard-reg=<value>
                          Use the given reg for addressing the stack-protector guard
  -mstack-protector-guard-symbol=<value>
                          Use the given symbol for addressing the stack-protector guard
  -mstack-protector-guard=<value>
                          Use the given guard (global, tls) for addressing the stack-protector guard
  -mstackrealignext       Force realign the stack at entry to every external function
  -mstackrealign          Force realign the stack at entry to every function
  -mstrict-align          Force all memory accesses to be aligned (AArch64/LoongArch/RISC-V only)
  -msve-vector-bits=<value>
                          Specify the size in bits of an SVE vector register. Defaults to the vector length agnostic value of "scalable". (AArch64 only)
  -msvr4-struct-return    Return small structs in registers (PPC32 only)
  -mtargetos=<value>      Set the deployment target to be the specified OS and OS version
  -mtgsplit               Enable threadgroup split execution mode (AMDGPU only)
  -mthread-model <value>  The thread model to use. Defaults to 'posix')
  -mtls-dialect=<value>   Which thread-local storage dialect to use for dynamic accesses of TLS variables
  -mtls-direct-seg-refs   Enable direct TLS access through segment registers (default)
  -mtls-size=<value>      Specify bit size of immediate TLS offsets (AArch64 ELF only): 12 (for 4KB) | 24 (for 16MB, default) | 32 (for 4GB) | 48 (for 256TB, needs -mcmodel=large)
  -mtocdata=<value>       Specifies a list of variables to which the TOC data transformationwill be applied.
  -mtocdata               All suitable variables will have the TOC data transformation applied
  -mtp=<value>            Thread pointer access method. For AArch32: 'soft' uses a function call, or 'tpidrurw', 'tpidruro' or 'tpidrprw' use the three CP15 registers. 'cp15' is an alias for 'tpidruro'. For AArch64: 'tpidr_el0', 'tpidr_el1', 'tpidr_el2', 'tpidr_el3' or 'tpidrro_el0' use the five system registers. 'elN' is an alias for 'tpidr_elN'.
  -mtune=<value>          Only supported on AArch64, PowerPC, RISC-V, SPARC, SystemZ, and X86
  -MT <value>             Specify name of main file output in depfile
  -munaligned-access      Allow memory accesses to be unaligned (AArch32/MIPSr6 only)
  -munaligned-symbols     Expect external char-aligned symbols to be without ABI alignment (SystemZ only)
  -munsafe-fp-atomics     Enable generation of unsafe floating point atomic instructions. May generate more efficient code, but may not respect rounding and denormal modes, and may give incorrect results for certain memory destinations. (AMDGPU only)
  -mvector-strict-align   Force all vector memory accesses to be aligned (RISC-V only)
  -mvevpu                 Emit VPU instructions for VE
  -MV                     Use NMake/Jom format for the depfile
  -mwavefrontsize64       Specify wavefront size 64 mode (AMDGPU only)
  -mxcoff-build-id=<0xHEXSTRING>
                          On AIX, request creation of a build-id string, "0xHEXSTRING", in the string table of the loader section inside the linked binary
  -mxcoff-roptr           Place constant objects with relocatable address values in the RO data section and add -bforceimprw to the linker flags (AIX only)
  -mzos-hlq-clang=<ClangHLQ>
                          High level qualifier for z/OS C++RT side deck datasets
  -mzos-hlq-csslib=<CsslibHLQ>
                          High level qualifier for z/OS CSSLIB dataset
  -mzos-hlq-le=<LeHLQ>    High level qualifier for z/OS Language Environment datasets
  -mzos-sys-include=<SysInclude>
                          Path to system headers on z/OS
  -M                      Like -MD, but also implies -E and writes to stdout by default
  -no-ansi-alias          disable use of ANSI aliasing rules optimizations
  --no-cuda-include-ptx=<value>
                          Do not include PTX for the following GPU architecture (e.g. sm_35) or 'all'. May be specified more than once.
  --no-cuda-version-check Don't error out if the detected version of the CUDA install is too low for the requested CUDA gpu architecture.
  --no-default-config     Disable loading default configuration files
  -no-fma                 Disable the combining of floating point multiples and add/subtract operations.
  -no-ftz                 Disable flush denormal results to zero
  -no-global-hoist        Disable external globals are load safe
  --no-gpu-bundle-output  Do not bundle output files of HIP device compilation
  -no-hip-rt              Do not link against HIP runtime libraries
  -no-intel-lib=<value>   Restrict linking of Intel specific libraries. Valid arguments are libirc, libimf, libirng, libsvml
  -no-intel-lib           Restrict linking of all Intel specific libraries.
  -no-ipo                 Disable LTO mode (default)
  --no-offload-arch=<value>
                          Remove CUDA/HIP offloading device architecture (e.g. sm_35, gfx906) from the list of devices to compile for. 'all' resets the list to its default value.
  --no-offload-new-driver Don't Use the new driver for offloading compilation.
  -no-parallel-source-info
                          Disable emission of source location information for parallel code generation.
  -no-sox                 Disable saving of compiler options in the executable
  --no-system-header-prefix=<prefix>
                          Treat all #include paths starting with <prefix> as not including a system header.
  -no-vec                 Disable the loop vectorization passes
  --no-wasm-opt           Disable the wasm-opt optimizer
  -nobuiltininc           Disable builtin #include directories
  -nogpuinc               Do not add include paths for CUDA/HIP and do not include the default CUDA/HIP wrapper headers
  -nogpulib               Do not link device library for CUDA/HIP device compilation
  -nohipwrapperinc        Do not include the default HIP wrapper headers and include paths
  -nolib-inline           disable inline expansion of intrinsic functions
  -nolibsycl              Do not link SYCL runtime library
  -nostdinc++             Disable standard #include directories for the C++ standard library
  --nvptx-arch-tool=<value>
                          Tool used for detecting NVIDIA GPU arch in the system.
  -ObjC++                 Treat source input files as Objective-C++ inputs
  -objcmt-allowlist-dir-path=<value>
                          Only modify files with a filename contained in the provided directory path
  -objcmt-atomic-property Make migration to 'atomic' properties
  -objcmt-migrate-all     Enable migration to modern ObjC
  -objcmt-migrate-annotation
                          Enable migration to property and method annotations
  -objcmt-migrate-designated-init
                          Enable migration to infer NS_DESIGNATED_INITIALIZER for initializer methods
  -objcmt-migrate-instancetype
                          Enable migration to infer instancetype for method result type
  -objcmt-migrate-literals
                          Enable migration to modern ObjC literals
  -objcmt-migrate-ns-macros
                          Enable migration to NS_ENUM/NS_OPTIONS macros
  -objcmt-migrate-property-dot-syntax
                          Enable migration of setter/getter messages to property-dot syntax
  -objcmt-migrate-property
                          Enable migration to modern ObjC property
  -objcmt-migrate-protocol-conformance
                          Enable migration to add protocol conformance on classes
  -objcmt-migrate-readonly-property
                          Enable migration to modern ObjC readonly property
  -objcmt-migrate-readwrite-property
                          Enable migration to modern ObjC readwrite property
  -objcmt-migrate-subscripting
                          Enable migration to modern ObjC subscripting
  -objcmt-ns-nonatomic-iosonly
                          Enable migration to use NS_NONATOMIC_IOSONLY macro for setting property's 'atomic' attribute
  -objcmt-returns-innerpointer-property
                          Enable migration to annotate property with NS_RETURNS_INNER_POINTER
  -objcmt-whitelist-dir-path=<value>
                          Alias for -objcmt-allowlist-dir-path
  -ObjC                   Treat source input files as Objective-C inputs
  -object-file-name=<file>
                          Set the output <file> for debug infos
  --offload-arch=<value>  Specify an offloading device architecture for CUDA, HIP, or OpenMP. (e.g. sm_35). If 'native' is used the compiler will detect locally installed architectures. For HIP offloading, the device architecture can be followed by target ID features delimited by a colon (e.g. gfx908:xnack+:sramecc-). May be specified more than once.
  --offload-compress      Compress offload device binaries (HIP only)
  --offload-device-only   Only compile for the offloading device.
  --offload-host-device   Compile for both the offloading host and device (default).
  --offload-host-only     Only compile for the offloading host.
  --offload-link          Use the new offloading linker to perform the link job.
  --offload-new-driver    Use the new driver for offloading compilation.
  --offload=<value>       Specify comma-separated list of offloading target triples (CUDA and HIP only)
  -o <file>               Write output to <file>
  -parallel-source-info=<value>
                          Emit source location information for parallel code generation with OpenMP and auto-parallelization.
  -pch-use <file>         Include precompiled header file
  -pc <value>             Initialize X87 floating point precision to single, double or double extended. Valid values of 32, 64 and 80
  -pedantic               Warn on language extensions
  -pg                     Enable mcount instrumentation
  -pipe                   Use pipes between commands, when possible
  --precompile            Only precompile the input
  --pretty-sgf            Emit pretty printed symbol graphs
  -print-diagnostic-options
                          Print all of Clang's warning options
  -print-effective-triple Print the effective target triple
  -print-enabled-extensions
                          Print the extensions enabled by the given target and -march/-mcpu options. (AArch64 and RISC-V only)
  -print-file-name=<file> Print the full library path of <file>
  -print-ivar-layout      Enable Objective-C Ivar layout bitmap print trace
  -print-libgcc-file-name Print the library path for the currently used compiler runtime library ("libgcc.a" or "libclang_rt.builtins.*.a")
  -print-library-module-manifest-path
                          Print the path for the C++ Standard library module manifest
  -print-multi-flags-experimental
                          Print the flags used for selecting multilibs (experimental)
  -print-prog-name=<name> Print the full program path of <name>
  -print-resource-dir     Print the resource directory pathname
  -print-rocm-search-dirs Print the paths used for finding ROCm installation
  -print-runtime-dir      Print the directory pathname containing Clang's runtime libraries
  -print-search-dirs      Print the paths used for finding libraries and programs
  -print-supported-cpus   Print supported cpu models for the given target (if target is not specified, it will print the supported cpus for the default target)
  -print-supported-extensions
                          Print supported -march extensions (RISC-V, AArch64 and ARM only)
  -print-target-triple    Print the normalized target triple
  -print-targets          Print the registered targets
  -pthread                Support POSIX threads in generated code
  --ptxas-path=<value>    Path to ptxas (used for compiling CUDA code)
  -P                      Disable linemarker output in -E mode
  -p                      Enable mcount instrumentation with prof
  -qactypes               Enable compile and link support for the Algorithmic C Data-types (AC types)
  -qdaal=<value>          Link Intel(R) Data Analytics Acceleration Library (Intel(R) DAAL) libraries and bring in the associated headers (parallel)
  -qipp-link=<value>      Link Intel(R) IPP libraries in requested manner (static,dynamic,shared)
  -qipp=<value>           Link commonly used Intel(R) Integrated Performace Primitives (Intel(R) IPP) libraries and bring in the associated headers (common,crypto,nonpic,nonpic_crypto)
  -qmkl-ilp64=<value>     Link commonly used Intel(R) Math Kernel ILP64 Variant Library (Intel(R) MKL) and bring in the associated headers (parallel,sequential,cluster)("cluster" is not supported in DPC++)
  -qmkl-sycl-impl=<value> Limit linking of SYCL-specific implementations of the Intel(R) Math Kernel Library to specified in argument. Valid arguments: blas, lapack, dft, sparse, rng, stats, vm.
  -qmkl=<value>           Link commonly used Intel(R) Math Kernel Library (Intel(R) MKL) and bring in the associated headers (parallel,sequential,cluster)("cluster" is not supported in DPC++)
  -qno-actypes            Disable the compile and link support for the Algorithmic C Data-types (AC types)
  -qno-openmp             Disable OpenMP support
  -qno-opt-dynamic-align  Disable peeling to optimize alignment for vectorization.
  -qno-opt-jump-tables    Do not use jump tables for lowering switches
  -qno-opt-matmul         Disables compiler-generated Matrix Multiply (matmul) library call
  -qno-opt-mem-layout-trans
                          Disable memory layout transformations
  -qno-opt-multiple-gather-scatter-by-shuffles
                          Disables the optimization for multiple adjacent gather/scatter type vector memory references
  -qno-opt-prefetch       Disable prefetching.
  -Qn                     Do not emit metadata containing compiler name and version
  -qopenmp-link=<value>   Choose whether to link with the static or dynamic OpenMP libraries. Default is dynamic.
  -qopenmp-simd           Emit OpenMP code only for SIMD-based constructs.
  -qopenmp-stubs          enables the user to compile OpenMP programs in sequential mode. The OpenMP directives are ignored and a stub OpenMP library is linked.
  -qopenmp-threadprivate=<value>
                          Choose which threadprivate implementation to use: compat or legacy.
  -qopenmp                Parse OpenMP pragmas and generate parallel code.
  -qopt-assume-no-loop-carried-dep=<value>
                          Set a level of performance tuning for loops.  0 - The compiler does not assume there is loop-carried dependencies (default).  1 - Assume there are no loop-carried dependencies for innermost loops.  2 - Assume there are no loop-carried dependencies for all loop levels.
  -qopt-dword-index-for-array-of-structs=<value>
                          When specified allows the compiler to use dword indexes to access elements of arrays of structs which in size do not exceed val bytes. The arrays in question should contain no more than INT_MAX / sizeof(element) elements. Allowed values for val are: 16, 32, default is 16.
  -qopt-dynamic-align     Enable peeling to optimize alignment for vectorization.
  -qopt-for-throughput=<value>
                          Optimize for throughput performance, assuming multiple jobs are running.  The memory optimizations for single job versus multiple jobs can be tuned in different ways by the compiler. Valid arguments: multi-job, single-job
  -qopt-jump-tables       Control the generation of jump tables
  -qopt-matmul            Enables compiler-generated Matrix Multiply (matmul) library call
  -qopt-mem-layout-trans=<value>
                          Control the level of memory layout transformations performed by the compiler
  -qopt-multiple-gather-scatter-by-shuffles
                          Enables the optimization for multiple adjacent gather/scatter type vector memory references
  -qopt-prefetch-distance=<value>
                          Specify the prefetch distance to be used for compiler generated prefetches inside loops. Value indicates distance from memory to L2 cache.
  -qopt-prefetch-loads-only
                          Only insert prefetches based on the loads inside the loop. Stores are ignored.
  -qopt-prefetch=<value>  Enable levels of prefetch insertion, where 0 disables.  Values of 1 - 5 are available.  Default is 2.
  -qopt-prefetch          Enable prefetch insertion.  Same as -qopt-prefetch=2.
  -qopt-report-file=<value>
                          Specify the filename or output stream (stdout, stderr) for the generated optimization report
  -qopt-report-names=<value>
                          Specifies whether mangled or unmangled names should appear in the optimization report.
  -qopt-report-phase=<value>
                          Specify one or more phases for which optimization reports are generated
  -qopt-report-stdout     Specify the generated optimization report should be directed to stdout
  -qopt-report=<value>    Generate an optimization report, min, med or max.
  -qopt-streaming-stores=<value>
                          Specifies whether streaming stores are generated.
  -qopt-zmm-usage=<value> Specifies the level of zmm registers usage, low or high
  -Qoption,<arg>           Qoption,<tool>,<args> to pass the comma separated arguments to the <tool>; <tool> can be asm for assembler (or) link/ld for linker (or) preprocessor for preprocessor (or) compiler for compiler
  -qoverride-limits       enables the user to skip throttling of loops in framework and DD.
  -qtbb                   Link Intel(R) Threading Building Blocks (Intel(R) TBB) libraries and bring in the associated headers
  -Qunused-arguments      Don't emit warning for unused driver arguments
  -Qy                     Emit metadata containing compiler name and version
  -regcall4               Set __regcall4 as a default calling convention to respect __regcall ABI v.4
  -regcall                Set __regcall as a default calling convention
  -relocatable-pch        Whether to build a relocatable precompiled header
  -reuse-exe=<exe>        Speed up FPGA aoc compile if the device code in <exe> is unchanged.
  -rewrite-legacy-objc    Rewrite Legacy Objective-C source to C++
  -rewrite-objc           Rewrite Objective-C source to C++
  --rocm-device-lib-path=<value>
                          ROCm device library path. Alternative to rocm-path.
  --rocm-path=<value>     ROCm installation path, used for finding and automatically linking required bitcode libraries.
  -Rpass-analysis=<value> Report transformation analysis from optimization passes whose name matches the given POSIX regular expression
  -Rpass-missed=<value>   Report missed transformations by optimization passes whose name matches the given POSIX regular expression
  -Rpass=<value>          Report transformations performed by optimization passes whose name matches the given POSIX regular expression
  -rtlib=<value>          Compiler runtime library to use
  -R<remark>              Enable the specified remark
  -save-stats=<value>     Save llvm statistics.
  -save-stats             Save llvm statistics.
  -save-temps=<value>     Save intermediate compilation results. <arg> can be set to 'cwd' for current working directory, or 'obj' which will save temporary files in the same directory as the final output file
  -save-temps             Alias for --save-temps=cwd
  -serialize-diagnostics <value>
                          Serialize compiler diagnostics to a file
  -shared-intel           link Intel provided libraries dynamically
  -shared-libsan          Dynamically link the sanitizer runtime
  -sox=<value>            Enable saving of compiler options, version and additional information in the executable.  Use -no-sox to disable (DEFAULT). Valid arguments: profile - Includes data when profile was used for functions that were compiled with PGO enabling options such as -fprofile-use and -fprofile-instr-use, inline - Includes a list of the functions that were inlined in each object, secure - Strip out directory names and options that use them.
  -sox                    Enable saving of compiler options in the executable
  --start-no-unused-arguments
                          Don't emit warnings about unused arguments for the following arguments
  -static-intel           link Intel provided libraries statically
  -static-libsan          Statically link the sanitizer runtime (Not supported for ASan, TSan or UBSan on darwin)
  -static-openmp          Use the static host OpenMP runtime while linking.
  -std=<value>            Language standard to compile for
  -stdlib++-isystem <directory>
                          Use directory as the C++ standard library include path
  -stdlib=<value>         C++ standard library to use
  -strict-ansi            strict ANSI conformance dialect
  -sycl-std=<value>       SYCL language standard to compile for.
  --symbol-graph-dir=<value>
                          Directory in which to emit symbol graphs.
  --system-header-prefix=<prefix>
                          Treat all #include paths starting with <prefix> as including a system header.
  -S                      Only run preprocess and compilation steps
  --target=<value>        Generate code for the given target
  -tbb                    Link Intel(R) Threading Building Blocks (Intel(R) TBB) libraries and bring in the associated headers
  -time                   Time individual commands
  -traceback              Generate traceback debug information
  -traditional-cpp        Enable some traditional CPP emulation
  -trigraphs              Process trigraph sequences
  -T <script>             Specify <script> as linker script
  -undef                  undef all system defines
  -unroll<value>          Set maximum number of times to unroll loops.  Omit n to use default heuristics.  Use 0 to disable the loop unroller.
  -unwindlib=<value>      Unwind library to use
  -use-msasm              enables the use of blocks and entire functions of assembly code within a C or C++ file
  -U <macro>              Undefine macro <macro>
  -vec-threshold<value>   Sets a threshold for the vectorization of loops based on the probability of profitable execution of the vectorized loop in parallel.
  -vecabi=<value>         Determines which vector function ABI the compiler uses to create or call vector functions. The 'gcc' (default) argument enforces compatibility with gcc. The 'cmdtarget' argument uses an extended set of vector functions.
  -vec                    Enable the loop vectorization passes
  --verify-debug-info     Verify the binary representation of debug output
  -verify-pch             Load and verify that a pre-compiled header file is not stale
  --version               Print version information
  -vfsoverlay <value>     Overlay the virtual filesystem described by file over the real file system. Additionally, pass this overlay file to the linker if it supports it
  -v                      Show commands to run and use verbose output
  -Wa,<arg>               Pass the comma separated arguments in <arg> to the assembler
  --wasm-opt              Enable the wasm-opt optimizer (default)
  -Wcheck-unicode-security
                          Enable detection and warn about Unicode constructs that can be exploited by using bi-directional formatting codes, zero-width characters in strings and use of zero-width characters and homoglyphs in identifiers. Done by using clang-tidy
  -Wdeprecated            Enable warnings for deprecated constructs and define __DEPRECATED
  -Winvalid-constexpr     Enable checking of constexpr function bodies for validity within a constant expression context
  -Wl,<arg>               Pass the comma separated arguments in <arg> to the linker
  -Wno-invalid-constexpr  Disable checking of constexpr function bodies for validity within a constant expression context
  -Wno-sycl-strict        Disable warnings which enforce strict SYCL language compatibility.
  -working-directory <value>
                          Resolve file paths relative to the specified directory
  -Wp,<arg>               Pass the comma separated arguments in <arg> to the preprocessor
  -W<warning>             Enable the specified warning
  -w                      Suppress all warnings
  -Xanalyzer <arg>        Pass <arg> to the static analyzer
  -Xarch_device <arg>     Pass <arg> to the CUDA/HIP device compilation
  -Xarch_host <arg>       Pass <arg> to the CUDA/HIP host compilation
  -Xassembler <arg>       Pass <arg> to the assembler
  -Xclang=<arg>           Alias for -Xclang
  -Xclang <arg>           Pass <arg> to clang -cc1
  -Xcuda-fatbinary <arg>  Pass <arg> to fatbinary invocation
  -Xcuda-ptxas <arg>      Pass <arg> to the ptxas assembler
  -Xlinker <arg>          Pass <arg> to the linker
  -Xoffload-linker<triple> <arg>
                          Pass <arg> to the offload linkers or the ones idenfied by -<triple>
  -Xopenmp-target-backend=<triple> <arg>
                          Pass <arg> to the OpenMP based backend identified by <triple>. Depending on the triple (spir64, spir64_gen, spir64_x86_64), the arg passed will be interpreted by the corresponding AOT tool or runtime consumer.
  -Xopenmp-target-backend <arg>
                          Pass <arg> to the OpenMP based target backend.
  -Xopenmp-target-frontend=<value>
                          Pass <arg> to the OpenMP based target frontend identified by <triple>.
  -Xopenmp-target-frontend <value>
                          Pass <arg> to the OpenMP based target frontend.
  -Xopenmp-target-linker=<triple> <arg>
                          Pass <arg> to the SYCL based target linker identified by <triple>.
  -Xopenmp-target-linker <arg>
                          Pass <arg> to the SYCL based target linker.
  -Xopenmp-target=<triple> <arg>
                          Pass <arg> to the target offloading toolchain identified by <triple>.
  -Xopenmp-target <arg>   Pass <arg> to the target offloading toolchain.
  -Xpreprocessor <arg>    Pass <arg> to the preprocessor
  -Xsycl-target-backend=<triple> <arg>
                          Pass <arg> to the SYCL based backend identified by <triple>. Depending on the triple (spir64, spir64_gen, spir64_x86_64, spir64_fpga), the arg passed will be interpreted by the corresponding AOT tool or runtime consumer.
  -Xsycl-target-backend <arg>
                          Pass <arg> to the SYCL based target backend.
  -Xsycl-target-frontend=<triple> <arg>
                          Pass <arg> to the SYCL based target frontend identified by <triple>.
  -Xsycl-target-frontend <arg>
                          Pass <arg> to the SYCL based target frontend.
  -Xsycl-target-linker=<triple> <arg>
                          Pass <arg> to the SYCL based target linker identified by <triple>.
  -Xsycl-target-linker <arg>
                          Pass <arg> to the SYCL based target linker.
  -Xs <arg>               Pass <arg> to the offline compiler.
  -Xs<arg>                Pass <arg> to the offline compiler, adding the option specifier '-' to the <arg>.
  -x <language>           Treat subsequent input files as having type <language>
  -x<code>                Generate specialized code to run exclusively on processors indicated by <code>.
  -z <arg>                Pass -z <arg> to the linker
dxc compatibility options.:
  --dxv-path=<value>  DXIL validator installation path
  -fspv-target-env=<value>
                      Specify the target environment
  -hlsl-entry <value> Entry point name for hlsl
Executing: mpiicpc -cxx=icpx --version
stdout:
Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)
Target: x86_64-unknown-linux-gnu
Thread model: posix
InstalledDir: /opt/intel/oneapi/compiler/2025.0/bin/compiler
Configuration file: /opt/intel/oneapi/compiler/2025.0/bin/compiler/../icpx.cfg
          Trying Cxx compiler flag -Wall
Executing: mpiicpc -cxx=icpx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers  -Wall   -std=gnu++20 -fPIC  /tmp/petsc-m5p55c3k/config.setCompilers/conftest.cc 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

              Output from compiling with  -Wall 

Added Cxx compiler flag -Wall
          Trying Cxx compiler flag -Wwrite-strings
Executing: mpiicpc -cxx=icpx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers  -Wall -Wwrite-strings   -std=gnu++20 -fPIC  /tmp/petsc-m5p55c3k/config.setCompilers/conftest.cc 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

              Output from compiling with  -Wall -Wwrite-strings 

Added Cxx compiler flag -Wwrite-strings
          Trying Cxx compiler flag -Wno-strict-aliasing
Executing: mpiicpc -cxx=icpx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers  -Wall -Wwrite-strings -Wno-strict-aliasing   -std=gnu++20 -fPIC  /tmp/petsc-m5p55c3k/config.setCompilers/conftest.cc 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

              Output from compiling with  -Wall -Wwrite-strings -Wno-strict-aliasing 

Added Cxx compiler flag -Wno-strict-aliasing
          Trying Cxx compiler flag -Wno-unknown-pragmas
Executing: mpiicpc -cxx=icpx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers  -Wall -Wwrite-strings -Wno-strict-aliasing -Wno-unknown-pragmas   -std=gnu++20 -fPIC  /tmp/petsc-m5p55c3k/config.setCompilers/conftest.cc 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

              Output from compiling with  -Wall -Wwrite-strings -Wno-strict-aliasing -Wno-unknown-pragmas 

Added Cxx compiler flag -Wno-unknown-pragmas
          Trying Cxx compiler flag -Wno-lto-type-mismatch
Executing: mpiicpc -cxx=icpx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers  -Wall -Wwrite-strings -Wno-strict-aliasing -Wno-unknown-pragmas -Wno-lto-type-mismatch   -std=gnu++20 -fPIC  /tmp/petsc-m5p55c3k/config.setCompilers/conftest.cc 
stdout:
warning: unknown warning option '-Wno-lto-type-mismatch'; did you mean '-Wno-selector-type-mismatch'? [-Wunknown-warning-option]
1 warning generated.
Possible ERROR while running compiler:exit code 0
stderr:
warning: unknown warning option '-Wno-lto-type-mismatch'; did you mean '-Wno-selector-type-mismatch'? [-Wunknown-warning-option]
1 warning generated.
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

              Output from compiling with  -Wall -Wwrite-strings -Wno-strict-aliasing -Wno-unknown-pragmas -Wno-lto-type-mismatch 
warning: unknown warning option '-Wno-lto-type-mismatch'; did you mean '-Wno-selector-type-mismatch'? [-Wunknown-warning-option]
1 warning generated.
              Rejecting compiler flag -Wno-lto-type-mismatch  due to 
warning: unknown warning option '-Wno-lto-type-mismatch'; did you mean '-Wno-selector-type-mismatch'? [-Wunknown-warning-option]
1 warning generated.
          Rejected Cxx compiler flag -Wno-lto-type-mismatch
          Trying Cxx compiler flag -fstack-protector
Executing: mpiicpc -cxx=icpx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers  -Wall -Wwrite-strings -Wno-strict-aliasing -Wno-unknown-pragmas -fstack-protector   -std=gnu++20 -fPIC  /tmp/petsc-m5p55c3k/config.setCompilers/conftest.cc 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

              Output from compiling with  -Wall -Wwrite-strings -Wno-strict-aliasing -Wno-unknown-pragmas -fstack-protector 

Added Cxx compiler flag -fstack-protector
          Trying Cxx compiler flag -fvisibility=hidden
Executing: mpiicpc -cxx=icpx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers  -Wall -Wwrite-strings -Wno-strict-aliasing -Wno-unknown-pragmas -fstack-protector -fvisibility=hidden   -std=gnu++20 -fPIC  /tmp/petsc-m5p55c3k/config.setCompilers/conftest.cc 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

              Output from compiling with  -Wall -Wwrite-strings -Wno-strict-aliasing -Wno-unknown-pragmas -fstack-protector -fvisibility=hidden 

Added Cxx compiler flag -fvisibility=hidden
          Trying Cxx compiler flag -O2 -march=native -mtune=native
Executing: mpiicpc -cxx=icpx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers  -Wall -Wwrite-strings -Wno-strict-aliasing -Wno-unknown-pragmas -fstack-protector -fvisibility=hidden -O2 -march=native -mtune=native   -std=gnu++20 -fPIC  /tmp/petsc-m5p55c3k/config.setCompilers/conftest.cc 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

              Output from compiling with  -Wall -Wwrite-strings -Wno-strict-aliasing -Wno-unknown-pragmas -fstack-protector -fvisibility=hidden -O2 -march=native -mtune=native 

Added Cxx compiler flag -O2 -march=native -mtune=native
Executing: mpiifort -fc=ifx --version
stdout:
ifx (IFX) 2025.0.0 20241008
Copyright (C) 1985-2024 Intel Corporation. All rights reserved.
getCompilerVersion: mpiifort -fc=ifx ifx (IFX) 2025.0.0 20241008
              Defined make macro "FC_VERSION" to "ifx (IFX) 2025.0.0 20241008"
Executing: mpiifort -fc=ifx -show
stdout: ifx -I"/opt/intel/oneapi/mpi/2021.14/include/mpi" -I"/opt/intel/oneapi/mpi/2021.14/include" -I"/opt/intel/oneapi/mpi/2021.14/include/mpi" -L"/opt/intel/oneapi/mpi/2021.14/lib" -L"/opt/intel/oneapi/mpi/2021.14/lib" -Xlinker --enable-new-dtags -Xlinker -rpath -Xlinker "/opt/intel/oneapi/mpi/2021.14/lib" -Xlinker -rpath -Xlinker "/opt/intel/oneapi/mpi/2021.14/lib" -lmpifort -lmpi -ldl -lrt -lpthread
                Defined make macro "MPIFC_SHOW" to "ifx -I"/opt/intel/oneapi/mpi/2021.14/include/mpi" -I"/opt/intel/oneapi/mpi/2021.14/include" -I"/opt/intel/oneapi/mpi/2021.14/include/mpi" -L"/opt/intel/oneapi/mpi/2021.14/lib" -L"/opt/intel/oneapi/mpi/2021.14/lib" -Xlinker --enable-new-dtags -Xlinker -rpath -Xlinker "/opt/intel/oneapi/mpi/2021.14/lib" -Xlinker -rpath -Xlinker "/opt/intel/oneapi/mpi/2021.14/lib" -lmpifort -lmpi -ldl -lrt -lpthread"
Executing: mpiifort -fc=ifx --help | head -n 20 
stdout:
Intel(R) Fortran Compiler Help
                         ==============================
  Intel(R) Compiler includes compiler options that optimize for instruction
  sets that are available in both Intel(R) and non-Intel microprocessors, but
  may perform additional optimizations for Intel microprocessors than for
  non-Intel microprocessors. In addition, certain compiler options for
  Intel(R) Compiler are reserved for Intel microprocessors.
  For a detailed description of these compiler options, including the
  instructions they implicate, please refer to "Intel(R) Fortran Compiler
  Classic and Intel(R) Fortran Compiler Developer Guide and Reference >
  Compiler Reference > Compiler Options."
  usage: ifx [options] file1 [file2 ...]
     where options represents zero or more compiler options
     fileN is a Fortran source (.f .for .ftn .f90 .fpp .F .FOR .F90 .i .i90),
     assembly (.s .S), object (.o), static library (.a), or other
     linkable file
     Commonly used options may be placed in the ifx.cfg file.
   Some options listed are only available on a specific system
   i32 indicates the feature is available on systems based on IA-32
          architecture
Executing: mpiifort -fc=ifx --help
stdout:
Intel(R) Fortran Compiler Help
                         ==============================
  Intel(R) Compiler includes compiler options that optimize for instruction
  sets that are available in both Intel(R) and non-Intel microprocessors, but
  may perform additional optimizations for Intel microprocessors than for
  non-Intel microprocessors. In addition, certain compiler options for
  Intel(R) Compiler are reserved for Intel microprocessors.
  For a detailed description of these compiler options, including the
  instructions they implicate, please refer to "Intel(R) Fortran Compiler
  Classic and Intel(R) Fortran Compiler Developer Guide and Reference >
  Compiler Reference > Compiler Options."
  usage: ifx [options] file1 [file2 ...]
     where options represents zero or more compiler options
     fileN is a Fortran source (.f .for .ftn .f90 .fpp .F .FOR .F90 .i .i90),
     assembly (.s .S), object (.o), static library (.a), or other
     linkable file
     Commonly used options may be placed in the ifx.cfg file.
   Some options listed are only available on a specific system
   i32 indicates the feature is available on systems based on IA-32
          architecture
   i64em indicates the feature is available on systems using Intel(R) 64
          architecture
   (*0) indicates non-customer options (stripped from production build)
                             Compiler Option List
                             --------------------
Optimization
------------
-O1       optimize for maximum speed, but disable some optimizations which
          increase code size for a small speed benefit
-O2       optimize for maximum speed (DEFAULT)
-O3       optimize for maximum speed and enable more aggressive optimizations
          that may not improve performance on some programs
-O        same as -O2
-Os       enable speed optimizations, but disable some optimizations which
          increase code size for small speed benefit 
-O0       disable optimizations
-Ofast    enable -O3 -no-prec-div -fp-model fast=2 optimizations
-fno-alias
          assume no aliasing in program
-nolib-inline
          disable inline expansion of intrinsic functions
-f[no-]optimize-sibling-calls
          Optimize sibling and tail recursive calls.
          Enabled at levels -O2, -O3, -Os.
Code Generation
---------------
-m64      generate code for Intel(R) 64 architecture
-x<code>  generate specialized code to run exclusively on processors
          indicated by <code> as described below
            SSE3 May generate Intel(R) SSE3, SSE2, and SSE instructions for
                    Intel processors. Optimizes for the enhanced Pentium(R) M
                    processor microarchitecture and Intel NetBurst(R)
                    microarchitecture.
            SSSE3 May generate Intel(R) SSSE3, SSE3, SSE2, and SSE
                    instructions for Intel processors. Optimizes for the
                    Intel(R) Core(TM) microarchitecture.
            SSE4.1 May generate Intel(R) SSE4 Vectorizing Compiler and Media
                    Accelerator instructions for Intel processors. May
                    generate Intel(R) SSSE3, SSE3, SSE2, and SSE instructions
                    and it may optimize for Intel(R) 45nm Hi-k next generation
                    Intel Core(TM) microarchitecture.
            SSE4.2 May generate Intel(R) SSE4 Efficient Accelerated String
                    and Text Processing instructions supported by Intel(R)
                    Core(TM) i7 processors. May generate Intel(R) SSE4
                    Vectorizing Compiler and Media Accelerator, Intel(R) SSSE3,
                    SSE3, SSE2, and SSE instructions and it may optimize for
                    the Intel(R) Core(TM) processor family.
            AVX May generate Intel(R) Advanced Vector Extensions (Intel(R)
                    AVX), Intel(R) SSE4.2, SSE4.1, SSSE3, SSE3,
                    SSE2, and SSE instructions for Intel(R) processors.
            CORE-AVX2
                    May generate Intel(R) Advanced Vector Extensions 2
                    (Intel(R) AVX2), Intel(R) AVX, SSE4.2, SSE4.1, SSSE3, SSE3,
                    SSE2, and SSE instructions for Intel(R) processors.
            CORE-AVX-I
                    May generate Intel(R) Advanced Vector Extensions (Intel(R)
                    AVX), including instructions in Intel(R) Core 2(TM)
                    processors in process technology smaller than 32nm,
                    Intel(R) SSE4.2, SSE4.1, SSSE3, SSE3, SSE2, and SSE
                    instructions for Intel(R) processors.
            ATOM_SSE4.2
                    May generate MOVBE instructions for Intel(R) processors,
                    depending on the setting of option -minstruction.
                    May also generate Intel(R) SSE4.2, SSE3, SSE2, and SSE
                    instructions for Intel processors. Optimizes for Intel(R)
                    Atom(TM) processors that support Intel(R) SSE4.2 and MOVBE
                    instructions.
            ATOM_SSSE3
                    May generate MOVBE instructions for Intel(R) processors,
                    depending on the setting of option -minstruction.
                    May also generate Intel(R) SSSE3, SSE3, SSE2, and SSE
                    instructions for Intel processors. Optimizes for the
                    Intel(R) Atom(TM) processor that support Intel(R) SSE
                    and MOVBE instructions.
            CORE-AVX512
                    May generate Intel(R) Advanced Vector Extensions 512
                    (Intel(R) AVX-512) Foundation instructions, Intel(R)
                    AVX-512 Conflict Detection instructions, Intel(R) AVX-512
                    Doubleword and Quadword instructions, Intel(R) AVX-512
                    Byte and Word instructions and Intel(R) AVX-512 Vector
                    Length Extensions for Intel(R) processors, and the
                    instructions enabled with CORE-AVX2. Optimizes for Intel(R)
                    processors that support Intel(R) AVX-512 instructions.
            COMMON-AVX512
                    May generate Intel(R) Advanced Vector Extensions 512
                    (Intel(R) AVX-512) Foundation instructions, Intel(R)
                    AVX-512 Conflict Detection instructions, as well as the
                    instructions enabled with CORE-AVX2. Optimizes for Intel(R)
                    processors that support Intel(R) AVX-512 instructions.
            BROADWELL
            CANNONLAKE
            HASWELL
            ICELAKE-CLIENT (or ICELAKE)
            ICELAKE-SERVER
            IVYBRIDGE
            SANDYBRIDGE
            SILVERMONT
            GOLDMONT
            GOLDMONT-PLUS
            TREMONT
            SKYLAKE
            SKYLAKE-AVX512
            CASCADELAKE
            KABYLAKE
            COFFEELAKE
            AMBERLAKE
            WHISKEYLAKE
            TIGERLAKE
            SAPPHIRERAPIDS
                    May generate instructions for processors that support the
                    specified Intel(R) microarchitecture code name. Optimizes
                    for Intel(R) processors that support the specified Intel(R)
                    microarchitecture code name.
                    Keyword SILVERMONT is only available on Windows*
                    and Linux* systems.
-xHost    generate instructions for the highest instruction set and processor
          available on the compilation host machine
-ax<code1>[,<code2>,...]
          generate multiple, processor-specific, auto-dispatched code paths
          for Intel(R) processors, specified by <codes>, if there is a
          performance benefit.
          <codes> includes one or more of the following:
            SSE3 May generate Intel(R) SSE3, SSE2, and SSE instructions for
                    Intel processors.
            SSSE3 May generate Intel(R) SSSE3, SSE3, SSE2, and SSE
                    instructions for Intel processors.
            SSE4.1 May generate Intel(R) SSE4.1, SSSE3, SSE3, SSE2, and SSE
                    instructions for Intel processors.
            SSE4.2 May generate Intel(R) SSE4.2, SSE4.1, SSSE3, SSE3, SSE2,
                    and SSE instructions for Intel processors.
            AVX May generate Intel(R) Advanced Vector Extensions
                   (Intel(R) AVX), Intel(R) SSE4.2, SSE4.1, SSSE3, SSE3,
                    SSE2, and SSE instructions for Intel(R) processors.
            CORE-AVX-I
                    May generate Intel(R) Advanced Vector Extensions
                    (Intel(R) AVX), including instructions in
                    Intel(R) Core 2(TM) processors in process technology
                    smaller than 32nm, Intel(R) SSE4.2, SSE4.1, SSSE3, SSE3,
                    SSE2, and SSE instructions for Intel(R) processors.
            CORE-AVX2
                    May generate Intel(R) Advanced Vector Extensions 2
                    (Intel(R) AVX2), Intel(R) AVX, SSE4.2, SSE4.1, SSSE3, SSE3,
                    SSE2, and SSE instructions for Intel(R) processors.
            CORE-AVX512
                    May generate Intel(R) Advanced Vector Extensions 512
                    (Intel(R) AVX-512) Foundation instructions, Intel(R)
                    AVX-512 Conflict Detection instructions, Intel(R) AVX-512
                    Doubleword and Quadword instructions, Intel(R) AVX-512
                    Byte and Word instructions and Intel(R) AVX-512 Vector
                    Length Extensions for Intel(R) processors, and the
                    instructions enabled with CORE-AVX2.
            COMMON-AVX512
                    May generate Intel(R) Advanced Vector Extensions 512
                    (Intel(R) AVX-512) Foundation instructions,
                    Intel(R) AVX-512 Conflict Detection Instructions (CDI),
                    as well as the instructions enabled with CORE-AVX2.
            ALDERLAKE
            AMBERLAKE
            BROADWELL
            CANNONLAKE
            CASCADELAKE
            COFFEELAKE
            COOPERLAKE
            GOLDMONT
            GOLDMONT-PLUS
            HASWELL
            ICELAKE-CLIENT (or ICELAKE)
            ICELAKE-SERVER
            IVYBRIDGE
            KABYLAKE
            ROCKETLAKE
            SANDYBRIDGE
            SAPPHIRERAPIDS
            SILVERMONT
            SKYLAKE
            SKYLAKE-AVX512
            TIGERLAKE
            TREMONT
            WHISKEYLAKE
                    May generate instructions for processors that support the
                    specified Intel(R) microarchitecture code name. Optimizes
                    for Intel(R) processors that support the specified Intel(R)
                    microarchitecture code name.
-mauto-arch=<code1>[,<code2>,...]
          generate multiple, processor-specific, auto-dispatched code paths
          for X86 architecture processors, specified by <codes>, if there is a
          performance benefit. The accepted arguments are the same as those of
          option '-ax'
-arch <code>
          generate specialized code to optimize for processors indicated by
          <code> as described below
            BROADWELL
            CANNONLAKE
            HASWELL
            ICELAKE-CLIENT (or ICELAKE)
            ICELAKE-SERVER
            IVYBRIDGE
            SANDYBRIDGE
            SILVERMONT
            GOLDMONT
            GOLDMONT-PLUS
            TREMONT
            SKYLAKE-AVX512
            SKYLAKE
            CASCADELAKE
            KABYLAKE
            COFFEELAKE
            AMBERLAKE
            WHISKEYLAKE
            TIGERLAKE
            SAPPHIRERAPIDS
                       May generate instructions for processors that support
                       the specified Intel(R) microarchitecture code name
            CORE-AVX2 May generate Intel(R) Advanced Vector Extensions 2
                       (Intel(R) AVX2), Intel(R) AVX, SSE4.2, SSE4.1, SSE3,
                       SSE2, SSE, and SSSE3 instructions
            CORE-AVX-I May generate Float-16 conversion instructions and the
                       RDRND instruction, Intel(R) Advanced Vector Extensions
                       (Intel(R) AVX), Intel(R) SSE4.2, SSE4.1, SSE3, SSE2,
                       SSE, and SSSE3 instructions
            AVX May generate Intel(R) AVX, SSE4.2, SSE4.1, SSSE3, SSE3,
                       SSE2 and SSE instructions
            SSE4.2 May generate Intel(R) SSE4.2, SSE4.1, SSSE3, SSE3, SSE2
                       and SSE instructions
            SSE4.1 May generate Intel(R) SSE4.1, SSSE3, SSE3, SSE2 and SSE
                       instructions
            SSSE3 May generate Intel(R) SSSE3, SSE3, SSE2 and SSE
                       instructions
            SSE3 May generate Intel(R) SSE3, SSE2 and SSE instructions
-mcpu=<cpu>
          same as -mtune=<cpu>
-mtune=<cpu>
          optimize for a specific <cpu>
            generic - Optimizes code for the compiler's default behavior
            broadwell
            haswell
            ivybridge
            knl
            knm
            sandybridge
            silvermont
            cannonlake
            icelake
            skylake-avx512
            skylake - Optimizes code for processors that support the
                         specified Intel(R) microarchitecture code name.
                         knl and silvermont are only available on Windows* and
                         Linux* systems
            core-avx2 - Optimizes code for processors that support Intel(R)
                         Advanced Vector Extensions 2 (Intel(R) AVX2), Intel(R)
                         AVX, SSE4.2 SSE4.1, SSE3, SSE2, SSE, and SSSE3
                         instructions
            core-avx-i - Optimizes code for processors that support Float-16
                         conversion instructions and the RDRND instruction,
                         Intel(R) Advanced Vector Extensions (Intel(R) AVX),
                         Intel(R) SSE4.2, SSE4.1, SSE3, SSE2, SSE, and SSSE3
                         instructions
            corei7-avx - Optimizes code for processors that support Intel(R)
                         Advanced Vector Extensions (Intel(R) AVX), Intel(R)
                         SSE4.2, SSE4.1, SSE3, SSE2, SSE, and SSSE3
                         instructions
            corei7 - Optimizes code for processors that support Intel(R)
                         SSE4 Efficient Accelerated String and Text Processing
                         instructions. May also generate code for Intel(R) SSE4
                         Vectorizing Compiler and Media Accelerator, Intel(R)
                         SSE3, SSE2, SSE, and SSSE3 instructions
            atom - Optimizes code for processors that support MOVBE
                         instructions, depending on the setting of option
                         -minstruction (Linux and macOS*) or /Qinstruction
                         (Windows). May also generate code for SSSE3
                         instructions and Intel(R) SSE3, SSE2, and SSE
                         instructions
            core2 - Optimizes for the Intel(R) Core(TM) 2 processor
                         family, including support for MMX(TM), Intel(R) SSE,
                         SSE2, SSE3, and SSSE3 instruction sets.
            pentium-mmx - Optimizes for Intel(R) Pentium(R) with MMX technology
            pentiumpro - Optimizes for Intel(R) Pentium(R) Pro, Intel Pentium
                         II, and Intel Pentium III processors
            pentium4m - Optimizes for Intel(R) Pentium(R) 4 processors with
                         MMX technology
            pentium-m
            pentium4
            pentium3
            pentium - Optimizes code for Intel(R) Pentium(R) processors.
                         Value pentium3 is only available on Linux systems
-march=<cpu>
          generate code exclusively for a given <cpu>
            broadwell
            cannonlake
            haswell
            icelake
            ivybridge
            knl
            knm
            sandybridge
            silvermont
            skylake-avx512
            skylake - Generates code for processors that support the
                         specified Intel(R) microarchitecture code name.
                         Keywords knl and silvermont are only available on
                         Linux* systems.
            core-avx2 - Generates code for processors that support Intel(R)
                         Advanced Vector Extensions 2 (Intel(R) AVX2), Intel(R)
                         AVX, SSE4.2 SSE4.1, SSE3, SSE2, SSE, and SSSE3
                         instructions
            core-avx-i - Generates code for processors that support Float-16
                         conversion instructions and the RDRND instruction,
                         Intel(R) Advanced Vector Extensions (Intel(R) AVX),
                         Intel(R) SSE4.2, SSE4.1, SSE3, SSE2, SSE, and SSSE3
                         instructions
            corei7-avx - Generates code for processors that support Intel(R)
                         Advanced Vector Extensions (Intel(R) AVX), Intel(R)
                         SSE4.2, SSE4.1, SSE3, SSE2, SSE, and SSSE3
                         instructions
            corei7 - Generates code for processors that support Intel(R)
                         SSE4 Efficient Accelerated String and Text Processing
                         instructions. May also generate code for Intel(R) SSE4
                         Vectorizing Compiler and Media Accelerator, Intel(R)
                         SSE3, SSE2, SSE, and SSSE3 instructions
            atom - Generates code for processors that support MOVBE
                         instructions, depending on the setting of option
                         -minstruction (Linux and macOS*) or /Qinstruction
                         (Windows). May also generate code for SSSE3
                         instructions and Intel(R) SSE3, SSE2, and SSE
                         instructions
            core2 - Generates for the Intel(R) Core(TM) 2 processor
                         family
            pentium4m - Generates for Intel(R) Pentium(R) 4 processors with
                         MMX technology
            pentium-m
            pentium4
            pentium3
            pentium - Generates code for Intel(R) Pentium(R) processors.
                         Value pentium3 is only available on Linux systems
-msse3    May generate Intel(R) SSE3, SSE2, and SSE instructions
-mssse3   May generate Intel(R) SSSE3, SSE3, SSE2, and SSE instructions
-msse4    Enable -msse4.2
-msse4.1  May generate Intel(R) SSE4.1, SSSE3, SSE3, SSE2, and SSE instructions
-msse4.2  May generate Intel(R) SSE4.2, SSE4.1, SSSE3, SSE3, SSE2, and SSE
          instructions
-mavx     May generate Intel(R) AVX, SSE4.2, SSE4.1, SSSE3, SSE3, SSE2, and SSE
          instructions
-masm=<dialect>
          generate asm instructions specified by <dialect>, which may be
          att (DEFAULT) or intel
-m[no-]apx-features=<arg>[,<arg2>,...]
         Enable/disable feature of APX, args can be: egpr, push2pop2, ppx,
         ndd, ccmp, nf, cf.
-f[no-]omit-frame-pointer
          enable(DEFAULT)/disable use of EBP as general purpose register.
          -fno-omit-frame-pointer replaces -fp
-f[no-]exceptions
          enable/disable(DEFAULT) exception handling, primarily
          for mixed-language programming with C/C++
-mno-sse  disable the generation of SSE instructions
-fasynchronous-unwind-tables
          determines whether unwind information is precise at an instruction
          boundary or at a call boundary. -fno-asynchronous-unwind-tables is
          the default for IA-32 architecture.
-m[no-]omit-leaf-frame-pointer
          determines whether the frame pointer is omitted or kept in leaf
          functions
-m80387   Specify whether the compiler can use x87 instructions.
          Use -mno-80387 to disable.
-mx87     Same as -m80387
-mspeculative-load-hardening
          protects against information leaks by tracking the speculation state
          and masks values when branch prediction selects the incorrect path
-fcf-protection[=<arg>]
          Enables Control-flow Enforcement Technology (CET) protection, which
          defends your program from certain attacks that exploit
          vulnerabilities.
            branch - do control-flow instrumentation for indirect branches
            return - do control-flow instrumentation for function returns
            full - alias to specify both branch and return (same as no <arg>)
            none - turn off instrumentation
-mno-gather
          Disable generation of gather instructions in auto-vectorization.
-mno-scatter
          Disable generation of scatter instructions in auto-vectorization.
Interprocedural Optimization (IPO)
----------------------------------
-ipo[n]   enable multi-file IP optimization between files
Advanced Optimizations
----------------------
-unroll[n]
          set maximum number of times to unroll loops. Omit n to use default
          heuristics. Use n=0 to disable the loop unroller
-funroll-loops
          unroll loops based on default heuristics
-[no]pad  enable/disable(DEFAULT) changing variable and array memory layout
-safe-cray-ptr
          Cray pointers do not alias with other variables
-[no-]ansi-alias
          enable(DEFAULT)/disable use of ANSI aliasing rules optimizations;
          user asserts that the program adheres to these rules
-reentrancy <keyword>
          specify whether the threaded, reentrant run-time support should be
          used
          Keywords: none (same as -noreentrancy), threaded(DEFAULT), async
-noreentrancy
          do not use threaded, reentrant run-time support
-heap-arrays [n]
          temporary arrays of minimum size n (in kilobytes) are allocated in
          heap memory rather than on the stack. If n is not specified,
          all temporary arrays are allocated in heap memory.
-no-heap-arrays
          temporary arrays are allocated on the stack (DEFAULT)
-[no-]vec
          enables(DEFAULT)/disables vectorization
-vec-threshold[n]
          sets a threshold for the vectorization of loops based on the
          probability of profitable execution of the vectorized loop in
          parallel
-vecabi=<arg>
          select vector function ABI
            legacy - use the legacy vector function ABI
            compat - use the compatibility vector function ABI (DEFAULT)
            cmdtarget - generate an extended set of vector functions
            gcc - use GCC compatible ABI
-f[no-]vec-with-mask
          Enable vectorization for short trip-count loops with masking
-f[no-]vec-peel-loops
          Enable peel loop vectorization
-f[no-]vec-remainder-loops
          Enable remainder loop vectorization
-q[no-]opt-jump-tables
          control the generation of jump tables
-fno-jump-tables
          do not generate jump tables for switches and if-then-else statements
-qopt-streaming-stores=<arg>
          specifies whether streaming stores are generated
            always - enables generation of streaming stores under the
                     assumption that the application is memory bound. Also,
                     the user is responsible for inserting the right memory
                     fences for synchronization
            auto - compiler decides when streaming stores are used (DEFAULT)
            never - disables generation of streaming stores
-qmkl[=<arg>]
          link to the Intel(R) Math Kernel Library (Intel(R) MKL) and bring
          in the associated headers
            parallel - link using the threaded Intel(R) MKL libraries. This
                         is the default when -qmkl is specified
            sequential - link using the non-threaded Intel(R) MKL libraries
            cluster - link using the Intel(R) MKL Cluster libraries plus
                         the sequential Intel(R) MKL libraries
-qmkl-ilp64[=<arg>]
          link to the Intel(R) Math Kernel ILP64 variant Libraries
          (Intel(R) MKL) and bring in the associated headers
            parallel - link using the threaded Intel(R) MKL libraries. This
                         is the default when -qmkl-ilp64 is specified
            sequential - link using the non-threaded Intel(R) MKL libraries
            cluster - link using the Intel(R) MKL Cluster libraries plus
                         the sequential Intel(R) MKL libraries
-qmkl-sycl-impl=<arg>[,<arg>,...]
          Limit linking of SYCL-specific implementations of the Intel(R) Math
          Kernel Library to specified in argument. Valid arguments:
            blas, lapack, dft, sparse, rng, stats, vm
-coarray[=<keyword>]
          enable/disable(DEFAULT) coarray syntax for data parallel
          programming, and set the relationship between the coarray
          images.
          keywords: shared - default if keyword is omitted
                    single - overrides any other keyword
                    distributed
-coarray-num-images=n
          set default number of coarray images
-qopt-mem-layout-trans[=<level>]
          controls the level of memory layout transformations performed by the
          compiler
           0 - disable memory layout transformations (same as
               -qno-opt-mem-layout-trans)
           1 - enable basic memory layout transformations
           2 - enable more memory layout transformations (DEFAULT when the
               option is specified)
           3 - enable aggressive memory layout transformations
-qopt-prefetch[=n]
          enable levels of prefetch insertion, where 0 disables.
          n may be 0 through 5 inclusive. Default is 2.
-qopt-prefetch-distance=n1
          specify the prefetch distance to be used for compiler generated
          prefetches inside loops. n1 indicates distance from memory to L2
          cache.
-qopt-prefetch-loads-only
          Only insert prefetches based on the loads inside the loop. Stores
          are ignored.
-qopt-dynamic-align
          enable dynamic data alignment optimizations. Specify
          -qno-opt-dynamic-align to disable(DEFAULT)
-qopt-zmm-usage=<keyword>
          Specifies the level of zmm registers usage. You can specify one of
          the following:
            low - Tells the compiler that the compiled program is unlikely to
                   benefit from zmm registers usage. It specifies that the
                   compiler should avoid using zmm registers unless it can
                   prove the gain from their usage.
            high - Tells the compiler to generate zmm code without restrictions
-qoverride-limits
          provides a way to override certain internal compiler limits that are
          intended to prevent excessive memory usage or compile times for very
          large, complex compilation units.
-q[no-]opt-multiple-gather-scatter-by-shuffles
          Enables or disables the optimization for multiple adjacent
          gather/scatter type vector memory references.
-m[no-]branches-within-32B-boundaries
          align branches and fused branches on 32 byte boundaries
-malign-branch-prefix-size=<size>
          align branches with prefix of <size>.
-malign-branch=<arg>
          specify types of branches to align,
          where <arg> can be: fused, jcc, jmp, call, ret, indirect.
-malign-branch-boundary=<arg>
          align branches and fused branches on 32 byte boundaries
-qopt-for-throughput=<arg>
          Using 'multi-job', which is the default, the compiler will optimize
          for throughput performance, assuming multiple jobs are running.
          The memory optimizations for single job versus multiple jobs can be
          tuned in different ways by the compiler.
-qopt-dword-index-for-array-of-structs[=<val>]
          When specified allows the compiler to use dword indexes to access
          elements of arrays of structs which in size do not exceed val bytes.
          The arrays in question should contain no more than
          INT_MAX / sizeof(element) elements.
          Allowed values for val are: 16, 32, default is 16.
-f[no-]vec-allow-scalar-stores
          When this option is set, an explicit simd loop (for example, one
          set with #pragma omp simd) will be vectorized even if it contains a
          store to a scalar variable that is not marked as private,
          lastprivate, or reduction.
Profile Guided Optimization (PGO)
---------------------------------
-fprofile-ml-use
          Use pre-trained machine learning model for profile guided
          optimizations. (deprecated)
-p        compile and link for function profiling with UNIX gprof tool
          On IA32 and Intel(r)64, -pg is also valid
-f[no-]instrument-functions
          determine whether function entry and exit points are instrumented
-f[no-]instrument-functions-after-inlining
          Like -finstrument-functions, but insert the calls after inlining
Optimization Reports
--------------------
-qopt-report[=n]
          generate an optimization report. Default destination is
          <target>.optrpt. Levels of 0 - 5 are valid.
          Please see documentation for additional details of
          information provided by phase per level.
            0 disable optimization report output
            2 DEFAULT when enabled
-qopt-report-file=[stdout | stderr | <file>]
          specify the filename or output stream for the generated report
-qopt-report-stdout
          specify the generated report should be directed to stdout
-qopt-report-phase=<phase>[,<phase>,...]
          Specify one or more phases for which optimization reports
          are generated
              cg - The phase for code generation
              ipo - The phase for Interprocedural optimization
              loop - The Phase for loop nest optimization
              openmp - The phase for openmp
              pgo - The phase for profile guided optimization
              vec - The phase for vectorization
              all - All optimizer phases. (this is default if
                                           nothing is passed)
-qopt-report-names=<keyword>
          Specifies whether mangled or unmangled names should appear in the
          optimization report.
            mangled - use mangled names
            unmangled - use unmangled names (DEFAULT)
OpenMP* and Parallel Processing
------------------------------
-qopenmp  enable the compiler to generate multi-threaded code based on the
          OpenMP* directives (same as -fopenmp)
          Use -qno-openmp to disable
-qopenmp-stubs
          enables the user to compile OpenMP programs in sequential mode. The
          OpenMP directives are ignored and a stub OpenMP library is linked
          (sequential)
-qopenmp-link=<library>
          choose whether to link with the static or dynamic OpenMP
          libraries. Default is dynamic.
-qopenmp-threadprivate=<ver>
          choose which threadprivate implementation to use
            compat - use the GNU compatible thread local storage
            legacy - use the Intel compatible implementation
                     (DEFAULT)
-parallel
          enable the auto-parallelizer to generate multi-threaded code for
          loops that can be safely executed in parallel
-parallel-source-info[=n]
          enable(DEFAULT)/disable the emission of source location information
          for parallel code generation with OpenMP and auto-parallelization
            0 - disable (same as -no-parallel-source-info)
            1 - emit routine name and line information (DEFAULT)
            2 - emit path, file, routine name and line information
-qopenmp-simd
          Enables OpenMP* SIMD compilation. Enabled by default with
          -qopenmp. Use -qno-openmp-simd to disable.
-fopenmp-offload-mandatory
          Do not create a host fallback if offloading to the device fails
-[no-]device-math-lib=<arg>
          Control the addition of device math libraries when compiling for
          OpenMP* offloading.
            fp64 - FP64 based libraries
            fp32 - FP32 based libraries
-fopenmp-concurrent-host-device-compile
          Enable parallel compilation of host and device compilation steps
          when performing OpenMP offload compiles using -fopenmp-targets. (experimental)
Floating Point
--------------
-fp-model=<name>
          enable <name> floating point model variation
            fast - enables more aggressive floating point optimizations
            precise - allows value-safe optimizations
                          also enables -prec-div
            strict - enables -fp-model=precise, disables
                          contractions and enables pragma stdc fenv_access
-fp-speculation=<mode>
          enable floating point speculations with the following <mode>
          conditions:
            fast - speculate floating point operations (DEFAULT)
            safe - speculate only when safe
            strict - same as off
            off - disables speculation of floating-point operations
-pc32     set internal FPU precision to 24 bit significand
-pc64     set internal FPU precision to 53 bit significand
-pc80     set internal FPU precision to 64 bit significand (DEFAULT)
-[no-]prec-div
          improve precision of FP divides (some speed impact)
          also enabled by -fp-model=precise
-rounding-mode chopped
          set internal FPU rounding control to truncate
-[no-]ftz
          enable/disable flush denormal results to zero
-fpe{0|1|3}
          specifies program-wide behavior on floating point exceptions
-fpe-all={0|1|3}
          specifies floating point exception behavior on all functions
          and subroutines. Also sets -assume ieee_fpe_flags
-[no]fltconsistency
          specify that improved floating-point consistency should be used
-[no-]fma
          enable/disable the combining of floating point multiplies and
          add/subtract operations
-[no]recursive
          compile all procedures for possible recursive execution
-fimf-absolute-error=value
          define the maximum allowable absolute error for math library
          function results
            value - a positive, floating-point number conforming to the
                       format [digits][.digits][{e|E}[sign]digits]
-fimf-accuracy-bits=bits
          define the relative error, measured by the number of correct bits,
          for math library function results
            bits - a positive, floating-point number
-fimf-arch-consistency=value
          ensures that the math library functions produce consistent results
          across different implementations of the same architecture
            value - true or false
-fimf-max-error=ulps
          defines the maximum allowable relative error, measured in ulps, for
          math library function results
            ulps - a positive, floating-point number conforming to the
                       format [digits][.digits][{e|E}[sign]digits]
-fimf-precision=value
          defines the accuracy (precision) for math library functions
            value - defined as one of the following values
                       high - equivalent to max-error = 1.0
                       medium - equivalent to max-error = 4 (DEFAULT)
                       low - equivalent to accuracy-bits = 11 (single
                                precision); accuracy-bits = 26 (double
                                precision)
                       reference - equivalent to 'high' accuracy with correct
                                signaling of exceptional conditions through
                                the errno and status flags settings. This
                                setting is initially available only on Linux*
                                systems
-fimf-domain-exclusion=classlist
          indicates the input arguments domain on which math functions
          must provide correct results.
            classlist - defined as one of the following values:
                          nans, infinities, denormals, zeros
                          all, none, common
-ffinite-math-only
          Allow optimizations for floating point arithmetic that assume
          arguments and results are not NaNs or Infinities
Inlining
--------
-inline-level=<n>
          control inline expansion:
            n=0 disable inlining 
            n=1 inline functions declared with ATTRIBUTES INLINE or
                   FORCEINLINE
            n=2 inline any function, at the compiler's discretion
-f[no-]inline-functions
          inline any function at the compiler's discretion
-inline-forceinline
          treat inline routines as forceinline
Output, Debug, PCH
------------------
-c        compile to object (.o) only, do not link
-S        compile to assembly (.s) only, do not link
-f[no-]verbose-asm
          produce assembly file with compiler comments (DEFAULT) (requires -S)
-use-msasm
          support Microsoft* style assembly language insertion using MASM style
          syntax
-Fa[file]
          name assembly file (or directory for multiple files; i.e. /FaMYDIR\)
-Fo[file]
          name object file (or directory for multiple files; i.e. /FoMYDIR\)
-o <file>
          name output file
-list[=<filename>]
          specify that a listing file should be generated
-list-line-len=#
          overrides the default line length (80) in a listing file
-list-page-len=#
          overrides the default page length (66) in a listing file
-show <keyword>
          controls the contents of the listing file
          keywords: all, none, [no]include, [no]map, [no]options
-g[level]
          Produce symbolic debug information.
          Valid [level] values:
             0 - Disable generation of symbolic debug information.
             1 - Emit minimal debug information for performing stack traces.
             2 - Emit complete debug information. (default for -g)
             3 - Emit extra information which may be useful for some tools.
-gdwarf-<version>
          Enable generation of debug information using the specified DWARF
          version. These options may require additional tools such as linkers
          and debuggers which support these formats.
          Valid <version> values:
             2 - DWARF Debug Information Format Version 2.
             3 - DWARF Debug Information Format Version 3. (default for -g)
             4 - DWARF Debug Information Format Version 4.
             5 - DWARF Debug Information Format Version 5.
-gsplit-dwarf
          Generates an additional output file containing most of the debug
          information. This reduces the size of objects processed by the
          linker. The additional output file will be given a .dwo file
          extension. This option may require additional tools which support
          DWARF object files.
-debug offload
          Generate debug information for offload target
-debug-parameters [keyword]
          Control output of debug information for PARAMETERS.
          Valid [keyword] values:
             none - Disables generation of debug information for PARAMETERs.
             used - Generates debug information for referenced PARAMETERs only.
             all - Generates debug information for all PARAMETERs.
-nodebug-parameters
          Same as "-debug-parameters none".
-gcolumn-info
          Include column information when emitting source positions in the
          debug information. Adding the column information may increase
          the size of the debug information.
-ggdb     Emit debug information tailored for the GNU project debugger GDB.
-glldb    Emit debug information tailored for the LLVM project debugger LLDB.
-fstandalone-debug
          Emit full debug information for all types used by the program.
-fno-merge-debug-strings
          Do not merge identical debug strings in different object files.
-[no]d-lines
          compile debug statements (indicated by D in column 1)
-DD       compile debug statements, indicated by D in column 1. This option
          prevents the definition of a macro named D using the command line
          -Dname option (use -Dname=n syntax instead)
-ftrapuv  trap uninitialized variables
-map-opts
          enable option mapping tool
-print-multi-lib
          print information about libraries being used
-f[no-]eliminate-unused-debug-types
          When disabled, debug information for all types present in the
          sources will be emitted. Using this option may cause a large
          increase in the size of the debug information.
Preprocessor
------------
-D<name>[=<text>]
          define macro
-nodefines, -noD
          specifies that any -D macros go to the preprocessor only, and not to
          the compiler
-U<name>  remove predefined macro
-allow nofpp-comments
          If a Fortran end-of-line comment is seen within a #define, treat it
          as part of the definition. Default is allow:fpp-comments
-E        preprocess to stdout
-EP       preprocess to stdout, omitting #line directives
-P        preprocess to file, omitting #line directives
-preprocess-only
          same as -P
-[no]keep  keep/remove preprocessed file generated by preprocessor as input to
           compiler stage. Not affected by -save-temps. Default is -nokeep
-[no]fpp   run Fortran preprocessor on source files prior to compilation
-fpp-name:name
           Name an alternate preprocessor executable. The name can
           include the full path.
-module path
           specify path where mod files should be placed and first location to
           look for mod files
-I<dir>   add directory to include file search path
-idirafter<dir>
          add directory to the second include file search path (after -I)
-isystem<dir>
          add directory to the start of the system include path
-X, -nostdinc
          remove standard directories from include file search path
-B<prefix>
          find libraries, headers and executables in <prefix>
-gen-dep[=filename]
          generate dependency information.
          If no filename is specified, output is to stdout.
           Similar to -MD or -MMD
          If a filename is specified, output is to filename.
           Similar to -MF filename
-no-gen-dep
          do not generate dependency information (default)
-gen-depshow=keyword
          control what dependency information is output.
          [no]intr_mod Intrinsic modules. Default is nointr_mod.
-gen-depformat=keyword
          generate dependency information in the specified format.
          One of: make, nmake
Component Control
-----------------
-Qoption,<tool>,<opts>
          pass options <opts> to tool specified by <tool>
-Qlocation,<tool>,<dir>
          set <dir> as the location of tool specified by <tool>
-Qinstall <dir>
          set <dir> as root of compiler installation
-mllvm <arg>
          pass '-mllvm <arg>' directly to the compiler invocation (*0)
-mllvm-lto <arg>
          pass '-mllvm <arg>' directly to the compiler invocation. This is
          similar to using -mllvm <arg> except using -mllvm-lto will also push
          the <arg> to the LTO step of the compilation. (*0)
Language
--------
-[no]altparam
          specify if alternate form of parameter constant declarations
          (without parenthesis) is recognized. Default is to recognize
-assume <keyword>
          specify assumptions made by the optimizer and code generator
          keywords: none, [no]aligned_dummy_args,
                    [no]byterecl, [no]buffered_io,
                    [no]buffered_stdout,
                    [no]bscc (nobscc same as -nbs),
                    [no]contiguous_assumed_shape, [no]contiguous_pointer,
                    [no]cc_omp, [no]failed_images, [no]minus0,
                    [no]dummy_aliases (same as -common-args),
                    [no]ieee_fpe_flags, [no]ieee_compares,
                    [no]ieee_mode_restore, [no]fpe_summary, [no]nan_compares,
                    [no]old_boz, [no]old_complex_align,
                    [no]old_e0g0_format, [no]old_inquire_recl,
                    [no]old_logical_ldio, [no]old_logical_assign,
                    [no]old_ldout_format, [no]old_ldout_zero,
                    [no]old_maxminloc, [no]old_unit_star, [no]old_xor,
                    [no]protect_allocates,
                    [no]protect_constants, [no]protect_parens,
                    [no]recursion, [no]realloc_lhs, [no]2underscore,
                    [no]underscore (same as -us),
                    [no]std_intent_in, [no]std_minus0_rounding,
                    [no]std_mod_proc_name, [no]std_value, [no]std_expon_output,
                    [no]source_include,
                    [no]split_common, [no]writeable_strings
-ccdefault <keyword>
          specify default carriage control for units 6 and *
          keywords: default, fortran, list or none
-[no]check <keyword>
          check run-time conditions. Default is -nocheck
          keywords: all,
                    none (same as -nocheck),
                    [no]arg_temp_created, [no]bounds (same as -CB),
                    [no]assume, [no]contiguous,
                    [no]format, [no]output_conversion,
                    [no]pointers (same as -CA),
                    [no]shape, [no]stack, [no]teams,
                    [no]udio_iostat, [no]uninit (same as -CU) (Linux only)
-common-args
          assume "by reference" subprogram arguments may alias one
          another. Same as -assume dummy_aliases
-e03      issue errors for language elements that are not standard in
          Fortran 2003 (same as -stand f03 -warn stderrors options)
-e95      issue errors for language elements that are not standard in
          Fortran 95 (same as -stand f95 -warn stderrors options)
-e90      issue errors for language elements that are not standard in
          Fortran 90 (same as -stand f90 -warn stderrors options)
-[no]extend-source [<keyword>]
          specify rightmost column for fixed form sources
          keywords: 72 (same as -noextend-source and -72),
                    80 (same as -80),
                   132 (same as -132. Default if you specify
                        -extend-source without a keyword.)
-fixed    specify source files are in fixed format. Same as -FI 
          -nofixed indicates free format
-free     specify source files are in free format. Same as -FR 
          -nofree indicates fixed format
-fsanitize=<keyword>
          instrument the program with a sanitizer to detect issues at runtime.
          keywords: address - Detect buffer overflows/underflows
                              and memory leaks
                    memory - Detect uninitialized variables
                    thread - Detect data races
-[no]mixed-str-len-arg
          indicate whether hidden lengths are passed after their
          character argument or after all arguments.
-names <keyword>
          specify how source code identifiers and external names are
          interpreted.
          keywords: as_is, lowercase, uppercase
-[no]pad-source
          make compiler acknowledge blanks at the end of a line
-stand [<keyword>]
          specifies level of conformance with ANSI standard to check
          for. If keyword is not specified, level of conformance is f18
          keywords: f90 (same as -std90), f95 (same as -std95),
                    f03 (same as -std03), f08 (same as -std08),
                    f18 (same as -std18), f23 (same as -std23)none (same as -nostand)
                    Also accepted are: f2003, f2008, f2018, f2023
-standard-semantics
          explicitly sets -assume keywords to conform to the semantics
          of the Fortran standard. The specific keywords will vary depending
          on the standard level requested by the user.
          -assume keywords always set by -standard-semantics:
             byterecl, fpe_summary, noold_ldout_format, noold_unit_star,
             noold_xor, protect_parens, and std_mod_proc_name
          - Fortran 2003 or greater adds -assume keywords:
             minus0, noold_ldout_zero, noold_maxminloc, std_minus0_rounding,
             realloc_lhs, and ieee_restore_modes
          - Fortran 2008 or greater adds -assume keyword:
             std_value
          - Fortran 2018 or greater adds -assume keywords:
             failed_images, ieee_compares, noold-e0g0-format, noold_inquire_recl,
             and recursion
          - Fortran 2023 or greater adds -assume keyword:
             std_expon_output
         Note: -standard-semantics also always sets -fpscomp logicals
         Note: If -fp-model=strict or -fp-model=except is set
            then this also sets -assume keyword ieee_fpe_flags
         Note: Using -standard-semantics may result in performance loss.
-[no]standard-realloc-lhs
          explicitly sets assume keyword realloc_lhs to conform to the
          standard, or to override the default. Sets -assume [no]realloc_lhs
-syntax-only
          perform syntax and semantic checking only (no object file produced)
-[no-]wrap-margin
          controls right margin wrapping in list-directed output. By default,
          list-directed output is wrapped at 80 characters.
Compiler Diagnostics
--------------------
-w        disable all warnings
-W<n>     disable warnings (n = 0) or show warnings (n = 1 DEFAULT, same as
          -warn general)
-warn <keyword>
          specifies the level of warning messages issued
            keywords: all, none (same as -nowarn)
                      [no]alignments, [no]declarations,
                      [no]errors, [no]externals,
                      [no]general, [no]ignore_loc, [no]interfaces,
                      [no]shape, [no]stderrors, [no]truncated_source,
                      [no]uncalled, [no]unused, [no]usage
-nowarn   suppress all warning messages
-WB       turn a compile-time bounds check into a warning
-[no]traceback
          specify whether the compiler generates PC correlation data used to
          display a symbolic traceback rather than a hexadecimal traceback at
          runtime failure
-[no]gen-interfaces[:[no]source]
          generate interface blocks for all routines in the file. Can be
          checked using -warn interfaces
          nosource indicates temporary source files should not be saved
-error-limit <size>
          specify the maximum number of error-level or fatal-level compiler
          errors allowed
-noerror-limit
          set no maximum number on error-level or fatal-level error messages
          All diagnostic options (-diag*) are only valid for driver specific
          diagnostics.
-diag-enable=<v1>[,<v2>,...]
          enable the specified diagnostics or diagnostic groups
-diag-disable=<v1>[,<v2>,...]
          disable the specified diagnostics or diagnostic groups
-diag-error=<v1>[,<v2>,...]
          output the specified diagnostics or diagnostic groups as errors
-diag-warning=<v1>[,<v2>,...]
          output the specified diagnostics or diagnostic groups as warnings
-diag-remark=<v1>[,<v2>,...]
          output the the specified diagnostics or diagnostic groups as remarks
-diag-dump
          display the currently enabled diagnostic messages to stdout
-diag-file[=<file>]
          <file> where diagnostics are emitted to. Not specifying this causes
          messages to be output to stderr
-diag-file-append[=<file>]
          <file> where diagnostics are emitted to. When <file> already exists,
          output is appended to the file
-[no-]diag-id-numbers
          enable(DEFAULT)/disable the diagnostic specifiers to be output in
          numeric form
-diag-error-limit=<num>
          specify the maximum number of errors emitted
Miscellaneous
-------------
-[no]logo
          display compiler version information. -nologo disables the output
-V        display compiler version information
-dumpmachine
          display the target machine only
--version
          display GCC style version information
-save-temps
          store the intermediate files in current directory and name them
          based on the source file. Only saves files that are generated by
          default
-dryrun   show driver tool commands but do not execute tools
-v        show driver tool commands and execute tools
-what     display detailed compiler version information
-watch=<keyword>
          tells the driver to output processing information
            keywords: all, none (same as -nowatch), [no]source,
                      [no]cmd (same as -v)
                      [no]offload-cmd
-nowatch  suppress processing information output (DEFAULT)
-Tf<file>
          compile file as Fortran source
-multiple-processes[=<n>]
          create multiple processes that can be used to compile large numbers
          of source files at the same time
-f[no-]openmp-device-lib=<arg>
          Control inclusion of device libraries into device binary linkage.
          Valid arguments are: libc, libm-fp32, libm-fp64, all
-fsycl    Enable SYCL kernel compilation for device. This is for link-time
          only, consuming Fortran and DPC++ objects.
-fsycl-device-code-split=<arg>
          Perform SYCL device code split.
            per_kernel - device code module is created for each SYCL kernel
            per_source - device code module is created for each source
                         (translation unit)
            off - no device code split
            auto - use heuristic to select the best way of splitting
                         device code (DEFAULT)
-f[no-]sycl-device-lib=<arg>
          Control inclusion of device libraries into device binary linkage.
          Valid arguments are: libc, libm-fp32, libm-fp64, all
-f[no-]sycl-instrument-device-code
          Add ITT instrumentation intrinsics calls
-f[no-]sycl-dead-args-optimization
          Enables elimination of DPC++ dead kernel arguments
-nolibsycl
          Do not link the SYCL runtime library
-fopenmp-targets=<arg>
          Enables offloading to a specified GPU target if OpenMP* features have
          been enabled.
            spir64 - offload to SPIR64-based devices
            spir64_x86_64 - offload to Intel(R) CPUs
            spir64_gen - offload to Intel(R) Processor Graphics
-fopenmp-target-buffers=<arg>
          Enables a way to overcome the problem where some OpenMP* offload
          SPIR-V* devices produce incorrect code when a target object is
          larger than 4GB.
            default - use default heuristics
            4GB - Allow access to target objects of 4GB or larger in
                      target code
-fopenmp-default-sub-group-size=<arg>
          Specify the default sub-group size of SPMD kernels generated for
          OpenMP* target constructs for SPIR64.
-f[no]openmp-target-do-concurrent
          Determines whether a DO CONCURRENT construct is automatically
          converted into an OpenMP* TARGET region.
-fopenmp-default-allocator=<arg>
          Sets a default OpenMP allocator to use for all ALLOCATE statements
          in the Fortran program.
             omp_default_mem - use standard Fortran allocation routine
             omp_high_bw_mem - use high-bandwidth memory, if available
             omp_target_shared_mem - use shared memory with offload device
                                     Requires use of -qopenmp
-fopenmp-declare-target-scalar-defaultmap=<arg>
          Assume that a scalar declare target variable with
          implicit data-mapping referenced in a 'target' construct has the
          same value in the host and device environment.
            default - use default heuristics
            firstprivate - Declares the data variables in list to be private
            to the target task and shared by every thread team that runs
            the region.
-ftarget-compile-fast
          Experimental feature: Reduce target compilation time, with potential
          runtime performance trade-off.
-ftarget-register-alloc-mode=<arg>
          Specify a register allocation mode for specific hardware for use by
          supported target backends.
Data
----
-i{2|4|8}
          set default KIND of integer and logical variables to 2, 4, or 8
-integer-size <size>
          specifies the default size of integer and logical variables
            size: 16, 32, 64
-r{8|16}  set default size of real to 8 or 16 bytes
-real-size <size>
          specify the size of REAL and COMPLEX declarations, constants,
          functions, and intrinsics
            size: 32, 64, 128
-autodouble
          same as -real-size 64 or -r8
-double-size <size>
          defines the size of DOUBLE PRECISION and DOUBLE COMPLEX declarations,
          constants, functions, and intrinsics
            size: 64, 128
-[no]fpconstant
          extends the precision of single precision constants assigned to
          double precision variables to double precision
-[no]intconstant
          use Fortran 77 semantics, rather than Fortran 90/95, to determine
          kind of integer constants
-auto     make all local variables AUTOMATIC
-auto-scalar
          make scalar local variables AUTOMATIC (DEFAULT)
-save     save all variables (static allocation) (same as -noauto,
          opposite of -auto)
-[no]zero
          enable/disable(DEFAULT) implicit initialization to zero of local
          scalar variables of intrinsic type INTEGER, REAL, COMPLEX, or
          LOGICAL that are saved and not initialized
-init=<keyword>
          enable/disable(DEFAULT) implicit initialization of local
          variables of intrinsic type INTEGER, REAL, COMPLEX, or
          LOGICAL that are saved and not initialized
          The <keyword> specifies the initial value
            keywords: zero (same as -zero),
                      snan (valid only for floating point variables),
                      infinity, minus_infinity (valid only for floating point)
                      tiny, minus_tiny (valid only for floating point)
                      huge, minus_huge
                      arrays
-dyncom<common1,common2,...>
          make given common blocks dynamically-allocated
-Zp[n]    specify alignment constraint for structures (n=1,2,4,8,16
          -Zp16 DEFAULT)
-[no]align
          analyze and reorder memory layout for variables and arrays
-align <keyword>
          specify how data items are aligned
            keywords: all (same as -align), none (same as -noalign),
                      [no]commons, [no]dcommons,
                      [no]qcommons, [no]zcommons,
                      rec1byte, rec2byte, rec4byte,
                      rec8byte, rec16byte, rec32byte,
                      array8byte, array16byte, array32byte,
                      array64byte, array128byte, array256byte,
                      [no]records, [no]sequence
-fcommon  Enables the compiler to treat common variables as if they were
          defined. That in turn allows the use of gprel addressing of common
          data variables. -fno-common disables
-fstack-security-check
          enable overflow security checks.
          -fno-stack-security-check disables (DEFAULT)
-fstack-protector
          enable stack overflow security checks.
          -fno-stack-protector disables (DEFAULT)
-fstack-protector-strong
          enable stack overflow security checks for routines with any buffer.
          -fno-stack-protector-strong disables (DEFAULT)
-fstack-protector-all
          enable stack overflow security checks including functions.
          -fno-stack-protector-all disables (DEFAULT)
-fpic, -fPIC
          generate position independent code (-fno-pic/-fno-PIC is DEFAULT)
-fpie, -fPIE
          generate position independent code that will be linked into an
          executable (-fno-pie/-fno-PIE is DEFAULT)
-f[no-]keep-static-consts
          enable/disable(DEFAULT) the ability to preserve allocation of
          variables that are not referenced in the source
-fpack-struct
          pack structure members together
-f[no-]math-errno
          set ERRNO after calling standard math library functions
-f[no-]zero-initialized-in-bss
          put explicitly zero initialized variables into the DATA section
          instead of the BSS section
-mcmodel=<size>
          use a specific memory model to generate code and store data
            small - Restricts code and data to the first 2GB of address
                     space (DEFAULT)
            medium - Restricts code to the first 2GB; it places no memory
                     restriction on data
            large - Places no memory restriction on code or data
-convert <keyword>
          specify the format of unformatted files containing numeric data
            keywords: big_endian, cray, ibm, little_endian, native, vaxd, vaxg
-falign-functions=<n>
          align the start of functions on a 2 (DEFAULT) or <n> byte boundary
          where <n> is a power of 2
-falign-functions
          align the start of functions to an optimal machine-dependent value.
          -fno-align-functions (DEFAULT) aligns on a 2-byte boundary
-f[no-]maintain-32-byte-stack-align
          Realign stack to 32-byte if stack alignment is uncertain for
          functions with external linkage, and retain 32-byte alignment
          for other functions
-fvisibility=[extern|default|protected|hidden|internal]
          Global symbols (data and functions) will get the visibility
          attribute given by default. Symbol visibility attributes explicitly
          set in the source code or using the symbol visibility attribute
          file options will override the -fvisibility setting
-fvisibility-inlines-hidden
          mark inline member functions as hidden
-f[no-]strict-overflow
          Instructs the compiler to assume that signed arithmetic overflow of
          addition, subtraction and multiplication wraps around using
          twos-complement representation. (DEFAULT)
Compatibility
-------------
-fpscomp <keyword>
          specify the level of compatibility to adhere to with Fortran
          PowerStation
            keywords: all, none (same as -nofpscomp), [no]filesfromcmd,
                      [no]general, [no]ioformat, [no]ldio_spacing,
                      [no]libs, [no]logicals
-nofpscomp
          no specific level of compatibility with Fortran PowerStation
-f66, -66
          allow extensions that enhance FORTRAN-66 compatibility
-f77rtl   specify that the Fortran 77 specific run-time support should be used
          -nof77rtl disables
-vms      enable VMS I/O statement extensions
-gcc-name=<name>
          name and location of gcc if not where expected
-gxx-name=<name>
          name and location of g++ if not where expected
-gnu-prefix=prefix
          specify a prefix that will be added to the names of GNU utilities
          called from the compiler
Linking/Linker
--------------
-L<dir>   instruct linker to search <dir> for libraries
-l<string>
          instruct the linker to link in the -l<string> library
-shared-intel
          link Intel provided libraries dynamically
-static-intel
          link Intel provided libraries statically
-shared-libgcc
          link libgcc dynamically
-static-libgcc
          link libgcc statically
-static-libstdc++
          link libstdc++ statically
-dynamic-linker<file>
          select dynamic linker other than the default
-cxxlib   link using C++ run-time libraries
-no-cxxlib
          do not link in C++ runtime libraries
-cxxlib[=dir]
          link using C++ run-time libraries provided with gcc dir is an
          optional top-level location for the gcc binaries and libraries
-nodefaultlibs
          do not use standard libraries when linking
-nostartfiles
          do not use standard startup files when linking
-nostdlib
          do not use standard libraries and startup files when linking
-nofor-main
          do not link against Fortran main object. Used when linking Fortran
          objects with C main program
-static   prevents linking with shared libraries
-shared   produce a shared object
-Bstatic  specify following libraries are linked statically
-Bdynamic
          specify following libraries are linked dynamically
-pthread  use POSIX* thread library for multithreading support
          Same as -threads
-cxxlib-<mode>
          tell the compiler which C++ run-time libraries to use
            nostd - do not link in standard C++ library
-T <file>
          direct linker to read link commands from <file>
-Xassembler <val>
          pass <val> directly to the assembler for processing
-Xlinker <val>
          pass <val> directly to the linker for processing
-Wa,<o1>[,<o2>,...]
          pass options o1, o2, etc. to the assembler
-Wl,<o1>[,<o2>,...]
          pass options o1, o2, etc. to the linker for processing
-Wp,<o1>[,<o2>,...]
          pass options o1, o2, etc. to the preprocessor
-threads  specify that multi-threaded libraries should be linked against
          -nothreads disables multi-threaded libraries
-pie,-no_pie
          generate position independent code that will be linked into an
          executable (-pie is DEFAULT for macOS* 10.7 and later)
          -no-pie/-no_pie disables position independent code
-fuse-ld=<arg>
          Use different linker instead of default linker (ld)
            bfd - use bfd linker
            gold - use gold linker
            lld - use lld linker
-no-intel-lib[=<arg>]
          Restrict linking of Intel provided libraries. Arguments can be
          specified via a comma separated list. Valid arguments are:
          libirc, libimf, libsvml, libirng, libipgo
-f[no-]sycl-link-huge-device-code
          Deprecated. Use -flink-huge-device-code instead.
-f[no-]link-huge-device-code
          Place device code later in the linked binary in order to avoid
          precluding 32-bit PC relative relocations between surrounding ELF
          sections when device code is larger than 2GiB. This is disabled by
          default.
Linker Specific Options
-----------------------
These options are specific to the linker. Details can be found in the linker
documentation and man page
-L<dir>
-T<arg>
-h<arg>
-u<arg>
-z<arg>
-i
-r
-s
-N
-Bsymbolic
-Bdynamic
-Bstatic
Deprecated Options
------------------
-use-asm No replacement
-qopt-report [n] use -qopt-report[=n]
-cilk-serialize No replacement
-qcf-protection=shadow_stack use -fcf-protection=return
-qcf-protection=branch_tracking use -fcf-protection=branch
-qcf-protection=[full|none] use -fcf-protection=[full|none]
-march=icelake use -march=icelake-client
-mtune=icelake use -mtune=icelake-client
-mcpu=icelake use -mcpu=icelake-client
-xICELAKE use -xICELAKE-CLIENT
-axICELAKE use -axICELAKE-CLIENT
-mauto-arch=ICELAKE use -mauto-arch=ICELAKE-CLIENT
-f[no-]sycl-link-huge-device-code use -f[no-]link-huge-device-code
-help [category] print full or category help message
Valid categories include
       advanced - Advanced Optimizations
       codegen - Code Generation
       compatibility - Compatibility
       component - Component Control
       data - Data
       deprecated - Deprecated Options
       diagnostics - Compiler Diagnostics
       float - Floating Point
       help - Help
       inline - Inlining
       ipo - Interprocedural Optimization (IPO)
       language - Language
       link - Linking/Linker
       misc - Miscellaneous
       opt - Optimization
       output - Output
       pgo - Profile Guided Optimization (PGO)
       preproc - Preprocessor
       reports - Optimization Reports
       openmp - OpenMP and Parallel Processing
Copyright (C) 1985-2024, Intel Corporation. All rights reserved.
* Other names and brands may be claimed as the property of others.
Executing: mpiifort -fc=ifx -V
stdout:
Intel(R) Fortran Compiler for applications running on Intel(R) 64, Version 2025.0.0 Build 20241008
Copyright (C) 1985-2024 Intel Corporation. All rights reserved.
Executing: mpiifort -fc=ifx --help | head -n 80
stdout:
Intel(R) Fortran Compiler Help
                         ==============================
  Intel(R) Compiler includes compiler options that optimize for instruction
  sets that are available in both Intel(R) and non-Intel microprocessors, but
  may perform additional optimizations for Intel microprocessors than for
  non-Intel microprocessors. In addition, certain compiler options for
  Intel(R) Compiler are reserved for Intel microprocessors.
  For a detailed description of these compiler options, including the
  instructions they implicate, please refer to "Intel(R) Fortran Compiler
  Classic and Intel(R) Fortran Compiler Developer Guide and Reference >
  Compiler Reference > Compiler Options."
  usage: ifx [options] file1 [file2 ...]
     where options represents zero or more compiler options
     fileN is a Fortran source (.f .for .ftn .f90 .fpp .F .FOR .F90 .i .i90),
     assembly (.s .S), object (.o), static library (.a), or other
     linkable file
     Commonly used options may be placed in the ifx.cfg file.
   Some options listed are only available on a specific system
   i32 indicates the feature is available on systems based on IA-32
          architecture
   i64em indicates the feature is available on systems using Intel(R) 64
          architecture
   (*0) indicates non-customer options (stripped from production build)
                             Compiler Option List
                             --------------------
Optimization
------------
-O1       optimize for maximum speed, but disable some optimizations which
          increase code size for a small speed benefit
-O2       optimize for maximum speed (DEFAULT)
-O3       optimize for maximum speed and enable more aggressive optimizations
          that may not improve performance on some programs
-O        same as -O2
-Os       enable speed optimizations, but disable some optimizations which
          increase code size for small speed benefit 
-O0       disable optimizations
-Ofast    enable -O3 -no-prec-div -fp-model fast=2 optimizations
-fno-alias
          assume no aliasing in program
-nolib-inline
          disable inline expansion of intrinsic functions
-f[no-]optimize-sibling-calls
          Optimize sibling and tail recursive calls.
          Enabled at levels -O2, -O3, -Os.
Code Generation
---------------
-m64      generate code for Intel(R) 64 architecture
-x<code>  generate specialized code to run exclusively on processors
          indicated by <code> as described below
            SSE3 May generate Intel(R) SSE3, SSE2, and SSE instructions for
                    Intel processors. Optimizes for the enhanced Pentium(R) M
                    processor microarchitecture and Intel NetBurst(R)
                    microarchitecture.
            SSSE3 May generate Intel(R) SSSE3, SSE3, SSE2, and SSE
                    instructions for Intel processors. Optimizes for the
                    Intel(R) Core(TM) microarchitecture.
            SSE4.1 May generate Intel(R) SSE4 Vectorizing Compiler and Media
                    Accelerator instructions for Intel processors. May
                    generate Intel(R) SSSE3, SSE3, SSE2, and SSE instructions
                    and it may optimize for Intel(R) 45nm Hi-k next generation
                    Intel Core(TM) microarchitecture.
            SSE4.2 May generate Intel(R) SSE4 Efficient Accelerated String
                    and Text Processing instructions supported by Intel(R)
                    Core(TM) i7 processors. May generate Intel(R) SSE4
                    Vectorizing Compiler and Media Accelerator, Intel(R) SSSE3,
                    SSE3, SSE2, and SSE instructions and it may optimize for
                    the Intel(R) Core(TM) processor family.
            AVX May generate Intel(R) Advanced Vector Extensions (Intel(R)
                    AVX), Intel(R) SSE4.2, SSE4.1, SSSE3, SSE3,
                    SSE2, and SSE instructions for Intel(R) processors.
            CORE-AVX2
                    May generate Intel(R) Advanced Vector Extensions 2
                    (Intel(R) AVX2), Intel(R) AVX, SSE4.2, SSE4.1, SSSE3, SSE3,
                    SSE2, and SSE instructions for Intel(R) processors.
            CORE-AVX-I
                    May generate Intel(R) Advanced Vector Extensions (Intel(R)
                    AVX), including instructions in Intel(R) Core 2(TM)
                    processors in process technology smaller than 32nm,
                    Intel(R) SSE4.2, SSE4.1, SSSE3, SSE3, SSE2, and SSE
                    instructions for Intel(R) processors.
Detected Intel compiler
          Trying FC compiler flag -O2 -march=native -mtune=native
Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.setCompilers  -fPIC -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.setCompilers/conftest.F90 
Successful compile:
Source:
      program main

      end

              Output from compiling with  -fPIC -O2 -march=native -mtune=native 

Added FC compiler flag -O2 -march=native -mtune=native
=============================================================================================
TESTING: checkIntelHardwareSupport from config.compilerFlags(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/compilerFlags.py:168)
  Use Linux/macOS commands to determine what operations the hardware supports
Executing: lscpu
stdout:
Architecture:                         x86_64
CPU op-mode(s):                       32-bit, 64-bit
Address sizes:                        46 bits physical, 48 bits virtual
Byte Order:                           Little Endian
CPU(s):                               6
On-line CPU(s) list:                  0-5
Vendor ID:                            GenuineIntel
Model name:                           Intel(R) Xeon(R) CPU E5-1650 v3 @ 3.50GHz
CPU family:                           6
Model:                                63
Thread(s) per core:                   1
Core(s) per socket:                   6
Socket(s):                            1
Stepping:                             2
CPU(s) scaling MHz:                   57%
CPU max MHz:                          3800.0000
CPU min MHz:                          1200.0000
BogoMIPS:                             6983.33
Flags:                                fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm cpuid_fault epb pti intel_ppin ssbd ibrs ibpb stibp tpr_shadow flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid cqm xsaveopt cqm_llc cqm_occup_llc dtherm ida arat pln pts vnmi md_clear flush_l1d
Virtualization:                       VT-x
L1d cache:                            192 KiB (6 instances)
L1i cache:                            192 KiB (6 instances)
L2 cache:                             1.5 MiB (6 instances)
L3 cache:                             15 MiB (1 instance)
NUMA node(s):                         1
NUMA node0 CPU(s):                    0-5
Vulnerability Gather data sampling:   Not affected
Vulnerability Ghostwrite:             Not affected
Vulnerability Itlb multihit:          KVM: Mitigation: Split huge pages
Vulnerability L1tf:                   Mitigation; PTE Inversion; VMX conditional cache flushes, SMT disabled
Vulnerability Mds:                    Mitigation; Clear CPU buffers; SMT disabled
Vulnerability Meltdown:               Mitigation; PTI
Vulnerability Mmio stale data:        Mitigation; Clear CPU buffers; SMT disabled
Vulnerability Reg file data sampling: Not affected
Vulnerability Retbleed:               Not affected
Vulnerability Spec rstack overflow:   Not affected
Vulnerability Spec store bypass:      Mitigation; Speculative Store Bypass disabled via prctl
Vulnerability Spectre v1:             Mitigation; usercopy/swapgs barriers and __user pointer sanitization
Vulnerability Spectre v2:             Mitigation; Retpolines; IBPB conditional; IBRS_FW; STIBP disabled; RSB filling; PBRSB-eIBRS Not affected; BHI Not affected
Vulnerability Srbds:                  Not affected
Vulnerability Tsx async abort:        Not affected
=============================================================================================
TESTING: checkCompilerMacros from config.compilerFlags(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/compilerFlags.py:159)
  Save the list of CPP macros defined by the C and C++ compiler, does not work for all compilers
Executing: mpiicc -cc=icx -c -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilerFlags  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilerFlags/conftest.c  -E -dM 
stdout:
#define _LP64 1
#define __AES__ 1
#define __AMX_SUPPORTED__ 1
#define __ATOMIC_ACQUIRE 2
#define __ATOMIC_ACQ_REL 4
#define __ATOMIC_CONSUME 1
#define __ATOMIC_RELAXED 0
#define __ATOMIC_RELEASE 3
#define __ATOMIC_SEQ_CST 5
#define __AVX2__ 1
#define __AVX__ 1
#define __BIGGEST_ALIGNMENT__ 16
#define __BITINT_MAXWIDTH__ 8388608
#define __BMI2__ 1
#define __BMI__ 1
#define __BOOL_WIDTH__ 8
#define __BYTE_ORDER__ __ORDER_LITTLE_ENDIAN__
#define __CHAR16_TYPE__ unsigned short
#define __CHAR32_TYPE__ unsigned int
#define __CHAR_BIT__ 8
#define __CLANG_ATOMIC_BOOL_LOCK_FREE 2
#define __CLANG_ATOMIC_CHAR16_T_LOCK_FREE 2
#define __CLANG_ATOMIC_CHAR32_T_LOCK_FREE 2
#define __CLANG_ATOMIC_CHAR_LOCK_FREE 2
#define __CLANG_ATOMIC_INT_LOCK_FREE 2
#define __CLANG_ATOMIC_LLONG_LOCK_FREE 2
#define __CLANG_ATOMIC_LONG_LOCK_FREE 2
#define __CLANG_ATOMIC_POINTER_LOCK_FREE 2
#define __CLANG_ATOMIC_SHORT_LOCK_FREE 2
#define __CLANG_ATOMIC_WCHAR_T_LOCK_FREE 2
#define __CONSTANT_CFSTRINGS__ 1
#define __CRC32__ 1
#define __DBL_DECIMAL_DIG__ 17
#define __DBL_DENORM_MIN__ 4.9406564584124654e-324
#define __DBL_DIG__ 15
#define __DBL_EPSILON__ 2.2204460492503131e-16
#define __DBL_HAS_DENORM__ 1
#define __DBL_HAS_INFINITY__ 1
#define __DBL_HAS_QUIET_NAN__ 1
#define __DBL_MANT_DIG__ 53
#define __DBL_MAX_10_EXP__ 308
#define __DBL_MAX_EXP__ 1024
#define __DBL_MAX__ 1.7976931348623157e+308
#define __DBL_MIN_10_EXP__ (-307)
#define __DBL_MIN_EXP__ (-1021)
#define __DBL_MIN__ 2.2250738585072014e-308
#define __DBL_NORM_MAX__ 1.7976931348623157e+308
#define __DECIMAL_DIG__ __LDBL_DECIMAL_DIG__
#define __ELF__ 1
#define __F16C__ 1
#define __FINITE_MATH_ONLY__ 0
#define __FLOAT128__ 1
#define __FLT16_DECIMAL_DIG__ 5
#define __FLT16_DENORM_MIN__ 5.9604644775390625e-8F16
#define __FLT16_DIG__ 3
#define __FLT16_EPSILON__ 9.765625e-4F16
#define __FLT16_HAS_DENORM__ 1
#define __FLT16_HAS_INFINITY__ 1
#define __FLT16_HAS_QUIET_NAN__ 1
#define __FLT16_MANT_DIG__ 11
#define __FLT16_MAX_10_EXP__ 4
#define __FLT16_MAX_EXP__ 16
#define __FLT16_MAX__ 6.5504e+4F16
#define __FLT16_MIN_10_EXP__ (-4)
#define __FLT16_MIN_EXP__ (-13)
#define __FLT16_MIN__ 6.103515625e-5F16
#define __FLT16_NORM_MAX__ 6.5504e+4F16
#define __FLT_DECIMAL_DIG__ 9
#define __FLT_DENORM_MIN__ 1.40129846e-45F
#define __FLT_DIG__ 6
#define __FLT_EPSILON__ 1.19209290e-7F
#define __FLT_HAS_DENORM__ 1
#define __FLT_HAS_INFINITY__ 1
#define __FLT_HAS_QUIET_NAN__ 1
#define __FLT_MANT_DIG__ 24
#define __FLT_MAX_10_EXP__ 38
#define __FLT_MAX_EXP__ 128
#define __FLT_MAX__ 3.40282347e+38F
#define __FLT_MIN_10_EXP__ (-37)
#define __FLT_MIN_EXP__ (-125)
#define __FLT_MIN__ 1.17549435e-38F
#define __FLT_NORM_MAX__ 3.40282347e+38F
#define __FLT_RADIX__ 2
#define __FMA__ 1
#define __FPCLASS_NEGINF 0x0004
#define __FPCLASS_NEGNORMAL 0x0008
#define __FPCLASS_NEGSUBNORMAL 0x0010
#define __FPCLASS_NEGZERO 0x0020
#define __FPCLASS_POSINF 0x0200
#define __FPCLASS_POSNORMAL 0x0100
#define __FPCLASS_POSSUBNORMAL 0x0080
#define __FPCLASS_POSZERO 0x0040
#define __FPCLASS_QNAN 0x0002
#define __FPCLASS_SNAN 0x0001
#define __FSGSBASE__ 1
#define __FXSR__ 1
#define __GCC_ASM_FLAG_OUTPUTS__ 1
#define __GCC_ATOMIC_BOOL_LOCK_FREE 2
#define __GCC_ATOMIC_CHAR16_T_LOCK_FREE 2
#define __GCC_ATOMIC_CHAR32_T_LOCK_FREE 2
#define __GCC_ATOMIC_CHAR_LOCK_FREE 2
#define __GCC_ATOMIC_INT_LOCK_FREE 2
#define __GCC_ATOMIC_LLONG_LOCK_FREE 2
#define __GCC_ATOMIC_LONG_LOCK_FREE 2
#define __GCC_ATOMIC_POINTER_LOCK_FREE 2
#define __GCC_ATOMIC_SHORT_LOCK_FREE 2
#define __GCC_ATOMIC_TEST_AND_SET_TRUEVAL 1
#define __GCC_ATOMIC_WCHAR_T_LOCK_FREE 2
#define __GCC_CONSTRUCTIVE_SIZE 64
#define __GCC_DESTRUCTIVE_SIZE 64
#define __GCC_HAVE_DWARF2_CFI_ASM 1
#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1 1
#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_16 1
#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2 1
#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4 1
#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8 1
#define __GNUC_MINOR__ 2
#define __GNUC_PATCHLEVEL__ 1
#define __GNUC_STDC_INLINE__ 1
#define __GNUC__ 4
#define __GXX_ABI_VERSION 1002
#define __INT16_C_SUFFIX__ 
#define __INT16_FMTd__ "hd"
#define __INT16_FMTi__ "hi"
#define __INT16_MAX__ 32767
#define __INT16_TYPE__ short
#define __INT32_C_SUFFIX__ 
#define __INT32_FMTd__ "d"
#define __INT32_FMTi__ "i"
#define __INT32_MAX__ 2147483647
#define __INT32_TYPE__ int
#define __INT64_C_SUFFIX__ L
#define __INT64_FMTd__ "ld"
#define __INT64_FMTi__ "li"
#define __INT64_MAX__ 9223372036854775807L
#define __INT64_TYPE__ long int
#define __INT8_C_SUFFIX__ 
#define __INT8_FMTd__ "hhd"
#define __INT8_FMTi__ "hhi"
#define __INT8_MAX__ 127
#define __INT8_TYPE__ signed char
#define __INTEL_CLANG_COMPILER 20250000
#define __INTEL_LLVM_COMPILER 20250000
#define __INTMAX_C_SUFFIX__ L
#define __INTMAX_FMTd__ "ld"
#define __INTMAX_FMTi__ "li"
#define __INTMAX_MAX__ 9223372036854775807L
#define __INTMAX_TYPE__ long int
#define __INTMAX_WIDTH__ 64
#define __INTPTR_FMTd__ "ld"
#define __INTPTR_FMTi__ "li"
#define __INTPTR_MAX__ 9223372036854775807L
#define __INTPTR_TYPE__ long int
#define __INTPTR_WIDTH__ 64
#define __INT_FAST16_FMTd__ "hd"
#define __INT_FAST16_FMTi__ "hi"
#define __INT_FAST16_MAX__ 32767
#define __INT_FAST16_TYPE__ short
#define __INT_FAST16_WIDTH__ 16
#define __INT_FAST32_FMTd__ "d"
#define __INT_FAST32_FMTi__ "i"
#define __INT_FAST32_MAX__ 2147483647
#define __INT_FAST32_TYPE__ int
#define __INT_FAST32_WIDTH__ 32
#define __INT_FAST64_FMTd__ "ld"
#define __INT_FAST64_FMTi__ "li"
#define __INT_FAST64_MAX__ 9223372036854775807L
#define __INT_FAST64_TYPE__ long int
#define __INT_FAST64_WIDTH__ 64
#define __INT_FAST8_FMTd__ "hhd"
#define __INT_FAST8_FMTi__ "hhi"
#define __INT_FAST8_MAX__ 127
#define __INT_FAST8_TYPE__ signed char
#define __INT_FAST8_WIDTH__ 8
#define __INT_LEAST16_FMTd__ "hd"
#define __INT_LEAST16_FMTi__ "hi"
#define __INT_LEAST16_MAX__ 32767
#define __INT_LEAST16_TYPE__ short
#define __INT_LEAST16_WIDTH__ 16
#define __INT_LEAST32_FMTd__ "d"
#define __INT_LEAST32_FMTi__ "i"
#define __INT_LEAST32_MAX__ 2147483647
#define __INT_LEAST32_TYPE__ int
#define __INT_LEAST32_WIDTH__ 32
#define __INT_LEAST64_FMTd__ "ld"
#define __INT_LEAST64_FMTi__ "li"
#define __INT_LEAST64_MAX__ 9223372036854775807L
#define __INT_LEAST64_TYPE__ long int
#define __INT_LEAST64_WIDTH__ 64
#define __INT_LEAST8_FMTd__ "hhd"
#define __INT_LEAST8_FMTi__ "hhi"
#define __INT_LEAST8_MAX__ 127
#define __INT_LEAST8_TYPE__ signed char
#define __INT_LEAST8_WIDTH__ 8
#define __INT_MAX__ 2147483647
#define __INT_WIDTH__ 32
#define __INVPCID__ 1
#define __I__ 1j
#define __LAHF_SAHF__ 1
#define __LDBL_DECIMAL_DIG__ 21
#define __LDBL_DENORM_MIN__ 3.64519953188247460253e-4951L
#define __LDBL_DIG__ 18
#define __LDBL_EPSILON__ 1.08420217248550443401e-19L
#define __LDBL_HAS_DENORM__ 1
#define __LDBL_HAS_INFINITY__ 1
#define __LDBL_HAS_QUIET_NAN__ 1
#define __LDBL_MANT_DIG__ 64
#define __LDBL_MAX_10_EXP__ 4932
#define __LDBL_MAX_EXP__ 16384
#define __LDBL_MAX__ 1.18973149535723176502e+4932L
#define __LDBL_MIN_10_EXP__ (-4931)
#define __LDBL_MIN_EXP__ (-16381)
#define __LDBL_MIN__ 3.36210314311209350626e-4932L
#define __LDBL_NORM_MAX__ 1.18973149535723176502e+4932L
#define __LITTLE_ENDIAN__ 1
#define __LLONG_WIDTH__ 64
#define __LONG_DOUBLE_SIZE__ 80
#define __LONG_LONG_MAX__ 9223372036854775807LL
#define __LONG_MAX__ 9223372036854775807L
#define __LONG_WIDTH__ 64
#define __LP64__ 1
#define __LZCNT__ 1
#define __MEMORY_SCOPE_DEVICE 1
#define __MEMORY_SCOPE_SINGLE 4
#define __MEMORY_SCOPE_SYSTEM 0
#define __MEMORY_SCOPE_WRKGRP 2
#define __MEMORY_SCOPE_WVFRNT 3
#define __MMX__ 1
#define __MOVBE__ 1
#define __NO_MATH_ERRNO__ 1
#define __NO_MATH_INLINES 1
#define __OBJC_BOOL_IS_BOOL 0
#define __OPENCL_MEMORY_SCOPE_ALL_SVM_DEVICES 3
#define __OPENCL_MEMORY_SCOPE_DEVICE 2
#define __OPENCL_MEMORY_SCOPE_SUB_GROUP 4
#define __OPENCL_MEMORY_SCOPE_WORK_GROUP 1
#define __OPENCL_MEMORY_SCOPE_WORK_ITEM 0
#define __OPTIMIZE__ 1
#define __ORDER_BIG_ENDIAN__ 4321
#define __ORDER_LITTLE_ENDIAN__ 1234
#define __ORDER_PDP_ENDIAN__ 3412
#define __PCLMUL__ 1
#define __PIC__ 2
#define __POINTER_WIDTH__ 64
#define __POPCNT__ 1
#define __PRAGMA_REDEFINE_EXTNAME 1
#define __PTRDIFF_FMTd__ "ld"
#define __PTRDIFF_FMTi__ "li"
#define __PTRDIFF_MAX__ 9223372036854775807L
#define __PTRDIFF_TYPE__ long int
#define __PTRDIFF_WIDTH__ 64
#define __RDRND__ 1
#define __REGISTER_PREFIX__ 
#define __SCHAR_MAX__ 127
#define __SEG_FS 1
#define __SEG_GS 1
#define __SHRT_MAX__ 32767
#define __SHRT_WIDTH__ 16
#define __SIG_ATOMIC_MAX__ 2147483647
#define __SIG_ATOMIC_WIDTH__ 32
#define __SIZEOF_DOUBLE__ 8
#define __SIZEOF_FLOAT128__ 16
#define __SIZEOF_FLOAT__ 4
#define __SIZEOF_INT128__ 16
#define __SIZEOF_INT__ 4
#define __SIZEOF_LONG_DOUBLE__ 16
#define __SIZEOF_LONG_LONG__ 8
#define __SIZEOF_LONG__ 8
#define __SIZEOF_POINTER__ 8
#define __SIZEOF_PTRDIFF_T__ 8
#define __SIZEOF_SHORT__ 2
#define __SIZEOF_SIZE_T__ 8
#define __SIZEOF_WCHAR_T__ 4
#define __SIZEOF_WINT_T__ 4
#define __SIZE_FMTX__ "lX"
#define __SIZE_FMTo__ "lo"
#define __SIZE_FMTu__ "lu"
#define __SIZE_FMTx__ "lx"
#define __SIZE_MAX__ 18446744073709551615UL
#define __SIZE_TYPE__ long unsigned int
#define __SIZE_WIDTH__ 64
#define __SSE2_MATH__ 1
#define __SSE2__ 1
#define __SSE3__ 1
#define __SSE4_1__ 1
#define __SSE4_2__ 1
#define __SSE_MATH__ 1
#define __SSE__ 1
#define __SSP__ 1
#define __SSSE3__ 1
#define __STDC_EMBED_EMPTY__ 2
#define __STDC_EMBED_FOUND__ 1
#define __STDC_EMBED_NOT_FOUND__ 0
#define __STDC_HOSTED__ 1
#define __STDC_UTF_16__ 1
#define __STDC_UTF_32__ 1
#define __STDC_VERSION__ 201710L
#define __STDC__ 1
#define __UINT16_C_SUFFIX__ 
#define __UINT16_FMTX__ "hX"
#define __UINT16_FMTo__ "ho"
#define __UINT16_FMTu__ "hu"
#define __UINT16_FMTx__ "hx"
#define __UINT16_MAX__ 65535
#define __UINT16_TYPE__ unsigned short
#define __UINT32_C_SUFFIX__ U
#define __UINT32_FMTX__ "X"
#define __UINT32_FMTo__ "o"
#define __UINT32_FMTu__ "u"
#define __UINT32_FMTx__ "x"
#define __UINT32_MAX__ 4294967295U
#define __UINT32_TYPE__ unsigned int
#define __UINT64_C_SUFFIX__ UL
#define __UINT64_FMTX__ "lX"
#define __UINT64_FMTo__ "lo"
#define __UINT64_FMTu__ "lu"
#define __UINT64_FMTx__ "lx"
#define __UINT64_MAX__ 18446744073709551615UL
#define __UINT64_TYPE__ long unsigned int
#define __UINT8_C_SUFFIX__ 
#define __UINT8_FMTX__ "hhX"
#define __UINT8_FMTo__ "hho"
#define __UINT8_FMTu__ "hhu"
#define __UINT8_FMTx__ "hhx"
#define __UINT8_MAX__ 255
#define __UINT8_TYPE__ unsigned char
#define __UINTMAX_C_SUFFIX__ UL
#define __UINTMAX_FMTX__ "lX"
#define __UINTMAX_FMTo__ "lo"
#define __UINTMAX_FMTu__ "lu"
#define __UINTMAX_FMTx__ "lx"
#define __UINTMAX_MAX__ 18446744073709551615UL
#define __UINTMAX_TYPE__ long unsigned int
#define __UINTMAX_WIDTH__ 64
#define __UINTPTR_FMTX__ "lX"
#define __UINTPTR_FMTo__ "lo"
#define __UINTPTR_FMTu__ "lu"
#define __UINTPTR_FMTx__ "lx"
#define __UINTPTR_MAX__ 18446744073709551615UL
#define __UINTPTR_TYPE__ long unsigned int
#define __UINTPTR_WIDTH__ 64
#define __UINT_FAST16_FMTX__ "hX"
#define __UINT_FAST16_FMTo__ "ho"
#define __UINT_FAST16_FMTu__ "hu"
#define __UINT_FAST16_FMTx__ "hx"
#define __UINT_FAST16_MAX__ 65535
#define __UINT_FAST16_TYPE__ unsigned short
#define __UINT_FAST32_FMTX__ "X"
#define __UINT_FAST32_FMTo__ "o"
#define __UINT_FAST32_FMTu__ "u"
#define __UINT_FAST32_FMTx__ "x"
#define __UINT_FAST32_MAX__ 4294967295U
#define __UINT_FAST32_TYPE__ unsigned int
#define __UINT_FAST64_FMTX__ "lX"
#define __UINT_FAST64_FMTo__ "lo"
#define __UINT_FAST64_FMTu__ "lu"
#define __UINT_FAST64_FMTx__ "lx"
#define __UINT_FAST64_MAX__ 18446744073709551615UL
#define __UINT_FAST64_TYPE__ long unsigned int
#define __UINT_FAST8_FMTX__ "hhX"
#define __UINT_FAST8_FMTo__ "hho"
#define __UINT_FAST8_FMTu__ "hhu"
#define __UINT_FAST8_FMTx__ "hhx"
#define __UINT_FAST8_MAX__ 255
#define __UINT_FAST8_TYPE__ unsigned char
#define __UINT_LEAST16_FMTX__ "hX"
#define __UINT_LEAST16_FMTo__ "ho"
#define __UINT_LEAST16_FMTu__ "hu"
#define __UINT_LEAST16_FMTx__ "hx"
#define __UINT_LEAST16_MAX__ 65535
#define __UINT_LEAST16_TYPE__ unsigned short
#define __UINT_LEAST32_FMTX__ "X"
#define __UINT_LEAST32_FMTo__ "o"
#define __UINT_LEAST32_FMTu__ "u"
#define __UINT_LEAST32_FMTx__ "x"
#define __UINT_LEAST32_MAX__ 4294967295U
#define __UINT_LEAST32_TYPE__ unsigned int
#define __UINT_LEAST64_FMTX__ "lX"
#define __UINT_LEAST64_FMTo__ "lo"
#define __UINT_LEAST64_FMTu__ "lu"
#define __UINT_LEAST64_FMTx__ "lx"
#define __UINT_LEAST64_MAX__ 18446744073709551615UL
#define __UINT_LEAST64_TYPE__ long unsigned int
#define __UINT_LEAST8_FMTX__ "hhX"
#define __UINT_LEAST8_FMTo__ "hho"
#define __UINT_LEAST8_FMTu__ "hhu"
#define __UINT_LEAST8_FMTx__ "hhx"
#define __UINT_LEAST8_MAX__ 255
#define __UINT_LEAST8_TYPE__ unsigned char
#define __USER_LABEL_PREFIX__ 
#define __VERSION__ "Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)"
#define __WCHAR_MAX__ 2147483647
#define __WCHAR_TYPE__ int
#define __WCHAR_WIDTH__ 32
#define __WINT_MAX__ 4294967295U
#define __WINT_TYPE__ unsigned int
#define __WINT_UNSIGNED__ 1
#define __WINT_WIDTH__ 32
#define __XSAVEOPT__ 1
#define __XSAVE__ 1
#define __amd64 1
#define __amd64__ 1
#define __clang__ 1
#define __clang_literal_encoding__ "UTF-8"
#define __clang_major__ 19
#define __clang_minor__ 0
#define __clang_patchlevel__ 0
#define __clang_version__ "19.0.0git (icx 2025.0.0.20241008)"
#define __clang_wide_literal_encoding__ "UTF-32"
#define __code_model_small__ 1
#define __corei7 1
#define __corei7__ 1
#define __gnu_linux__ 1
#define __linux 1
#define __linux__ 1
#define __llvm__ 1
#define __pic__ 2
#define __seg_fs __attribute__((address_space(257)))
#define __seg_gs __attribute__((address_space(256)))
#define __tune_corei7__ 1
#define __unix 1
#define __unix__ 1
#define __x86_64 1
#define __x86_64__ 1
#define linux 1
#define unix 1
Executing: mpiicpc -cxx=icpx -c -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilerFlags  -Wall -Wwrite-strings -Wno-strict-aliasing -Wno-unknown-pragmas -fstack-protector -fvisibility=hidden -O2 -march=native -mtune=native  -std=gnu++20 -fPIC  /tmp/petsc-m5p55c3k/config.compilerFlags/conftest.cc  -E -dM 
stdout:
#define _BOOL 1
#define _GNU_SOURCE 1
#define _LP64 1
#define __AES__ 1
#define __AMX_SUPPORTED__ 1
#define __ATOMIC_ACQUIRE 2
#define __ATOMIC_ACQ_REL 4
#define __ATOMIC_CONSUME 1
#define __ATOMIC_RELAXED 0
#define __ATOMIC_RELEASE 3
#define __ATOMIC_SEQ_CST 5
#define __AVX2__ 1
#define __AVX__ 1
#define __BIGGEST_ALIGNMENT__ 16
#define __BITINT_MAXWIDTH__ 8388608
#define __BMI2__ 1
#define __BMI__ 1
#define __BOOL_WIDTH__ 8
#define __BYTE_ORDER__ __ORDER_LITTLE_ENDIAN__
#define __CHAR16_TYPE__ unsigned short
#define __CHAR32_TYPE__ unsigned int
#define __CHAR_BIT__ 8
#define __CLANG_ATOMIC_BOOL_LOCK_FREE 2
#define __CLANG_ATOMIC_CHAR16_T_LOCK_FREE 2
#define __CLANG_ATOMIC_CHAR32_T_LOCK_FREE 2
#define __CLANG_ATOMIC_CHAR8_T_LOCK_FREE 2
#define __CLANG_ATOMIC_CHAR_LOCK_FREE 2
#define __CLANG_ATOMIC_INT_LOCK_FREE 2
#define __CLANG_ATOMIC_LLONG_LOCK_FREE 2
#define __CLANG_ATOMIC_LONG_LOCK_FREE 2
#define __CLANG_ATOMIC_POINTER_LOCK_FREE 2
#define __CLANG_ATOMIC_SHORT_LOCK_FREE 2
#define __CLANG_ATOMIC_WCHAR_T_LOCK_FREE 2
#define __CONSTANT_CFSTRINGS__ 1
#define __CRC32__ 1
#define __DBL_DECIMAL_DIG__ 17
#define __DBL_DENORM_MIN__ 4.9406564584124654e-324
#define __DBL_DIG__ 15
#define __DBL_EPSILON__ 2.2204460492503131e-16
#define __DBL_HAS_DENORM__ 1
#define __DBL_HAS_INFINITY__ 1
#define __DBL_HAS_QUIET_NAN__ 1
#define __DBL_MANT_DIG__ 53
#define __DBL_MAX_10_EXP__ 308
#define __DBL_MAX_EXP__ 1024
#define __DBL_MAX__ 1.7976931348623157e+308
#define __DBL_MIN_10_EXP__ (-307)
#define __DBL_MIN_EXP__ (-1021)
#define __DBL_MIN__ 2.2250738585072014e-308
#define __DBL_NORM_MAX__ 1.7976931348623157e+308
#define __DECIMAL_DIG__ __LDBL_DECIMAL_DIG__
#define __DEPRECATED 1
#define __ELF__ 1
#define __EXCEPTIONS 1
#define __F16C__ 1
#define __FINITE_MATH_ONLY__ 0
#define __FLOAT128__ 1
#define __FLT16_DECIMAL_DIG__ 5
#define __FLT16_DENORM_MIN__ 5.9604644775390625e-8F16
#define __FLT16_DIG__ 3
#define __FLT16_EPSILON__ 9.765625e-4F16
#define __FLT16_HAS_DENORM__ 1
#define __FLT16_HAS_INFINITY__ 1
#define __FLT16_HAS_QUIET_NAN__ 1
#define __FLT16_MANT_DIG__ 11
#define __FLT16_MAX_10_EXP__ 4
#define __FLT16_MAX_EXP__ 16
#define __FLT16_MAX__ 6.5504e+4F16
#define __FLT16_MIN_10_EXP__ (-4)
#define __FLT16_MIN_EXP__ (-13)
#define __FLT16_MIN__ 6.103515625e-5F16
#define __FLT16_NORM_MAX__ 6.5504e+4F16
#define __FLT_DECIMAL_DIG__ 9
#define __FLT_DENORM_MIN__ 1.40129846e-45F
#define __FLT_DIG__ 6
#define __FLT_EPSILON__ 1.19209290e-7F
#define __FLT_HAS_DENORM__ 1
#define __FLT_HAS_INFINITY__ 1
#define __FLT_HAS_QUIET_NAN__ 1
#define __FLT_MANT_DIG__ 24
#define __FLT_MAX_10_EXP__ 38
#define __FLT_MAX_EXP__ 128
#define __FLT_MAX__ 3.40282347e+38F
#define __FLT_MIN_10_EXP__ (-37)
#define __FLT_MIN_EXP__ (-125)
#define __FLT_MIN__ 1.17549435e-38F
#define __FLT_NORM_MAX__ 3.40282347e+38F
#define __FLT_RADIX__ 2
#define __FMA__ 1
#define __FPCLASS_NEGINF 0x0004
#define __FPCLASS_NEGNORMAL 0x0008
#define __FPCLASS_NEGSUBNORMAL 0x0010
#define __FPCLASS_NEGZERO 0x0020
#define __FPCLASS_POSINF 0x0200
#define __FPCLASS_POSNORMAL 0x0100
#define __FPCLASS_POSSUBNORMAL 0x0080
#define __FPCLASS_POSZERO 0x0040
#define __FPCLASS_QNAN 0x0002
#define __FPCLASS_SNAN 0x0001
#define __FSGSBASE__ 1
#define __FXSR__ 1
#define __GCC_ASM_FLAG_OUTPUTS__ 1
#define __GCC_ATOMIC_BOOL_LOCK_FREE 2
#define __GCC_ATOMIC_CHAR16_T_LOCK_FREE 2
#define __GCC_ATOMIC_CHAR32_T_LOCK_FREE 2
#define __GCC_ATOMIC_CHAR8_T_LOCK_FREE 2
#define __GCC_ATOMIC_CHAR_LOCK_FREE 2
#define __GCC_ATOMIC_INT_LOCK_FREE 2
#define __GCC_ATOMIC_LLONG_LOCK_FREE 2
#define __GCC_ATOMIC_LONG_LOCK_FREE 2
#define __GCC_ATOMIC_POINTER_LOCK_FREE 2
#define __GCC_ATOMIC_SHORT_LOCK_FREE 2
#define __GCC_ATOMIC_TEST_AND_SET_TRUEVAL 1
#define __GCC_ATOMIC_WCHAR_T_LOCK_FREE 2
#define __GCC_CONSTRUCTIVE_SIZE 64
#define __GCC_DESTRUCTIVE_SIZE 64
#define __GCC_HAVE_DWARF2_CFI_ASM 1
#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_1 1
#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_16 1
#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_2 1
#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_4 1
#define __GCC_HAVE_SYNC_COMPARE_AND_SWAP_8 1
#define __GLIBCXX_BITSIZE_INT_N_0 128
#define __GLIBCXX_TYPE_INT_N_0 __int128
#define __GNUC_GNU_INLINE__ 1
#define __GNUC_MINOR__ 2
#define __GNUC_PATCHLEVEL__ 1
#define __GNUC__ 4
#define __GNUG__ 4
#define __GXX_ABI_VERSION 1002
#define __GXX_EXPERIMENTAL_CXX0X__ 1
#define __GXX_RTTI 1
#define __GXX_WEAK__ 1
#define __INT16_C_SUFFIX__ 
#define __INT16_FMTd__ "hd"
#define __INT16_FMTi__ "hi"
#define __INT16_MAX__ 32767
#define __INT16_TYPE__ short
#define __INT32_C_SUFFIX__ 
#define __INT32_FMTd__ "d"
#define __INT32_FMTi__ "i"
#define __INT32_MAX__ 2147483647
#define __INT32_TYPE__ int
#define __INT64_C_SUFFIX__ L
#define __INT64_FMTd__ "ld"
#define __INT64_FMTi__ "li"
#define __INT64_MAX__ 9223372036854775807L
#define __INT64_TYPE__ long int
#define __INT8_C_SUFFIX__ 
#define __INT8_FMTd__ "hhd"
#define __INT8_FMTi__ "hhi"
#define __INT8_MAX__ 127
#define __INT8_TYPE__ signed char
#define __INTEL_CLANG_COMPILER 20250000
#define __INTEL_LLVM_COMPILER 20250000
#define __INTMAX_C_SUFFIX__ L
#define __INTMAX_FMTd__ "ld"
#define __INTMAX_FMTi__ "li"
#define __INTMAX_MAX__ 9223372036854775807L
#define __INTMAX_TYPE__ long int
#define __INTMAX_WIDTH__ 64
#define __INTPTR_FMTd__ "ld"
#define __INTPTR_FMTi__ "li"
#define __INTPTR_MAX__ 9223372036854775807L
#define __INTPTR_TYPE__ long int
#define __INTPTR_WIDTH__ 64
#define __INT_FAST16_FMTd__ "hd"
#define __INT_FAST16_FMTi__ "hi"
#define __INT_FAST16_MAX__ 32767
#define __INT_FAST16_TYPE__ short
#define __INT_FAST16_WIDTH__ 16
#define __INT_FAST32_FMTd__ "d"
#define __INT_FAST32_FMTi__ "i"
#define __INT_FAST32_MAX__ 2147483647
#define __INT_FAST32_TYPE__ int
#define __INT_FAST32_WIDTH__ 32
#define __INT_FAST64_FMTd__ "ld"
#define __INT_FAST64_FMTi__ "li"
#define __INT_FAST64_MAX__ 9223372036854775807L
#define __INT_FAST64_TYPE__ long int
#define __INT_FAST64_WIDTH__ 64
#define __INT_FAST8_FMTd__ "hhd"
#define __INT_FAST8_FMTi__ "hhi"
#define __INT_FAST8_MAX__ 127
#define __INT_FAST8_TYPE__ signed char
#define __INT_FAST8_WIDTH__ 8
#define __INT_LEAST16_FMTd__ "hd"
#define __INT_LEAST16_FMTi__ "hi"
#define __INT_LEAST16_MAX__ 32767
#define __INT_LEAST16_TYPE__ short
#define __INT_LEAST16_WIDTH__ 16
#define __INT_LEAST32_FMTd__ "d"
#define __INT_LEAST32_FMTi__ "i"
#define __INT_LEAST32_MAX__ 2147483647
#define __INT_LEAST32_TYPE__ int
#define __INT_LEAST32_WIDTH__ 32
#define __INT_LEAST64_FMTd__ "ld"
#define __INT_LEAST64_FMTi__ "li"
#define __INT_LEAST64_MAX__ 9223372036854775807L
#define __INT_LEAST64_TYPE__ long int
#define __INT_LEAST64_WIDTH__ 64
#define __INT_LEAST8_FMTd__ "hhd"
#define __INT_LEAST8_FMTi__ "hhi"
#define __INT_LEAST8_MAX__ 127
#define __INT_LEAST8_TYPE__ signed char
#define __INT_LEAST8_WIDTH__ 8
#define __INT_MAX__ 2147483647
#define __INT_WIDTH__ 32
#define __INVPCID__ 1
#define __I__ 1j
#define __LAHF_SAHF__ 1
#define __LDBL_DECIMAL_DIG__ 21
#define __LDBL_DENORM_MIN__ 3.64519953188247460253e-4951L
#define __LDBL_DIG__ 18
#define __LDBL_EPSILON__ 1.08420217248550443401e-19L
#define __LDBL_HAS_DENORM__ 1
#define __LDBL_HAS_INFINITY__ 1
#define __LDBL_HAS_QUIET_NAN__ 1
#define __LDBL_MANT_DIG__ 64
#define __LDBL_MAX_10_EXP__ 4932
#define __LDBL_MAX_EXP__ 16384
#define __LDBL_MAX__ 1.18973149535723176502e+4932L
#define __LDBL_MIN_10_EXP__ (-4931)
#define __LDBL_MIN_EXP__ (-16381)
#define __LDBL_MIN__ 3.36210314311209350626e-4932L
#define __LDBL_NORM_MAX__ 1.18973149535723176502e+4932L
#define __LITTLE_ENDIAN__ 1
#define __LLONG_WIDTH__ 64
#define __LONG_DOUBLE_SIZE__ 80
#define __LONG_LONG_MAX__ 9223372036854775807LL
#define __LONG_MAX__ 9223372036854775807L
#define __LONG_WIDTH__ 64
#define __LP64__ 1
#define __LZCNT__ 1
#define __MEMORY_SCOPE_DEVICE 1
#define __MEMORY_SCOPE_SINGLE 4
#define __MEMORY_SCOPE_SYSTEM 0
#define __MEMORY_SCOPE_WRKGRP 2
#define __MEMORY_SCOPE_WVFRNT 3
#define __MMX__ 1
#define __MOVBE__ 1
#define __NO_MATH_ERRNO__ 1
#define __NO_MATH_INLINES 1
#define __OBJC_BOOL_IS_BOOL 0
#define __OPENCL_MEMORY_SCOPE_ALL_SVM_DEVICES 3
#define __OPENCL_MEMORY_SCOPE_DEVICE 2
#define __OPENCL_MEMORY_SCOPE_SUB_GROUP 4
#define __OPENCL_MEMORY_SCOPE_WORK_GROUP 1
#define __OPENCL_MEMORY_SCOPE_WORK_ITEM 0
#define __OPTIMIZE__ 1
#define __ORDER_BIG_ENDIAN__ 4321
#define __ORDER_LITTLE_ENDIAN__ 1234
#define __ORDER_PDP_ENDIAN__ 3412
#define __PCLMUL__ 1
#define __PIC__ 2
#define __POINTER_WIDTH__ 64
#define __POPCNT__ 1
#define __PRAGMA_REDEFINE_EXTNAME 1
#define __PTRDIFF_FMTd__ "ld"
#define __PTRDIFF_FMTi__ "li"
#define __PTRDIFF_MAX__ 9223372036854775807L
#define __PTRDIFF_TYPE__ long int
#define __PTRDIFF_WIDTH__ 64
#define __RDRND__ 1
#define __REGISTER_PREFIX__ 
#define __SCHAR_MAX__ 127
#define __SEG_FS 1
#define __SEG_GS 1
#define __SHRT_MAX__ 32767
#define __SHRT_WIDTH__ 16
#define __SIG_ATOMIC_MAX__ 2147483647
#define __SIG_ATOMIC_WIDTH__ 32
#define __SIZEOF_DOUBLE__ 8
#define __SIZEOF_FLOAT128__ 16
#define __SIZEOF_FLOAT__ 4
#define __SIZEOF_INT128__ 16
#define __SIZEOF_INT__ 4
#define __SIZEOF_LONG_DOUBLE__ 16
#define __SIZEOF_LONG_LONG__ 8
#define __SIZEOF_LONG__ 8
#define __SIZEOF_POINTER__ 8
#define __SIZEOF_PTRDIFF_T__ 8
#define __SIZEOF_SHORT__ 2
#define __SIZEOF_SIZE_T__ 8
#define __SIZEOF_WCHAR_T__ 4
#define __SIZEOF_WINT_T__ 4
#define __SIZE_FMTX__ "lX"
#define __SIZE_FMTo__ "lo"
#define __SIZE_FMTu__ "lu"
#define __SIZE_FMTx__ "lx"
#define __SIZE_MAX__ 18446744073709551615UL
#define __SIZE_TYPE__ long unsigned int
#define __SIZE_WIDTH__ 64
#define __SSE2_MATH__ 1
#define __SSE2__ 1
#define __SSE3__ 1
#define __SSE4_1__ 1
#define __SSE4_2__ 1
#define __SSE_MATH__ 1
#define __SSE__ 1
#define __SSP__ 1
#define __SSSE3__ 1
#define __STDCPP_DEFAULT_NEW_ALIGNMENT__ 16UL
#define __STDCPP_THREADS__ 1
#define __STDC_EMBED_EMPTY__ 2
#define __STDC_EMBED_FOUND__ 1
#define __STDC_EMBED_NOT_FOUND__ 0
#define __STDC_HOSTED__ 1
#define __STDC_UTF_16__ 1
#define __STDC_UTF_32__ 1
#define __STDC__ 1
#define __UINT16_C_SUFFIX__ 
#define __UINT16_FMTX__ "hX"
#define __UINT16_FMTo__ "ho"
#define __UINT16_FMTu__ "hu"
#define __UINT16_FMTx__ "hx"
#define __UINT16_MAX__ 65535
#define __UINT16_TYPE__ unsigned short
#define __UINT32_C_SUFFIX__ U
#define __UINT32_FMTX__ "X"
#define __UINT32_FMTo__ "o"
#define __UINT32_FMTu__ "u"
#define __UINT32_FMTx__ "x"
#define __UINT32_MAX__ 4294967295U
#define __UINT32_TYPE__ unsigned int
#define __UINT64_C_SUFFIX__ UL
#define __UINT64_FMTX__ "lX"
#define __UINT64_FMTo__ "lo"
#define __UINT64_FMTu__ "lu"
#define __UINT64_FMTx__ "lx"
#define __UINT64_MAX__ 18446744073709551615UL
#define __UINT64_TYPE__ long unsigned int
#define __UINT8_C_SUFFIX__ 
#define __UINT8_FMTX__ "hhX"
#define __UINT8_FMTo__ "hho"
#define __UINT8_FMTu__ "hhu"
#define __UINT8_FMTx__ "hhx"
#define __UINT8_MAX__ 255
#define __UINT8_TYPE__ unsigned char
#define __UINTMAX_C_SUFFIX__ UL
#define __UINTMAX_FMTX__ "lX"
#define __UINTMAX_FMTo__ "lo"
#define __UINTMAX_FMTu__ "lu"
#define __UINTMAX_FMTx__ "lx"
#define __UINTMAX_MAX__ 18446744073709551615UL
#define __UINTMAX_TYPE__ long unsigned int
#define __UINTMAX_WIDTH__ 64
#define __UINTPTR_FMTX__ "lX"
#define __UINTPTR_FMTo__ "lo"
#define __UINTPTR_FMTu__ "lu"
#define __UINTPTR_FMTx__ "lx"
#define __UINTPTR_MAX__ 18446744073709551615UL
#define __UINTPTR_TYPE__ long unsigned int
#define __UINTPTR_WIDTH__ 64
#define __UINT_FAST16_FMTX__ "hX"
#define __UINT_FAST16_FMTo__ "ho"
#define __UINT_FAST16_FMTu__ "hu"
#define __UINT_FAST16_FMTx__ "hx"
#define __UINT_FAST16_MAX__ 65535
#define __UINT_FAST16_TYPE__ unsigned short
#define __UINT_FAST32_FMTX__ "X"
#define __UINT_FAST32_FMTo__ "o"
#define __UINT_FAST32_FMTu__ "u"
#define __UINT_FAST32_FMTx__ "x"
#define __UINT_FAST32_MAX__ 4294967295U
#define __UINT_FAST32_TYPE__ unsigned int
#define __UINT_FAST64_FMTX__ "lX"
#define __UINT_FAST64_FMTo__ "lo"
#define __UINT_FAST64_FMTu__ "lu"
#define __UINT_FAST64_FMTx__ "lx"
#define __UINT_FAST64_MAX__ 18446744073709551615UL
#define __UINT_FAST64_TYPE__ long unsigned int
#define __UINT_FAST8_FMTX__ "hhX"
#define __UINT_FAST8_FMTo__ "hho"
#define __UINT_FAST8_FMTu__ "hhu"
#define __UINT_FAST8_FMTx__ "hhx"
#define __UINT_FAST8_MAX__ 255
#define __UINT_FAST8_TYPE__ unsigned char
#define __UINT_LEAST16_FMTX__ "hX"
#define __UINT_LEAST16_FMTo__ "ho"
#define __UINT_LEAST16_FMTu__ "hu"
#define __UINT_LEAST16_FMTx__ "hx"
#define __UINT_LEAST16_MAX__ 65535
#define __UINT_LEAST16_TYPE__ unsigned short
#define __UINT_LEAST32_FMTX__ "X"
#define __UINT_LEAST32_FMTo__ "o"
#define __UINT_LEAST32_FMTu__ "u"
#define __UINT_LEAST32_FMTx__ "x"
#define __UINT_LEAST32_MAX__ 4294967295U
#define __UINT_LEAST32_TYPE__ unsigned int
#define __UINT_LEAST64_FMTX__ "lX"
#define __UINT_LEAST64_FMTo__ "lo"
#define __UINT_LEAST64_FMTu__ "lu"
#define __UINT_LEAST64_FMTx__ "lx"
#define __UINT_LEAST64_MAX__ 18446744073709551615UL
#define __UINT_LEAST64_TYPE__ long unsigned int
#define __UINT_LEAST8_FMTX__ "hhX"
#define __UINT_LEAST8_FMTo__ "hho"
#define __UINT_LEAST8_FMTu__ "hhu"
#define __UINT_LEAST8_FMTx__ "hhx"
#define __UINT_LEAST8_MAX__ 255
#define __UINT_LEAST8_TYPE__ unsigned char
#define __USER_LABEL_PREFIX__ 
#define __VERSION__ "Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)"
#define __WCHAR_MAX__ 2147483647
#define __WCHAR_TYPE__ int
#define __WCHAR_WIDTH__ 32
#define __WINT_MAX__ 4294967295U
#define __WINT_TYPE__ unsigned int
#define __WINT_UNSIGNED__ 1
#define __WINT_WIDTH__ 32
#define __XSAVEOPT__ 1
#define __XSAVE__ 1
#define __amd64 1
#define __amd64__ 1
#define __clang__ 1
#define __clang_literal_encoding__ "UTF-8"
#define __clang_major__ 19
#define __clang_minor__ 0
#define __clang_patchlevel__ 0
#define __clang_version__ "19.0.0git (icx 2025.0.0.20241008)"
#define __clang_wide_literal_encoding__ "UTF-32"
#define __code_model_small__ 1
#define __corei7 1
#define __corei7__ 1
#define __cplusplus 202002L
#define __cpp_aggregate_bases 201603L
#define __cpp_aggregate_nsdmi 201304L
#define __cpp_aggregate_paren_init 201902L
#define __cpp_alias_templates 200704L
#define __cpp_aligned_new 201606L
#define __cpp_attributes 200809L
#define __cpp_binary_literals 201304L
#define __cpp_capture_star_this 201603L
#define __cpp_char8_t 202207L
#define __cpp_concepts 202002
#define __cpp_conditional_explicit 201806L
#define __cpp_consteval 202211L
#define __cpp_constexpr 201907L
#define __cpp_constexpr_dynamic_alloc 201907L
#define __cpp_constexpr_in_decltype 201711L
#define __cpp_constinit 201907L
#define __cpp_decltype 200707L
#define __cpp_decltype_auto 201304L
#define __cpp_deduction_guides 201703L
#define __cpp_delegating_constructors 200604L
#define __cpp_deleted_function 202403L
#define __cpp_designated_initializers 201707L
#define __cpp_digit_separators 201309L
#define __cpp_enumerator_attributes 201411L
#define __cpp_exceptions 199711L
#define __cpp_fold_expressions 201603L
#define __cpp_generic_lambdas 201707L
#define __cpp_guaranteed_copy_elision 201606L
#define __cpp_hex_float 201603L
#define __cpp_if_constexpr 201606L
#define __cpp_impl_coroutine 201902L
#define __cpp_impl_destroying_delete 201806L
#define __cpp_impl_three_way_comparison 201907L
#define __cpp_inheriting_constructors 201511L
#define __cpp_init_captures 201803L
#define __cpp_initializer_lists 200806L
#define __cpp_inline_variables 201606L
#define __cpp_lambdas 200907L
#define __cpp_named_character_escapes 202207L
#define __cpp_namespace_attributes 201411L
#define __cpp_nested_namespace_definitions 201411L
#define __cpp_noexcept_function_type 201510L
#define __cpp_nontype_template_args 201411L
#define __cpp_nontype_template_parameter_auto 201606L
#define __cpp_nsdmi 200809L
#define __cpp_placeholder_variables 202306L
#define __cpp_range_based_for 201603L
#define __cpp_raw_strings 200710L
#define __cpp_ref_qualifiers 200710L
#define __cpp_return_type_deduction 201304L
#define __cpp_rtti 199711L
#define __cpp_rvalue_references 200610L
#define __cpp_sized_deallocation 201309L
#define __cpp_static_assert 201411L
#define __cpp_static_call_operator 202207L
#define __cpp_structured_bindings 202403L
#define __cpp_template_auto 201606L
#define __cpp_template_template_args 201611L
#define __cpp_threadsafe_static_init 200806L
#define __cpp_unicode_characters 200704L
#define __cpp_unicode_literals 200710L
#define __cpp_user_defined_literals 200809L
#define __cpp_using_enum 201907L
#define __cpp_variable_templates 201304L
#define __cpp_variadic_templates 200704L
#define __cpp_variadic_using 201611L
#define __gnu_linux__ 1
#define __linux 1
#define __linux__ 1
#define __llvm__ 1
#define __pic__ 2
#define __private_extern__ extern
#define __seg_fs __attribute__((address_space(257)))
#define __seg_gs __attribute__((address_space(256)))
#define __tune_corei7__ 1
#define __unix 1
#define __unix__ 1
#define __x86_64 1
#define __x86_64__ 1
#define linux 1
#define unix 1
    child config.compilerFlags took 1.480712 seconds
Executing: mpiicc -cc=icx --help | head -n 20 
stdout:
OVERVIEW: Intel(R) oneAPI DPC++/C++ Compiler
USAGE: icx [options] file...
OPTIONS:
  -###                    Print (but do not run) the commands to run for this compilation
  -#x                     Show commands to run and use verbose output
  -#                      Print (but do not run) the commands to run for this compilation
  -align                  Align doubles to two words in structs (x86 only)
  --amdgpu-arch-tool=<value>
                          Tool used for detecting AMD GPU arch in the system.
  --analyzer-output <value>
                          Static analyzer report output format (html|plist|plist-multi-file|plist-html|sarif|sarif-html|text).
  --analyze               Run the static analyzer
  -ansi-alias             enable use of ANSI aliasing rules optimizations user asserts that the program adheres to these rules
  -arcmt-migrate-emit-errors
                          Emit ARC errors even if the migrator can fix them
  -arcmt-migrate-report-output <value>
                          Output path for the plist report
  -ax<codes>              generate multiple, processor-specific, auto-dispatched code paths for Intel® processors, specified by <codes>, if there is a performance benefit
Executing: mpiicc -cc=icx --help
stdout:
OVERVIEW: Intel(R) oneAPI DPC++/C++ Compiler
USAGE: icx [options] file...
OPTIONS:
  -###                    Print (but do not run) the commands to run for this compilation
  -#x                     Show commands to run and use verbose output
  -#                      Print (but do not run) the commands to run for this compilation
  -align                  Align doubles to two words in structs (x86 only)
  --amdgpu-arch-tool=<value>
                          Tool used for detecting AMD GPU arch in the system.
  --analyzer-output <value>
                          Static analyzer report output format (html|plist|plist-multi-file|plist-html|sarif|sarif-html|text).
  --analyze               Run the static analyzer
  -ansi-alias             enable use of ANSI aliasing rules optimizations user asserts that the program adheres to these rules
  -arcmt-migrate-emit-errors
                          Emit ARC errors even if the migrator can fix them
  -arcmt-migrate-report-output <value>
                          Output path for the plist report
  -ax<codes>              generate multiple, processor-specific, auto-dispatched code paths for Intel® processors, specified by <codes>, if there is a performance benefit
  -B <prefix>             Search $prefix$file for executables, libraries, and data files. If $prefix is a directory, search $prefix/$file
  -b <arg>                Pass -b <arg> to the linker on AIX
  -CC                     Include comments from within macros in preprocessed output
  -cl-denorms-are-zero    OpenCL only. Allow denormals to be flushed to zero.
  -cl-ext=<value>         OpenCL only. Enable or disable OpenCL extensions/optional features. The argument is a comma-separated sequence of one or more extension names, each prefixed by '+' or '-'.
  -cl-fast-relaxed-math   OpenCL only. Sets -cl-finite-math-only and -cl-unsafe-math-optimizations, and defines __FAST_RELAXED_MATH__.
  -cl-finite-math-only    OpenCL only. Allow floating-point optimizations that assume arguments and results are not NaNs or +-Inf.
  -cl-fp32-correctly-rounded-divide-sqrt
                          OpenCL only. Specify that single precision floating-point divide and sqrt used in the program source are correctly rounded.
  -cl-kernel-arg-info     OpenCL only. Generate kernel argument metadata.
  -cl-mad-enable          OpenCL only. Allow use of less precise MAD computations in the generated binary.
  -cl-no-signed-zeros     OpenCL only. Allow use of less precise no signed zeros computations in the generated binary.
  -cl-no-stdinc           OpenCL only. Disables all standard includes containing non-native compiler types and functions.
  -cl-opt-disable         OpenCL only. This option disables all optimizations. By default optimizations are enabled.
  -cl-single-precision-constant
                          OpenCL only. Treat double precision floating-point constant as single precision constant.
  -cl-std=<value>         OpenCL language standard to compile for.
  -cl-strict-aliasing     OpenCL only. This option is added for compatibility with OpenCL 1.0.
  -cl-uniform-work-group-size
                          OpenCL only. Defines that the global work-size be a multiple of the work-group size specified to clEnqueueNDRangeKernel
  -cl-unsafe-math-optimizations
                          OpenCL only. Allow unsafe floating-point optimizations.  Also implies -cl-no-signed-zeros and -cl-mad-enable.
  --config=<file>         Specify configuration file
  --cuda-compile-host-device
                          Compile CUDA code for both host and device (default). Has no effect on non-CUDA compilations.
  --cuda-device-only      Compile CUDA code for device only
  --cuda-feature=<value>  Manually specify the CUDA feature to use
  --cuda-host-only        Compile CUDA code for host only. Has no effect on non-CUDA compilations.
  --cuda-include-ptx=<value>
                          Include PTX for the following GPU architecture (e.g. sm_35) or 'all'. May be specified more than once.
  --cuda-noopt-device-debug
                          Enable device-side debug info generation. Disables ptxas optimizations.
  --cuda-path-ignore-env  Ignore environment variables to detect CUDA installation
  --cuda-path=<value>     CUDA installation path
  -cuid=<value>           An ID for compilation unit, which should be the same for the same compilation unit but different for different compilation units. It is used to externalize device-side static variables for single source offloading languages CUDA and HIP so that they can be accessed by the host code of the same compilation unit.
  -cxx-isystem <directory>
                          Add directory to the C++ SYSTEM include search path
  -C                      Include comments in preprocessed output
  -c                      Only run preprocess, compile, and assemble steps
  -daal=<value>           Link Intel(R) Data Analytics Acceleration Library (Intel(R) DAAL) libraries and bring in the associated headers (parallel)
  -darwin-target-variant-triple <value>
                          Specify the darwin target variant triple
  -darwin-target-variant <value>
                          Generate code for an additional runtime variant of the deployment target
  -dD                     Print macro definitions in -E mode in addition to normal output
  -debug=<value>          Enable debug information. Valid args: none, all, full, minimal
  -dependency-dot <value> Filename to write DOT-formatted header dependencies to
  -dependency-file <value>
                          Filename (or -) to write dependency output to
  -device-math-lib=<value>
                          Control the addition of device math libraries when compiling for other devices.  Valid arguments are fp64, fp32
  -dI                     Print include directives in -E mode in addition to normal output
  -dM                     Print macro definitions in -E mode instead of normal output
  -dryrun                 Print (but do not run) the commands to run for this compilation
  -dsym-dir <dir>         Directory to output dSYM's (if any) to
  -dumpdir <dumppfx>      Use <dumpfpx> as a prefix to form auxiliary and dump file names
  -dumpmachine            Display the compiler's target processor
  -dumpversion            Display the version of the compiler
  -D <macro>=<value>      Define <macro> to <value> (or 1 if <value> omitted)
  --embed-dir=<dir>       Add directory to embed search path
  -emit-ast               Emit Clang AST files for source inputs
  --emit-extension-symbol-graphs
                          Generate additional symbol graphs for extended modules.
  -emit-interface-stubs   Generate Interface Stub Files.
  -emit-llvm              Use the LLVM representation for assembler and object files
  -emit-merged-ifs        Generate Interface Stub Files, emit merged text not binary.
  --emit-static-lib       Enable linker job to emit a static library.
  -emit-symbol-graph      Generate Extract API information as a side effect of compilation.
  --end-no-unused-arguments
                          Start emitting warnings for unused driver arguments
  -EP                     Preprocess to stdout, omitting #line directives.
  --extract-api-ignores=<value>
                          Comma separated list of files containing a new line separated list of API symbols to ignore when extracting API information.
  -extract-api            Extract API information
  -E                      Only run the preprocessor
  -faapcs-bitfield-load   Follows the AAPCS standard that all volatile bit-field write generates at least one load. (ARM only).
  -faapcs-bitfield-width  Follow the AAPCS standard requirement stating that volatile bit-field width is dictated by the field container type. (ARM only).
  -faddrsig               Emit an address-significance table
  -falign-functions=<value>
                          Align the start of functions on a 2 (DEFAULT) or <n> byte boundary where <n> is a power of 2.
  -falign-functions       align the start of functions to an optimal machine-dependent value.
  -falign-loops=<N>       N must be a power of two. Align loops to the boundary
  -falign-stack=assume-16-byte
                          Assume the stack is aligned on 16-byte boundaries
  -falign-stack=assume-4-byte
                          Assume the stack is aligned on 4-byte boundaries
  -falign-stack=maintain-16-byte
                          Do not assume any alignment, but maintain alignment in case the stack is already aligned
  -faligned-allocation    Enable C++17 aligned allocation functions
  -fallow-editor-placeholders
                          Treat editor placeholders as valid source code
  -faltivec-src-compat=<value>
                          Source-level compatibility for Altivec vectors (for PowerPC targets). This includes results of vector comparison (scalar for 'xl', vector for 'gcc') as well as behavior when initializing with a scalar (splatting for 'xl', element zero only for 'gcc'). For 'mixed', the compatibility is as 'gcc' for 'vector bool/vector pixel' and as 'xl' for other types. Current default is 'mixed'.
  -fansi-escape-codes     Use ANSI escape codes for diagnostics
  -fapinotes-modules      Enable module-based external API notes support
  -fapinotes-swift-version=<version>
                          Specify the Swift version to use when filtering API notes
  -fapinotes              Enable external API notes support
  -fapple-kext            Use Apple's kernel extensions ABI
  -fapple-link-rtlib      Force linking the clang builtins runtime library
  -fapple-pragma-pack     Enable Apple gcc-compatible #pragma pack handling
  -fapplication-extension Restrict code to those available for App Extensions
  -fapprox-func           Allow certain math function calls to be replaced with an approximately equivalent calculation
  -fargument-noalias      Enables 'noalias' attribute for all pointer-type arguments
  -fassume-nothrow-exception-dtor
                          Assume that exception objects' destructors are non-throwing
  -fasync-exceptions      Enable EH Asynchronous exceptions
  -fauto-import           MinGW specific. Enable code generation support for automatic dllimport, and enable support for it in the linker. Enabled by default.
  -fbasic-block-address-map
                          Emit the basic block address map section.
  -fbasic-block-sections=<value>
                          Place each function's basic blocks in unique sections (ELF Only)
  -fbinutils-version=<major.minor>
                          Produced object files can use all ELF features supported by this binutils version and newer. If -fno-integrated-as is specified, the generated assembly will consider GNU as support. 'none' means that all ELF features can be used, regardless of binutils support. Defaults to 2.26.
  -fblocks                Enable the 'blocks' language feature
  -fborland-extensions    Accept non-standard constructs supported by the Borland compiler
  -fbuild-session-file=<file>
                          Use the last modification time of <file> as the build session timestamp
  -fbuild-session-timestamp=<time since Epoch in seconds>
                          Time when the current build session started
  -fbuiltin-module-map    Load the clang builtins module map file.
  -fc++-abi=<value>       C++ ABI to use. This will override the target C++ ABI.
  -fcall-saved-x10        Make the x10 register call-saved (AArch64 only)
  -fcall-saved-x11        Make the x11 register call-saved (AArch64 only)
  -fcall-saved-x12        Make the x12 register call-saved (AArch64 only)
  -fcall-saved-x13        Make the x13 register call-saved (AArch64 only)
  -fcall-saved-x14        Make the x14 register call-saved (AArch64 only)
  -fcall-saved-x15        Make the x15 register call-saved (AArch64 only)
  -fcall-saved-x18        Make the x18 register call-saved (AArch64 only)
  -fcall-saved-x8         Make the x8 register call-saved (AArch64 only)
  -fcall-saved-x9         Make the x9 register call-saved (AArch64 only)
  -fcaret-diagnostics-max-lines=<value>
                          Set the maximum number of source lines to show in a caret diagnostic (0 = no limit).
  -fcf-protection=<value> Instrument control-flow architecture protection
  -fcf-protection         Enable cf-protection in 'full' mode
  -fchar8_t               Enable C++ builtin type char8_t
  -fcheck-new             Do not assume C++ operator new may not return NULL
  -fclang-abi-compat=<version>
                          Attempt to match the ABI of Clang <version>
  -fclangir               Use the ClangIR pipeline to compile
  -fcolor-diagnostics     Enable colors in diagnostics
  -fcomment-block-commands=<arg>
                          Treat each comma separated argument in <arg> as a documentation comment block command
  -fcommon                Place uninitialized global variables in a common block
  -fcomplete-member-pointers
                          Require member pointer base types to be complete if they would be significant under the Microsoft ABI
  -fconstexpr-backtrace-limit=<value>
                          Set the maximum number of entries to print in a constexpr evaluation backtrace (0 = no limit)
  -fconstexpr-depth=<value>
                          Set the maximum depth of recursive constexpr function calls
  -fconstexpr-steps=<value>
                          Set the maximum number of steps in constexpr function evaluation
  -fcoro-aligned-allocation
                          Prefer aligned allocation for C++ Coroutines
  -fcoroutines            Enable support for the C++ Coroutines
  -fcoverage-compilation-dir=<value>
                          The compilation directory to embed in the coverage mapping.
  -fcoverage-mapping      Generate coverage mapping to enable code coverage analysis
  -fcoverage-mcdc         Enable MC/DC criteria when generating code coverage
  -fcoverage-prefix-map=<old>=<new>
                          remap file source paths <old> to <new> in coverage mapping. If there are multiple options, prefix replacement is applied in reverse order starting from the last one
  -fcrash-diagnostics-dir=<dir>
                          Put crash-report files in <dir>
  -fcrash-diagnostics=<value>
                          Set level of crash diagnostic reporting, (option: off, compiler, all)
  -fcrash-diagnostics     Enable crash diagnostic reporting (default)
  -fcs-profile-generate=<directory>
                          Generate instrumented code to collect context sensitive execution counts into <directory>/default.profraw (overridden by LLVM_PROFILE_FILE env var)
  -fcs-profile-generate   Generate instrumented code to collect context sensitive execution counts into default.profraw (overridden by LLVM_PROFILE_FILE env var)
  -fcuda-prec-sqrt        Specify that sqrt is correctly rounded (for CUDA devices)
  -fcuda-short-ptr        Use 32-bit pointers for accessing const/local/shared address spaces
  -fcx-fortran-rules      Range reduction is enabled for complex arithmetic operations.
  -fcx-limited-range      Basic algebraic expansions of complex arithmetic operations involving are enabled.
  -fcxx-exceptions        Enable C++ exceptions
  -fcxx-modules           Enable modules for C++
  -fdata-sections         Place each data in its own section
  -fdebug-compilation-dir=<value>
                          The compilation directory to embed in the debug info
  -fdebug-default-version=<value>
                          Default DWARF version to use, if a -g option caused DWARF debug info to be produced
  -fdebug-info-for-profiling
                          Emit extra debug info to make sample profile more accurate
  -fdebug-macro           Emit macro debug information
  -fdebug-prefix-map=<old>=<new>
                          For paths in debug info, remap directory <old> to <new>. If multiple options match a path, the last option wins
  -fdebug-ranges-base-address
                          Use DWARF base address selection entries in .debug_ranges
  -fdebug-types-section   Place debug types in their own section (ELF Only)
  -fdeclspec              Allow __declspec as a keyword
  -fdefine-target-os-macros
                          Enable predefined target OS macros
  -fdelayed-template-parsing
                          Parse templated function definitions at the end of the translation unit
  -fdelete-null-pointer-checks
                          Treat usage of null pointers as undefined behavior (default)
  -fdiagnostics-absolute-paths
                          Print absolute paths in diagnostics
  -fdiagnostics-hotness-threshold=<value>
                          Prevent optimization remarks from being output if they do not have at least this profile count. Use 'auto' to apply the threshold from profile summary
  -fdiagnostics-misexpect-tolerance=<value>
                          Prevent misexpect diagnostics from being output if the profile counts are within N% of the expected. 
  -fdiagnostics-parseable-fixits
                          Print fix-its in machine parseable form
  -fdiagnostics-print-source-range-info
                          Print source range spans in numeric form
  -fdiagnostics-show-hotness
                          Enable profile hotness information in diagnostic line
  -fdiagnostics-show-note-include-stack
                          Display include stacks for diagnostic notes
  -fdiagnostics-show-option
                          Print option name with mappable diagnostics
  -fdiagnostics-show-template-tree
                          Print a template comparison tree for differing templates
  -fdigraphs              Enable alternative token representations '<:', ':>', '<%', '%>', '%:', '%:%:' (default)
  -fdirect-access-external-data
                          Don't use GOT indirection to reference external data symbols
  -fdisable-block-signature-string
                          Disable block signature string)
  -fdiscard-value-names   Discard value names in LLVM IR
  -fdollars-in-identifiers
                          Allow '$' in identifiers
  -fdriver-only           Only run the driver.
  -fdwarf-exceptions      Use DWARF style exceptions
  -feliminate-unused-debug-types
                          Do not emit  debug info for defined but unused types
  -fembed-bitcode-marker  Embed placeholder LLVM IR data as a marker
  -fembed-bitcode=<option>
                          Embed LLVM bitcode
  -fembed-bitcode         Embed LLVM IR bitcode as data
  -fembed-offload-object=<value>
                          Embed Offloading device-side binary into host object file as a section.
  -femit-all-decls        Emit all declarations, even if unused
  -femit-class-debug-always
                          Emit debug information for a C++ class into each object file where the class is used. This flag is useful for tools which are unable to resolve incomplete type descriptions.  Using this option may cause a large increase in the size of the debug information
  -femit-compact-unwind-non-canonical
                          Try emitting Compact-Unwind for non-canonical entries. Maybe overriden by other constraints
  -femit-dwarf-unwind=<value>
                          When to emit DWARF unwind (EH frame) info
  -femulated-tls          Use emutls functions to access thread_local variables
  -fenable-matrix         Enable matrix data type and related builtin functions
  -fexceptions            Enable support for exception handling
  -fexcess-precision=<value>
                          Allows control over excess precision on targets where native support for the precision types is not available. By default, excess precision is used to calculate intermediate results following the rules specified in ISO C99.
  -fexperimental-late-parse-attributes
                          Enable experimental late parsing of attributes
  -fexperimental-library  Control whether unstable and experimental library features are enabled. This option enables various library features that are either experimental (also known as TSes), or have been but are not stable yet in the selected Standard Library implementation. It is not recommended to use this option in production code, since neither ABI nor API stability are guaranteed. This is intended to provide a preview of features that will ship in the future for experimentation purposes
  -fexperimental-modules-reduced-bmi
                          Generate the reduced BMI
  -fexperimental-new-constant-interpreter
                          Enable the experimental new constant interpreter
  -fexperimental-openacc-macro-override <value>
                          Overrides the _OPENACC macro value for experimental testing during OpenACC support development
  -fexperimental-relative-c++-abi-vtables
                          Use the experimental C++ class ABI for classes with virtual tables
  -fexperimental-sanitize-metadata-ignorelist=<value>
                          Disable sanitizer metadata for modules and functions that match the provided special case list
  -fexperimental-sanitize-metadata=<value>
                          Specify the type of metadata to emit for binary analysis sanitizers
  -fexperimental-strict-floating-point
                          Enables the use of non-default rounding modes and non-default exception handling on targets that are not currently ready.
  -fextend-arguments=<value>
                          Controls how scalar integer arguments are extended in calls to unprototyped and varargs functions
  -ffast-math             Allow aggressive, lossy floating-point optimizations
  -ffat-lto-objects       Enable fat LTO object support
  -ffile-compilation-dir=<value>
                          The compilation directory to embed in the debug info and coverage mapping.
  -ffile-prefix-map=<value>
                          remap file source paths in debug info, predefined preprocessor macros and __builtin_FILE(). Implies -ffile-reproducible.
  -ffile-reproducible     Use the target's platform-specific path separator character when expanding the __FILE__ macro
  -ffine-grained-bitfield-accesses
                          Use separate accesses for consecutive bitfield runs with legal widths and alignments.
  -ffinite-loops          Assume all non-trivial loops are finite.
  -ffinite-math-only      Allow floating-point optimizations that assume arguments and results are not NaNs or +-inf. This defines the \_\_FINITE\_MATH\_ONLY\_\_ preprocessor macro.
  -ffixed-a0              Reserve the a0 register (M68k only)
  -ffixed-a1              Reserve the a1 register (M68k only)
  -ffixed-a2              Reserve the a2 register (M68k only)
  -ffixed-a3              Reserve the a3 register (M68k only)
  -ffixed-a4              Reserve the a4 register (M68k only)
  -ffixed-a5              Reserve the a5 register (M68k only)
  -ffixed-a6              Reserve the a6 register (M68k only)
  -ffixed-d0              Reserve the d0 register (M68k only)
  -ffixed-d1              Reserve the d1 register (M68k only)
  -ffixed-d2              Reserve the d2 register (M68k only)
  -ffixed-d3              Reserve the d3 register (M68k only)
  -ffixed-d4              Reserve the d4 register (M68k only)
  -ffixed-d5              Reserve the d5 register (M68k only)
  -ffixed-d6              Reserve the d6 register (M68k only)
  -ffixed-d7              Reserve the d7 register (M68k only)
  -ffixed-g1              Reserve the G1 register (SPARC only)
  -ffixed-g2              Reserve the G2 register (SPARC only)
  -ffixed-g3              Reserve the G3 register (SPARC only)
  -ffixed-g4              Reserve the G4 register (SPARC only)
  -ffixed-g5              Reserve the G5 register (SPARC only)
  -ffixed-g6              Reserve the G6 register (SPARC only)
  -ffixed-g7              Reserve the G7 register (SPARC only)
  -ffixed-i0              Reserve the I0 register (SPARC only)
  -ffixed-i1              Reserve the I1 register (SPARC only)
  -ffixed-i2              Reserve the I2 register (SPARC only)
  -ffixed-i3              Reserve the I3 register (SPARC only)
  -ffixed-i4              Reserve the I4 register (SPARC only)
  -ffixed-i5              Reserve the I5 register (SPARC only)
  -ffixed-l0              Reserve the L0 register (SPARC only)
  -ffixed-l1              Reserve the L1 register (SPARC only)
  -ffixed-l2              Reserve the L2 register (SPARC only)
  -ffixed-l3              Reserve the L3 register (SPARC only)
  -ffixed-l4              Reserve the L4 register (SPARC only)
  -ffixed-l5              Reserve the L5 register (SPARC only)
  -ffixed-l6              Reserve the L6 register (SPARC only)
  -ffixed-l7              Reserve the L7 register (SPARC only)
  -ffixed-o0              Reserve the O0 register (SPARC only)
  -ffixed-o1              Reserve the O1 register (SPARC only)
  -ffixed-o2              Reserve the O2 register (SPARC only)
  -ffixed-o3              Reserve the O3 register (SPARC only)
  -ffixed-o4              Reserve the O4 register (SPARC only)
  -ffixed-o5              Reserve the O5 register (SPARC only)
  -ffixed-point           Enable fixed point types
  -ffixed-r19             Reserve register r19 (Hexagon only)
  -ffixed-r9              Reserve the r9 register (ARM only)
  -ffixed-x10             Reserve the x10 register (AArch64/RISC-V only)
  -ffixed-x11             Reserve the x11 register (AArch64/RISC-V only)
  -ffixed-x12             Reserve the x12 register (AArch64/RISC-V only)
  -ffixed-x13             Reserve the x13 register (AArch64/RISC-V only)
  -ffixed-x14             Reserve the x14 register (AArch64/RISC-V only)
  -ffixed-x15             Reserve the x15 register (AArch64/RISC-V only)
  -ffixed-x16             Reserve the x16 register (AArch64/RISC-V only)
  -ffixed-x17             Reserve the x17 register (AArch64/RISC-V only)
  -ffixed-x18             Reserve the x18 register (AArch64/RISC-V only)
  -ffixed-x19             Reserve the x19 register (AArch64/RISC-V only)
  -ffixed-x1              Reserve the x1 register (AArch64/RISC-V only)
  -ffixed-x20             Reserve the x20 register (AArch64/RISC-V only)
  -ffixed-x21             Reserve the x21 register (AArch64/RISC-V only)
  -ffixed-x22             Reserve the x22 register (AArch64/RISC-V only)
  -ffixed-x23             Reserve the x23 register (AArch64/RISC-V only)
  -ffixed-x24             Reserve the x24 register (AArch64/RISC-V only)
  -ffixed-x25             Reserve the x25 register (AArch64/RISC-V only)
  -ffixed-x26             Reserve the x26 register (AArch64/RISC-V only)
  -ffixed-x27             Reserve the x27 register (AArch64/RISC-V only)
  -ffixed-x28             Reserve the x28 register (AArch64/RISC-V only)
  -ffixed-x29             Reserve the x29 register (AArch64/RISC-V only)
  -ffixed-x2              Reserve the x2 register (AArch64/RISC-V only)
  -ffixed-x30             Reserve the x30 register (AArch64/RISC-V only)
  -ffixed-x31             Reserve the x31 register (AArch64/RISC-V only)
  -ffixed-x3              Reserve the x3 register (AArch64/RISC-V only)
  -ffixed-x4              Reserve the x4 register (AArch64/RISC-V only)
  -ffixed-x5              Reserve the x5 register (AArch64/RISC-V only)
  -ffixed-x6              Reserve the x6 register (AArch64/RISC-V only)
  -ffixed-x7              Reserve the x7 register (AArch64/RISC-V only)
  -ffixed-x8              Reserve the x8 register (AArch64/RISC-V only)
  -ffixed-x9              Reserve the x9 register (AArch64/RISC-V only)
  -fforce-check-cxx20-modules-input-files
                          Check the input source files from C++20 modules explicitly
  -fforce-dwarf-frame     Always emit a debug frame section
  -fforce-emit-vtables    Emits more virtual tables to improve devirtualization
  -fforce-enable-int128   Enable support for int128_t type
  -ffp-accuracy=<value>   Specifies the required accuracy for floating-point operations and library calls.
  -ffp-contract=<value>   Form fused FP ops (e.g. FMAs)
  -ffp-eval-method=<value>
                          Specifies the evaluation method to use for floating-point arithmetic.
  -ffp-exception-behavior=<value>
                          Specifies the exception behavior of floating-point operations.
  -ffp-model=<value>      Controls the semantics of floating-point calculations.
  -ffreestanding          Assert that the compilation takes place in a freestanding environment
  -ffuchsia-api-level=<value>
                          Set Fuchsia API level
  -ffunction-sections     Place each function in its own section
  -fglobal-isel           Enables the global instruction selector
  -fgnu-keywords          Allow GNU-extension keywords regardless of language standard
  -fgnu-runtime           Generate output compatible with the standard GNU Objective-C runtime
  -fgnu89-inline          Use the gnu89 inline semantics
  -fgnuc-version=<value>  Sets various macros to claim compatibility with the given GCC version (default is 4.2.1)
  -fgpu-allow-device-init Allow device side init function in HIP (experimental)
  -fgpu-approx-transcendentals
                          Use approximate transcendental functions
  -fgpu-default-stream=<value>
                          Specify default stream. The default value is 'legacy'. (CUDA/HIP only)
  -fgpu-defer-diag        Defer host/device related diagnostic messages for CUDA/HIP
  -fgpu-flush-denormals-to-zero
                          Flush denormal floating point values to zero in CUDA/HIP device mode.
  -fgpu-rdc               Generate relocatable device code, also known as separate compilation mode
  -fgpu-sanitize          Enable sanitizer for supported offloading devices
  -fhelp                  Display available options
  -fhip-emit-relocatable  Compile HIP source to relocatable
  -fhip-fp32-correctly-rounded-divide-sqrt
                          Specify that single precision floating-point divide and sqrt used in the program source are correctly rounded (HIP device compilation only)
  -fhip-kernel-arg-name   Specify that kernel argument names are preserved (HIP only)
  -fhip-new-launch-api    Use new kernel launching API for HIP
  -fhlsl-strict-availability
                          Enables strict availability diagnostic mode for HLSL built-in functions.
  -fhls                   Enable Intel FPGA High Level Synthesis extensions
  -fhonor-infinities      Specify that floating-point optimizations are not allowed that assume arguments and results are not +-inf.
  -fhonor-nan-compares    Honor NaN compares with fast math
  -fhonor-nans            Specify that floating-point optimizations are not allowed that assume arguments and results are not NANs.
  -fignore-exceptions     Enable support for ignoring exception handling constructs
  -fimf-absolute-error=<value>
                          Define the maximum allowable absolute error for math library function results
  -fimf-accuracy-bits=<value>
                          Define the relative error, measured by the number of correct bits,for math library function results
  -fimf-arch-consistency=<value>
                          Ensures that the math library functions produce consistent results across different implementations of the same architecture
  -fimf-domain-exclusion=<value>
                          Indicates the input arguments domain on which math functions must provide correct results.
  -fimf-max-error=<value> defines the maximum allowable relative error, measured in ulps, for math library function results
  -fimf-precision=<value> Defines the accuracy (precision) for math library functions.
  -fimf-use-svml=<value>  Instruct the compiler to implement math library functions using the Short Vector Math Library(SVML)
  -fimplicit-module-maps  Implicitly search the file system for module map files.
  -fincremental-extensions
                          Enable incremental processing extensions such as processingstatements on the global scope.
  -finline-functions      Inline suitable functions
  -finline-hint-functions Inline functions which are (explicitly or implicitly) marked inline
  -finline-max-stacksize=<value>
                          Suppress inlining of functions whose stack size exceeds the given value
  -finput-charset=<value> Specify the default character set for source files
  -finstrument-function-entry-bare
                          Instrument function entry only, after inlining, without arguments to the instrumentation call
  -finstrument-functions-after-inlining
                          Like -finstrument-functions, but insert the calls after inlining
  -finstrument-functions  Generate calls to instrument function entry and exit
  -fintegrated-as         Enable the integrated assembler
  -fintegrated-cc1        Run cc1 in-process
  -fintegrated-objemitter Use internal machine object code emitter.
  -fintel-long-double-size=<value>
                          Overrides the size of long double from the architecture/OS defaults.
  -fintelfpga             Perform ahead-of-time compilation for FPGA
  -fiopenmp-simd          Same as -qopenmp-simd
  -fiopenmp               Same as -qopenmp
  -fjmc                   Enable just-my-code debugging
  -fjump-tables           Use jump tables for lowering switches
  -fkeep-persistent-storage-variables
                          Enable keeping all variables that have a persistent storage duration, including global, static and thread-local variables, to guarantee that they can be directly addressed
  -fkeep-static-consts    Keep static const variables even if unused
  -fkeep-system-includes  Instead of expanding system headers when emitting preprocessor output, preserve the #include directive. Useful when producing preprocessed output for test case reduction. May produce incorrect output if preprocessor symbols that control the included content (e.g. _XOPEN_SOURCE) are defined in the including source file. The portability of the resulting source to other compilation environments is not guaranteed.
                          
                          Only valid with -E.
  -flax-vector-conversions=<value>
                          Enable implicit vector bit-casts
  -flink-huge-device-code Generate and use a custom linker script for huge device code sections
  -flto-jobs=<value>      Controls the backend parallelism of -flto=thin (default of 0 means the number of threads will be derived from the number of CPUs detected)
  -flto=auto              Enable LTO in 'full' mode
  -flto=jobserver         Enable LTO in 'full' mode
  -flto=<value>           Set LTO mode
  -flto                   Enable LTO in 'full' mode
  -fmacro-backtrace-limit=<value>
                          Set the maximum number of entries to print in a macro expansion backtrace (0 = no limit)
  -fmacro-prefix-map=<value>
                          remap file source paths in predefined preprocessor macros and __builtin_FILE(). Implies -ffile-reproducible.
  -fmaintain-32-byte-stack-align
                          Do not assume any alignment, but maintain alignment in case the stack is already aligned
  -fmath-errno            Require math functions to indicate errors by setting errno
  -fmax-tokens=<value>    Max total number of preprocessed tokens for -Wmax-tokens.
  -fmax-type-align=<value>
                          Specify the maximum alignment to enforce on pointers lacking an explicit alignment
  -fma                    Enable the combining of floating point multiples and add/subtract operations.
  -fmemory-profile-use=<pathname>
                          Use memory profile for profile-guided memory optimization
  -fmemory-profile=<directory>
                          Enable heap memory profiling and dump results into <directory>
  -fmemory-profile        Enable heap memory profiling
  -fmerge-all-constants   Allow merging of constants
  -fmerge-debug-strings   Merge identical debug strings in different object files.
  -fmessage-length=<value>
                          Format message diagnostics so that they fit within N columns
  -fminimize-whitespace   Ignore the whitespace from the input file when emitting preprocessor output. It will only contain whitespace when necessary, e.g. to keep two minus signs from merging into to an increment operator. Useful with the -P option to normalize whitespace such that two files with only formatting changes are equal.
                          
                          Only valid with -E on C-like inputs and incompatible with -traditional-cpp.
  -fmodule-file=[<name>=]<file>
                          Specify the mapping of module name to precompiled module file, or load a module file if name is omitted.
  -fmodule-header=<kind>  Build a C++20 Header Unit from a header that should be found in the user (fmodule-header=user) or system (fmodule-header=system) search path.
  -fmodule-header         Build a C++20 Header Unit from a header
  -fmodule-map-file=<file>
                          Load this module map file
  -fmodule-name=<name>    Specify the name of the module to build
  -fmodule-output=<value> Save intermediate module file results when compiling a standard C++ module unit.
  -fmodule-output         Save intermediate module file results when compiling a standard C++ module unit.
  -fmodules-cache-path=<directory>
                          Specify the module cache path
  -fmodules-decluse       Require declaration of modules used within a module
  -fmodules-disable-diagnostic-validation
                          Disable validation of the diagnostic options when loading the module
  -fmodules-ignore-macro=<value>
                          Ignore the definition of the given macro when building and loading modules
  -fmodules-prune-after=<seconds>
                          Specify the interval (in seconds) after which a module file will be considered unused
  -fmodules-prune-interval=<seconds>
                          Specify the interval (in seconds) between attempts to prune the module cache
  -fmodules-search-all    Search even non-imported modules to resolve references
  -fmodules-strict-decluse
                          Like -fmodules-decluse but requires all headers to be in modules
  -fmodules-user-build-path <directory>
                          Specify the module user build path
  -fmodules-validate-input-files-content
                          Validate PCM input files based on content if mtime differs
  -fmodules-validate-once-per-build-session
                          Don't verify input files for the modules if the module has been successfully validated or loaded during this build session
  -fmodules-validate-system-headers
                          Validate the system headers that a module depends on when loading the module
  -fmodules               Enable the 'modules' language feature
  -fms-compatibility-version=<value>
                          Dot-separated value representing the Microsoft compiler version number to report in _MSC_VER (0 = don't define it (default))
  -fms-compatibility      Enable full Microsoft Visual C++ compatibility
  -fms-define-stdc        Define '__STDC__' to '1' in MSVC Compatibility mode
  -fms-extensions         Accept some non-standard constructs supported by the Microsoft compiler
  -fms-hotpatch           Ensure that all functions can be hotpatched at runtime
  -fms-runtime-lib=<value>
                          Select Windows run-time library
  -fms-volatile           Volatile loads and stores have acquire and release semantics
  -fmsc-version=<value>   Microsoft compiler version number to report in _MSC_VER (0 = don't define it (default))
  -fnew-alignment=<align> Specifies the largest alignment guaranteed by '::operator new(size_t)'
  -fnew-infallible        Enable treating throwing global C++ operator new as always returning valid memory (annotates with __attribute__((returns_nonnull)) and throw()). This is detectable in source.
  -fno-aapcs-bitfield-width
                          Do not follow the AAPCS standard requirement stating that volatile bit-field width is dictated by the field container type. (ARM only).
  -fno-access-control     Disable C++ access control
  -fno-addrsig            Don't emit an address-significance table
  -fno-alias              Enables 'noalias' attribute for all pointer-type arguments
  -fno-align-functions    Aligns on a 2-byte boundary
  -fno-apinotes-modules   Disable module-based external API notes support
  -fno-apinotes           Disable external API notes support
  -fno-assume-sane-operator-new
                          Don't assume that C++'s global operator new can't alias any pointer
  -fno-assume-unique-vtables
                          Disable optimizations based on vtable pointer identity
  -fno-assumptions        Disable codegen and compile-time checks for C++23's [[assume]] attribute
  -fno-auto-import        MinGW specific. Disable support for automatic dllimport in code generation and linking
  -fno-autolink           Disable generation of linker directives for automatic library linking
  -fno-builtin-<value>    Disable implicit builtin knowledge of a specific function
  -fno-builtin            Disable implicit builtin knowledge of functions
  -fno-bundle-offload-arch
                          Specify that the offload bundler should not identify a bundle with specific arch. For example, the bundle for `nvptx64-nvidia-cuda-sm_80` uses the bundle tag `nvptx64-nvidia-cuda` when used. This allows .o files to contain .bc bundles that are unspecific to a particular arch version.
  -fno-c++-static-destructors
                          Disable C++ static destructor registration
  -fno-char8_t            Disable C++ builtin type char8_t
  -fno-clangir            Use the AST -> LLVM pipeline to compile
  -fno-color-diagnostics  Disable colors in diagnostics
  -fno-common             Compile common globals like normal definitions
  -fno-complete-member-pointers
                          Do not require member pointer base types to be complete if they would be significant under the Microsoft ABI
  -fno-constant-cfstrings Disable creation of CodeFoundation-type constant strings
  -fno-convergent-functions
                          Assume all functions may be convergent.
  -fno-coverage-mapping   Disable code coverage analysis
  -fno-coverage-mcdc      Disable MC/DC coverage criteria
  -fno-crash-diagnostics  Disable auto-generation of preprocessed source files and a script for reproduction during a clang crash
  -fno-cuda-prec-sqrt     Don't specify that sqrt is correctly rounded (for CUDA devices)
  -fno-cx-fortran-rules   Range reduction is disabled for complex arithmetic operations
  -fno-cx-limited-range   Basic algebraic expansions of complex arithmetic operations involving are disabled.
  -fno-cxx-modules        Disable modules for C++
  -fno-debug-macro        Do not emit macro debug information
  -fno-declspec           Disallow __declspec as a keyword
  -fno-define-target-os-macros
                          Disable predefined target OS macros
  -fno-delayed-template-parsing
                          Disable delayed template parsing
  -fno-delete-null-pointer-checks
                          Do not treat usage of null pointers as undefined behavior
  -fno-diagnostics-fixit-info
                          Do not include fixit information in diagnostics
  -fno-diagnostics-show-line-numbers
                          Show line numbers in diagnostic code snippets
  -fno-digraphs           Disallow alternative token representations '<:', ':>', '<%', '%>', '%:', '%:%:'
  -fno-direct-access-external-data
                          Use GOT indirection to reference external data symbols
  -fno-disable-block-signature-string
                          Don't disable block signature string)
  -fno-discard-value-names
                          Do not discard value names in LLVM IR
  -fno-dollars-in-identifiers
                          Disallow '$' in identifiers
  -fno-elide-constructors Disable C++ copy constructor elision
  -fno-elide-type         Do not elide types when printing diagnostics
  -fno-eliminate-unused-debug-types
                          Emit  debug info for defined but unused types
  -fno-emit-class-debug-always
                          Emit debug information for a C++ class in only one object file
  -fno-exceptions         Disable support for exception handling
  -fno-experimental-late-parse-attributes
                          Disable experimental late parsing of attributes
  -fno-experimental-relative-c++-abi-vtables
                          Do not use the experimental C++ class ABI for classes with virtual tables
  -fno-experimental-sanitize-metadata=<value>
                          Disable emitting metadata for binary analysis sanitizers
  -fno-fat-lto-objects    Disable fat LTO object support
  -fno-file-reproducible  Use the host's platform-specific path separator character when expanding the __FILE__ macro
  -fno-fine-grained-bitfield-accesses
                          Use large-integer access for consecutive bitfield runs.
  -fno-finite-loops       Do not assume that any loop is finite.
  -fno-fixed-point        Disable fixed point types
  -fno-force-enable-int128
                          Disable support for int128_t type
  -fno-global-isel        Disables the global instruction selector
  -fno-gnu-inline-asm     Disable GNU style inline asm
  -fno-gpu-allow-device-init
                          Don't allow device side init function in HIP (experimental)
  -fno-gpu-approx-transcendentals
                          Don't use approximate transcendental functions
  -fno-gpu-defer-diag     Don't defer host/device related diagnostic messages for CUDA/HIP
  -fno-hip-emit-relocatable
                          Do not override toolchain to compile HIP source to relocatable
  -fno-hip-fp32-correctly-rounded-divide-sqrt
                          Don't specify that single precision floating-point divide and sqrt used in the program source are correctly rounded (HIP device compilation only)
  -fno-hip-kernel-arg-name
                          Don't specify that kernel argument names are preserved (HIP only)
  -fno-hip-new-launch-api Don't use new kernel launching API for HIP
  -fno-honor-nan-compares Do not honor NaN compares with fast math
  -fno-integrated-as      Disable the integrated assembler
  -fno-integrated-cc1     Spawn a separate process for each cc1
  -fno-integrated-objemitter
                          Use external machine object code emitter.
  -fno-jump-tables        Do not use jump tables for lowering switches
  -fno-keep-persistent-storage-variables
                          Disable keeping all variables that have a persistent storage duration, including global, static and thread-local variables, to guarantee that they can be directly addressed
  -fno-keep-static-consts Don't keep static const variables even if unused
  -fno-knr-functions      Disable support for K&R C function declarations
  -fno-link-huge-device-code
                          Do not generate or use a custom linker script for huge device code sections (default)
  -fno-lto                Disable LTO mode (default)
  -fno-memory-profile     Disable heap memory profiling
  -fno-merge-all-constants
                          Disallow merging of constants
  -fno-merge-debug-strings
                           Do not mergeidentical debug strings in different object files.
  -fno-modules-check-relocated<value>
                          Skip checks for relocated modules when loading PCM files
  -fno-modules-validate-textual-header-includes
                          Do not enforce -fmodules-decluse and private header restrictions for textual headers. This flag will be removed in a future Clang release.
  -fno-new-infallible     Disable treating throwing global C++ operator new as always returning valid memory (annotates with __attribute__((returns_nonnull)) and throw()). This is detectable in source.
  -fno-objc-avoid-heapify-local-blocks
                          Don't try to avoid heapifying local blocks
  -fno-objc-infer-related-result-type
                          do not infer Objective-C related result type based on method family
  -fno-offload-lto        Disable LTO mode (default) for offload compilation
  -fno-offload-uniform-block
                          Don't assume that kernels are launched with uniform block sizes (default true for CUDA/HIP and false otherwise)
  -fno-openmp-device-lib=<value>
                          Control exclusion of device libraries from device binary linkage. Valid arguments are libc, libm-fp32, libm-fp64, all
  -fno-openmp-extensions  Disable all Clang extensions for OpenMP directives and clauses
  -fno-operator-names     Do not treat C++ operator name keywords as synonyms for operators
  -fno-optimize-sibling-calls
                          Disable tail call optimization, keeping the call stack accurate
  -fno-pch-codegen        Do not generate code for uses of this PCH that assumes an explicit object file will be built for the PCH
  -fno-pch-debuginfo      Do not generate debug info for types in an object file built from this PCH and do not generate them elsewhere
  -fno-plt                Use GOT indirection instead of PLT to make external function calls (x86 only)
  -fno-preserve-as-comments
                          Do not preserve comments in inline assembly
  -fno-profile-generate   Disable generation of profile instrumentation.
  -fno-profile-instr-generate
                          Disable generation of profile instrumentation.
  -fno-profile-instr-use  Disable using instrumentation data for profile-guided optimization
  -fno-pseudo-probe-for-profiling
                          Do not emit pseudo probes for sample profiling
  -fno-raw-string-literals
                          Disable raw string literals
  -fno-register-global-dtors-with-atexit
                          Don't use atexit or __cxa_atexit to register global destructors
  -fno-relaxed-template-template-args
                          Disable C++17 relaxed template template argument matching
  -fno-rtlib-add-rpath    Do not add -rpath with architecture-specific resource directory to the linker flags. When --hip-link is specified, do not add -rpath with HIP runtime library directory to the linker flags
  -fno-rtlib-defaultlib   On Windows, do not emit /defaultlib: directives to link compiler-rt libraries
  -fno-rtti-data          Disable generation of RTTI data
  -fno-rtti               Disable generation of rtti information
  -fno-sanitize-address-globals-dead-stripping
                          Disable linker dead stripping of globals in AddressSanitizer
  -fno-sanitize-address-outline-instrumentation
                          Use default code inlining logic for the address sanitizer
  -fno-sanitize-address-poison-custom-array-cookie
                          Disable poisoning array cookies when using custom operator new[] in AddressSanitizer
  -fno-sanitize-address-use-after-scope
                          Disable use-after-scope detection in AddressSanitizer
  -fno-sanitize-address-use-odr-indicator
                          Disable ODR indicator globals
  -fno-sanitize-cfi-canonical-jump-tables
                          Do not make the jump table addresses canonical in the symbol table
  -fno-sanitize-cfi-cross-dso
                          Disable control flow integrity (CFI) checks for cross-DSO calls.
  -fno-sanitize-coverage=<value>
                          Disable features of coverage instrumentation for Sanitizers
  -fno-sanitize-hwaddress-experimental-aliasing
                          Disable aliasing mode in HWAddressSanitizer
  -fno-sanitize-ignorelist
                          Don't use ignorelist file for sanitizers
  -fno-sanitize-memory-param-retval
                          Disable detection of uninitialized parameters and return values
  -fno-sanitize-memory-track-origins
                          Disable origins tracking in MemorySanitizer
  -fno-sanitize-memory-use-after-dtor
                          Disable use-after-destroy detection in MemorySanitizer
  -fno-sanitize-recover=<value>
                          Disable recovery for specified sanitizers
  -fno-sanitize-stable-abi
                          Conventional ABI instrumentation for sanitizer runtime. Default: Conventional
  -fno-sanitize-stats     Disable sanitizer statistics gathering.
  -fno-sanitize-thread-atomics
                          Disable atomic operations instrumentation in ThreadSanitizer
  -fno-sanitize-thread-func-entry-exit
                          Disable function entry/exit instrumentation in ThreadSanitizer
  -fno-sanitize-thread-memory-access
                          Disable memory access instrumentation in ThreadSanitizer
  -fno-sanitize-trap=<value>
                          Disable trapping for specified sanitizers
  -fno-sanitize-trap      Disable trapping for all sanitizers
  -fno-short-wchar        Force wchar_t to be an unsigned int
  -fno-show-column        Do not include column number on diagnostics
  -fno-show-source-location
                          Do not include source location information with diagnostics
  -fno-signed-char        char is unsigned
  -fno-signed-zeros       Allow optimizations that ignore the sign of floating point zeros
  -fno-skip-odr-check-in-gmf
                          Perform ODR checks for decls in the global module fragment.
  -fno-spell-checking     Disable spell-checking
  -fno-split-machine-functions
                          Disable late function splitting using profile information (x86 ELF/COFF)
  -fno-split-stack        Wouldn't use segmented stack
  -fno-stack-clash-protection
                          Disable stack clash protection
  -fno-stack-protector    Disable the use of stack protectors
  -fno-standalone-debug   Limit debug information produced to reduce size of debug binary
  -fno-strict-aliasing    Disable optimizations based on strict aliasing rules
  -fno-strict-float-cast-overflow
                          Relax language rules and try to match the behavior of the target's native float-to-int conversion instructions
  -fno-strict-return      Don't treat control flow paths that fall off the end of a non-void function as unreachable
  -fno-sycl-add-default-spec-consts-image
                          Turns off generation of device image where all specialization constant usages are replaced with default values.
  -fno-sycl-allow-device-dependencies
                          Do not allow dependencies between device code images (default)
  -fno-sycl-dead-args-optimization
                          Disables elimination of DPC++ dead kernel arguments
  -fno-sycl-decompose-functor
                          Do not decompose SYCL functor if possible (experimental, CUDA only)
  -fno-sycl-device-code-split-esimd
                          do not split ESIMD and SYCL device code into separate device binary images. Has effect only for SPIR-based targets. (experimental)
  -fno-sycl-device-lib-jit-link
                          Disables sycl device library jit link (experimental)
  -fno-sycl-device-lib=<value>
                          Control exclusion of device libraries from device binary linkage. Valid arguments are libc, libm-fp32, libm-fp64, all
  -fno-sycl-early-optimizations
                          Disable standard optimization pipeline for SYCL device compiler
  -fno-sycl-esimd-force-stateless-mem
                          Do not enforce using stateless memory accesses.
  -fno-sycl-explicit-simd Disable SYCL explicit SIMD extension. (deprecated)
  -fno-sycl-force-inline-kernel-lambda
                          Disallow force inline SYCL kernels lambda in entry point
  -fno-sycl-id-queries-fit-in-int
                          Do not assume that SYCL ID queries fit within MAX_INT.
  -fno-sycl-instrument-device-code
                          Do not add Instrumentation and Tracing Technology (ITT) instrumentation intrinsics calls (experimental)
  -fno-sycl-libspirv      Disable check for libspirv
  -fno-sycl-link-spirv    Disable adding of the default (spir64) triple when discovered in user specified objects and archives.
  -fno-sycl-pstl-offload  Disable offloading of C++ standard parallel algorithms.
  -fno-sycl-rdc           Generate relocatable device code during SYCL offload target compilation. Use of ‘-fno-sycl-rdc’ in combination with ‘-c’ will produce final device binaries within the generated fat object. When using this option, each kernel must be self-contained within its translation unit (source file).  Therefore, the use of SYCL_EXTERNAL is disallowed when this option is enabled.
  -fno-sycl-remove-unused-external-funcs
                          Prevent removal of unused `SYCL_EXTERNAL` functions
  -fno-sycl-unnamed-lambda
                          Disallow unnamed SYCL lambda kernels
  -fno-sycl-use-bitcode   Use SPIR-V instead of LLVM bitcode in fat objects (deprecated)
  -fno-sycl-use-footer    Disable usage of the integration footer during SYCL enabled compilations.
  -fno-sycl               Disables SYCL kernels compilation for device
  -fno-system-debug       Do not emit debug information for declarations in system headers
  -fno-temp-file          Directly create compilation output files. This may lead to incorrect incremental builds if the compiler crashes
  -fno-threadsafe-statics Do not emit code to make initialization of local statics thread safe
  -fno-trigraphs          Do not process trigraph sequences
  -fno-unified-lto        Use distinct LTO pipelines
  -fno-unique-section-names
                          Don't use unique names for text and data sections
  -fno-unroll-loops       Turn off loop unroller
  -fno-use-cxa-atexit     Don't use __cxa_atexit for calling destructors
  -fno-use-init-array     Use .ctors/.dtors instead of .init_array/.fini_array
  -fno-vec-allow-scalar-stores
                          When this option is set, an explicit simd loop (for example, one set with #pragma omp simd) will not be vectorized if it contains a store to a scalar variable that is not marked as private, lastprivate, or reduction.
  -fno-vec-peel-loops     Disable peel loop vectorization.
  -fno-vec-remainder-loops
                          Disable remainder loop vectorization.
  -fno-vec-with-mask      Disable vectorization for short trip-count loops with masking.
  -fno-verify-intermediate-code
                          Disable verification of LLVM IR
  -fno-visibility-inlines-hidden-static-local-var
                          Disables -fvisibility-inlines-hidden-static-local-var (this is the default on non-darwin targets)
  -fno-xray-function-index
                          Omit function index section at the expense of single-function patching performance
  -fno-zero-initialized-in-bss
                          Don't place zero initialized data in BSS
  -fobjc-arc-exceptions   Use EH-safe code when synthesizing retains and releases in -fobjc-arc
  -fobjc-arc              Synthesize retain and release calls for Objective-C pointers
  -fobjc-avoid-heapify-local-blocks
                          Try to avoid heapifying local blocks
  -fobjc-disable-direct-methods-for-testing
                          Ignore attribute objc_direct so that direct methods can be tested
  -fobjc-encode-cxx-class-template-spec
                          Fully encode c++ class template specialization
  -fobjc-exceptions       Enable Objective-C exceptions
  -fobjc-runtime=<value>  Specify the target Objective-C runtime kind and version
  -fobjc-weak             Enable ARC-style weak references in Objective-C
  -foffload-implicit-host-device-templates
                          Template functions or specializations without host, device and global attributes have implicit host device attributes (CUDA/HIP only)
  -foffload-lto=<value>   Set LTO mode for offload compilation
  -foffload-lto           Enable LTO in 'full' mode for offload compilation
  -foffload-uniform-block Assume that kernels are launched with uniform block sizes (default true for CUDA/HIP and false otherwise)
  -fomit-frame-pointer    Omit the frame pointer from functions that don't need it. Some stack unwinding cases, such as profilers and sanitizers, may prefer specifying -fno-omit-frame-pointer. On many targets, -O1 and higher omit the frame pointer by default. -m[no-]omit-leaf-frame-pointer takes precedence for leaf functions
  -fopenacc               Enable OpenACC
  -fopenmp-concurrent-host-device-compile<value>
                          Enable parallel compilation of host and device compilation steps when performing OpenMP offload compiles using -fopenmp-targets. (experimental)
  -fopenmp-declare-target-scalar-defaultmap=<value>
                          Assume that a scalar declare target variable with implicit data-mapping referenced in a 'target' construct has the same value in the host and device environment
  -fopenmp-device-lib=<value>
                          Control inclusion of device libraries into device binary linkage. Valid arguments are libc, libm-fp32, libm-fp64, all
  -fopenmp-device-link    Perform device link during compilation step instead of link step (-c compilations).  Use for offload compilations to produce final device binaries within the generated fat object.
  -fopenmp-extensions     Enable all Clang extensions for OpenMP directives and clauses
  -fopenmp-force-usm      Force behvaior as if the user specified pragma omp requires unified_shared_memory.
  -fopenmp-offload-mandatory
                          Do not create a host fallback if offloading to the device fails.
  -fopenmp-simd           Emit OpenMP code only for SIMD-based constructs. Advanced users who prefer to use OpenMP* as it is implemented by the LLVM community can get most of that functionality by using -fopenmp-simd.
  -fopenmp-target-buffers=<value>
                          Allow access to target objects of 4GB or larger in target code.
  -fopenmp-target-debug   Enable debugging in the OpenMP offloading device RTL
  -fopenmp-target-default-sub-group-size=<value>
                          Specify the default sub-group size of SPMD kernels generated for OpenMP target constructs for SPIR64
  -fopenmp-target-jit     Emit code that can be JIT compiled for OpenMP offloading. Implies -foffload-lto=full
  -fopenmp-targets=<value>
                          Specify comma-separated list of triples that correspond to OpenMP offloading targets to be supported.  Valid triples include spir64_gen, spir64_x86_64 and spir64
  -fopenmp-version=<value>
                          Set OpenMP version (e.g. 45 for OpenMP 4.5, 51 for OpenMP 5.1). Default value is 51 for Clang
  -fopenmp                Parse OpenMP pragmas and generate parallel code. Advanced users who prefer to use OpenMP* as it is implemented by the LLVM community can get most of that functionality by using -fopenmp.
  -foperator-arrow-depth=<value>
                          Maximum number of 'operator->'s to call for a member access
  -foptimization-record-file=<file>
                          Specify the output name of the file containing the optimization remarks. Implies -fsave-optimization-record. On Darwin platforms, this cannot be used with multiple -arch <arch> options.
  -foptimization-record-passes=<regex>
                          Only include passes which match a specified regular expression in the generated optimization record (by default, include all passes)
  -forder-file-instrumentation
                          Generate instrumented code to collect order file into default.profraw file (overridden by '=' form of option or LLVM_PROFILE_FILE env var)
  -fortlib                Allow for Fortran generated objects to be mixed and matched and linked in with the C/C++ compiler to pull in the needed libraries.
  -fp-model=<value>       Controls the semantics of floating-point calculations.
  -fp-speculation=<value> Specifies the exception behavior of floating-point operations.
  -fpack-struct=<value>   Specify the default maximum struct packing alignment
  -fpascal-strings        Recognize and construct Pascal-style string literals
  -fpass-plugin=<dsopath> Load pass plugin from a dynamic shared object file (only with new pass manager).
  -fpatchable-function-entry=<N,M>
                          Generate M NOPs before function entry and N-M NOPs after function entry
  -fpcc-struct-return     Override the default ABI to return all structs on the stack
  -fpch-codegen           Generate code for uses of this PCH that assumes an explicit object file will be built for the PCH
  -fpch-debuginfo         Generate debug info for types in an object file built from this PCH and do not generate them elsewhere
  -fpch-instantiate-templates
                          Instantiate templates already while building a PCH
  -fpch-validate-input-files-content
                          Validate PCH input files based on content if mtime differs
  -fplugin-arg-<name>-<arg>
                          Pass <arg> to plugin <name>
  -fplugin=<dsopath>      Load the named plugin (dynamic shared object)
  -fprebuilt-implicit-modules
                          Look up implicit modules in the prebuilt module path
  -fprebuilt-module-path=<directory>
                          Specify the prebuilt module path
  -fpreview-breaking-changes
                          When specified, it informs the compiler driver and compilation phases that it is allowed to break backward compatibility. When this option is specified the compiler will also set the macro __INTEL_PREVIEW_BREAKING_CHANGES.
                          When this option is used in conjunction with -fsycl, the driver will link against an alternate form of libsycl, libsycl-preview.
  -fproc-stat-report=<value>
                          Save subprocess statistics to the given file
  -fproc-stat-report<value>
                          Print subprocess statistics
  -fprofile-arcs          Instrument code to produce gcov data files (*.gcda)
  -fprofile-dwo-dir=<value>
                          Directory to store .dwo files when using -fprofile-sample-generate and -gsplit-dwarf. (experimental)
  -fprofile-exclude-files=<value>
                          Instrument only functions from files where names don't match all the regexes separated by a semi-colon
  -fprofile-filter-files=<value>
                          Instrument only functions from files where names match any regex separated by a semi-colon
  -fprofile-function-groups=<N>
                          Partition functions into N groups and select only functions in group i to be instrumented using -fprofile-selected-function-group
  -fprofile-generate=<directory>
                          Generate instrumented code to collect execution counts into <directory>/default.profraw (overridden by LLVM_PROFILE_FILE env var)
  -fprofile-generate      Generate instrumented code to collect execution counts into default.profraw (overridden by LLVM_PROFILE_FILE env var)
  -fprofile-instr-generate=<file>
                          Generate instrumented code to collect execution counts into <file> (overridden by LLVM_PROFILE_FILE env var)
  -fprofile-instr-generate
                          Generate instrumented code to collect execution counts into default.profraw file (overridden by '=' form of option or LLVM_PROFILE_FILE env var)
  -fprofile-instr-use=<value>
                          Use instrumentation data for profile-guided optimization
  -fprofile-list=<value>  Filename defining the list of functions/files to instrument. The file uses the sanitizer special case list format.
  -fprofile-ml-use        Use pre-trained machine learning model for profile guided optimizations.(deprecated)
  -fprofile-remapping-file=<file>
                          Use the remappings described in <file> to match the profile data against names in the program
  -fprofile-sample-accurate
                          Specifies that the sample profile is accurate
  -fprofile-sample-generate=<value>
                          Enable compiler and linker generating information and adjusting optimizations for Sample-based Profile Guided Optimizations (SPGO). Vaild arguments are none, keep-all-opt, med-fidelity, max-fidelity. (experimental)
  -fprofile-sample-use=<value>
                          Enable compiler and linker using information for Sample-based Profile Guided Optimizations (SPGO). (experimental)
  -fprofile-selected-function-group=<i>
                          Partition functions into N groups using -fprofile-function-groups and select only functions in group i to be instrumented. The valid range is 0 to N-1 inclusive
  -fprofile-update=<method>
                          Set update method of profile counters
  -fprofile-use=<pathname>
                          Use instrumentation data for profile-guided optimization. If pathname is a directory, it reads from <pathname>/default.profdata. Otherwise, it reads from file <pathname>.
  -fprotect-parens        Determines whether the optimizer honors parentheses when floating-point expressions are evaluated
  -fpseudo-probe-for-profiling
                          Emit pseudo probes for sample profiling
  -fptrauth-auth-traps    Enable traps on authentication failures
  -fptrauth-calls         Enable signing and authentication of all indirect calls
  -fptrauth-function-pointer-type-discrimination
                          Enable type discrimination on C function pointers
  -fptrauth-init-fini     Enable signing of function pointers in init/fini arrays
  -fptrauth-intrinsics    Enable pointer authentication intrinsics
  -fptrauth-returns       Enable signing and authentication of return addresses
  -fptrauth-vtable-pointer-address-discrimination
                          Enable address discrimination of vtable pointers
  -fptrauth-vtable-pointer-type-discrimination
                          Enable type discrimination of vtable pointers
  -frandomize-layout-seed-file=<file>
                          File holding the seed used by the randomize structure layout feature
  -frandomize-layout-seed=<seed>
                          The seed used by the randomize structure layout feature
  -fraw-string-literals   Enable raw string literals
  -freciprocal-math       Allow division operations to be reassociated
  -freg-struct-return     Override the default ABI to return small structs in registers
  -fregister-global-dtors-with-atexit
                          Use atexit or __cxa_atexit to register global destructors
  -frelaxed-template-template-args
                          Enable C++17 relaxed template template argument matching
  -fropi                  Generate read-only position independent code (ARM only)
  -frounding-math         Disable floating point optimizations that assume the default rounding mode.
  -frtlib-add-rpath       Add -rpath with architecture-specific resource directory to the linker flags. When --hip-link is specified, also add -rpath with HIP runtime library directory to the linker flags
  -frtlib-defaultlib      On Windows, emit /defaultlib: directives to link compiler-rt libraries (default)
  -frwpi                  Generate read-write position independent code (ARM only)
  -fsafe-buffer-usage-suggestions
                          Display suggestions to update code associated with -Wunsafe-buffer-usage warnings
  -fsample-profile-use-profi
                          Use profi to infer block and edge counts
  -fsanitize-address-destructor=<value>
                          Set the kind of module destructors emitted by AddressSanitizer instrumentation. These destructors are emitted to unregister instrumented global variables when code is unloaded (e.g. via `dlclose()`).
  -fsanitize-address-field-padding=<value>
                          Level of field padding for AddressSanitizer
  -fsanitize-address-globals-dead-stripping
                          Enable linker dead stripping of globals in AddressSanitizer
  -fsanitize-address-outline-instrumentation
                          Always generate function calls for address sanitizer instrumentation
  -fsanitize-address-poison-custom-array-cookie
                          Enable poisoning array cookies when using custom operator new[] in AddressSanitizer
  -fsanitize-address-use-after-return=<mode>
                          Select the mode of detecting stack use-after-return in AddressSanitizer
  -fsanitize-address-use-after-scope
                          Enable use-after-scope detection in AddressSanitizer
  -fsanitize-address-use-odr-indicator
                          Enable ODR indicator globals to avoid false ODR violation reports in partially sanitized programs at the cost of an increase in binary size
  -fsanitize-cfi-canonical-jump-tables
                          Make the jump table addresses canonical in the symbol table
  -fsanitize-cfi-cross-dso
                          Enable control flow integrity (CFI) checks for cross-DSO calls.
  -fsanitize-cfi-icall-experimental-normalize-integers
                          Normalize integers in CFI indirect call type signature checks
  -fsanitize-cfi-icall-generalize-pointers
                          Generalize pointers in CFI indirect call type signature checks
  -fsanitize-coverage-allowlist=<value>
                          Restrict sanitizer coverage instrumentation exclusively to modules and functions that match the provided special case list, except the blocked ones
  -fsanitize-coverage-ignorelist=<value>
                          Disable sanitizer coverage instrumentation for modules and functions that match the provided special case list, even the allowed ones
  -fsanitize-coverage=<value>
                          Specify the type of coverage instrumentation for Sanitizers
  -fsanitize-hwaddress-abi=<value>
                          Select the HWAddressSanitizer ABI to target (interceptor or platform, default interceptor). This option is currently unused.
  -fsanitize-hwaddress-experimental-aliasing
                          Enable aliasing mode in HWAddressSanitizer
  -fsanitize-ignorelist=<value>
                          Path to ignorelist file for sanitizers
  -fsanitize-memory-param-retval
                          Enable detection of uninitialized parameters and return values
  -fsanitize-memory-track-origins=<value>
                          Enable origins tracking in MemorySanitizer
  -fsanitize-memory-track-origins
                          Enable origins tracking in MemorySanitizer
  -fsanitize-memory-use-after-dtor
                          Enable use-after-destroy detection in MemorySanitizer
  -fsanitize-memtag-mode=<value>
                          Set default MTE mode to 'sync' (default) or 'async'
  -fsanitize-recover=<value>
                          Enable recovery for specified sanitizers
  -fsanitize-stable-abi   Stable  ABI instrumentation for sanitizer runtime. Default: Conventional
  -fsanitize-stats        Enable sanitizer statistics gathering.
  -fsanitize-system-ignorelist=<value>
                          Path to system ignorelist file for sanitizers
  -fsanitize-thread-atomics
                          Enable atomic operations instrumentation in ThreadSanitizer (default)
  -fsanitize-thread-func-entry-exit
                          Enable function entry/exit instrumentation in ThreadSanitizer (default)
  -fsanitize-thread-memory-access
                          Enable memory access instrumentation in ThreadSanitizer (default)
  -fsanitize-trap=<value> Enable trapping for specified sanitizers
  -fsanitize-trap         Enable trapping for all sanitizers
  -fsanitize-undefined-strip-path-components=<number>
                          Strip (or keep only, if negative) a given number of path components when emitting check metadata.
  -fsanitize=<check>      Turn on runtime checks for various forms of undefined or suspicious behavior. See user manual for available checks
  -fsave-optimization-record=<format>
                          Generate an optimization record file in a specific format
  -fsave-optimization-record
                          Generate a YAML optimization record file
  -fseh-exceptions        Use SEH style exceptions
  -fseparate-named-sections
                          Use separate unique sections for named sections (ELF Only)
  -fshort-enums           Allocate to an enum type only as many bytes as it needs for the declared range of possible values
  -fshort-wchar           Force wchar_t to be a short unsigned int
  -fshow-overloads=<value>
                          Which overload candidates to show when overload resolution fails. Defaults to 'all'
  -fshow-skipped-includes Show skipped includes in -H output.
  -fsigned-char           char is signed
  -fsized-deallocation    Enable C++14 sized global deallocation functions
  -fsjlj-exceptions       Use SjLj style exceptions
  -fskip-odr-check-in-gmf Skip ODR checks for decls in the global module fragment.
  -fslp-vectorize         Enable the superword-level parallelism vectorization passes
  -fspell-checking-limit=<value>
                          Set the maximum number of times to perform spell checking on unrecognized identifiers (0 = no limit)
  -fsplit-dwarf-inlining  Provide minimal debug info in the object/executable to facilitate online symbolication/stack traces in the absence of .dwo/.dwp files when using Split DWARF
  -fsplit-lto-unit        Enables splitting of the LTO unit
  -fsplit-machine-functions
                          Enable late function splitting using profile information (x86 ELF/COFF)
  -fsplit-stack           Use segmented stack
  -fstack-clash-protection
                          Enable stack clash protection
  -fstack-limit-register=<value>
                          Limits the stack register size
  -fstack-protector-all   Enable stack protectors for all functions
  -fstack-protector-strong
                          Enable stack protectors for some functions vulnerable to stack smashing. Compared to -fstack-protector, this uses a stronger heuristic that includes functions containing arrays of any size (and any type), as well as any calls to alloca or the taking of an address from a local variable
  -fstack-protector       Enable stack protectors for some functions vulnerable to stack smashing. This uses a loose heuristic which considers functions vulnerable if they contain a char (or 8bit integer) array or constant sized calls to alloca , which are of greater size than ssp-buffer-size (default: 8 bytes). All variable sized calls to alloca are considered vulnerable. A function with a stack protector has a guard value added to the stack frame that is checked on function exit. The guard value must be positioned in the stack frame such that a buffer overflow from a vulnerable variable will overwrite the guard value before overwriting the function's return address. The reference stack guard value is stored in a global variable.
  -fstack-security-check  Enable overflow security checks
  -fstack-size-section    Emit section containing metadata on function stack sizes
  -fstack-usage           Emit .su file containing information on function stack sizes
  -fstandalone-debug      Emit full debug info for all types used by the program
  -fstrict-aliasing       Enable optimizations based on strict aliasing rules
  -fstrict-enums          Enable optimizations based on the strict definition of an enum's value range
  -fstrict-flex-arrays=<n>
                          Enable optimizations based on the strict definition of flexible arrays
  -fstrict-float-cast-overflow
                          Assume that overflowing float-to-int casts are undefined (default)
  -fstrict-vtable-pointers
                          Enable optimizations based on the strict rules for overwriting polymorphic C++ objects
  -fswift-async-fp=<option>
                          Control emission of Swift async extended frame info
  -fsycl-add-default-spec-consts-image
                          Generates a copy of every device image that uses a specialization constant and replaces all usages of specialization constant with default values specified by specialization_id. If a device image doesn't use a specialization constant at all then no copy is generated. This option is only useful if used in conjunction with Ahead of Time Compilation (-fsycl-target command line option).
  -fsycl-allow-device-dependencies
                          Allow dependencies between device code images
  -fsycl-dead-args-optimization
                          Enables elimination of DPC++ dead kernel arguments
  -fsycl-decompose-functor
                          Do decompose SYCL functor if possible (experimental, CUDA only)
  -fsycl-default-sub-group-size <value>
                          Set the default sub group size for SYCL kernels
  -fsycl-device-code-split-esimd
                          split ESIMD device code from SYCL into a separate device binary image (default). Has effect only for SPIR-based targets. (experimental)
  -fsycl-device-code-split=<value>
                          Perform SYCL device code split: per_kernel (device code module is created for each SYCL kernel) | per_source (device code module is created for each source (translation unit)) | off (no device code split). | auto (use heuristic to select the best way of splitting device code). Default is 'auto' - use heuristic to distribute device code across modules
  -fsycl-device-code-split
                          Perform SYCL device code split in the 'auto' mode, i.e. use heuristic to distribute device code across modules
  -fsycl-device-lib-jit-link
                          Enables sycl device library jit link (experimental)
  -fsycl-device-lib=<value>
                          Control inclusion of device libraries into device binary linkage. Valid arguments are libc, libm-fp32, libm-fp64, libimf-fp32, libimf-fp64, libimf-bf16, all
  -fsycl-device-obj=<value>
                          Specify format of device code stored in the resulting object. Valid values are: spirv, llvmir (default)
  -fsycl-device-only      Compile SYCL kernels for device
  -fsycl-disable-range-rounding
                          Deprecated: please use -fsycl-range-rounding=disable instead.
  -fsycl-dump-device-code=<value>
                          Dump device code into the user provided directory.
  -fsycl-early-optimizations
                          Enable standard optimization pipeline for SYCL device compiler
  -fsycl-embed-ir         Embed LLVM IR for runtime kernel fusion
  -fsycl-enable-function-pointers
                          Experimental Feature: Enables function pointers and support for virtual functions for DPC++ kernels and device functions.
  -fsycl-esimd-force-stateless-mem
                          Enforce using stateless memory accesses. Convert stateful accesses via SYCL accessors to stateless within ESIMD kernels. Enabled by default.
  -fsycl-exp-range-rounding
                          Use experimental range rounding.
  -fsycl-explicit-simd    Enable SYCL explicit SIMD extension. (deprecated)
  -fsycl-footer-path=<value>
                          Specify the location of the temporary source file with the included integration footer.
  -fsycl-force-inline-kernel-lambda
                          Allow force inline SYCL kernels lambda in entry point
  -fsycl-force-target=<value>
                          Force the usage of the given triple when extracting device code from any given objects on the command line
  -fsycl-fp32-prec-sqrt   SYCL only. Specify that single precision floating-point sqrt is correctly rounded.
  -fsycl-fp64-conv-emu    Enable fp64 partial emulation for kernels with only fp64 conversion operations and no fp64 computation operations (requires Intel GPU backend supporting fp64 partial emulation).
  -fsycl-help=<value>     Emit help information from the related offline compilation tool. Valid values: all, fpga, gen, x86_64.
  -fsycl-help             Emit help information from all of the offline compilation tools
  -fsycl-host-compiler-options=<value>
                          When performing the host compilation with -fsycl-host-compiler specified, use the given options during that compile. Options are expected to be a quoted list of space separated options.
  -fsycl-host-compiler=<value>
                          Specify C++ compiler binary to perform host compilation with during SYCL offload compiles.
  -fsycl-id-queries-fit-in-int
                          Assume that SYCL ID queries fit within MAX_INT.
  -fsycl-instrument-device-code
                          Add Instrumentation and Tracing Technology (ITT) instrumentation intrinsics calls (experimental)
  -fsycl-libspirv-path=<value>
                          Path to libspirv library
  -fsycl-link=<value>     Generate partially linked device and host object to be used at various stages of compilation
  -fsycl-link             Generate partially linked device object to be used with the host link
  -fsycl-max-parallel-link-jobs=<value>
                          Experimental feature: Controls the maximum parallelism of actions performed on SYCL device code post-link, i.e. the generation of SPIR-V device images or AOT compilation of each device image.
  -fsycl-optimize-non-user-code
                          Option used in conjunction with -O0 to optimize SYCL framework utility functions and leave user's kernel code unoptimized. (experimental)
  -fsycl-pstl-offload=<value>
                          Enable offloading of C++ standard parallel algorithms. Valid arguments are gpu and cpu.
  -fsycl-pstl-offload     Enable offloading of C++ standard parallel algorithms.
  -fsycl-range-rounding=<value>
                          Options for range rounding of SYCL range kernels: disable (do not generate range rounded kernels) force (only generate range rounded kernels) on (generate range rounded kernels as well as unrounded kernels). Default is 'on'
  -fsycl-remove-unused-external-funcs
                          Allow removal of unused `SYCL_EXTERNAL` functions (default)
  -fsycl-targets=<value>  Specify comma-separated list of triples that correspond to SYCL offloading targets to be supported. Valid triples include spir64_gen, spir64_x86_64, spir64_fpga and spir64
  -fsycl-unnamed-lambda   Allow unnamed SYCL lambda kernels
  -fsycl-use-bitcode      Use LLVM bitcode instead of SPIR-V in fat objects (deprecated)
  -fsycl                  Enables SYCL kernels compilation for device
  -fsyntax-only           Run the preprocessor, parser and semantic analysis stages
  -fsystem-debug          Emit debug information for declarations in system headers
  -fsystem-module         Build this module as a system module. Only used with -emit-module
  -ftarget-compile-fast   Experimental feature: Reduce target compilation time, with potential runtime performance trade-off.
  -ftarget-export-symbols Expose exported symbols in a generated target library to allow for visibilty to other modules.
  -ftarget-register-alloc-mode=<value>
                          Specify a register allocation mode for specific hardware for use by supported target backends.
  -ftemplate-backtrace-limit=<value>
                          Set the maximum number of entries to print in a template instantiation backtrace (0 = no limit)
  -ftemplate-depth=<value>
                          Set the maximum depth of recursive template instantiation
  -ftest-coverage         Produce gcov notes files (*.gcno)
  -fthin-link-bitcode=<value>
                          Write minimized bitcode to <file> for the ThinLTO thin link only
  -fthinlto-index=<value> Perform ThinLTO importing using provided function summary index
  -ftime-report=<value>   (For new pass manager) 'per-pass': one report for each pass; 'per-pass-run': one report for each pass invocation
  -ftime-trace-granularity=<value>
                          Minimum time granularity (in microseconds) traced by time profiler
  -ftime-trace=<value>    Similar to -ftime-trace. Specify the JSON file or a directory which will contain the JSON file
  -ftime-trace            Turn on time profiler. Generates JSON file based on output filename.
  -ftrap-function=<value> Issue call to specified function rather than a trap instruction
  -ftrapv-handler=<function name>
                          Specify the function to be called on overflow
  -ftrapv                 Trap on integer overflow
  -ftrigraphs             Process trigraph sequences
  -ftrivial-auto-var-init-max-size=<value>
                          Stop initializing trivial automatic stack variables if var size exceeds the specified number of instances (in bytes)
  -ftrivial-auto-var-init-stop-after=<value>
                          Stop initializing trivial automatic stack variables after the specified number of instances
  -ftrivial-auto-var-init=<value>
                          Initialize trivial automatic stack variables. Defaults to 'uninitialized'
  -ftz                    Enable flush denormal results to zero
  -funified-lto           Use the unified LTO pipeline
  -funique-basic-block-section-names
                          Use unique names for basic block sections (ELF Only)
  -funique-internal-linkage-names
                          Uniqueify Internal Linkage Symbol Names by appending the MD5 hash of the module path
  -funroll-loops          Turn on loop unroller
  -funsafe-math-optimizations
                          Allow unsafe floating-point math optimizations which may decrease precision
  -fuse-complex-intrinsics
                          Determines whether to lower _Complex operations to LLVM complex intrinsics
  -fuse-cuid=<value>      Method to generate ID's for compilation units for single source offloading languages CUDA and HIP: 'hash' (ID's generated by hashing file path and command line options) | 'random' (ID's generated as random numbers) | 'none' (disabled). Default is 'hash'. This option will be overridden by option '-cuid=[ID]' if it is specified.
  -fuse-line-directives   Use #line in preprocessed output
  -fvalidate-ast-input-files-content
                          Compute and store the hash of input files used to build an AST. Files with mismatching mtime's are considered valid if both contents is identical
  -fvec-allow-scalar-stores
                          When this option is set, an explicit simd loop (for example, one set with #pragma omp simd) will be vectorized even if it contains a store to a scalar variable that is not marked as private, lastprivate, or reduction.
  -fvec-peel-loops        Enable peel loop vectorization.
  -fvec-remainder-loops   Enable remainder loop vectorization.
  -fvec-with-mask         Enable vectorization for short trip-count loops with masking.
  -fveclib=<value>        Use the given vector functions library
  -fvectorize             Enable the loop vectorization passes
  -fverbose-asm           Generate verbose assembly output
  -fverify-intermediate-code
                          Enable verification of LLVM IR
  -fvirtual-function-elimination
                          Enables dead virtual function elimination optimization. Requires -flto=full
  -fvisibility-dllexport=<value>
                          The visibility for dllexport definitions. If Keep is specified the visibility is not adjusted [-fvisibility-from-dllstorageclass]
  -fvisibility-externs-dllimport=<value>
                          The visibility for dllimport external declarations. If Keep is specified the visibility is not adjusted [-fvisibility-from-dllstorageclass]
  -fvisibility-externs-nodllstorageclass=<value>
                          The visibility for external declarations without an explicit DLL storage class. If Keep is specified the visibility is not adjusted [-fvisibility-from-dllstorageclass]
  -fvisibility-from-dllstorageclass
                          Override the visibility of globals based on their final DLL storage class.
  -fvisibility-global-new-delete-hidden
                          Give global C++ operator new and delete declarations hidden visibility
  -fvisibility-global-new-delete=<value>
                          The visibility for global C++ operator new and delete declarations. If 'source' is specified the visibility is not adjusted
  -fvisibility-inlines-hidden-static-local-var
                          When -fvisibility-inlines-hidden is enabled, static variables in inline C++ member functions will also be given hidden visibility by default
  -fvisibility-inlines-hidden
                          Give inline C++ member functions hidden visibility by default
  -fvisibility-ms-compat  Give global types 'default' visibility and global functions and variables 'hidden' visibility by default
  -fvisibility-nodllstorageclass=<value>
                          The visibility for definitions without an explicit DLL storage class. If Keep is specified the visibility is not adjusted [-fvisibility-from-dllstorageclass]
  -fvisibility=<value>    Set the default symbol visibility for all global definitions
  -fwasm-exceptions       Use WebAssembly style exceptions
  -fwhole-program-vtables Enables whole-program vtable optimization. Requires -flto
  -fwrapv                 Treat signed integer overflow as two's complement
  -fwritable-strings      Store string literals as writable data
  -fxl-pragma-pack        Enable IBM XL #pragma pack handling
  -fxray-always-emit-customevents
                          Always emit __xray_customevent(...) calls even if the containing function is not always instrumented
  -fxray-always-emit-typedevents
                          Always emit __xray_typedevent(...) calls even if the containing function is not always instrumented
  -fxray-always-instrument=<value>
                          DEPRECATED: Filename defining the whitelist for imbuing the 'always instrument' XRay attribute.
  -fxray-attr-list=<value>
                          Filename defining the list of functions/types for imbuing XRay attributes.
  -fxray-function-groups=<value>
                          Only instrument 1 of N groups
  -fxray-ignore-loops     Don't instrument functions with loops unless they also meet the minimum function size
  -fxray-instruction-threshold=<value>
                          Sets the minimum function size to instrument with XRay
  -fxray-instrumentation-bundle=<value>
                          Select which XRay instrumentation points to emit. Options: all, none, function-entry, function-exit, function, custom. Default is 'all'.  'function' includes both 'function-entry' and 'function-exit'.
  -fxray-instrument       Generate XRay instrumentation sleds on function entry and exit
  -fxray-link-deps        Link XRay runtime library when -fxray-instrument is specified (default)
  -fxray-modes=<value>    List of modes to link in by default into XRay instrumented binaries.
  -fxray-never-instrument=<value>
                          DEPRECATED: Filename defining the whitelist for imbuing the 'never instrument' XRay attribute.
  -fxray-selected-function-group=<value>
                          When using -fxray-function-groups, select which group of functions to instrument. Valid range is 0 to fxray-function-groups - 1
  -fzero-call-used-regs=<value>
                          Clear call-used registers upon function return (AArch64/x86 only)
  -fzvector               Enable System z vector language extension
  -F <value>              Add directory to framework include search path
  --gcc-install-dir=<value>
                          Use GCC installation in the specified directory. The directory ends with path components like 'lib{,32,64}/gcc{,-cross}/$triple/$version'. Note: executables (e.g. ld) used by the compiler are not overridden by the selected GCC installation
  --gcc-toolchain=<value> Specify a directory where Clang can find 'include' and 'lib{,32,64}/gcc{,-cross}/$triple/$version'. Clang will use the GCC installation with the largest version
  --gcc-triple=<value>    Search for the GCC installation with the specified triple.
  -gcodeview-command-line Emit compiler path and command line into CodeView debug information
  -gcodeview-ghash        Emit type record hashes in a .debug$H section
  -gcodeview              Generate CodeView debug information
  -gdwarf-2               Generate source-level debug information with dwarf version 2
  -gdwarf-3               Generate source-level debug information with dwarf version 3
  -gdwarf-4               Generate source-level debug information with dwarf version 4
  -gdwarf-5               Generate source-level debug information with dwarf version 5
  -gdwarf32               Enables DWARF32 format for ELF binaries, if debug information emission is enabled.
  -gdwarf64               Enables DWARF64 format for ELF binaries, if debug information emission is enabled.
  -gdwarf                 Generate source-level debug information with the default dwarf version
  -gembed-source          Embed source text in DWARF debug sections
  -gen-reproducer=<value> Emit reproducer on (option: off, crash (default), error, always)
  -gintel-sti             Generate Intel STI debug information
  -gline-directives-only  Emit debug line info directives only
  -gline-tables-only      Emit debug line number tables only
  -global-hoist           Enable external globals are load safe (default)
  -gmodules               Generate debug info with external references to clang modules or precompiled headers
  -gno-codeview-command-line
                          Don't emit compiler path and command line into CodeView debug information
  -gno-embed-source       Restore the default behavior of not embedding source text in DWARF debug sections
  -gno-inline-line-tables Don't emit inline line tables.
  --gpu-bundle-output     Bundle output files of HIP device compilation
  --gpu-instrument-lib=<value>
                          Instrument device library for HIP, which is a LLVM bitcode containing __cyg_profile_func_enter and __cyg_profile_func_exit
  --gpu-max-threads-per-block=<value>
                          Default max threads per block for kernel launch bounds for HIP
  -gpulibc                Link the LLVM C Library for GPUs
  -gsplit-dwarf=<value>   Set DWARF fission mode
  -gstrict-dwarf          Restrict DWARF features to those defined in the specified version, avoiding features from later versions.
  -gz=<value>             DWARF debug sections compression type
  -G <size>               Put objects of at most <size> bytes into small data section (MIPS / Hexagon)
  -g                      Generate source-level debug information
  --help-hidden           Display help for hidden options
  -help                   Display available options
  --hip-device-lib=<value>
                          HIP device library
  --hip-link              Link clang-offload-bundler bundles for HIP
  --hip-path=<value>      HIP runtime installation path, used for finding HIP version and adding HIP include path.
  --hip-version=<value>   HIP version in the format of major.minor.patch
  --hipspv-pass-plugin=<dsopath>
                          path to a pass plugin for HIP to SPIR-V passes.
  --hipstdpar-interpose-alloc
                          Replace all memory allocation / deallocation calls with hipManagedMalloc / hipFree equivalents
  --hipstdpar-path=<value>
                          HIP Standard Parallel Algorithm Acceleration library path, used for finding and implicitly including the library header
  --hipstdpar-prim-path=<value>
                          rocPrim path, required by the HIP Standard Parallel Algorithm Acceleration library, used to implicitly include the rocPrim library
  --hipstdpar-thrust-path=<value>
                          rocThrust path, required by the HIP Standard Parallel Algorithm Acceleration library, used to implicitly include the rocThrust library
  --hipstdpar             Enable HIP acceleration for standard parallel algorithms
  -H                      Show header includes and nesting depth
  -I-                     Restrict all prior -I flags to double-quoted inclusion and remove current directory from include path
  -iapinotes-modules <directory>
                          Add directory to the API notes search path referenced by module name
  -ibuiltininc            Enable builtin #include directories even when -nostdinc is used before or after -ibuiltininc. Using -nobuiltininc after the option disables it
  -idirafter <value>      Add directory to AFTER include search path
  -iframeworkwithsysroot <directory>
                          Add directory to SYSTEM framework search path, absolute paths are relative to -isysroot
  -iframework <value>     Add directory to SYSTEM framework search path
  -imacros <file>         Include macros from file before parsing
  -include-pch <file>     Include precompiled header file
  -include <file>         Include file before parsing
  -index-header-map       Make the next included directory (-I or -F) an indexer header map
  -inline-forceinline     Treat inline routines as forceinline
  -inline-level=<value>   Set function inlining level where: 0 is disable, 1 is inline marked functions and 2 is inline at compilers discretion
  --intel                 Run in Intel Compiler mode
  -ipo                    Enable LTO in 'full' mode
  -ipp-link=<value>       Link Intel(R) IPP libraries in requested manner (static,dynamic,shared)
  -ipp=<value>            Link commonly used Intel(R) Integrated Performace Primitives (Intel(R) IPP) libraries and bring in the associated headers (common,crypto,nonpic,nonpic_crypto)
  -iprefix <dir>          Set the -iwithprefix/-iwithprefixbefore prefix
  -iquote <directory>     Add directory to QUOTE include search path
  -isysroot <dir>         Set the system root directory (usually /)
  -isystem-after <directory>
                          Add directory to end of the SYSTEM include search path
  -isystem <directory>    Add directory to SYSTEM include search path
  -ivfsoverlay-lib <value>
                          Load the virtual filesystem from shared library
  -ivfsoverlay <value>    Overlay the virtual filesystem described by file over the real file system
  -iwithprefixbefore <dir>
                          Set directory to include search path with prefix
  -iwithprefix <dir>      Set directory to SYSTEM include search path with prefix
  -iwithsysroot <directory>
                          Add directory to SYSTEM include search path, absolute paths are relative to -isysroot
  -I <dir>                Add directory to the end of the list of include search paths
  --libomptarget-amdgcn-bc-path=<value>
                          Path to libomptarget-amdgcn bitcode library
  --libomptarget-amdgpu-bc-path=<value>
                          Path to libomptarget-amdgcn bitcode library
  --libomptarget-nvptx-bc-path=<value>
                          Path to libomptarget-nvptx bitcode library
  -L <dir>                Add directory to library search path
  -mabi=quadword-atomics  Enable quadword atomics ABI on AIX (AIX PPC64 only). Uses lqarx/stqcx. instructions.
  -mabicalls              Enable SVR4-style position-independent code (Mips only)
  -maix-shared-lib-tls-model-opt
                          For shared library loaded with the main program, change local-dynamic access(es) to initial-exec access(es) at the function level (AIX 64-bit only).
  -maix-small-local-dynamic-tls
                          Produce a faster access sequence for local-dynamic TLS variables where the offset from the TLS base is encoded as an immediate operand (AIX 64-bit only). This access sequence is not used for variables larger than 32KB.
  -maix-small-local-exec-tls
                          Produce a faster access sequence for local-exec TLS variables where the offset from the TLS base is encoded as an immediate operand (AIX 64-bit only). This access sequence is not used for variables larger than 32KB.
  -maix-struct-return     Return all structs in memory (PPC32 only)
  -malign-branch-boundary=<value>
                          Specify the boundary's size to align branches
  -malign-branch=<value>  Specify types of branches to align
  -malign-double          Align doubles to two words in structs (x86 only)
  -maltivec               Enable AltiVec vector initializer syntax
  -mamdgpu-ieee           Sets the IEEE bit in the expected default floating point  mode register. Floating point opcodes that support exception flag gathering quiet and propagate signaling NaN inputs per IEEE 754-2008. This option changes the ABI. (AMDGPU only)
  -mamdgpu-precise-memory-op
                          Enable precise memory mode (AMDGPU only)
  -mapx-features=<value>  Enable features of APX
  -mapx-inline-asm-use-gpr32
                          Enable use of GPR32 in inline assembly for APX
  -march=<value>          For a list of available architectures for the target use '-mcpu=help'
  -marm64x<value>         Link as a hybrid ARM64X image
  -mauto-arch=<codes>     generate multiple, processor-specific, auto-dispatched code paths for X86 processors, specified by <codes>, if there is a performance benefit
  -mbackchain             Link stack frames through backchain on System Z
  -mbranch-protection=<value>
                          Enforce targets of indirect branches and function returns
  -mbranches-within-32B-boundaries
                          Align selected branches (fused, jcc, jmp) within 32-byte boundary
  -mcabac                 Enable CABAC instructions
  -mcmse                  Allow use of CMSE (Armv8-M Security Extensions)
  -mcode-object-version=<value>
                          Specify code object ABI version. Defaults to 5. (AMDGPU only)
  -mconstructor-aliases   Enable emitting complete constructors and destructors as aliases when possible
  -mcpu=<value>           For a list of available CPUs for the target use '-mcpu=help'
  -mcrbits                Control the CR-bit tracking feature on PowerPC. ``-mcrbits`` (the enablement of CR-bit tracking support) is the default for POWER8 and above, as well as for all other CPUs when optimization is applied (-O2 and above).
  -mcrc                   Allow use of CRC instructions (ARM/Mips only)
  -mcumode                Specify CU wavefront execution mode (AMDGPU only)
  -mdaz-ftz               Globally set the denormals-are-zero (DAZ) and flush-to-zero (FTZ) bits in the floating-point control register on program startup
  -mdebug-line-version=<value>
                          Set debug line version used when generating debug information
  -mdefault-visibility-export-mapping=<value>
                          Mapping between default visibility and export
  -mdouble=<n             Force double to be <n> bits
  -MD                     Write a depfile containing user and system headers
  -meabi <value>          Set EABI type. Default depends on triple)
  -membedded-data         Place constants in the .rodata section instead of the .sdata section even if they meet the -G <size> threshold (MIPS)
  -menable-experimental-extensions
                          Enable use of experimental RISC-V extensions.
  -mexec-model=<value>    Execution model (WebAssembly only)
  -mexecute-only          Disallow generation of data access to code sections (ARM only)
  -mextern-sdata          Assume that externally defined data is in the small data if it meets the -G <size> threshold (MIPS)
  -mfentry                Insert calls to fentry at function entry (x86/SystemZ only)
  -mfix-cmse-cve-2021-35465
                          Work around VLLDM erratum CVE-2021-35465 (ARM only)
  -mfix-cortex-a53-835769 Workaround Cortex-A53 erratum 835769 (AArch64 only)
  -mfix-cortex-a57-aes-1742098
                          Work around Cortex-A57 Erratum 1742098 (ARM only)
  -mfix-cortex-a72-aes-1655431
                          Work around Cortex-A72 Erratum 1655431 (ARM only)
  -mforced-sw-shadow-stack
                          Force using software shadow stack when shadow-stack enabled
  -mfp32                  Use 32-bit floating point registers (MIPS only)
  -mfp64                  Use 64-bit floating point registers (MIPS only)
  -mframe-chain=<value>   Select the frame chain model used to emit frame records (Arm only).
  -mfunction-return=<value>
                          Replace returns with jumps to ``__x86_return_thunk`` (x86 only, error otherwise)
  -MF <file>              Write depfile output from -MMD, -MD, -MM, or -M to <file>
  -mgeneral-regs-only     Generate code which only uses the general purpose registers (AArch64/x86 only)
  -mglobal-merge          Enable merging of globals
  -mgpopt                 Use GP relative accesses for symbols known to be in a small data section (MIPS)
  -mguard=<value>         Enable or disable Control Flow Guard checks and guard tables emission
  -MG                     Add missing headers to depfile
  -mharden-sls=<value>    Select straight-line speculation hardening scope (ARM/AArch64/X86 only). <arg> must be: all, none, retbr(ARM/AArch64), blr(ARM/AArch64), comdat(ARM/AArch64), nocomdat(ARM/AArch64), return(X86), indirect-jmp(X86)
  -mhvx-ieee-fp           Enable Hexagon HVX IEEE floating-point
  -mhvx-length=<value>    Set Hexagon Vector Length
  -mhvx-qfloat            Enable Hexagon HVX QFloat instructions
  -mhvx=<value>           Enable Hexagon Vector eXtensions
  -mhvx                   Enable Hexagon Vector eXtensions
  -miamcu                 Use Intel MCU ABI
  -mignore-xcoff-visibility
                          Not emit the visibility attribute for asm in AIX OS or give all symbols 'unspecified' visibility in XCOFF object file
  --migrate               Run the migrator
  -mincremental-linker-compatible
                          (integrated-as) Emit an object file which can be used with an incremental linker
  -mindirect-branch-cs-prefix
                          Add cs prefix to call and jmp to indirect thunk
  -mindirect-jump=<value> Change indirect jump instructions to inhibit speculation
  -mintrinsic-promote     Force certain functions using intrinsics to promote their architectures and make the intrinsic headers included by default
  -mios-version-min=<value>
                          Set iOS deployment target
  -MJ <value>             Write a compilation database entry per input
  -mlasx                  Enable Loongson Advanced SIMD Extension (LASX).
  -mlink-builtin-bitcode-postopt
                          Link builtin bitcodes after the optimization pipeline
  -mllvm-lto <value>      Additional arguments to forward to LLVM's option processing. Similar to -mllvm, but will also pass the given argument to the LTO step when appropriate.
  -mllvm=<arg>            Alias for -mllvm
  -mllvm <value>          Additional arguments to forward to LLVM's option processing
  -mlocal-sdata           Extend the -G behaviour to object local data (MIPS)
  -mlong-calls            Generate branches with extended addressability, usually via indirect jumps.
  -mlong-double-128       Force long double to be 128 bits
  -mlong-double-64        Force long double to be 64 bits
  -mlong-double-80        Force long double to be 80 bits, padded to 128 bits for storage
  -mlr-for-calls-only     Do not allocate the LR register for general purpose usage, only for calls. (AArch64 only)
  -mlsx                   Enable Loongson SIMD Extension (LSX).
  -mlvi-cfi               Enable only control-flow mitigations for Load Value Injection (LVI)
  -mlvi-hardening         Enable all mitigations for Load Value Injection (LVI)
  -mmacos-version-min=<value>
                          Set macOS deployment target
  -mmadd4                 Enable the generation of 4-operand madd.s, madd.d and related instructions.
  -mmark-bti-property     Add .note.gnu.property with BTI to assembly files (AArch64 only)
  -MMD                    Write a depfile containing user headers
  -mmemops                Enable generation of memop instructions
  -mmlir <value>          Additional arguments to forward to MLIR's option processing
  -mms-bitfields          Set the default structure layout to be compatible with the Microsoft compiler standard
  -mmsa                   Enable MSA ASE (MIPS only)
  -mmt                    Enable MT ASE (MIPS only)
  -MM                     Like -MMD, but also implies -E and writes to stdout by default
  -mno-abicalls           Disable SVR4-style position-independent code (Mips only)
  -mno-amdgpu-precise-memory-op
                          Disable precise memory mode (AMDGPU only)
  -mno-apx-features=<value>
                          Disable features of APX
  -mno-bti-at-return-twice
                          Do not add a BTI instruction after a setjmp or other return-twice construct (Arm/AArch64 only)
  -mno-constructor-aliases
                          Disable emitting complete constructors and destructors as aliases when possible
  -mno-crc                Disallow use of CRC instructions (Mips only)
  -mno-cumode             Specify WGP wavefront execution mode (AMDGPU only)
  -mno-daz-ftz            Do not globally set the denormals-are-zero (DAZ) and flush-to-zero (FTZ) bits in the floating-point control register on program startup
  -mno-embedded-data      Do not place constants in the .rodata section instead of the .sdata if they meet the -G <size> threshold (MIPS)
  -mno-execute-only       Allow generation of data access to code sections (ARM only)
  -mno-extern-sdata       Do not assume that externally defined data is in the small data if it meets the -G <size> threshold (MIPS)
  -mno-fix-cmse-cve-2021-35465
                          Don't work around VLLDM erratum CVE-2021-35465 (ARM only)
  -mno-fix-cortex-a53-835769
                          Don't workaround Cortex-A53 erratum 835769 (AArch64 only)
  -mno-fix-cortex-a57-aes-1742098
                          Don't work around Cortex-A57 Erratum 1742098 (ARM only)
  -mno-fix-cortex-a72-aes-1655431
                          Don't work around Cortex-A72 Erratum 1655431 (ARM only)
  -mno-fmv                Disable function multiversioning
  -mno-forced-sw-shadow-stack
                          Not force using software shadow stack when shadow-stack enabled
  -mno-gather             Disable generation of gather instructions in auto-vectorization(x86 only)
  -mno-global-merge       Disable merging of globals
  -mno-gpopt              Do not use GP relative accesses for symbols known to be in a small data section (MIPS)
  -mno-hvx-ieee-fp        Disable Hexagon HVX IEEE floating-point
  -mno-hvx-qfloat         Disable Hexagon HVX QFloat instructions
  -mno-hvx                Disable Hexagon Vector eXtensions
  -mno-implicit-float     Don't generate implicit floating point or vector instructions
  -mno-incremental-linker-compatible
                          (integrated-as) Emit an object file which cannot be used with an incremental linker
  -mno-lasx               Disable Loongson Advanced SIMD Extension (LASX).
  -mno-local-sdata        Do not extend the -G behaviour to object local data (MIPS)
  -mno-long-calls         Restore the default behaviour of not generating long calls
  -mno-lsx                Disable Loongson SIMD Extension (LSX).
  -mno-lvi-cfi            Disable control-flow mitigations for Load Value Injection (LVI)
  -mno-lvi-hardening      Disable mitigations for Load Value Injection (LVI)
  -mno-madd4              Disable the generation of 4-operand madd.s, madd.d and related instructions.
  -mno-memops             Disable generation of memop instructions
  -mno-movt               Disallow use of movt/movw pairs (ARM only)
  -mno-ms-bitfields       Do not set the default structure layout to be compatible with the Microsoft compiler standard
  -mno-msa                Disable MSA ASE (MIPS only)
  -mno-mt                 Disable MT ASE (MIPS only)
  -mno-neg-immediates     Disallow converting instructions with negative immediates to their negation or inversion.
  -mno-nvj                Disable generation of new-value jumps
  -mno-nvs                Disable generation of new-value stores
  -mno-outline-atomics    Don't generate local calls to out-of-line atomic operations
  -mno-outline            Disable function outlining (AArch64 only)
  -mno-packets            Disable generation of instruction packets
  -mno-pic-data-is-text-relative
                          Don't assume data segments are relative to text segment
  -mno-regnames           Use only register numbers when writing assembly output
  -mno-relax              Disable linker relaxation
  -mno-restrict-it        Allow generation of complex IT blocks.
  -mno-save-restore       Disable using library calls for save and restore
  -mno-scalar-strict-align
                          Allow scalar memory accesses to be unaligned (RISC-V only)
  -mno-scatter            Disable generation of scatter instructions in auto-vectorization(x86 only)
  -mno-seses              Disable speculative execution side effect suppression (SESES)
  -mno-stack-arg-probe    Disable stack probes which are enabled by default
  -mno-strict-align       Allow memory accesses to be unaligned (AArch64/LoongArch/RISC-V only)
  -mno-tgsplit            Disable threadgroup split execution mode (AMDGPU only)
  -mno-tls-direct-seg-refs
                          Disable direct TLS access through segment registers
  -mno-tocdata=<value>    Specifies a list of variables to be exempt from the TOC datatransformation.
  -mno-tocdata            This is the default. TOC data transformation is not applied to anyvariables. Only variables specified explicitly in -mtocdata= willhave the TOC data transformation.
  -mno-unaligned-access   Force all memory accesses to be aligned (AArch32/MIPSr6 only)
  -mno-unaligned-symbols  Expect external char-aligned symbols to be without ABI alignment (SystemZ only)
  -mno-vector-strict-align
                          Allow vector memory accesses to be unaligned (RISC-V only)
  -mno-wavefrontsize64    Specify wavefront size 32 mode (AMDGPU only)
  -mnocrc                 Disallow use of CRC instructions (ARM only)
  -mnop-mcount            Generate mcount/__fentry__ calls as nops. To activate they need to be patched in.
  -mnvj                   Enable generation of new-value jumps
  -mnvs                   Enable generation of new-value stores
  -module-dependency-dir <value>
                          Directory to dump module dependencies to
  -module-file-info       Provide information about a particular module file
  -momit-leaf-frame-pointer
                          Omit frame pointer setup for leaf functions
  -moutline-atomics       Generate local calls to out-of-line atomic operations
  -moutline               Enable function outlining (AArch64 only)
  -mpacked-stack          Use packed stack layout (SystemZ only).
  -mpackets               Enable generation of instruction packets
  -mpad-max-prefix-size=<value>
                          Specify maximum number of prefixes to use for padding
  -mpic-data-is-text-relative
                          Assume data segments are relative to text segment
  -mprefer-vector-width=<value>
                          Specifies preferred vector width for auto-vectorization. Defaults to 'none' which allows target specific decisions.
  -mprintf-kind=<value>   Specify the printf lowering scheme (AMDGPU only), allowed values are "hostcall"(printing happens during kernel execution, this scheme relies on hostcalls which require system to support pcie atomics) and "buffered"(printing happens after all kernel threads exit, this uses a printf buffer and does not rely on pcie atomic support)
  -MP                     Create phony target for each dependency (other than main file)
  -mqdsp6-compat          Enable hexagon-qdsp6 backward compatibility
  -MQ <value>             Specify name of main file output to quote in depfile
  -mrecip=<value>         Control use of approximate reciprocal and reciprocal square root instructions followed by <n> iterations of Newton-Raphson refinement. <value> = ( ['!'] ['vec-'] ('rcp'|'sqrt') [('h'|'s'|'d')] [':'<n>] ) | 'all' | 'default' | 'none'
  -mrecip                 Equivalent to '-mrecip=all'
  -mrecord-mcount         Generate a __mcount_loc section entry for each __fentry__ call.
  -mregnames              Use full register names when writing assembly output
  -mrelax-all             (integrated-as) Relax all machine instructions
  -mrelax                 Enable linker relaxation
  -mrestrict-it           Disallow generation of complex IT blocks. It is off by default.
  -mrtd                   Make StdCall calling convention the default
  -mrvv-vector-bits=<value>
                          Specify the size in bits of an RVV vector register
  -msave-restore          Enable using library calls for save and restore
  -mscalar-strict-align   Force all scalar memory accesses to be aligned (RISC-V only)
  -mseses                 Enable speculative execution side effect suppression (SESES). Includes LVI control flow integrity mitigations
  -msign-return-address=<value>
                          Select return address signing scope
  -msimd=<value>          Select the SIMD extension(s) to be enabled in LoongArch either 'none', 'lsx', 'lasx'.
  -mskip-rax-setup        Skip setting up RAX register when passing variable arguments (x86 only)
  -msmall-data-limit=<value>
                          Put global and static data smaller than the limit into a special section
  -msoft-float            Use software floating point
  -msse2avx               Specify that the assembler should encode SSE instructions with VEX prefix
  -mstack-alignment=<value>
                          Set the stack alignment
  -mstack-arg-probe       Enable stack probes
  -mstack-probe-size=<value>
                          Set the stack probe size
  -mstack-protector-guard-offset=<value>
                          Use the given offset for addressing the stack-protector guard
  -mstack-protector-guard-reg=<value>
                          Use the given reg for addressing the stack-protector guard
  -mstack-protector-guard-symbol=<value>
                          Use the given symbol for addressing the stack-protector guard
  -mstack-protector-guard=<value>
                          Use the given guard (global, tls) for addressing the stack-protector guard
  -mstackrealignext       Force realign the stack at entry to every external function
  -mstackrealign          Force realign the stack at entry to every function
  -mstrict-align          Force all memory accesses to be aligned (AArch64/LoongArch/RISC-V only)
  -msve-vector-bits=<value>
                          Specify the size in bits of an SVE vector register. Defaults to the vector length agnostic value of "scalable". (AArch64 only)
  -msvr4-struct-return    Return small structs in registers (PPC32 only)
  -mtargetos=<value>      Set the deployment target to be the specified OS and OS version
  -mtgsplit               Enable threadgroup split execution mode (AMDGPU only)
  -mthread-model <value>  The thread model to use. Defaults to 'posix')
  -mtls-dialect=<value>   Which thread-local storage dialect to use for dynamic accesses of TLS variables
  -mtls-direct-seg-refs   Enable direct TLS access through segment registers (default)
  -mtls-size=<value>      Specify bit size of immediate TLS offsets (AArch64 ELF only): 12 (for 4KB) | 24 (for 16MB, default) | 32 (for 4GB) | 48 (for 256TB, needs -mcmodel=large)
  -mtocdata=<value>       Specifies a list of variables to which the TOC data transformationwill be applied.
  -mtocdata               All suitable variables will have the TOC data transformation applied
  -mtp=<value>            Thread pointer access method. For AArch32: 'soft' uses a function call, or 'tpidrurw', 'tpidruro' or 'tpidrprw' use the three CP15 registers. 'cp15' is an alias for 'tpidruro'. For AArch64: 'tpidr_el0', 'tpidr_el1', 'tpidr_el2', 'tpidr_el3' or 'tpidrro_el0' use the five system registers. 'elN' is an alias for 'tpidr_elN'.
  -mtune=<value>          Only supported on AArch64, PowerPC, RISC-V, SPARC, SystemZ, and X86
  -MT <value>             Specify name of main file output in depfile
  -munaligned-access      Allow memory accesses to be unaligned (AArch32/MIPSr6 only)
  -munaligned-symbols     Expect external char-aligned symbols to be without ABI alignment (SystemZ only)
  -munsafe-fp-atomics     Enable generation of unsafe floating point atomic instructions. May generate more efficient code, but may not respect rounding and denormal modes, and may give incorrect results for certain memory destinations. (AMDGPU only)
  -mvector-strict-align   Force all vector memory accesses to be aligned (RISC-V only)
  -mvevpu                 Emit VPU instructions for VE
  -MV                     Use NMake/Jom format for the depfile
  -mwavefrontsize64       Specify wavefront size 64 mode (AMDGPU only)
  -mxcoff-build-id=<0xHEXSTRING>
                          On AIX, request creation of a build-id string, "0xHEXSTRING", in the string table of the loader section inside the linked binary
  -mxcoff-roptr           Place constant objects with relocatable address values in the RO data section and add -bforceimprw to the linker flags (AIX only)
  -mzos-hlq-clang=<ClangHLQ>
                          High level qualifier for z/OS C++RT side deck datasets
  -mzos-hlq-csslib=<CsslibHLQ>
                          High level qualifier for z/OS CSSLIB dataset
  -mzos-hlq-le=<LeHLQ>    High level qualifier for z/OS Language Environment datasets
  -mzos-sys-include=<SysInclude>
                          Path to system headers on z/OS
  -M                      Like -MD, but also implies -E and writes to stdout by default
  -no-ansi-alias          disable use of ANSI aliasing rules optimizations
  --no-cuda-include-ptx=<value>
                          Do not include PTX for the following GPU architecture (e.g. sm_35) or 'all'. May be specified more than once.
  --no-cuda-version-check Don't error out if the detected version of the CUDA install is too low for the requested CUDA gpu architecture.
  --no-default-config     Disable loading default configuration files
  -no-fma                 Disable the combining of floating point multiples and add/subtract operations.
  -no-ftz                 Disable flush denormal results to zero
  -no-global-hoist        Disable external globals are load safe
  --no-gpu-bundle-output  Do not bundle output files of HIP device compilation
  -no-hip-rt              Do not link against HIP runtime libraries
  -no-intel-lib=<value>   Restrict linking of Intel specific libraries. Valid arguments are libirc, libimf, libirng, libsvml
  -no-intel-lib           Restrict linking of all Intel specific libraries.
  -no-ipo                 Disable LTO mode (default)
  --no-offload-arch=<value>
                          Remove CUDA/HIP offloading device architecture (e.g. sm_35, gfx906) from the list of devices to compile for. 'all' resets the list to its default value.
  --no-offload-new-driver Don't Use the new driver for offloading compilation.
  -no-parallel-source-info
                          Disable emission of source location information for parallel code generation.
  -no-sox                 Disable saving of compiler options in the executable
  --no-system-header-prefix=<prefix>
                          Treat all #include paths starting with <prefix> as not including a system header.
  -no-vec                 Disable the loop vectorization passes
  --no-wasm-opt           Disable the wasm-opt optimizer
  -nobuiltininc           Disable builtin #include directories
  -nogpuinc               Do not add include paths for CUDA/HIP and do not include the default CUDA/HIP wrapper headers
  -nogpulib               Do not link device library for CUDA/HIP device compilation
  -nohipwrapperinc        Do not include the default HIP wrapper headers and include paths
  -nolib-inline           disable inline expansion of intrinsic functions
  -nolibsycl              Do not link SYCL runtime library
  -nostdinc++             Disable standard #include directories for the C++ standard library
  --nvptx-arch-tool=<value>
                          Tool used for detecting NVIDIA GPU arch in the system.
  -ObjC++                 Treat source input files as Objective-C++ inputs
  -objcmt-allowlist-dir-path=<value>
                          Only modify files with a filename contained in the provided directory path
  -objcmt-atomic-property Make migration to 'atomic' properties
  -objcmt-migrate-all     Enable migration to modern ObjC
  -objcmt-migrate-annotation
                          Enable migration to property and method annotations
  -objcmt-migrate-designated-init
                          Enable migration to infer NS_DESIGNATED_INITIALIZER for initializer methods
  -objcmt-migrate-instancetype
                          Enable migration to infer instancetype for method result type
  -objcmt-migrate-literals
                          Enable migration to modern ObjC literals
  -objcmt-migrate-ns-macros
                          Enable migration to NS_ENUM/NS_OPTIONS macros
  -objcmt-migrate-property-dot-syntax
                          Enable migration of setter/getter messages to property-dot syntax
  -objcmt-migrate-property
                          Enable migration to modern ObjC property
  -objcmt-migrate-protocol-conformance
                          Enable migration to add protocol conformance on classes
  -objcmt-migrate-readonly-property
                          Enable migration to modern ObjC readonly property
  -objcmt-migrate-readwrite-property
                          Enable migration to modern ObjC readwrite property
  -objcmt-migrate-subscripting
                          Enable migration to modern ObjC subscripting
  -objcmt-ns-nonatomic-iosonly
                          Enable migration to use NS_NONATOMIC_IOSONLY macro for setting property's 'atomic' attribute
  -objcmt-returns-innerpointer-property
                          Enable migration to annotate property with NS_RETURNS_INNER_POINTER
  -objcmt-whitelist-dir-path=<value>
                          Alias for -objcmt-allowlist-dir-path
  -ObjC                   Treat source input files as Objective-C inputs
  -object-file-name=<file>
                          Set the output <file> for debug infos
  --offload-arch=<value>  Specify an offloading device architecture for CUDA, HIP, or OpenMP. (e.g. sm_35). If 'native' is used the compiler will detect locally installed architectures. For HIP offloading, the device architecture can be followed by target ID features delimited by a colon (e.g. gfx908:xnack+:sramecc-). May be specified more than once.
  --offload-compress      Compress offload device binaries (HIP only)
  --offload-device-only   Only compile for the offloading device.
  --offload-host-device   Compile for both the offloading host and device (default).
  --offload-host-only     Only compile for the offloading host.
  --offload-link          Use the new offloading linker to perform the link job.
  --offload-new-driver    Use the new driver for offloading compilation.
  --offload=<value>       Specify comma-separated list of offloading target triples (CUDA and HIP only)
  -o <file>               Write output to <file>
  -parallel-source-info=<value>
                          Emit source location information for parallel code generation with OpenMP and auto-parallelization.
  -pch-use <file>         Include precompiled header file
  -pc <value>             Initialize X87 floating point precision to single, double or double extended. Valid values of 32, 64 and 80
  -pedantic               Warn on language extensions
  -pg                     Enable mcount instrumentation
  -pipe                   Use pipes between commands, when possible
  --precompile            Only precompile the input
  --pretty-sgf            Emit pretty printed symbol graphs
  -print-diagnostic-options
                          Print all of Clang's warning options
  -print-effective-triple Print the effective target triple
  -print-enabled-extensions
                          Print the extensions enabled by the given target and -march/-mcpu options. (AArch64 and RISC-V only)
  -print-file-name=<file> Print the full library path of <file>
  -print-ivar-layout      Enable Objective-C Ivar layout bitmap print trace
  -print-libgcc-file-name Print the library path for the currently used compiler runtime library ("libgcc.a" or "libclang_rt.builtins.*.a")
  -print-library-module-manifest-path
                          Print the path for the C++ Standard library module manifest
  -print-multi-flags-experimental
                          Print the flags used for selecting multilibs (experimental)
  -print-prog-name=<name> Print the full program path of <name>
  -print-resource-dir     Print the resource directory pathname
  -print-rocm-search-dirs Print the paths used for finding ROCm installation
  -print-runtime-dir      Print the directory pathname containing Clang's runtime libraries
  -print-search-dirs      Print the paths used for finding libraries and programs
  -print-supported-cpus   Print supported cpu models for the given target (if target is not specified, it will print the supported cpus for the default target)
  -print-supported-extensions
                          Print supported -march extensions (RISC-V, AArch64 and ARM only)
  -print-target-triple    Print the normalized target triple
  -print-targets          Print the registered targets
  -pthread                Support POSIX threads in generated code
  --ptxas-path=<value>    Path to ptxas (used for compiling CUDA code)
  -P                      Disable linemarker output in -E mode
  -p                      Enable mcount instrumentation with prof
  -qactypes               Enable compile and link support for the Algorithmic C Data-types (AC types)
  -qdaal=<value>          Link Intel(R) Data Analytics Acceleration Library (Intel(R) DAAL) libraries and bring in the associated headers (parallel)
  -qipp-link=<value>      Link Intel(R) IPP libraries in requested manner (static,dynamic,shared)
  -qipp=<value>           Link commonly used Intel(R) Integrated Performace Primitives (Intel(R) IPP) libraries and bring in the associated headers (common,crypto,nonpic,nonpic_crypto)
  -qmkl-ilp64=<value>     Link commonly used Intel(R) Math Kernel ILP64 Variant Library (Intel(R) MKL) and bring in the associated headers (parallel,sequential,cluster)("cluster" is not supported in DPC++)
  -qmkl-sycl-impl=<value> Limit linking of SYCL-specific implementations of the Intel(R) Math Kernel Library to specified in argument. Valid arguments: blas, lapack, dft, sparse, rng, stats, vm.
  -qmkl=<value>           Link commonly used Intel(R) Math Kernel Library (Intel(R) MKL) and bring in the associated headers (parallel,sequential,cluster)("cluster" is not supported in DPC++)
  -qno-actypes            Disable the compile and link support for the Algorithmic C Data-types (AC types)
  -qno-openmp             Disable OpenMP support
  -qno-opt-dynamic-align  Disable peeling to optimize alignment for vectorization.
  -qno-opt-jump-tables    Do not use jump tables for lowering switches
  -qno-opt-matmul         Disables compiler-generated Matrix Multiply (matmul) library call
  -qno-opt-mem-layout-trans
                          Disable memory layout transformations
  -qno-opt-multiple-gather-scatter-by-shuffles
                          Disables the optimization for multiple adjacent gather/scatter type vector memory references
  -qno-opt-prefetch       Disable prefetching.
  -Qn                     Do not emit metadata containing compiler name and version
  -qopenmp-link=<value>   Choose whether to link with the static or dynamic OpenMP libraries. Default is dynamic.
  -qopenmp-simd           Emit OpenMP code only for SIMD-based constructs.
  -qopenmp-stubs          enables the user to compile OpenMP programs in sequential mode. The OpenMP directives are ignored and a stub OpenMP library is linked.
  -qopenmp-threadprivate=<value>
                          Choose which threadprivate implementation to use: compat or legacy.
  -qopenmp                Parse OpenMP pragmas and generate parallel code.
  -qopt-assume-no-loop-carried-dep=<value>
                          Set a level of performance tuning for loops.  0 - The compiler does not assume there is loop-carried dependencies (default).  1 - Assume there are no loop-carried dependencies for innermost loops.  2 - Assume there are no loop-carried dependencies for all loop levels.
  -qopt-dword-index-for-array-of-structs=<value>
                          When specified allows the compiler to use dword indexes to access elements of arrays of structs which in size do not exceed val bytes. The arrays in question should contain no more than INT_MAX / sizeof(element) elements. Allowed values for val are: 16, 32, default is 16.
  -qopt-dynamic-align     Enable peeling to optimize alignment for vectorization.
  -qopt-for-throughput=<value>
                          Optimize for throughput performance, assuming multiple jobs are running.  The memory optimizations for single job versus multiple jobs can be tuned in different ways by the compiler. Valid arguments: multi-job, single-job
  -qopt-jump-tables       Control the generation of jump tables
  -qopt-matmul            Enables compiler-generated Matrix Multiply (matmul) library call
  -qopt-mem-layout-trans=<value>
                          Control the level of memory layout transformations performed by the compiler
  -qopt-multiple-gather-scatter-by-shuffles
                          Enables the optimization for multiple adjacent gather/scatter type vector memory references
  -qopt-prefetch-distance=<value>
                          Specify the prefetch distance to be used for compiler generated prefetches inside loops. Value indicates distance from memory to L2 cache.
  -qopt-prefetch-loads-only
                          Only insert prefetches based on the loads inside the loop. Stores are ignored.
  -qopt-prefetch=<value>  Enable levels of prefetch insertion, where 0 disables.  Values of 1 - 5 are available.  Default is 2.
  -qopt-prefetch          Enable prefetch insertion.  Same as -qopt-prefetch=2.
  -qopt-report-file=<value>
                          Specify the filename or output stream (stdout, stderr) for the generated optimization report
  -qopt-report-names=<value>
                          Specifies whether mangled or unmangled names should appear in the optimization report.
  -qopt-report-phase=<value>
                          Specify one or more phases for which optimization reports are generated
  -qopt-report-stdout     Specify the generated optimization report should be directed to stdout
  -qopt-report=<value>    Generate an optimization report, min, med or max.
  -qopt-streaming-stores=<value>
                          Specifies whether streaming stores are generated.
  -qopt-zmm-usage=<value> Specifies the level of zmm registers usage, low or high
  -Qoption,<arg>           Qoption,<tool>,<args> to pass the comma separated arguments to the <tool>; <tool> can be asm for assembler (or) link/ld for linker (or) preprocessor for preprocessor (or) compiler for compiler
  -qoverride-limits       enables the user to skip throttling of loops in framework and DD.
  -qtbb                   Link Intel(R) Threading Building Blocks (Intel(R) TBB) libraries and bring in the associated headers
  -Qunused-arguments      Don't emit warning for unused driver arguments
  -Qy                     Emit metadata containing compiler name and version
  -regcall4               Set __regcall4 as a default calling convention to respect __regcall ABI v.4
  -regcall                Set __regcall as a default calling convention
  -relocatable-pch        Whether to build a relocatable precompiled header
  -reuse-exe=<exe>        Speed up FPGA aoc compile if the device code in <exe> is unchanged.
  -rewrite-legacy-objc    Rewrite Legacy Objective-C source to C++
  -rewrite-objc           Rewrite Objective-C source to C++
  --rocm-device-lib-path=<value>
                          ROCm device library path. Alternative to rocm-path.
  --rocm-path=<value>     ROCm installation path, used for finding and automatically linking required bitcode libraries.
  -Rpass-analysis=<value> Report transformation analysis from optimization passes whose name matches the given POSIX regular expression
  -Rpass-missed=<value>   Report missed transformations by optimization passes whose name matches the given POSIX regular expression
  -Rpass=<value>          Report transformations performed by optimization passes whose name matches the given POSIX regular expression
  -rtlib=<value>          Compiler runtime library to use
  -R<remark>              Enable the specified remark
  -save-stats=<value>     Save llvm statistics.
  -save-stats             Save llvm statistics.
  -save-temps=<value>     Save intermediate compilation results. <arg> can be set to 'cwd' for current working directory, or 'obj' which will save temporary files in the same directory as the final output file
  -save-temps             Alias for --save-temps=cwd
  -serialize-diagnostics <value>
                          Serialize compiler diagnostics to a file
  -shared-intel           link Intel provided libraries dynamically
  -shared-libsan          Dynamically link the sanitizer runtime
  -sox=<value>            Enable saving of compiler options, version and additional information in the executable.  Use -no-sox to disable (DEFAULT). Valid arguments: profile - Includes data when profile was used for functions that were compiled with PGO enabling options such as -fprofile-use and -fprofile-instr-use, inline - Includes a list of the functions that were inlined in each object, secure - Strip out directory names and options that use them.
  -sox                    Enable saving of compiler options in the executable
  --start-no-unused-arguments
                          Don't emit warnings about unused arguments for the following arguments
  -static-intel           link Intel provided libraries statically
  -static-libsan          Statically link the sanitizer runtime (Not supported for ASan, TSan or UBSan on darwin)
  -static-openmp          Use the static host OpenMP runtime while linking.
  -std=<value>            Language standard to compile for
  -stdlib++-isystem <directory>
                          Use directory as the C++ standard library include path
  -stdlib=<value>         C++ standard library to use
  -strict-ansi            strict ANSI conformance dialect
  -sycl-std=<value>       SYCL language standard to compile for.
  --symbol-graph-dir=<value>
                          Directory in which to emit symbol graphs.
  --system-header-prefix=<prefix>
                          Treat all #include paths starting with <prefix> as including a system header.
  -S                      Only run preprocess and compilation steps
  --target=<value>        Generate code for the given target
  -tbb                    Link Intel(R) Threading Building Blocks (Intel(R) TBB) libraries and bring in the associated headers
  -time                   Time individual commands
  -traceback              Generate traceback debug information
  -traditional-cpp        Enable some traditional CPP emulation
  -trigraphs              Process trigraph sequences
  -T <script>             Specify <script> as linker script
  -undef                  undef all system defines
  -unroll<value>          Set maximum number of times to unroll loops.  Omit n to use default heuristics.  Use 0 to disable the loop unroller.
  -unwindlib=<value>      Unwind library to use
  -use-msasm              enables the use of blocks and entire functions of assembly code within a C or C++ file
  -U <macro>              Undefine macro <macro>
  -vec-threshold<value>   Sets a threshold for the vectorization of loops based on the probability of profitable execution of the vectorized loop in parallel.
  -vecabi=<value>         Determines which vector function ABI the compiler uses to create or call vector functions. The 'gcc' (default) argument enforces compatibility with gcc. The 'cmdtarget' argument uses an extended set of vector functions.
  -vec                    Enable the loop vectorization passes
  --verify-debug-info     Verify the binary representation of debug output
  -verify-pch             Load and verify that a pre-compiled header file is not stale
  --version               Print version information
  -vfsoverlay <value>     Overlay the virtual filesystem described by file over the real file system. Additionally, pass this overlay file to the linker if it supports it
  -v                      Show commands to run and use verbose output
  -Wa,<arg>               Pass the comma separated arguments in <arg> to the assembler
  --wasm-opt              Enable the wasm-opt optimizer (default)
  -Wcheck-unicode-security
                          Enable detection and warn about Unicode constructs that can be exploited by using bi-directional formatting codes, zero-width characters in strings and use of zero-width characters and homoglyphs in identifiers. Done by using clang-tidy
  -Wdeprecated            Enable warnings for deprecated constructs and define __DEPRECATED
  -Winvalid-constexpr     Enable checking of constexpr function bodies for validity within a constant expression context
  -Wl,<arg>               Pass the comma separated arguments in <arg> to the linker
  -Wno-invalid-constexpr  Disable checking of constexpr function bodies for validity within a constant expression context
  -Wno-sycl-strict        Disable warnings which enforce strict SYCL language compatibility.
  -working-directory <value>
                          Resolve file paths relative to the specified directory
  -Wp,<arg>               Pass the comma separated arguments in <arg> to the preprocessor
  -W<warning>             Enable the specified warning
  -w                      Suppress all warnings
  -Xanalyzer <arg>        Pass <arg> to the static analyzer
  -Xarch_device <arg>     Pass <arg> to the CUDA/HIP device compilation
  -Xarch_host <arg>       Pass <arg> to the CUDA/HIP host compilation
  -Xassembler <arg>       Pass <arg> to the assembler
  -Xclang=<arg>           Alias for -Xclang
  -Xclang <arg>           Pass <arg> to clang -cc1
  -Xcuda-fatbinary <arg>  Pass <arg> to fatbinary invocation
  -Xcuda-ptxas <arg>      Pass <arg> to the ptxas assembler
  -Xlinker <arg>          Pass <arg> to the linker
  -Xoffload-linker<triple> <arg>
                          Pass <arg> to the offload linkers or the ones idenfied by -<triple>
  -Xopenmp-target-backend=<triple> <arg>
                          Pass <arg> to the OpenMP based backend identified by <triple>. Depending on the triple (spir64, spir64_gen, spir64_x86_64), the arg passed will be interpreted by the corresponding AOT tool or runtime consumer.
  -Xopenmp-target-backend <arg>
                          Pass <arg> to the OpenMP based target backend.
  -Xopenmp-target-frontend=<value>
                          Pass <arg> to the OpenMP based target frontend identified by <triple>.
  -Xopenmp-target-frontend <value>
                          Pass <arg> to the OpenMP based target frontend.
  -Xopenmp-target-linker=<triple> <arg>
                          Pass <arg> to the SYCL based target linker identified by <triple>.
  -Xopenmp-target-linker <arg>
                          Pass <arg> to the SYCL based target linker.
  -Xopenmp-target=<triple> <arg>
                          Pass <arg> to the target offloading toolchain identified by <triple>.
  -Xopenmp-target <arg>   Pass <arg> to the target offloading toolchain.
  -Xpreprocessor <arg>    Pass <arg> to the preprocessor
  -Xsycl-target-backend=<triple> <arg>
                          Pass <arg> to the SYCL based backend identified by <triple>. Depending on the triple (spir64, spir64_gen, spir64_x86_64, spir64_fpga), the arg passed will be interpreted by the corresponding AOT tool or runtime consumer.
  -Xsycl-target-backend <arg>
                          Pass <arg> to the SYCL based target backend.
  -Xsycl-target-frontend=<triple> <arg>
                          Pass <arg> to the SYCL based target frontend identified by <triple>.
  -Xsycl-target-frontend <arg>
                          Pass <arg> to the SYCL based target frontend.
  -Xsycl-target-linker=<triple> <arg>
                          Pass <arg> to the SYCL based target linker identified by <triple>.
  -Xsycl-target-linker <arg>
                          Pass <arg> to the SYCL based target linker.
  -Xs <arg>               Pass <arg> to the offline compiler.
  -Xs<arg>                Pass <arg> to the offline compiler, adding the option specifier '-' to the <arg>.
  -x <language>           Treat subsequent input files as having type <language>
  -x<code>                Generate specialized code to run exclusively on processors indicated by <code>.
  -z <arg>                Pass -z <arg> to the linker
dxc compatibility options.:
  --dxv-path=<value>  DXIL validator installation path
  -fspv-target-env=<value>
                      Specify the target environment
  -hlsl-entry <value> Entry point name for hlsl
=============================================================================================
TESTING: checkLinux from config.compilers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/compilers.py:1398)
  Check for __linux__
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.compilers  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

    #if !defined(__linux__)
    #error "__linux__ not defined"
    #endif
    

int main(void) {
  return 0;
}

            Defined "HAVE_LINUX" to "1"
=============================================================================================
TESTING: checkC99Flag from config.compilers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/compilers.py:1409)
  Check for -std=c99 or equivalent flag
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <float.h>

int main(void) {

    float x[2],y;
    float *restrict z = &y;
    y = FLT_ROUNDS;
    // c++ comment
    int j = 2;
    for (int i=0; i<2; i++){
      x[i] = i*j*(*z);
    }
    (void)x;
  return 0;
}

            Output from compiling with  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native 

          Accepted C99 compile flag: 
=============================================================================================
TESTING: checkCFormatting from config.compilers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/compilers.py:371)
  Activate format string checking if using the GNU compilers
=============================================================================================
TESTING: checkDynamicLoadFlag from config.compilers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/compilers.py:382)
  Checks that dlopen() takes RTLD_XXX, and defines PETSC_HAVE_RTLD_XXX if it does
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <dlfcn.h>
char *libname;

int main(void) {
dlopen(libname, RTLD_LAZY);dlopen(libname, RTLD_NOW);dlopen(libname, RTLD_LOCAL);dlopen(libname, RTLD_GLOBAL);
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.compilers/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.compilers/conftest.o 
            Defined "HAVE_RTLD_LAZY" to "1"
            Defined "HAVE_RTLD_NOW" to "1"
            Defined "HAVE_RTLD_LOCAL" to "1"
            Defined "HAVE_RTLD_GLOBAL" to "1"
=============================================================================================
TESTING: checkStdAtomic from config.compilers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/compilers.py:1442)
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

    #if defined(__cplusplus)
    #include <atomic>
    using namespace std;
    #else
    #include <stdatomic.h>
    #endif
    double dcount = 0;
    atomic_flag cat = ATOMIC_FLAG_INIT;
    

int main(void) {

    do {} while (atomic_flag_test_and_set(&cat));
    dcount++;
    atomic_flag_clear(&cat);
    
  return 0;
}

            Defined "HAVE_STDATOMIC_H" to "1"
=============================================================================================
TESTING: checkCLibraries from config.compilers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/compilers.py:170)
  Determines the libraries needed to link using the C++ or Fortran compiler C source code compiled with C. Result is stored in clibs
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <stdio.h>
void asub(void)
{char s[16];printf("testing %s",s);}

Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers  -fPIC -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.F90 
Successful compile:
Source:
      program main
      print*,'testing'
      stop
      end
 
Executing: mpiifort -fc=ifx  -o /tmp/petsc-m5p55c3k/config.compilers/conftest    -fPIC -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.compilers/conftest.o /tmp/petsc-m5p55c3k/config.compilers/confc.o 
          C libraries are not needed when using Fortran linker
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <stdio.h>
void asub(void)
{char s[16];printf("testing %s",s);}

Executing: mpiicpc -cxx=icpx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.compilers  -Wall -Wwrite-strings -Wno-strict-aliasing -Wno-unknown-pragmas -fstack-protector -fvisibility=hidden -O2 -march=native -mtune=native  -std=gnu++20 -fPIC  /tmp/petsc-m5p55c3k/config.compilers/conftest.cc 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
 int main(int argc,char **args)
{return 0;}
 
Executing: mpiicpc -cxx=icpx  -o /tmp/petsc-m5p55c3k/config.compilers/conftest    -Wall -Wwrite-strings -Wno-strict-aliasing -Wno-unknown-pragmas -fstack-protector -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.compilers/conftest.o /tmp/petsc-m5p55c3k/config.compilers/confc.o 
          C libraries are not needed when using C++ linker
=============================================================================================
TESTING: checkDependencyGenerationFlag from config.compilers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/compilers.py:1349)
  Check if -MMD works for dependency generation, and add it if it does
          Trying C compiler flag -MMD -MP
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native -MMD -MP  /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

            Output from compiling with  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native -MMD -MP

            Defined make macro "C_DEPFLAGS" to "-MMD -MP"
          Trying Cxx compiler flag -MMD -MP
Executing: mpiicpc -cxx=icpx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.setCompilers  -Wall -Wwrite-strings -Wno-strict-aliasing -Wno-unknown-pragmas -fstack-protector -fvisibility=hidden -O2 -march=native -mtune=native  -std=gnu++20 -fPIC -MMD -MP  /tmp/petsc-m5p55c3k/config.setCompilers/conftest.cc 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
  return 0;
}

            Output from compiling with  -std=gnu++20 -fPIC -MMD -MP

            Defined make macro "CXX_DEPFLAGS" to "-MMD -MP"
Executing: mpiicpc -cxx=icpx --help | head -n 20 
stdout:
OVERVIEW: Intel(R) oneAPI DPC++/C++ Compiler
USAGE: icpx [options] file...
OPTIONS:
  -###                    Print (but do not run) the commands to run for this compilation
  -#x                     Show commands to run and use verbose output
  -#                      Print (but do not run) the commands to run for this compilation
  -align                  Align doubles to two words in structs (x86 only)
  --amdgpu-arch-tool=<value>
                          Tool used for detecting AMD GPU arch in the system.
  --analyzer-output <value>
                          Static analyzer report output format (html|plist|plist-multi-file|plist-html|sarif|sarif-html|text).
  --analyze               Run the static analyzer
  -ansi-alias             enable use of ANSI aliasing rules optimizations user asserts that the program adheres to these rules
  -arcmt-migrate-emit-errors
                          Emit ARC errors even if the migrator can fix them
  -arcmt-migrate-report-output <value>
                          Output path for the plist report
  -ax<codes>              generate multiple, processor-specific, auto-dispatched code paths for Intel® processors, specified by <codes>, if there is a performance benefit
Executing: mpiicpc -cxx=icpx --help
stdout:
OVERVIEW: Intel(R) oneAPI DPC++/C++ Compiler
USAGE: icpx [options] file...
OPTIONS:
  -###                    Print (but do not run) the commands to run for this compilation
  -#x                     Show commands to run and use verbose output
  -#                      Print (but do not run) the commands to run for this compilation
  -align                  Align doubles to two words in structs (x86 only)
  --amdgpu-arch-tool=<value>
                          Tool used for detecting AMD GPU arch in the system.
  --analyzer-output <value>
                          Static analyzer report output format (html|plist|plist-multi-file|plist-html|sarif|sarif-html|text).
  --analyze               Run the static analyzer
  -ansi-alias             enable use of ANSI aliasing rules optimizations user asserts that the program adheres to these rules
  -arcmt-migrate-emit-errors
                          Emit ARC errors even if the migrator can fix them
  -arcmt-migrate-report-output <value>
                          Output path for the plist report
  -ax<codes>              generate multiple, processor-specific, auto-dispatched code paths for Intel® processors, specified by <codes>, if there is a performance benefit
  -B <prefix>             Search $prefix$file for executables, libraries, and data files. If $prefix is a directory, search $prefix/$file
  -b <arg>                Pass -b <arg> to the linker on AIX
  -CC                     Include comments from within macros in preprocessed output
  -cl-denorms-are-zero    OpenCL only. Allow denormals to be flushed to zero.
  -cl-ext=<value>         OpenCL only. Enable or disable OpenCL extensions/optional features. The argument is a comma-separated sequence of one or more extension names, each prefixed by '+' or '-'.
  -cl-fast-relaxed-math   OpenCL only. Sets -cl-finite-math-only and -cl-unsafe-math-optimizations, and defines __FAST_RELAXED_MATH__.
  -cl-finite-math-only    OpenCL only. Allow floating-point optimizations that assume arguments and results are not NaNs or +-Inf.
  -cl-fp32-correctly-rounded-divide-sqrt
                          OpenCL only. Specify that single precision floating-point divide and sqrt used in the program source are correctly rounded.
  -cl-kernel-arg-info     OpenCL only. Generate kernel argument metadata.
  -cl-mad-enable          OpenCL only. Allow use of less precise MAD computations in the generated binary.
  -cl-no-signed-zeros     OpenCL only. Allow use of less precise no signed zeros computations in the generated binary.
  -cl-no-stdinc           OpenCL only. Disables all standard includes containing non-native compiler types and functions.
  -cl-opt-disable         OpenCL only. This option disables all optimizations. By default optimizations are enabled.
  -cl-single-precision-constant
                          OpenCL only. Treat double precision floating-point constant as single precision constant.
  -cl-std=<value>         OpenCL language standard to compile for.
  -cl-strict-aliasing     OpenCL only. This option is added for compatibility with OpenCL 1.0.
  -cl-uniform-work-group-size
                          OpenCL only. Defines that the global work-size be a multiple of the work-group size specified to clEnqueueNDRangeKernel
  -cl-unsafe-math-optimizations
                          OpenCL only. Allow unsafe floating-point optimizations.  Also implies -cl-no-signed-zeros and -cl-mad-enable.
  --config=<file>         Specify configuration file
  --cuda-compile-host-device
                          Compile CUDA code for both host and device (default). Has no effect on non-CUDA compilations.
  --cuda-device-only      Compile CUDA code for device only
  --cuda-feature=<value>  Manually specify the CUDA feature to use
  --cuda-host-only        Compile CUDA code for host only. Has no effect on non-CUDA compilations.
  --cuda-include-ptx=<value>
                          Include PTX for the following GPU architecture (e.g. sm_35) or 'all'. May be specified more than once.
  --cuda-noopt-device-debug
                          Enable device-side debug info generation. Disables ptxas optimizations.
  --cuda-path-ignore-env  Ignore environment variables to detect CUDA installation
  --cuda-path=<value>     CUDA installation path
  -cuid=<value>           An ID for compilation unit, which should be the same for the same compilation unit but different for different compilation units. It is used to externalize device-side static variables for single source offloading languages CUDA and HIP so that they can be accessed by the host code of the same compilation unit.
  -cxx-isystem <directory>
                          Add directory to the C++ SYSTEM include search path
  -C                      Include comments in preprocessed output
  -c                      Only run preprocess, compile, and assemble steps
  -daal=<value>           Link Intel(R) Data Analytics Acceleration Library (Intel(R) DAAL) libraries and bring in the associated headers (parallel)
  -darwin-target-variant-triple <value>
                          Specify the darwin target variant triple
  -darwin-target-variant <value>
                          Generate code for an additional runtime variant of the deployment target
  -dD                     Print macro definitions in -E mode in addition to normal output
  -debug=<value>          Enable debug information. Valid args: none, all, full, minimal
  -dependency-dot <value> Filename to write DOT-formatted header dependencies to
  -dependency-file <value>
                          Filename (or -) to write dependency output to
  -device-math-lib=<value>
                          Control the addition of device math libraries when compiling for other devices.  Valid arguments are fp64, fp32
  -dI                     Print include directives in -E mode in addition to normal output
  -dM                     Print macro definitions in -E mode instead of normal output
  -dryrun                 Print (but do not run) the commands to run for this compilation
  -dsym-dir <dir>         Directory to output dSYM's (if any) to
  -dumpdir <dumppfx>      Use <dumpfpx> as a prefix to form auxiliary and dump file names
  -dumpmachine            Display the compiler's target processor
  -dumpversion            Display the version of the compiler
  -D <macro>=<value>      Define <macro> to <value> (or 1 if <value> omitted)
  --embed-dir=<dir>       Add directory to embed search path
  -emit-ast               Emit Clang AST files for source inputs
  --emit-extension-symbol-graphs
                          Generate additional symbol graphs for extended modules.
  -emit-interface-stubs   Generate Interface Stub Files.
  -emit-llvm              Use the LLVM representation for assembler and object files
  -emit-merged-ifs        Generate Interface Stub Files, emit merged text not binary.
  --emit-static-lib       Enable linker job to emit a static library.
  -emit-symbol-graph      Generate Extract API information as a side effect of compilation.
  --end-no-unused-arguments
                          Start emitting warnings for unused driver arguments
  -EP                     Preprocess to stdout, omitting #line directives.
  --extract-api-ignores=<value>
                          Comma separated list of files containing a new line separated list of API symbols to ignore when extracting API information.
  -extract-api            Extract API information
  -E                      Only run the preprocessor
  -faapcs-bitfield-load   Follows the AAPCS standard that all volatile bit-field write generates at least one load. (ARM only).
  -faapcs-bitfield-width  Follow the AAPCS standard requirement stating that volatile bit-field width is dictated by the field container type. (ARM only).
  -faddrsig               Emit an address-significance table
  -falign-functions=<value>
                          Align the start of functions on a 2 (DEFAULT) or <n> byte boundary where <n> is a power of 2.
  -falign-functions       align the start of functions to an optimal machine-dependent value.
  -falign-loops=<N>       N must be a power of two. Align loops to the boundary
  -falign-stack=assume-16-byte
                          Assume the stack is aligned on 16-byte boundaries
  -falign-stack=assume-4-byte
                          Assume the stack is aligned on 4-byte boundaries
  -falign-stack=maintain-16-byte
                          Do not assume any alignment, but maintain alignment in case the stack is already aligned
  -faligned-allocation    Enable C++17 aligned allocation functions
  -fallow-editor-placeholders
                          Treat editor placeholders as valid source code
  -faltivec-src-compat=<value>
                          Source-level compatibility for Altivec vectors (for PowerPC targets). This includes results of vector comparison (scalar for 'xl', vector for 'gcc') as well as behavior when initializing with a scalar (splatting for 'xl', element zero only for 'gcc'). For 'mixed', the compatibility is as 'gcc' for 'vector bool/vector pixel' and as 'xl' for other types. Current default is 'mixed'.
  -fansi-escape-codes     Use ANSI escape codes for diagnostics
  -fapinotes-modules      Enable module-based external API notes support
  -fapinotes-swift-version=<version>
                          Specify the Swift version to use when filtering API notes
  -fapinotes              Enable external API notes support
  -fapple-kext            Use Apple's kernel extensions ABI
  -fapple-link-rtlib      Force linking the clang builtins runtime library
  -fapple-pragma-pack     Enable Apple gcc-compatible #pragma pack handling
  -fapplication-extension Restrict code to those available for App Extensions
  -fapprox-func           Allow certain math function calls to be replaced with an approximately equivalent calculation
  -fargument-noalias      Enables 'noalias' attribute for all pointer-type arguments
  -fassume-nothrow-exception-dtor
                          Assume that exception objects' destructors are non-throwing
  -fasync-exceptions      Enable EH Asynchronous exceptions
  -fauto-import           MinGW specific. Enable code generation support for automatic dllimport, and enable support for it in the linker. Enabled by default.
  -fbasic-block-address-map
                          Emit the basic block address map section.
  -fbasic-block-sections=<value>
                          Place each function's basic blocks in unique sections (ELF Only)
  -fbinutils-version=<major.minor>
                          Produced object files can use all ELF features supported by this binutils version and newer. If -fno-integrated-as is specified, the generated assembly will consider GNU as support. 'none' means that all ELF features can be used, regardless of binutils support. Defaults to 2.26.
  -fblocks                Enable the 'blocks' language feature
  -fborland-extensions    Accept non-standard constructs supported by the Borland compiler
  -fbuild-session-file=<file>
                          Use the last modification time of <file> as the build session timestamp
  -fbuild-session-timestamp=<time since Epoch in seconds>
                          Time when the current build session started
  -fbuiltin-module-map    Load the clang builtins module map file.
  -fc++-abi=<value>       C++ ABI to use. This will override the target C++ ABI.
  -fcall-saved-x10        Make the x10 register call-saved (AArch64 only)
  -fcall-saved-x11        Make the x11 register call-saved (AArch64 only)
  -fcall-saved-x12        Make the x12 register call-saved (AArch64 only)
  -fcall-saved-x13        Make the x13 register call-saved (AArch64 only)
  -fcall-saved-x14        Make the x14 register call-saved (AArch64 only)
  -fcall-saved-x15        Make the x15 register call-saved (AArch64 only)
  -fcall-saved-x18        Make the x18 register call-saved (AArch64 only)
  -fcall-saved-x8         Make the x8 register call-saved (AArch64 only)
  -fcall-saved-x9         Make the x9 register call-saved (AArch64 only)
  -fcaret-diagnostics-max-lines=<value>
                          Set the maximum number of source lines to show in a caret diagnostic (0 = no limit).
  -fcf-protection=<value> Instrument control-flow architecture protection
  -fcf-protection         Enable cf-protection in 'full' mode
  -fchar8_t               Enable C++ builtin type char8_t
  -fcheck-new             Do not assume C++ operator new may not return NULL
  -fclang-abi-compat=<version>
                          Attempt to match the ABI of Clang <version>
  -fclangir               Use the ClangIR pipeline to compile
  -fcolor-diagnostics     Enable colors in diagnostics
  -fcomment-block-commands=<arg>
                          Treat each comma separated argument in <arg> as a documentation comment block command
  -fcommon                Place uninitialized global variables in a common block
  -fcomplete-member-pointers
                          Require member pointer base types to be complete if they would be significant under the Microsoft ABI
  -fconstexpr-backtrace-limit=<value>
                          Set the maximum number of entries to print in a constexpr evaluation backtrace (0 = no limit)
  -fconstexpr-depth=<value>
                          Set the maximum depth of recursive constexpr function calls
  -fconstexpr-steps=<value>
                          Set the maximum number of steps in constexpr function evaluation
  -fcoro-aligned-allocation
                          Prefer aligned allocation for C++ Coroutines
  -fcoroutines            Enable support for the C++ Coroutines
  -fcoverage-compilation-dir=<value>
                          The compilation directory to embed in the coverage mapping.
  -fcoverage-mapping      Generate coverage mapping to enable code coverage analysis
  -fcoverage-mcdc         Enable MC/DC criteria when generating code coverage
  -fcoverage-prefix-map=<old>=<new>
                          remap file source paths <old> to <new> in coverage mapping. If there are multiple options, prefix replacement is applied in reverse order starting from the last one
  -fcrash-diagnostics-dir=<dir>
                          Put crash-report files in <dir>
  -fcrash-diagnostics=<value>
                          Set level of crash diagnostic reporting, (option: off, compiler, all)
  -fcrash-diagnostics     Enable crash diagnostic reporting (default)
  -fcs-profile-generate=<directory>
                          Generate instrumented code to collect context sensitive execution counts into <directory>/default.profraw (overridden by LLVM_PROFILE_FILE env var)
  -fcs-profile-generate   Generate instrumented code to collect context sensitive execution counts into default.profraw (overridden by LLVM_PROFILE_FILE env var)
  -fcuda-prec-sqrt        Specify that sqrt is correctly rounded (for CUDA devices)
  -fcuda-short-ptr        Use 32-bit pointers for accessing const/local/shared address spaces
  -fcx-fortran-rules      Range reduction is enabled for complex arithmetic operations.
  -fcx-limited-range      Basic algebraic expansions of complex arithmetic operations involving are enabled.
  -fcxx-exceptions        Enable C++ exceptions
  -fcxx-modules           Enable modules for C++
  -fdata-sections         Place each data in its own section
  -fdebug-compilation-dir=<value>
                          The compilation directory to embed in the debug info
  -fdebug-default-version=<value>
                          Default DWARF version to use, if a -g option caused DWARF debug info to be produced
  -fdebug-info-for-profiling
                          Emit extra debug info to make sample profile more accurate
  -fdebug-macro           Emit macro debug information
  -fdebug-prefix-map=<old>=<new>
                          For paths in debug info, remap directory <old> to <new>. If multiple options match a path, the last option wins
  -fdebug-ranges-base-address
                          Use DWARF base address selection entries in .debug_ranges
  -fdebug-types-section   Place debug types in their own section (ELF Only)
  -fdeclspec              Allow __declspec as a keyword
  -fdefine-target-os-macros
                          Enable predefined target OS macros
  -fdelayed-template-parsing
                          Parse templated function definitions at the end of the translation unit
  -fdelete-null-pointer-checks
                          Treat usage of null pointers as undefined behavior (default)
  -fdiagnostics-absolute-paths
                          Print absolute paths in diagnostics
  -fdiagnostics-hotness-threshold=<value>
                          Prevent optimization remarks from being output if they do not have at least this profile count. Use 'auto' to apply the threshold from profile summary
  -fdiagnostics-misexpect-tolerance=<value>
                          Prevent misexpect diagnostics from being output if the profile counts are within N% of the expected. 
  -fdiagnostics-parseable-fixits
                          Print fix-its in machine parseable form
  -fdiagnostics-print-source-range-info
                          Print source range spans in numeric form
  -fdiagnostics-show-hotness
                          Enable profile hotness information in diagnostic line
  -fdiagnostics-show-note-include-stack
                          Display include stacks for diagnostic notes
  -fdiagnostics-show-option
                          Print option name with mappable diagnostics
  -fdiagnostics-show-template-tree
                          Print a template comparison tree for differing templates
  -fdigraphs              Enable alternative token representations '<:', ':>', '<%', '%>', '%:', '%:%:' (default)
  -fdirect-access-external-data
                          Don't use GOT indirection to reference external data symbols
  -fdisable-block-signature-string
                          Disable block signature string)
  -fdiscard-value-names   Discard value names in LLVM IR
  -fdollars-in-identifiers
                          Allow '$' in identifiers
  -fdriver-only           Only run the driver.
  -fdwarf-exceptions      Use DWARF style exceptions
  -feliminate-unused-debug-types
                          Do not emit  debug info for defined but unused types
  -fembed-bitcode-marker  Embed placeholder LLVM IR data as a marker
  -fembed-bitcode=<option>
                          Embed LLVM bitcode
  -fembed-bitcode         Embed LLVM IR bitcode as data
  -fembed-offload-object=<value>
                          Embed Offloading device-side binary into host object file as a section.
  -femit-all-decls        Emit all declarations, even if unused
  -femit-class-debug-always
                          Emit debug information for a C++ class into each object file where the class is used. This flag is useful for tools which are unable to resolve incomplete type descriptions.  Using this option may cause a large increase in the size of the debug information
  -femit-compact-unwind-non-canonical
                          Try emitting Compact-Unwind for non-canonical entries. Maybe overriden by other constraints
  -femit-dwarf-unwind=<value>
                          When to emit DWARF unwind (EH frame) info
  -femulated-tls          Use emutls functions to access thread_local variables
  -fenable-matrix         Enable matrix data type and related builtin functions
  -fexceptions            Enable support for exception handling
  -fexcess-precision=<value>
                          Allows control over excess precision on targets where native support for the precision types is not available. By default, excess precision is used to calculate intermediate results following the rules specified in ISO C99.
  -fexperimental-late-parse-attributes
                          Enable experimental late parsing of attributes
  -fexperimental-library  Control whether unstable and experimental library features are enabled. This option enables various library features that are either experimental (also known as TSes), or have been but are not stable yet in the selected Standard Library implementation. It is not recommended to use this option in production code, since neither ABI nor API stability are guaranteed. This is intended to provide a preview of features that will ship in the future for experimentation purposes
  -fexperimental-modules-reduced-bmi
                          Generate the reduced BMI
  -fexperimental-new-constant-interpreter
                          Enable the experimental new constant interpreter
  -fexperimental-openacc-macro-override <value>
                          Overrides the _OPENACC macro value for experimental testing during OpenACC support development
  -fexperimental-relative-c++-abi-vtables
                          Use the experimental C++ class ABI for classes with virtual tables
  -fexperimental-sanitize-metadata-ignorelist=<value>
                          Disable sanitizer metadata for modules and functions that match the provided special case list
  -fexperimental-sanitize-metadata=<value>
                          Specify the type of metadata to emit for binary analysis sanitizers
  -fexperimental-strict-floating-point
                          Enables the use of non-default rounding modes and non-default exception handling on targets that are not currently ready.
  -fextend-arguments=<value>
                          Controls how scalar integer arguments are extended in calls to unprototyped and varargs functions
  -ffast-math             Allow aggressive, lossy floating-point optimizations
  -ffat-lto-objects       Enable fat LTO object support
  -ffile-compilation-dir=<value>
                          The compilation directory to embed in the debug info and coverage mapping.
  -ffile-prefix-map=<value>
                          remap file source paths in debug info, predefined preprocessor macros and __builtin_FILE(). Implies -ffile-reproducible.
  -ffile-reproducible     Use the target's platform-specific path separator character when expanding the __FILE__ macro
  -ffine-grained-bitfield-accesses
                          Use separate accesses for consecutive bitfield runs with legal widths and alignments.
  -ffinite-loops          Assume all non-trivial loops are finite.
  -ffinite-math-only      Allow floating-point optimizations that assume arguments and results are not NaNs or +-inf. This defines the \_\_FINITE\_MATH\_ONLY\_\_ preprocessor macro.
  -ffixed-a0              Reserve the a0 register (M68k only)
  -ffixed-a1              Reserve the a1 register (M68k only)
  -ffixed-a2              Reserve the a2 register (M68k only)
  -ffixed-a3              Reserve the a3 register (M68k only)
  -ffixed-a4              Reserve the a4 register (M68k only)
  -ffixed-a5              Reserve the a5 register (M68k only)
  -ffixed-a6              Reserve the a6 register (M68k only)
  -ffixed-d0              Reserve the d0 register (M68k only)
  -ffixed-d1              Reserve the d1 register (M68k only)
  -ffixed-d2              Reserve the d2 register (M68k only)
  -ffixed-d3              Reserve the d3 register (M68k only)
  -ffixed-d4              Reserve the d4 register (M68k only)
  -ffixed-d5              Reserve the d5 register (M68k only)
  -ffixed-d6              Reserve the d6 register (M68k only)
  -ffixed-d7              Reserve the d7 register (M68k only)
  -ffixed-g1              Reserve the G1 register (SPARC only)
  -ffixed-g2              Reserve the G2 register (SPARC only)
  -ffixed-g3              Reserve the G3 register (SPARC only)
  -ffixed-g4              Reserve the G4 register (SPARC only)
  -ffixed-g5              Reserve the G5 register (SPARC only)
  -ffixed-g6              Reserve the G6 register (SPARC only)
  -ffixed-g7              Reserve the G7 register (SPARC only)
  -ffixed-i0              Reserve the I0 register (SPARC only)
  -ffixed-i1              Reserve the I1 register (SPARC only)
  -ffixed-i2              Reserve the I2 register (SPARC only)
  -ffixed-i3              Reserve the I3 register (SPARC only)
  -ffixed-i4              Reserve the I4 register (SPARC only)
  -ffixed-i5              Reserve the I5 register (SPARC only)
  -ffixed-l0              Reserve the L0 register (SPARC only)
  -ffixed-l1              Reserve the L1 register (SPARC only)
  -ffixed-l2              Reserve the L2 register (SPARC only)
  -ffixed-l3              Reserve the L3 register (SPARC only)
  -ffixed-l4              Reserve the L4 register (SPARC only)
  -ffixed-l5              Reserve the L5 register (SPARC only)
  -ffixed-l6              Reserve the L6 register (SPARC only)
  -ffixed-l7              Reserve the L7 register (SPARC only)
  -ffixed-o0              Reserve the O0 register (SPARC only)
  -ffixed-o1              Reserve the O1 register (SPARC only)
  -ffixed-o2              Reserve the O2 register (SPARC only)
  -ffixed-o3              Reserve the O3 register (SPARC only)
  -ffixed-o4              Reserve the O4 register (SPARC only)
  -ffixed-o5              Reserve the O5 register (SPARC only)
  -ffixed-point           Enable fixed point types
  -ffixed-r19             Reserve register r19 (Hexagon only)
  -ffixed-r9              Reserve the r9 register (ARM only)
  -ffixed-x10             Reserve the x10 register (AArch64/RISC-V only)
  -ffixed-x11             Reserve the x11 register (AArch64/RISC-V only)
  -ffixed-x12             Reserve the x12 register (AArch64/RISC-V only)
  -ffixed-x13             Reserve the x13 register (AArch64/RISC-V only)
  -ffixed-x14             Reserve the x14 register (AArch64/RISC-V only)
  -ffixed-x15             Reserve the x15 register (AArch64/RISC-V only)
  -ffixed-x16             Reserve the x16 register (AArch64/RISC-V only)
  -ffixed-x17             Reserve the x17 register (AArch64/RISC-V only)
  -ffixed-x18             Reserve the x18 register (AArch64/RISC-V only)
  -ffixed-x19             Reserve the x19 register (AArch64/RISC-V only)
  -ffixed-x1              Reserve the x1 register (AArch64/RISC-V only)
  -ffixed-x20             Reserve the x20 register (AArch64/RISC-V only)
  -ffixed-x21             Reserve the x21 register (AArch64/RISC-V only)
  -ffixed-x22             Reserve the x22 register (AArch64/RISC-V only)
  -ffixed-x23             Reserve the x23 register (AArch64/RISC-V only)
  -ffixed-x24             Reserve the x24 register (AArch64/RISC-V only)
  -ffixed-x25             Reserve the x25 register (AArch64/RISC-V only)
  -ffixed-x26             Reserve the x26 register (AArch64/RISC-V only)
  -ffixed-x27             Reserve the x27 register (AArch64/RISC-V only)
  -ffixed-x28             Reserve the x28 register (AArch64/RISC-V only)
  -ffixed-x29             Reserve the x29 register (AArch64/RISC-V only)
  -ffixed-x2              Reserve the x2 register (AArch64/RISC-V only)
  -ffixed-x30             Reserve the x30 register (AArch64/RISC-V only)
  -ffixed-x31             Reserve the x31 register (AArch64/RISC-V only)
  -ffixed-x3              Reserve the x3 register (AArch64/RISC-V only)
  -ffixed-x4              Reserve the x4 register (AArch64/RISC-V only)
  -ffixed-x5              Reserve the x5 register (AArch64/RISC-V only)
  -ffixed-x6              Reserve the x6 register (AArch64/RISC-V only)
  -ffixed-x7              Reserve the x7 register (AArch64/RISC-V only)
  -ffixed-x8              Reserve the x8 register (AArch64/RISC-V only)
  -ffixed-x9              Reserve the x9 register (AArch64/RISC-V only)
  -fforce-check-cxx20-modules-input-files
                          Check the input source files from C++20 modules explicitly
  -fforce-dwarf-frame     Always emit a debug frame section
  -fforce-emit-vtables    Emits more virtual tables to improve devirtualization
  -fforce-enable-int128   Enable support for int128_t type
  -ffp-accuracy=<value>   Specifies the required accuracy for floating-point operations and library calls.
  -ffp-contract=<value>   Form fused FP ops (e.g. FMAs)
  -ffp-eval-method=<value>
                          Specifies the evaluation method to use for floating-point arithmetic.
  -ffp-exception-behavior=<value>
                          Specifies the exception behavior of floating-point operations.
  -ffp-model=<value>      Controls the semantics of floating-point calculations.
  -ffreestanding          Assert that the compilation takes place in a freestanding environment
  -ffuchsia-api-level=<value>
                          Set Fuchsia API level
  -ffunction-sections     Place each function in its own section
  -fglobal-isel           Enables the global instruction selector
  -fgnu-keywords          Allow GNU-extension keywords regardless of language standard
  -fgnu-runtime           Generate output compatible with the standard GNU Objective-C runtime
  -fgnu89-inline          Use the gnu89 inline semantics
  -fgnuc-version=<value>  Sets various macros to claim compatibility with the given GCC version (default is 4.2.1)
  -fgpu-allow-device-init Allow device side init function in HIP (experimental)
  -fgpu-approx-transcendentals
                          Use approximate transcendental functions
  -fgpu-default-stream=<value>
                          Specify default stream. The default value is 'legacy'. (CUDA/HIP only)
  -fgpu-defer-diag        Defer host/device related diagnostic messages for CUDA/HIP
  -fgpu-flush-denormals-to-zero
                          Flush denormal floating point values to zero in CUDA/HIP device mode.
  -fgpu-rdc               Generate relocatable device code, also known as separate compilation mode
  -fgpu-sanitize          Enable sanitizer for supported offloading devices
  -fhelp                  Display available options
  -fhip-emit-relocatable  Compile HIP source to relocatable
  -fhip-fp32-correctly-rounded-divide-sqrt
                          Specify that single precision floating-point divide and sqrt used in the program source are correctly rounded (HIP device compilation only)
  -fhip-kernel-arg-name   Specify that kernel argument names are preserved (HIP only)
  -fhip-new-launch-api    Use new kernel launching API for HIP
  -fhlsl-strict-availability
                          Enables strict availability diagnostic mode for HLSL built-in functions.
  -fhls                   Enable Intel FPGA High Level Synthesis extensions
  -fhonor-infinities      Specify that floating-point optimizations are not allowed that assume arguments and results are not +-inf.
  -fhonor-nan-compares    Honor NaN compares with fast math
  -fhonor-nans            Specify that floating-point optimizations are not allowed that assume arguments and results are not NANs.
  -fignore-exceptions     Enable support for ignoring exception handling constructs
  -fimf-absolute-error=<value>
                          Define the maximum allowable absolute error for math library function results
  -fimf-accuracy-bits=<value>
                          Define the relative error, measured by the number of correct bits,for math library function results
  -fimf-arch-consistency=<value>
                          Ensures that the math library functions produce consistent results across different implementations of the same architecture
  -fimf-domain-exclusion=<value>
                          Indicates the input arguments domain on which math functions must provide correct results.
  -fimf-max-error=<value> defines the maximum allowable relative error, measured in ulps, for math library function results
  -fimf-precision=<value> Defines the accuracy (precision) for math library functions.
  -fimf-use-svml=<value>  Instruct the compiler to implement math library functions using the Short Vector Math Library(SVML)
  -fimplicit-module-maps  Implicitly search the file system for module map files.
  -fincremental-extensions
                          Enable incremental processing extensions such as processingstatements on the global scope.
  -finline-functions      Inline suitable functions
  -finline-hint-functions Inline functions which are (explicitly or implicitly) marked inline
  -finline-max-stacksize=<value>
                          Suppress inlining of functions whose stack size exceeds the given value
  -finput-charset=<value> Specify the default character set for source files
  -finstrument-function-entry-bare
                          Instrument function entry only, after inlining, without arguments to the instrumentation call
  -finstrument-functions-after-inlining
                          Like -finstrument-functions, but insert the calls after inlining
  -finstrument-functions  Generate calls to instrument function entry and exit
  -fintegrated-as         Enable the integrated assembler
  -fintegrated-cc1        Run cc1 in-process
  -fintegrated-objemitter Use internal machine object code emitter.
  -fintel-long-double-size=<value>
                          Overrides the size of long double from the architecture/OS defaults.
  -fintelfpga             Perform ahead-of-time compilation for FPGA
  -fiopenmp-simd          Same as -qopenmp-simd
  -fiopenmp               Same as -qopenmp
  -fjmc                   Enable just-my-code debugging
  -fjump-tables           Use jump tables for lowering switches
  -fkeep-persistent-storage-variables
                          Enable keeping all variables that have a persistent storage duration, including global, static and thread-local variables, to guarantee that they can be directly addressed
  -fkeep-static-consts    Keep static const variables even if unused
  -fkeep-system-includes  Instead of expanding system headers when emitting preprocessor output, preserve the #include directive. Useful when producing preprocessed output for test case reduction. May produce incorrect output if preprocessor symbols that control the included content (e.g. _XOPEN_SOURCE) are defined in the including source file. The portability of the resulting source to other compilation environments is not guaranteed.
                          
                          Only valid with -E.
  -flax-vector-conversions=<value>
                          Enable implicit vector bit-casts
  -flink-huge-device-code Generate and use a custom linker script for huge device code sections
  -flto-jobs=<value>      Controls the backend parallelism of -flto=thin (default of 0 means the number of threads will be derived from the number of CPUs detected)
  -flto=auto              Enable LTO in 'full' mode
  -flto=jobserver         Enable LTO in 'full' mode
  -flto=<value>           Set LTO mode
  -flto                   Enable LTO in 'full' mode
  -fmacro-backtrace-limit=<value>
                          Set the maximum number of entries to print in a macro expansion backtrace (0 = no limit)
  -fmacro-prefix-map=<value>
                          remap file source paths in predefined preprocessor macros and __builtin_FILE(). Implies -ffile-reproducible.
  -fmaintain-32-byte-stack-align
                          Do not assume any alignment, but maintain alignment in case the stack is already aligned
  -fmath-errno            Require math functions to indicate errors by setting errno
  -fmax-tokens=<value>    Max total number of preprocessed tokens for -Wmax-tokens.
  -fmax-type-align=<value>
                          Specify the maximum alignment to enforce on pointers lacking an explicit alignment
  -fma                    Enable the combining of floating point multiples and add/subtract operations.
  -fmemory-profile-use=<pathname>
                          Use memory profile for profile-guided memory optimization
  -fmemory-profile=<directory>
                          Enable heap memory profiling and dump results into <directory>
  -fmemory-profile        Enable heap memory profiling
  -fmerge-all-constants   Allow merging of constants
  -fmerge-debug-strings   Merge identical debug strings in different object files.
  -fmessage-length=<value>
                          Format message diagnostics so that they fit within N columns
  -fminimize-whitespace   Ignore the whitespace from the input file when emitting preprocessor output. It will only contain whitespace when necessary, e.g. to keep two minus signs from merging into to an increment operator. Useful with the -P option to normalize whitespace such that two files with only formatting changes are equal.
                          
                          Only valid with -E on C-like inputs and incompatible with -traditional-cpp.
  -fmodule-file=[<name>=]<file>
                          Specify the mapping of module name to precompiled module file, or load a module file if name is omitted.
  -fmodule-header=<kind>  Build a C++20 Header Unit from a header that should be found in the user (fmodule-header=user) or system (fmodule-header=system) search path.
  -fmodule-header         Build a C++20 Header Unit from a header
  -fmodule-map-file=<file>
                          Load this module map file
  -fmodule-name=<name>    Specify the name of the module to build
  -fmodule-output=<value> Save intermediate module file results when compiling a standard C++ module unit.
  -fmodule-output         Save intermediate module file results when compiling a standard C++ module unit.
  -fmodules-cache-path=<directory>
                          Specify the module cache path
  -fmodules-decluse       Require declaration of modules used within a module
  -fmodules-disable-diagnostic-validation
                          Disable validation of the diagnostic options when loading the module
  -fmodules-ignore-macro=<value>
                          Ignore the definition of the given macro when building and loading modules
  -fmodules-prune-after=<seconds>
                          Specify the interval (in seconds) after which a module file will be considered unused
  -fmodules-prune-interval=<seconds>
                          Specify the interval (in seconds) between attempts to prune the module cache
  -fmodules-search-all    Search even non-imported modules to resolve references
  -fmodules-strict-decluse
                          Like -fmodules-decluse but requires all headers to be in modules
  -fmodules-user-build-path <directory>
                          Specify the module user build path
  -fmodules-validate-input-files-content
                          Validate PCM input files based on content if mtime differs
  -fmodules-validate-once-per-build-session
                          Don't verify input files for the modules if the module has been successfully validated or loaded during this build session
  -fmodules-validate-system-headers
                          Validate the system headers that a module depends on when loading the module
  -fmodules               Enable the 'modules' language feature
  -fms-compatibility-version=<value>
                          Dot-separated value representing the Microsoft compiler version number to report in _MSC_VER (0 = don't define it (default))
  -fms-compatibility      Enable full Microsoft Visual C++ compatibility
  -fms-define-stdc        Define '__STDC__' to '1' in MSVC Compatibility mode
  -fms-extensions         Accept some non-standard constructs supported by the Microsoft compiler
  -fms-hotpatch           Ensure that all functions can be hotpatched at runtime
  -fms-runtime-lib=<value>
                          Select Windows run-time library
  -fms-volatile           Volatile loads and stores have acquire and release semantics
  -fmsc-version=<value>   Microsoft compiler version number to report in _MSC_VER (0 = don't define it (default))
  -fnew-alignment=<align> Specifies the largest alignment guaranteed by '::operator new(size_t)'
  -fnew-infallible        Enable treating throwing global C++ operator new as always returning valid memory (annotates with __attribute__((returns_nonnull)) and throw()). This is detectable in source.
  -fno-aapcs-bitfield-width
                          Do not follow the AAPCS standard requirement stating that volatile bit-field width is dictated by the field container type. (ARM only).
  -fno-access-control     Disable C++ access control
  -fno-addrsig            Don't emit an address-significance table
  -fno-alias              Enables 'noalias' attribute for all pointer-type arguments
  -fno-align-functions    Aligns on a 2-byte boundary
  -fno-apinotes-modules   Disable module-based external API notes support
  -fno-apinotes           Disable external API notes support
  -fno-assume-sane-operator-new
                          Don't assume that C++'s global operator new can't alias any pointer
  -fno-assume-unique-vtables
                          Disable optimizations based on vtable pointer identity
  -fno-assumptions        Disable codegen and compile-time checks for C++23's [[assume]] attribute
  -fno-auto-import        MinGW specific. Disable support for automatic dllimport in code generation and linking
  -fno-autolink           Disable generation of linker directives for automatic library linking
  -fno-builtin-<value>    Disable implicit builtin knowledge of a specific function
  -fno-builtin            Disable implicit builtin knowledge of functions
  -fno-bundle-offload-arch
                          Specify that the offload bundler should not identify a bundle with specific arch. For example, the bundle for `nvptx64-nvidia-cuda-sm_80` uses the bundle tag `nvptx64-nvidia-cuda` when used. This allows .o files to contain .bc bundles that are unspecific to a particular arch version.
  -fno-c++-static-destructors
                          Disable C++ static destructor registration
  -fno-char8_t            Disable C++ builtin type char8_t
  -fno-clangir            Use the AST -> LLVM pipeline to compile
  -fno-color-diagnostics  Disable colors in diagnostics
  -fno-common             Compile common globals like normal definitions
  -fno-complete-member-pointers
                          Do not require member pointer base types to be complete if they would be significant under the Microsoft ABI
  -fno-constant-cfstrings Disable creation of CodeFoundation-type constant strings
  -fno-convergent-functions
                          Assume all functions may be convergent.
  -fno-coverage-mapping   Disable code coverage analysis
  -fno-coverage-mcdc      Disable MC/DC coverage criteria
  -fno-crash-diagnostics  Disable auto-generation of preprocessed source files and a script for reproduction during a clang crash
  -fno-cuda-prec-sqrt     Don't specify that sqrt is correctly rounded (for CUDA devices)
  -fno-cx-fortran-rules   Range reduction is disabled for complex arithmetic operations
  -fno-cx-limited-range   Basic algebraic expansions of complex arithmetic operations involving are disabled.
  -fno-cxx-modules        Disable modules for C++
  -fno-debug-macro        Do not emit macro debug information
  -fno-declspec           Disallow __declspec as a keyword
  -fno-define-target-os-macros
                          Disable predefined target OS macros
  -fno-delayed-template-parsing
                          Disable delayed template parsing
  -fno-delete-null-pointer-checks
                          Do not treat usage of null pointers as undefined behavior
  -fno-diagnostics-fixit-info
                          Do not include fixit information in diagnostics
  -fno-diagnostics-show-line-numbers
                          Show line numbers in diagnostic code snippets
  -fno-digraphs           Disallow alternative token representations '<:', ':>', '<%', '%>', '%:', '%:%:'
  -fno-direct-access-external-data
                          Use GOT indirection to reference external data symbols
  -fno-disable-block-signature-string
                          Don't disable block signature string)
  -fno-discard-value-names
                          Do not discard value names in LLVM IR
  -fno-dollars-in-identifiers
                          Disallow '$' in identifiers
  -fno-elide-constructors Disable C++ copy constructor elision
  -fno-elide-type         Do not elide types when printing diagnostics
  -fno-eliminate-unused-debug-types
                          Emit  debug info for defined but unused types
  -fno-emit-class-debug-always
                          Emit debug information for a C++ class in only one object file
  -fno-exceptions         Disable support for exception handling
  -fno-experimental-late-parse-attributes
                          Disable experimental late parsing of attributes
  -fno-experimental-relative-c++-abi-vtables
                          Do not use the experimental C++ class ABI for classes with virtual tables
  -fno-experimental-sanitize-metadata=<value>
                          Disable emitting metadata for binary analysis sanitizers
  -fno-fat-lto-objects    Disable fat LTO object support
  -fno-file-reproducible  Use the host's platform-specific path separator character when expanding the __FILE__ macro
  -fno-fine-grained-bitfield-accesses
                          Use large-integer access for consecutive bitfield runs.
  -fno-finite-loops       Do not assume that any loop is finite.
  -fno-fixed-point        Disable fixed point types
  -fno-force-enable-int128
                          Disable support for int128_t type
  -fno-global-isel        Disables the global instruction selector
  -fno-gnu-inline-asm     Disable GNU style inline asm
  -fno-gpu-allow-device-init
                          Don't allow device side init function in HIP (experimental)
  -fno-gpu-approx-transcendentals
                          Don't use approximate transcendental functions
  -fno-gpu-defer-diag     Don't defer host/device related diagnostic messages for CUDA/HIP
  -fno-hip-emit-relocatable
                          Do not override toolchain to compile HIP source to relocatable
  -fno-hip-fp32-correctly-rounded-divide-sqrt
                          Don't specify that single precision floating-point divide and sqrt used in the program source are correctly rounded (HIP device compilation only)
  -fno-hip-kernel-arg-name
                          Don't specify that kernel argument names are preserved (HIP only)
  -fno-hip-new-launch-api Don't use new kernel launching API for HIP
  -fno-honor-nan-compares Do not honor NaN compares with fast math
  -fno-integrated-as      Disable the integrated assembler
  -fno-integrated-cc1     Spawn a separate process for each cc1
  -fno-integrated-objemitter
                          Use external machine object code emitter.
  -fno-jump-tables        Do not use jump tables for lowering switches
  -fno-keep-persistent-storage-variables
                          Disable keeping all variables that have a persistent storage duration, including global, static and thread-local variables, to guarantee that they can be directly addressed
  -fno-keep-static-consts Don't keep static const variables even if unused
  -fno-knr-functions      Disable support for K&R C function declarations
  -fno-link-huge-device-code
                          Do not generate or use a custom linker script for huge device code sections (default)
  -fno-lto                Disable LTO mode (default)
  -fno-memory-profile     Disable heap memory profiling
  -fno-merge-all-constants
                          Disallow merging of constants
  -fno-merge-debug-strings
                           Do not mergeidentical debug strings in different object files.
  -fno-modules-check-relocated<value>
                          Skip checks for relocated modules when loading PCM files
  -fno-modules-validate-textual-header-includes
                          Do not enforce -fmodules-decluse and private header restrictions for textual headers. This flag will be removed in a future Clang release.
  -fno-new-infallible     Disable treating throwing global C++ operator new as always returning valid memory (annotates with __attribute__((returns_nonnull)) and throw()). This is detectable in source.
  -fno-objc-avoid-heapify-local-blocks
                          Don't try to avoid heapifying local blocks
  -fno-objc-infer-related-result-type
                          do not infer Objective-C related result type based on method family
  -fno-offload-lto        Disable LTO mode (default) for offload compilation
  -fno-offload-uniform-block
                          Don't assume that kernels are launched with uniform block sizes (default true for CUDA/HIP and false otherwise)
  -fno-openmp-device-lib=<value>
                          Control exclusion of device libraries from device binary linkage. Valid arguments are libc, libm-fp32, libm-fp64, all
  -fno-openmp-extensions  Disable all Clang extensions for OpenMP directives and clauses
  -fno-operator-names     Do not treat C++ operator name keywords as synonyms for operators
  -fno-optimize-sibling-calls
                          Disable tail call optimization, keeping the call stack accurate
  -fno-pch-codegen        Do not generate code for uses of this PCH that assumes an explicit object file will be built for the PCH
  -fno-pch-debuginfo      Do not generate debug info for types in an object file built from this PCH and do not generate them elsewhere
  -fno-plt                Use GOT indirection instead of PLT to make external function calls (x86 only)
  -fno-preserve-as-comments
                          Do not preserve comments in inline assembly
  -fno-profile-generate   Disable generation of profile instrumentation.
  -fno-profile-instr-generate
                          Disable generation of profile instrumentation.
  -fno-profile-instr-use  Disable using instrumentation data for profile-guided optimization
  -fno-pseudo-probe-for-profiling
                          Do not emit pseudo probes for sample profiling
  -fno-raw-string-literals
                          Disable raw string literals
  -fno-register-global-dtors-with-atexit
                          Don't use atexit or __cxa_atexit to register global destructors
  -fno-relaxed-template-template-args
                          Disable C++17 relaxed template template argument matching
  -fno-rtlib-add-rpath    Do not add -rpath with architecture-specific resource directory to the linker flags. When --hip-link is specified, do not add -rpath with HIP runtime library directory to the linker flags
  -fno-rtlib-defaultlib   On Windows, do not emit /defaultlib: directives to link compiler-rt libraries
  -fno-rtti-data          Disable generation of RTTI data
  -fno-rtti               Disable generation of rtti information
  -fno-sanitize-address-globals-dead-stripping
                          Disable linker dead stripping of globals in AddressSanitizer
  -fno-sanitize-address-outline-instrumentation
                          Use default code inlining logic for the address sanitizer
  -fno-sanitize-address-poison-custom-array-cookie
                          Disable poisoning array cookies when using custom operator new[] in AddressSanitizer
  -fno-sanitize-address-use-after-scope
                          Disable use-after-scope detection in AddressSanitizer
  -fno-sanitize-address-use-odr-indicator
                          Disable ODR indicator globals
  -fno-sanitize-cfi-canonical-jump-tables
                          Do not make the jump table addresses canonical in the symbol table
  -fno-sanitize-cfi-cross-dso
                          Disable control flow integrity (CFI) checks for cross-DSO calls.
  -fno-sanitize-coverage=<value>
                          Disable features of coverage instrumentation for Sanitizers
  -fno-sanitize-hwaddress-experimental-aliasing
                          Disable aliasing mode in HWAddressSanitizer
  -fno-sanitize-ignorelist
                          Don't use ignorelist file for sanitizers
  -fno-sanitize-memory-param-retval
                          Disable detection of uninitialized parameters and return values
  -fno-sanitize-memory-track-origins
                          Disable origins tracking in MemorySanitizer
  -fno-sanitize-memory-use-after-dtor
                          Disable use-after-destroy detection in MemorySanitizer
  -fno-sanitize-recover=<value>
                          Disable recovery for specified sanitizers
  -fno-sanitize-stable-abi
                          Conventional ABI instrumentation for sanitizer runtime. Default: Conventional
  -fno-sanitize-stats     Disable sanitizer statistics gathering.
  -fno-sanitize-thread-atomics
                          Disable atomic operations instrumentation in ThreadSanitizer
  -fno-sanitize-thread-func-entry-exit
                          Disable function entry/exit instrumentation in ThreadSanitizer
  -fno-sanitize-thread-memory-access
                          Disable memory access instrumentation in ThreadSanitizer
  -fno-sanitize-trap=<value>
                          Disable trapping for specified sanitizers
  -fno-sanitize-trap      Disable trapping for all sanitizers
  -fno-short-wchar        Force wchar_t to be an unsigned int
  -fno-show-column        Do not include column number on diagnostics
  -fno-show-source-location
                          Do not include source location information with diagnostics
  -fno-signed-char        char is unsigned
  -fno-signed-zeros       Allow optimizations that ignore the sign of floating point zeros
  -fno-skip-odr-check-in-gmf
                          Perform ODR checks for decls in the global module fragment.
  -fno-spell-checking     Disable spell-checking
  -fno-split-machine-functions
                          Disable late function splitting using profile information (x86 ELF/COFF)
  -fno-split-stack        Wouldn't use segmented stack
  -fno-stack-clash-protection
                          Disable stack clash protection
  -fno-stack-protector    Disable the use of stack protectors
  -fno-standalone-debug   Limit debug information produced to reduce size of debug binary
  -fno-strict-aliasing    Disable optimizations based on strict aliasing rules
  -fno-strict-float-cast-overflow
                          Relax language rules and try to match the behavior of the target's native float-to-int conversion instructions
  -fno-strict-return      Don't treat control flow paths that fall off the end of a non-void function as unreachable
  -fno-sycl-add-default-spec-consts-image
                          Turns off generation of device image where all specialization constant usages are replaced with default values.
  -fno-sycl-allow-device-dependencies
                          Do not allow dependencies between device code images (default)
  -fno-sycl-dead-args-optimization
                          Disables elimination of DPC++ dead kernel arguments
  -fno-sycl-decompose-functor
                          Do not decompose SYCL functor if possible (experimental, CUDA only)
  -fno-sycl-device-code-split-esimd
                          do not split ESIMD and SYCL device code into separate device binary images. Has effect only for SPIR-based targets. (experimental)
  -fno-sycl-device-lib-jit-link
                          Disables sycl device library jit link (experimental)
  -fno-sycl-device-lib=<value>
                          Control exclusion of device libraries from device binary linkage. Valid arguments are libc, libm-fp32, libm-fp64, all
  -fno-sycl-early-optimizations
                          Disable standard optimization pipeline for SYCL device compiler
  -fno-sycl-esimd-force-stateless-mem
                          Do not enforce using stateless memory accesses.
  -fno-sycl-explicit-simd Disable SYCL explicit SIMD extension. (deprecated)
  -fno-sycl-force-inline-kernel-lambda
                          Disallow force inline SYCL kernels lambda in entry point
  -fno-sycl-id-queries-fit-in-int
                          Do not assume that SYCL ID queries fit within MAX_INT.
  -fno-sycl-instrument-device-code
                          Do not add Instrumentation and Tracing Technology (ITT) instrumentation intrinsics calls (experimental)
  -fno-sycl-libspirv      Disable check for libspirv
  -fno-sycl-link-spirv    Disable adding of the default (spir64) triple when discovered in user specified objects and archives.
  -fno-sycl-pstl-offload  Disable offloading of C++ standard parallel algorithms.
  -fno-sycl-rdc           Generate relocatable device code during SYCL offload target compilation. Use of ‘-fno-sycl-rdc’ in combination with ‘-c’ will produce final device binaries within the generated fat object. When using this option, each kernel must be self-contained within its translation unit (source file).  Therefore, the use of SYCL_EXTERNAL is disallowed when this option is enabled.
  -fno-sycl-remove-unused-external-funcs
                          Prevent removal of unused `SYCL_EXTERNAL` functions
  -fno-sycl-unnamed-lambda
                          Disallow unnamed SYCL lambda kernels
  -fno-sycl-use-bitcode   Use SPIR-V instead of LLVM bitcode in fat objects (deprecated)
  -fno-sycl-use-footer    Disable usage of the integration footer during SYCL enabled compilations.
  -fno-sycl               Disables SYCL kernels compilation for device
  -fno-system-debug       Do not emit debug information for declarations in system headers
  -fno-temp-file          Directly create compilation output files. This may lead to incorrect incremental builds if the compiler crashes
  -fno-threadsafe-statics Do not emit code to make initialization of local statics thread safe
  -fno-trigraphs          Do not process trigraph sequences
  -fno-unified-lto        Use distinct LTO pipelines
  -fno-unique-section-names
                          Don't use unique names for text and data sections
  -fno-unroll-loops       Turn off loop unroller
  -fno-use-cxa-atexit     Don't use __cxa_atexit for calling destructors
  -fno-use-init-array     Use .ctors/.dtors instead of .init_array/.fini_array
  -fno-vec-allow-scalar-stores
                          When this option is set, an explicit simd loop (for example, one set with #pragma omp simd) will not be vectorized if it contains a store to a scalar variable that is not marked as private, lastprivate, or reduction.
  -fno-vec-peel-loops     Disable peel loop vectorization.
  -fno-vec-remainder-loops
                          Disable remainder loop vectorization.
  -fno-vec-with-mask      Disable vectorization for short trip-count loops with masking.
  -fno-verify-intermediate-code
                          Disable verification of LLVM IR
  -fno-visibility-inlines-hidden-static-local-var
                          Disables -fvisibility-inlines-hidden-static-local-var (this is the default on non-darwin targets)
  -fno-xray-function-index
                          Omit function index section at the expense of single-function patching performance
  -fno-zero-initialized-in-bss
                          Don't place zero initialized data in BSS
  -fobjc-arc-exceptions   Use EH-safe code when synthesizing retains and releases in -fobjc-arc
  -fobjc-arc              Synthesize retain and release calls for Objective-C pointers
  -fobjc-avoid-heapify-local-blocks
                          Try to avoid heapifying local blocks
  -fobjc-disable-direct-methods-for-testing
                          Ignore attribute objc_direct so that direct methods can be tested
  -fobjc-encode-cxx-class-template-spec
                          Fully encode c++ class template specialization
  -fobjc-exceptions       Enable Objective-C exceptions
  -fobjc-runtime=<value>  Specify the target Objective-C runtime kind and version
  -fobjc-weak             Enable ARC-style weak references in Objective-C
  -foffload-implicit-host-device-templates
                          Template functions or specializations without host, device and global attributes have implicit host device attributes (CUDA/HIP only)
  -foffload-lto=<value>   Set LTO mode for offload compilation
  -foffload-lto           Enable LTO in 'full' mode for offload compilation
  -foffload-uniform-block Assume that kernels are launched with uniform block sizes (default true for CUDA/HIP and false otherwise)
  -fomit-frame-pointer    Omit the frame pointer from functions that don't need it. Some stack unwinding cases, such as profilers and sanitizers, may prefer specifying -fno-omit-frame-pointer. On many targets, -O1 and higher omit the frame pointer by default. -m[no-]omit-leaf-frame-pointer takes precedence for leaf functions
  -fopenacc               Enable OpenACC
  -fopenmp-concurrent-host-device-compile<value>
                          Enable parallel compilation of host and device compilation steps when performing OpenMP offload compiles using -fopenmp-targets. (experimental)
  -fopenmp-declare-target-scalar-defaultmap=<value>
                          Assume that a scalar declare target variable with implicit data-mapping referenced in a 'target' construct has the same value in the host and device environment
  -fopenmp-device-lib=<value>
                          Control inclusion of device libraries into device binary linkage. Valid arguments are libc, libm-fp32, libm-fp64, all
  -fopenmp-device-link    Perform device link during compilation step instead of link step (-c compilations).  Use for offload compilations to produce final device binaries within the generated fat object.
  -fopenmp-extensions     Enable all Clang extensions for OpenMP directives and clauses
  -fopenmp-force-usm      Force behvaior as if the user specified pragma omp requires unified_shared_memory.
  -fopenmp-offload-mandatory
                          Do not create a host fallback if offloading to the device fails.
  -fopenmp-simd           Emit OpenMP code only for SIMD-based constructs. Advanced users who prefer to use OpenMP* as it is implemented by the LLVM community can get most of that functionality by using -fopenmp-simd.
  -fopenmp-target-buffers=<value>
                          Allow access to target objects of 4GB or larger in target code.
  -fopenmp-target-debug   Enable debugging in the OpenMP offloading device RTL
  -fopenmp-target-default-sub-group-size=<value>
                          Specify the default sub-group size of SPMD kernels generated for OpenMP target constructs for SPIR64
  -fopenmp-target-jit     Emit code that can be JIT compiled for OpenMP offloading. Implies -foffload-lto=full
  -fopenmp-targets=<value>
                          Specify comma-separated list of triples that correspond to OpenMP offloading targets to be supported.  Valid triples include spir64_gen, spir64_x86_64 and spir64
  -fopenmp-version=<value>
                          Set OpenMP version (e.g. 45 for OpenMP 4.5, 51 for OpenMP 5.1). Default value is 51 for Clang
  -fopenmp                Parse OpenMP pragmas and generate parallel code. Advanced users who prefer to use OpenMP* as it is implemented by the LLVM community can get most of that functionality by using -fopenmp.
  -foperator-arrow-depth=<value>
                          Maximum number of 'operator->'s to call for a member access
  -foptimization-record-file=<file>
                          Specify the output name of the file containing the optimization remarks. Implies -fsave-optimization-record. On Darwin platforms, this cannot be used with multiple -arch <arch> options.
  -foptimization-record-passes=<regex>
                          Only include passes which match a specified regular expression in the generated optimization record (by default, include all passes)
  -forder-file-instrumentation
                          Generate instrumented code to collect order file into default.profraw file (overridden by '=' form of option or LLVM_PROFILE_FILE env var)
  -fortlib                Allow for Fortran generated objects to be mixed and matched and linked in with the C/C++ compiler to pull in the needed libraries.
  -fp-model=<value>       Controls the semantics of floating-point calculations.
  -fp-speculation=<value> Specifies the exception behavior of floating-point operations.
  -fpack-struct=<value>   Specify the default maximum struct packing alignment
  -fpascal-strings        Recognize and construct Pascal-style string literals
  -fpass-plugin=<dsopath> Load pass plugin from a dynamic shared object file (only with new pass manager).
  -fpatchable-function-entry=<N,M>
                          Generate M NOPs before function entry and N-M NOPs after function entry
  -fpcc-struct-return     Override the default ABI to return all structs on the stack
  -fpch-codegen           Generate code for uses of this PCH that assumes an explicit object file will be built for the PCH
  -fpch-debuginfo         Generate debug info for types in an object file built from this PCH and do not generate them elsewhere
  -fpch-instantiate-templates
                          Instantiate templates already while building a PCH
  -fpch-validate-input-files-content
                          Validate PCH input files based on content if mtime differs
  -fplugin-arg-<name>-<arg>
                          Pass <arg> to plugin <name>
  -fplugin=<dsopath>      Load the named plugin (dynamic shared object)
  -fprebuilt-implicit-modules
                          Look up implicit modules in the prebuilt module path
  -fprebuilt-module-path=<directory>
                          Specify the prebuilt module path
  -fpreview-breaking-changes
                          When specified, it informs the compiler driver and compilation phases that it is allowed to break backward compatibility. When this option is specified the compiler will also set the macro __INTEL_PREVIEW_BREAKING_CHANGES.
                          When this option is used in conjunction with -fsycl, the driver will link against an alternate form of libsycl, libsycl-preview.
  -fproc-stat-report=<value>
                          Save subprocess statistics to the given file
  -fproc-stat-report<value>
                          Print subprocess statistics
  -fprofile-arcs          Instrument code to produce gcov data files (*.gcda)
  -fprofile-dwo-dir=<value>
                          Directory to store .dwo files when using -fprofile-sample-generate and -gsplit-dwarf. (experimental)
  -fprofile-exclude-files=<value>
                          Instrument only functions from files where names don't match all the regexes separated by a semi-colon
  -fprofile-filter-files=<value>
                          Instrument only functions from files where names match any regex separated by a semi-colon
  -fprofile-function-groups=<N>
                          Partition functions into N groups and select only functions in group i to be instrumented using -fprofile-selected-function-group
  -fprofile-generate=<directory>
                          Generate instrumented code to collect execution counts into <directory>/default.profraw (overridden by LLVM_PROFILE_FILE env var)
  -fprofile-generate      Generate instrumented code to collect execution counts into default.profraw (overridden by LLVM_PROFILE_FILE env var)
  -fprofile-instr-generate=<file>
                          Generate instrumented code to collect execution counts into <file> (overridden by LLVM_PROFILE_FILE env var)
  -fprofile-instr-generate
                          Generate instrumented code to collect execution counts into default.profraw file (overridden by '=' form of option or LLVM_PROFILE_FILE env var)
  -fprofile-instr-use=<value>
                          Use instrumentation data for profile-guided optimization
  -fprofile-list=<value>  Filename defining the list of functions/files to instrument. The file uses the sanitizer special case list format.
  -fprofile-ml-use        Use pre-trained machine learning model for profile guided optimizations.(deprecated)
  -fprofile-remapping-file=<file>
                          Use the remappings described in <file> to match the profile data against names in the program
  -fprofile-sample-accurate
                          Specifies that the sample profile is accurate
  -fprofile-sample-generate=<value>
                          Enable compiler and linker generating information and adjusting optimizations for Sample-based Profile Guided Optimizations (SPGO). Vaild arguments are none, keep-all-opt, med-fidelity, max-fidelity. (experimental)
  -fprofile-sample-use=<value>
                          Enable compiler and linker using information for Sample-based Profile Guided Optimizations (SPGO). (experimental)
  -fprofile-selected-function-group=<i>
                          Partition functions into N groups using -fprofile-function-groups and select only functions in group i to be instrumented. The valid range is 0 to N-1 inclusive
  -fprofile-update=<method>
                          Set update method of profile counters
  -fprofile-use=<pathname>
                          Use instrumentation data for profile-guided optimization. If pathname is a directory, it reads from <pathname>/default.profdata. Otherwise, it reads from file <pathname>.
  -fprotect-parens        Determines whether the optimizer honors parentheses when floating-point expressions are evaluated
  -fpseudo-probe-for-profiling
                          Emit pseudo probes for sample profiling
  -fptrauth-auth-traps    Enable traps on authentication failures
  -fptrauth-calls         Enable signing and authentication of all indirect calls
  -fptrauth-function-pointer-type-discrimination
                          Enable type discrimination on C function pointers
  -fptrauth-init-fini     Enable signing of function pointers in init/fini arrays
  -fptrauth-intrinsics    Enable pointer authentication intrinsics
  -fptrauth-returns       Enable signing and authentication of return addresses
  -fptrauth-vtable-pointer-address-discrimination
                          Enable address discrimination of vtable pointers
  -fptrauth-vtable-pointer-type-discrimination
                          Enable type discrimination of vtable pointers
  -frandomize-layout-seed-file=<file>
                          File holding the seed used by the randomize structure layout feature
  -frandomize-layout-seed=<seed>
                          The seed used by the randomize structure layout feature
  -fraw-string-literals   Enable raw string literals
  -freciprocal-math       Allow division operations to be reassociated
  -freg-struct-return     Override the default ABI to return small structs in registers
  -fregister-global-dtors-with-atexit
                          Use atexit or __cxa_atexit to register global destructors
  -frelaxed-template-template-args
                          Enable C++17 relaxed template template argument matching
  -fropi                  Generate read-only position independent code (ARM only)
  -frounding-math         Disable floating point optimizations that assume the default rounding mode.
  -frtlib-add-rpath       Add -rpath with architecture-specific resource directory to the linker flags. When --hip-link is specified, also add -rpath with HIP runtime library directory to the linker flags
  -frtlib-defaultlib      On Windows, emit /defaultlib: directives to link compiler-rt libraries (default)
  -frwpi                  Generate read-write position independent code (ARM only)
  -fsafe-buffer-usage-suggestions
                          Display suggestions to update code associated with -Wunsafe-buffer-usage warnings
  -fsample-profile-use-profi
                          Use profi to infer block and edge counts
  -fsanitize-address-destructor=<value>
                          Set the kind of module destructors emitted by AddressSanitizer instrumentation. These destructors are emitted to unregister instrumented global variables when code is unloaded (e.g. via `dlclose()`).
  -fsanitize-address-field-padding=<value>
                          Level of field padding for AddressSanitizer
  -fsanitize-address-globals-dead-stripping
                          Enable linker dead stripping of globals in AddressSanitizer
  -fsanitize-address-outline-instrumentation
                          Always generate function calls for address sanitizer instrumentation
  -fsanitize-address-poison-custom-array-cookie
                          Enable poisoning array cookies when using custom operator new[] in AddressSanitizer
  -fsanitize-address-use-after-return=<mode>
                          Select the mode of detecting stack use-after-return in AddressSanitizer
  -fsanitize-address-use-after-scope
                          Enable use-after-scope detection in AddressSanitizer
  -fsanitize-address-use-odr-indicator
                          Enable ODR indicator globals to avoid false ODR violation reports in partially sanitized programs at the cost of an increase in binary size
  -fsanitize-cfi-canonical-jump-tables
                          Make the jump table addresses canonical in the symbol table
  -fsanitize-cfi-cross-dso
                          Enable control flow integrity (CFI) checks for cross-DSO calls.
  -fsanitize-cfi-icall-experimental-normalize-integers
                          Normalize integers in CFI indirect call type signature checks
  -fsanitize-cfi-icall-generalize-pointers
                          Generalize pointers in CFI indirect call type signature checks
  -fsanitize-coverage-allowlist=<value>
                          Restrict sanitizer coverage instrumentation exclusively to modules and functions that match the provided special case list, except the blocked ones
  -fsanitize-coverage-ignorelist=<value>
                          Disable sanitizer coverage instrumentation for modules and functions that match the provided special case list, even the allowed ones
  -fsanitize-coverage=<value>
                          Specify the type of coverage instrumentation for Sanitizers
  -fsanitize-hwaddress-abi=<value>
                          Select the HWAddressSanitizer ABI to target (interceptor or platform, default interceptor). This option is currently unused.
  -fsanitize-hwaddress-experimental-aliasing
                          Enable aliasing mode in HWAddressSanitizer
  -fsanitize-ignorelist=<value>
                          Path to ignorelist file for sanitizers
  -fsanitize-memory-param-retval
                          Enable detection of uninitialized parameters and return values
  -fsanitize-memory-track-origins=<value>
                          Enable origins tracking in MemorySanitizer
  -fsanitize-memory-track-origins
                          Enable origins tracking in MemorySanitizer
  -fsanitize-memory-use-after-dtor
                          Enable use-after-destroy detection in MemorySanitizer
  -fsanitize-memtag-mode=<value>
                          Set default MTE mode to 'sync' (default) or 'async'
  -fsanitize-recover=<value>
                          Enable recovery for specified sanitizers
  -fsanitize-stable-abi   Stable  ABI instrumentation for sanitizer runtime. Default: Conventional
  -fsanitize-stats        Enable sanitizer statistics gathering.
  -fsanitize-system-ignorelist=<value>
                          Path to system ignorelist file for sanitizers
  -fsanitize-thread-atomics
                          Enable atomic operations instrumentation in ThreadSanitizer (default)
  -fsanitize-thread-func-entry-exit
                          Enable function entry/exit instrumentation in ThreadSanitizer (default)
  -fsanitize-thread-memory-access
                          Enable memory access instrumentation in ThreadSanitizer (default)
  -fsanitize-trap=<value> Enable trapping for specified sanitizers
  -fsanitize-trap         Enable trapping for all sanitizers
  -fsanitize-undefined-strip-path-components=<number>
                          Strip (or keep only, if negative) a given number of path components when emitting check metadata.
  -fsanitize=<check>      Turn on runtime checks for various forms of undefined or suspicious behavior. See user manual for available checks
  -fsave-optimization-record=<format>
                          Generate an optimization record file in a specific format
  -fsave-optimization-record
                          Generate a YAML optimization record file
  -fseh-exceptions        Use SEH style exceptions
  -fseparate-named-sections
                          Use separate unique sections for named sections (ELF Only)
  -fshort-enums           Allocate to an enum type only as many bytes as it needs for the declared range of possible values
  -fshort-wchar           Force wchar_t to be a short unsigned int
  -fshow-overloads=<value>
                          Which overload candidates to show when overload resolution fails. Defaults to 'all'
  -fshow-skipped-includes Show skipped includes in -H output.
  -fsigned-char           char is signed
  -fsized-deallocation    Enable C++14 sized global deallocation functions
  -fsjlj-exceptions       Use SjLj style exceptions
  -fskip-odr-check-in-gmf Skip ODR checks for decls in the global module fragment.
  -fslp-vectorize         Enable the superword-level parallelism vectorization passes
  -fspell-checking-limit=<value>
                          Set the maximum number of times to perform spell checking on unrecognized identifiers (0 = no limit)
  -fsplit-dwarf-inlining  Provide minimal debug info in the object/executable to facilitate online symbolication/stack traces in the absence of .dwo/.dwp files when using Split DWARF
  -fsplit-lto-unit        Enables splitting of the LTO unit
  -fsplit-machine-functions
                          Enable late function splitting using profile information (x86 ELF/COFF)
  -fsplit-stack           Use segmented stack
  -fstack-clash-protection
                          Enable stack clash protection
  -fstack-limit-register=<value>
                          Limits the stack register size
  -fstack-protector-all   Enable stack protectors for all functions
  -fstack-protector-strong
                          Enable stack protectors for some functions vulnerable to stack smashing. Compared to -fstack-protector, this uses a stronger heuristic that includes functions containing arrays of any size (and any type), as well as any calls to alloca or the taking of an address from a local variable
  -fstack-protector       Enable stack protectors for some functions vulnerable to stack smashing. This uses a loose heuristic which considers functions vulnerable if they contain a char (or 8bit integer) array or constant sized calls to alloca , which are of greater size than ssp-buffer-size (default: 8 bytes). All variable sized calls to alloca are considered vulnerable. A function with a stack protector has a guard value added to the stack frame that is checked on function exit. The guard value must be positioned in the stack frame such that a buffer overflow from a vulnerable variable will overwrite the guard value before overwriting the function's return address. The reference stack guard value is stored in a global variable.
  -fstack-security-check  Enable overflow security checks
  -fstack-size-section    Emit section containing metadata on function stack sizes
  -fstack-usage           Emit .su file containing information on function stack sizes
  -fstandalone-debug      Emit full debug info for all types used by the program
  -fstrict-aliasing       Enable optimizations based on strict aliasing rules
  -fstrict-enums          Enable optimizations based on the strict definition of an enum's value range
  -fstrict-flex-arrays=<n>
                          Enable optimizations based on the strict definition of flexible arrays
  -fstrict-float-cast-overflow
                          Assume that overflowing float-to-int casts are undefined (default)
  -fstrict-vtable-pointers
                          Enable optimizations based on the strict rules for overwriting polymorphic C++ objects
  -fswift-async-fp=<option>
                          Control emission of Swift async extended frame info
  -fsycl-add-default-spec-consts-image
                          Generates a copy of every device image that uses a specialization constant and replaces all usages of specialization constant with default values specified by specialization_id. If a device image doesn't use a specialization constant at all then no copy is generated. This option is only useful if used in conjunction with Ahead of Time Compilation (-fsycl-target command line option).
  -fsycl-allow-device-dependencies
                          Allow dependencies between device code images
  -fsycl-dead-args-optimization
                          Enables elimination of DPC++ dead kernel arguments
  -fsycl-decompose-functor
                          Do decompose SYCL functor if possible (experimental, CUDA only)
  -fsycl-default-sub-group-size <value>
                          Set the default sub group size for SYCL kernels
  -fsycl-device-code-split-esimd
                          split ESIMD device code from SYCL into a separate device binary image (default). Has effect only for SPIR-based targets. (experimental)
  -fsycl-device-code-split=<value>
                          Perform SYCL device code split: per_kernel (device code module is created for each SYCL kernel) | per_source (device code module is created for each source (translation unit)) | off (no device code split). | auto (use heuristic to select the best way of splitting device code). Default is 'auto' - use heuristic to distribute device code across modules
  -fsycl-device-code-split
                          Perform SYCL device code split in the 'auto' mode, i.e. use heuristic to distribute device code across modules
  -fsycl-device-lib-jit-link
                          Enables sycl device library jit link (experimental)
  -fsycl-device-lib=<value>
                          Control inclusion of device libraries into device binary linkage. Valid arguments are libc, libm-fp32, libm-fp64, libimf-fp32, libimf-fp64, libimf-bf16, all
  -fsycl-device-obj=<value>
                          Specify format of device code stored in the resulting object. Valid values are: spirv, llvmir (default)
  -fsycl-device-only      Compile SYCL kernels for device
  -fsycl-disable-range-rounding
                          Deprecated: please use -fsycl-range-rounding=disable instead.
  -fsycl-dump-device-code=<value>
                          Dump device code into the user provided directory.
  -fsycl-early-optimizations
                          Enable standard optimization pipeline for SYCL device compiler
  -fsycl-embed-ir         Embed LLVM IR for runtime kernel fusion
  -fsycl-enable-function-pointers
                          Experimental Feature: Enables function pointers and support for virtual functions for DPC++ kernels and device functions.
  -fsycl-esimd-force-stateless-mem
                          Enforce using stateless memory accesses. Convert stateful accesses via SYCL accessors to stateless within ESIMD kernels. Enabled by default.
  -fsycl-exp-range-rounding
                          Use experimental range rounding.
  -fsycl-explicit-simd    Enable SYCL explicit SIMD extension. (deprecated)
  -fsycl-footer-path=<value>
                          Specify the location of the temporary source file with the included integration footer.
  -fsycl-force-inline-kernel-lambda
                          Allow force inline SYCL kernels lambda in entry point
  -fsycl-force-target=<value>
                          Force the usage of the given triple when extracting device code from any given objects on the command line
  -fsycl-fp32-prec-sqrt   SYCL only. Specify that single precision floating-point sqrt is correctly rounded.
  -fsycl-fp64-conv-emu    Enable fp64 partial emulation for kernels with only fp64 conversion operations and no fp64 computation operations (requires Intel GPU backend supporting fp64 partial emulation).
  -fsycl-help=<value>     Emit help information from the related offline compilation tool. Valid values: all, fpga, gen, x86_64.
  -fsycl-help             Emit help information from all of the offline compilation tools
  -fsycl-host-compiler-options=<value>
                          When performing the host compilation with -fsycl-host-compiler specified, use the given options during that compile. Options are expected to be a quoted list of space separated options.
  -fsycl-host-compiler=<value>
                          Specify C++ compiler binary to perform host compilation with during SYCL offload compiles.
  -fsycl-id-queries-fit-in-int
                          Assume that SYCL ID queries fit within MAX_INT.
  -fsycl-instrument-device-code
                          Add Instrumentation and Tracing Technology (ITT) instrumentation intrinsics calls (experimental)
  -fsycl-libspirv-path=<value>
                          Path to libspirv library
  -fsycl-link=<value>     Generate partially linked device and host object to be used at various stages of compilation
  -fsycl-link             Generate partially linked device object to be used with the host link
  -fsycl-max-parallel-link-jobs=<value>
                          Experimental feature: Controls the maximum parallelism of actions performed on SYCL device code post-link, i.e. the generation of SPIR-V device images or AOT compilation of each device image.
  -fsycl-optimize-non-user-code
                          Option used in conjunction with -O0 to optimize SYCL framework utility functions and leave user's kernel code unoptimized. (experimental)
  -fsycl-pstl-offload=<value>
                          Enable offloading of C++ standard parallel algorithms. Valid arguments are gpu and cpu.
  -fsycl-pstl-offload     Enable offloading of C++ standard parallel algorithms.
  -fsycl-range-rounding=<value>
                          Options for range rounding of SYCL range kernels: disable (do not generate range rounded kernels) force (only generate range rounded kernels) on (generate range rounded kernels as well as unrounded kernels). Default is 'on'
  -fsycl-remove-unused-external-funcs
                          Allow removal of unused `SYCL_EXTERNAL` functions (default)
  -fsycl-targets=<value>  Specify comma-separated list of triples that correspond to SYCL offloading targets to be supported. Valid triples include spir64_gen, spir64_x86_64, spir64_fpga and spir64
  -fsycl-unnamed-lambda   Allow unnamed SYCL lambda kernels
  -fsycl-use-bitcode      Use LLVM bitcode instead of SPIR-V in fat objects (deprecated)
  -fsycl                  Enables SYCL kernels compilation for device
  -fsyntax-only           Run the preprocessor, parser and semantic analysis stages
  -fsystem-debug          Emit debug information for declarations in system headers
  -fsystem-module         Build this module as a system module. Only used with -emit-module
  -ftarget-compile-fast   Experimental feature: Reduce target compilation time, with potential runtime performance trade-off.
  -ftarget-export-symbols Expose exported symbols in a generated target library to allow for visibilty to other modules.
  -ftarget-register-alloc-mode=<value>
                          Specify a register allocation mode for specific hardware for use by supported target backends.
  -ftemplate-backtrace-limit=<value>
                          Set the maximum number of entries to print in a template instantiation backtrace (0 = no limit)
  -ftemplate-depth=<value>
                          Set the maximum depth of recursive template instantiation
  -ftest-coverage         Produce gcov notes files (*.gcno)
  -fthin-link-bitcode=<value>
                          Write minimized bitcode to <file> for the ThinLTO thin link only
  -fthinlto-index=<value> Perform ThinLTO importing using provided function summary index
  -ftime-report=<value>   (For new pass manager) 'per-pass': one report for each pass; 'per-pass-run': one report for each pass invocation
  -ftime-trace-granularity=<value>
                          Minimum time granularity (in microseconds) traced by time profiler
  -ftime-trace=<value>    Similar to -ftime-trace. Specify the JSON file or a directory which will contain the JSON file
  -ftime-trace            Turn on time profiler. Generates JSON file based on output filename.
  -ftrap-function=<value> Issue call to specified function rather than a trap instruction
  -ftrapv-handler=<function name>
                          Specify the function to be called on overflow
  -ftrapv                 Trap on integer overflow
  -ftrigraphs             Process trigraph sequences
  -ftrivial-auto-var-init-max-size=<value>
                          Stop initializing trivial automatic stack variables if var size exceeds the specified number of instances (in bytes)
  -ftrivial-auto-var-init-stop-after=<value>
                          Stop initializing trivial automatic stack variables after the specified number of instances
  -ftrivial-auto-var-init=<value>
                          Initialize trivial automatic stack variables. Defaults to 'uninitialized'
  -ftz                    Enable flush denormal results to zero
  -funified-lto           Use the unified LTO pipeline
  -funique-basic-block-section-names
                          Use unique names for basic block sections (ELF Only)
  -funique-internal-linkage-names
                          Uniqueify Internal Linkage Symbol Names by appending the MD5 hash of the module path
  -funroll-loops          Turn on loop unroller
  -funsafe-math-optimizations
                          Allow unsafe floating-point math optimizations which may decrease precision
  -fuse-complex-intrinsics
                          Determines whether to lower _Complex operations to LLVM complex intrinsics
  -fuse-cuid=<value>      Method to generate ID's for compilation units for single source offloading languages CUDA and HIP: 'hash' (ID's generated by hashing file path and command line options) | 'random' (ID's generated as random numbers) | 'none' (disabled). Default is 'hash'. This option will be overridden by option '-cuid=[ID]' if it is specified.
  -fuse-line-directives   Use #line in preprocessed output
  -fvalidate-ast-input-files-content
                          Compute and store the hash of input files used to build an AST. Files with mismatching mtime's are considered valid if both contents is identical
  -fvec-allow-scalar-stores
                          When this option is set, an explicit simd loop (for example, one set with #pragma omp simd) will be vectorized even if it contains a store to a scalar variable that is not marked as private, lastprivate, or reduction.
  -fvec-peel-loops        Enable peel loop vectorization.
  -fvec-remainder-loops   Enable remainder loop vectorization.
  -fvec-with-mask         Enable vectorization for short trip-count loops with masking.
  -fveclib=<value>        Use the given vector functions library
  -fvectorize             Enable the loop vectorization passes
  -fverbose-asm           Generate verbose assembly output
  -fverify-intermediate-code
                          Enable verification of LLVM IR
  -fvirtual-function-elimination
                          Enables dead virtual function elimination optimization. Requires -flto=full
  -fvisibility-dllexport=<value>
                          The visibility for dllexport definitions. If Keep is specified the visibility is not adjusted [-fvisibility-from-dllstorageclass]
  -fvisibility-externs-dllimport=<value>
                          The visibility for dllimport external declarations. If Keep is specified the visibility is not adjusted [-fvisibility-from-dllstorageclass]
  -fvisibility-externs-nodllstorageclass=<value>
                          The visibility for external declarations without an explicit DLL storage class. If Keep is specified the visibility is not adjusted [-fvisibility-from-dllstorageclass]
  -fvisibility-from-dllstorageclass
                          Override the visibility of globals based on their final DLL storage class.
  -fvisibility-global-new-delete-hidden
                          Give global C++ operator new and delete declarations hidden visibility
  -fvisibility-global-new-delete=<value>
                          The visibility for global C++ operator new and delete declarations. If 'source' is specified the visibility is not adjusted
  -fvisibility-inlines-hidden-static-local-var
                          When -fvisibility-inlines-hidden is enabled, static variables in inline C++ member functions will also be given hidden visibility by default
  -fvisibility-inlines-hidden
                          Give inline C++ member functions hidden visibility by default
  -fvisibility-ms-compat  Give global types 'default' visibility and global functions and variables 'hidden' visibility by default
  -fvisibility-nodllstorageclass=<value>
                          The visibility for definitions without an explicit DLL storage class. If Keep is specified the visibility is not adjusted [-fvisibility-from-dllstorageclass]
  -fvisibility=<value>    Set the default symbol visibility for all global definitions
  -fwasm-exceptions       Use WebAssembly style exceptions
  -fwhole-program-vtables Enables whole-program vtable optimization. Requires -flto
  -fwrapv                 Treat signed integer overflow as two's complement
  -fwritable-strings      Store string literals as writable data
  -fxl-pragma-pack        Enable IBM XL #pragma pack handling
  -fxray-always-emit-customevents
                          Always emit __xray_customevent(...) calls even if the containing function is not always instrumented
  -fxray-always-emit-typedevents
                          Always emit __xray_typedevent(...) calls even if the containing function is not always instrumented
  -fxray-always-instrument=<value>
                          DEPRECATED: Filename defining the whitelist for imbuing the 'always instrument' XRay attribute.
  -fxray-attr-list=<value>
                          Filename defining the list of functions/types for imbuing XRay attributes.
  -fxray-function-groups=<value>
                          Only instrument 1 of N groups
  -fxray-ignore-loops     Don't instrument functions with loops unless they also meet the minimum function size
  -fxray-instruction-threshold=<value>
                          Sets the minimum function size to instrument with XRay
  -fxray-instrumentation-bundle=<value>
                          Select which XRay instrumentation points to emit. Options: all, none, function-entry, function-exit, function, custom. Default is 'all'.  'function' includes both 'function-entry' and 'function-exit'.
  -fxray-instrument       Generate XRay instrumentation sleds on function entry and exit
  -fxray-link-deps        Link XRay runtime library when -fxray-instrument is specified (default)
  -fxray-modes=<value>    List of modes to link in by default into XRay instrumented binaries.
  -fxray-never-instrument=<value>
                          DEPRECATED: Filename defining the whitelist for imbuing the 'never instrument' XRay attribute.
  -fxray-selected-function-group=<value>
                          When using -fxray-function-groups, select which group of functions to instrument. Valid range is 0 to fxray-function-groups - 1
  -fzero-call-used-regs=<value>
                          Clear call-used registers upon function return (AArch64/x86 only)
  -fzvector               Enable System z vector language extension
  -F <value>              Add directory to framework include search path
  --gcc-install-dir=<value>
                          Use GCC installation in the specified directory. The directory ends with path components like 'lib{,32,64}/gcc{,-cross}/$triple/$version'. Note: executables (e.g. ld) used by the compiler are not overridden by the selected GCC installation
  --gcc-toolchain=<value> Specify a directory where Clang can find 'include' and 'lib{,32,64}/gcc{,-cross}/$triple/$version'. Clang will use the GCC installation with the largest version
  --gcc-triple=<value>    Search for the GCC installation with the specified triple.
  -gcodeview-command-line Emit compiler path and command line into CodeView debug information
  -gcodeview-ghash        Emit type record hashes in a .debug$H section
  -gcodeview              Generate CodeView debug information
  -gdwarf-2               Generate source-level debug information with dwarf version 2
  -gdwarf-3               Generate source-level debug information with dwarf version 3
  -gdwarf-4               Generate source-level debug information with dwarf version 4
  -gdwarf-5               Generate source-level debug information with dwarf version 5
  -gdwarf32               Enables DWARF32 format for ELF binaries, if debug information emission is enabled.
  -gdwarf64               Enables DWARF64 format for ELF binaries, if debug information emission is enabled.
  -gdwarf                 Generate source-level debug information with the default dwarf version
  -gembed-source          Embed source text in DWARF debug sections
  -gen-reproducer=<value> Emit reproducer on (option: off, crash (default), error, always)
  -gintel-sti             Generate Intel STI debug information
  -gline-directives-only  Emit debug line info directives only
  -gline-tables-only      Emit debug line number tables only
  -global-hoist           Enable external globals are load safe (default)
  -gmodules               Generate debug info with external references to clang modules or precompiled headers
  -gno-codeview-command-line
                          Don't emit compiler path and command line into CodeView debug information
  -gno-embed-source       Restore the default behavior of not embedding source text in DWARF debug sections
  -gno-inline-line-tables Don't emit inline line tables.
  --gpu-bundle-output     Bundle output files of HIP device compilation
  --gpu-instrument-lib=<value>
                          Instrument device library for HIP, which is a LLVM bitcode containing __cyg_profile_func_enter and __cyg_profile_func_exit
  --gpu-max-threads-per-block=<value>
                          Default max threads per block for kernel launch bounds for HIP
  -gpulibc                Link the LLVM C Library for GPUs
  -gsplit-dwarf=<value>   Set DWARF fission mode
  -gstrict-dwarf          Restrict DWARF features to those defined in the specified version, avoiding features from later versions.
  -gz=<value>             DWARF debug sections compression type
  -G <size>               Put objects of at most <size> bytes into small data section (MIPS / Hexagon)
  -g                      Generate source-level debug information
  --help-hidden           Display help for hidden options
  -help                   Display available options
  --hip-device-lib=<value>
                          HIP device library
  --hip-link              Link clang-offload-bundler bundles for HIP
  --hip-path=<value>      HIP runtime installation path, used for finding HIP version and adding HIP include path.
  --hip-version=<value>   HIP version in the format of major.minor.patch
  --hipspv-pass-plugin=<dsopath>
                          path to a pass plugin for HIP to SPIR-V passes.
  --hipstdpar-interpose-alloc
                          Replace all memory allocation / deallocation calls with hipManagedMalloc / hipFree equivalents
  --hipstdpar-path=<value>
                          HIP Standard Parallel Algorithm Acceleration library path, used for finding and implicitly including the library header
  --hipstdpar-prim-path=<value>
                          rocPrim path, required by the HIP Standard Parallel Algorithm Acceleration library, used to implicitly include the rocPrim library
  --hipstdpar-thrust-path=<value>
                          rocThrust path, required by the HIP Standard Parallel Algorithm Acceleration library, used to implicitly include the rocThrust library
  --hipstdpar             Enable HIP acceleration for standard parallel algorithms
  -H                      Show header includes and nesting depth
  -I-                     Restrict all prior -I flags to double-quoted inclusion and remove current directory from include path
  -iapinotes-modules <directory>
                          Add directory to the API notes search path referenced by module name
  -ibuiltininc            Enable builtin #include directories even when -nostdinc is used before or after -ibuiltininc. Using -nobuiltininc after the option disables it
  -idirafter <value>      Add directory to AFTER include search path
  -iframeworkwithsysroot <directory>
                          Add directory to SYSTEM framework search path, absolute paths are relative to -isysroot
  -iframework <value>     Add directory to SYSTEM framework search path
  -imacros <file>         Include macros from file before parsing
  -include-pch <file>     Include precompiled header file
  -include <file>         Include file before parsing
  -index-header-map       Make the next included directory (-I or -F) an indexer header map
  -inline-forceinline     Treat inline routines as forceinline
  -inline-level=<value>   Set function inlining level where: 0 is disable, 1 is inline marked functions and 2 is inline at compilers discretion
  --intel                 Run in Intel Compiler mode
  -ipo                    Enable LTO in 'full' mode
  -ipp-link=<value>       Link Intel(R) IPP libraries in requested manner (static,dynamic,shared)
  -ipp=<value>            Link commonly used Intel(R) Integrated Performace Primitives (Intel(R) IPP) libraries and bring in the associated headers (common,crypto,nonpic,nonpic_crypto)
  -iprefix <dir>          Set the -iwithprefix/-iwithprefixbefore prefix
  -iquote <directory>     Add directory to QUOTE include search path
  -isysroot <dir>         Set the system root directory (usually /)
  -isystem-after <directory>
                          Add directory to end of the SYSTEM include search path
  -isystem <directory>    Add directory to SYSTEM include search path
  -ivfsoverlay-lib <value>
                          Load the virtual filesystem from shared library
  -ivfsoverlay <value>    Overlay the virtual filesystem described by file over the real file system
  -iwithprefixbefore <dir>
                          Set directory to include search path with prefix
  -iwithprefix <dir>      Set directory to SYSTEM include search path with prefix
  -iwithsysroot <directory>
                          Add directory to SYSTEM include search path, absolute paths are relative to -isysroot
  -I <dir>                Add directory to the end of the list of include search paths
  --libomptarget-amdgcn-bc-path=<value>
                          Path to libomptarget-amdgcn bitcode library
  --libomptarget-amdgpu-bc-path=<value>
                          Path to libomptarget-amdgcn bitcode library
  --libomptarget-nvptx-bc-path=<value>
                          Path to libomptarget-nvptx bitcode library
  -L <dir>                Add directory to library search path
  -mabi=quadword-atomics  Enable quadword atomics ABI on AIX (AIX PPC64 only). Uses lqarx/stqcx. instructions.
  -mabicalls              Enable SVR4-style position-independent code (Mips only)
  -maix-shared-lib-tls-model-opt
                          For shared library loaded with the main program, change local-dynamic access(es) to initial-exec access(es) at the function level (AIX 64-bit only).
  -maix-small-local-dynamic-tls
                          Produce a faster access sequence for local-dynamic TLS variables where the offset from the TLS base is encoded as an immediate operand (AIX 64-bit only). This access sequence is not used for variables larger than 32KB.
  -maix-small-local-exec-tls
                          Produce a faster access sequence for local-exec TLS variables where the offset from the TLS base is encoded as an immediate operand (AIX 64-bit only). This access sequence is not used for variables larger than 32KB.
  -maix-struct-return     Return all structs in memory (PPC32 only)
  -malign-branch-boundary=<value>
                          Specify the boundary's size to align branches
  -malign-branch=<value>  Specify types of branches to align
  -malign-double          Align doubles to two words in structs (x86 only)
  -maltivec               Enable AltiVec vector initializer syntax
  -mamdgpu-ieee           Sets the IEEE bit in the expected default floating point  mode register. Floating point opcodes that support exception flag gathering quiet and propagate signaling NaN inputs per IEEE 754-2008. This option changes the ABI. (AMDGPU only)
  -mamdgpu-precise-memory-op
                          Enable precise memory mode (AMDGPU only)
  -mapx-features=<value>  Enable features of APX
  -mapx-inline-asm-use-gpr32
                          Enable use of GPR32 in inline assembly for APX
  -march=<value>          For a list of available architectures for the target use '-mcpu=help'
  -marm64x<value>         Link as a hybrid ARM64X image
  -mauto-arch=<codes>     generate multiple, processor-specific, auto-dispatched code paths for X86 processors, specified by <codes>, if there is a performance benefit
  -mbackchain             Link stack frames through backchain on System Z
  -mbranch-protection=<value>
                          Enforce targets of indirect branches and function returns
  -mbranches-within-32B-boundaries
                          Align selected branches (fused, jcc, jmp) within 32-byte boundary
  -mcabac                 Enable CABAC instructions
  -mcmse                  Allow use of CMSE (Armv8-M Security Extensions)
  -mcode-object-version=<value>
                          Specify code object ABI version. Defaults to 5. (AMDGPU only)
  -mconstructor-aliases   Enable emitting complete constructors and destructors as aliases when possible
  -mcpu=<value>           For a list of available CPUs for the target use '-mcpu=help'
  -mcrbits                Control the CR-bit tracking feature on PowerPC. ``-mcrbits`` (the enablement of CR-bit tracking support) is the default for POWER8 and above, as well as for all other CPUs when optimization is applied (-O2 and above).
  -mcrc                   Allow use of CRC instructions (ARM/Mips only)
  -mcumode                Specify CU wavefront execution mode (AMDGPU only)
  -mdaz-ftz               Globally set the denormals-are-zero (DAZ) and flush-to-zero (FTZ) bits in the floating-point control register on program startup
  -mdebug-line-version=<value>
                          Set debug line version used when generating debug information
  -mdefault-visibility-export-mapping=<value>
                          Mapping between default visibility and export
  -mdouble=<n             Force double to be <n> bits
  -MD                     Write a depfile containing user and system headers
  -meabi <value>          Set EABI type. Default depends on triple)
  -membedded-data         Place constants in the .rodata section instead of the .sdata section even if they meet the -G <size> threshold (MIPS)
  -menable-experimental-extensions
                          Enable use of experimental RISC-V extensions.
  -mexec-model=<value>    Execution model (WebAssembly only)
  -mexecute-only          Disallow generation of data access to code sections (ARM only)
  -mextern-sdata          Assume that externally defined data is in the small data if it meets the -G <size> threshold (MIPS)
  -mfentry                Insert calls to fentry at function entry (x86/SystemZ only)
  -mfix-cmse-cve-2021-35465
                          Work around VLLDM erratum CVE-2021-35465 (ARM only)
  -mfix-cortex-a53-835769 Workaround Cortex-A53 erratum 835769 (AArch64 only)
  -mfix-cortex-a57-aes-1742098
                          Work around Cortex-A57 Erratum 1742098 (ARM only)
  -mfix-cortex-a72-aes-1655431
                          Work around Cortex-A72 Erratum 1655431 (ARM only)
  -mforced-sw-shadow-stack
                          Force using software shadow stack when shadow-stack enabled
  -mfp32                  Use 32-bit floating point registers (MIPS only)
  -mfp64                  Use 64-bit floating point registers (MIPS only)
  -mframe-chain=<value>   Select the frame chain model used to emit frame records (Arm only).
  -mfunction-return=<value>
                          Replace returns with jumps to ``__x86_return_thunk`` (x86 only, error otherwise)
  -MF <file>              Write depfile output from -MMD, -MD, -MM, or -M to <file>
  -mgeneral-regs-only     Generate code which only uses the general purpose registers (AArch64/x86 only)
  -mglobal-merge          Enable merging of globals
  -mgpopt                 Use GP relative accesses for symbols known to be in a small data section (MIPS)
  -mguard=<value>         Enable or disable Control Flow Guard checks and guard tables emission
  -MG                     Add missing headers to depfile
  -mharden-sls=<value>    Select straight-line speculation hardening scope (ARM/AArch64/X86 only). <arg> must be: all, none, retbr(ARM/AArch64), blr(ARM/AArch64), comdat(ARM/AArch64), nocomdat(ARM/AArch64), return(X86), indirect-jmp(X86)
  -mhvx-ieee-fp           Enable Hexagon HVX IEEE floating-point
  -mhvx-length=<value>    Set Hexagon Vector Length
  -mhvx-qfloat            Enable Hexagon HVX QFloat instructions
  -mhvx=<value>           Enable Hexagon Vector eXtensions
  -mhvx                   Enable Hexagon Vector eXtensions
  -miamcu                 Use Intel MCU ABI
  -mignore-xcoff-visibility
                          Not emit the visibility attribute for asm in AIX OS or give all symbols 'unspecified' visibility in XCOFF object file
  --migrate               Run the migrator
  -mincremental-linker-compatible
                          (integrated-as) Emit an object file which can be used with an incremental linker
  -mindirect-branch-cs-prefix
                          Add cs prefix to call and jmp to indirect thunk
  -mindirect-jump=<value> Change indirect jump instructions to inhibit speculation
  -mintrinsic-promote     Force certain functions using intrinsics to promote their architectures and make the intrinsic headers included by default
  -mios-version-min=<value>
                          Set iOS deployment target
  -MJ <value>             Write a compilation database entry per input
  -mlasx                  Enable Loongson Advanced SIMD Extension (LASX).
  -mlink-builtin-bitcode-postopt
                          Link builtin bitcodes after the optimization pipeline
  -mllvm-lto <value>      Additional arguments to forward to LLVM's option processing. Similar to -mllvm, but will also pass the given argument to the LTO step when appropriate.
  -mllvm=<arg>            Alias for -mllvm
  -mllvm <value>          Additional arguments to forward to LLVM's option processing
  -mlocal-sdata           Extend the -G behaviour to object local data (MIPS)
  -mlong-calls            Generate branches with extended addressability, usually via indirect jumps.
  -mlong-double-128       Force long double to be 128 bits
  -mlong-double-64        Force long double to be 64 bits
  -mlong-double-80        Force long double to be 80 bits, padded to 128 bits for storage
  -mlr-for-calls-only     Do not allocate the LR register for general purpose usage, only for calls. (AArch64 only)
  -mlsx                   Enable Loongson SIMD Extension (LSX).
  -mlvi-cfi               Enable only control-flow mitigations for Load Value Injection (LVI)
  -mlvi-hardening         Enable all mitigations for Load Value Injection (LVI)
  -mmacos-version-min=<value>
                          Set macOS deployment target
  -mmadd4                 Enable the generation of 4-operand madd.s, madd.d and related instructions.
  -mmark-bti-property     Add .note.gnu.property with BTI to assembly files (AArch64 only)
  -MMD                    Write a depfile containing user headers
  -mmemops                Enable generation of memop instructions
  -mmlir <value>          Additional arguments to forward to MLIR's option processing
  -mms-bitfields          Set the default structure layout to be compatible with the Microsoft compiler standard
  -mmsa                   Enable MSA ASE (MIPS only)
  -mmt                    Enable MT ASE (MIPS only)
  -MM                     Like -MMD, but also implies -E and writes to stdout by default
  -mno-abicalls           Disable SVR4-style position-independent code (Mips only)
  -mno-amdgpu-precise-memory-op
                          Disable precise memory mode (AMDGPU only)
  -mno-apx-features=<value>
                          Disable features of APX
  -mno-bti-at-return-twice
                          Do not add a BTI instruction after a setjmp or other return-twice construct (Arm/AArch64 only)
  -mno-constructor-aliases
                          Disable emitting complete constructors and destructors as aliases when possible
  -mno-crc                Disallow use of CRC instructions (Mips only)
  -mno-cumode             Specify WGP wavefront execution mode (AMDGPU only)
  -mno-daz-ftz            Do not globally set the denormals-are-zero (DAZ) and flush-to-zero (FTZ) bits in the floating-point control register on program startup
  -mno-embedded-data      Do not place constants in the .rodata section instead of the .sdata if they meet the -G <size> threshold (MIPS)
  -mno-execute-only       Allow generation of data access to code sections (ARM only)
  -mno-extern-sdata       Do not assume that externally defined data is in the small data if it meets the -G <size> threshold (MIPS)
  -mno-fix-cmse-cve-2021-35465
                          Don't work around VLLDM erratum CVE-2021-35465 (ARM only)
  -mno-fix-cortex-a53-835769
                          Don't workaround Cortex-A53 erratum 835769 (AArch64 only)
  -mno-fix-cortex-a57-aes-1742098
                          Don't work around Cortex-A57 Erratum 1742098 (ARM only)
  -mno-fix-cortex-a72-aes-1655431
                          Don't work around Cortex-A72 Erratum 1655431 (ARM only)
  -mno-fmv                Disable function multiversioning
  -mno-forced-sw-shadow-stack
                          Not force using software shadow stack when shadow-stack enabled
  -mno-gather             Disable generation of gather instructions in auto-vectorization(x86 only)
  -mno-global-merge       Disable merging of globals
  -mno-gpopt              Do not use GP relative accesses for symbols known to be in a small data section (MIPS)
  -mno-hvx-ieee-fp        Disable Hexagon HVX IEEE floating-point
  -mno-hvx-qfloat         Disable Hexagon HVX QFloat instructions
  -mno-hvx                Disable Hexagon Vector eXtensions
  -mno-implicit-float     Don't generate implicit floating point or vector instructions
  -mno-incremental-linker-compatible
                          (integrated-as) Emit an object file which cannot be used with an incremental linker
  -mno-lasx               Disable Loongson Advanced SIMD Extension (LASX).
  -mno-local-sdata        Do not extend the -G behaviour to object local data (MIPS)
  -mno-long-calls         Restore the default behaviour of not generating long calls
  -mno-lsx                Disable Loongson SIMD Extension (LSX).
  -mno-lvi-cfi            Disable control-flow mitigations for Load Value Injection (LVI)
  -mno-lvi-hardening      Disable mitigations for Load Value Injection (LVI)
  -mno-madd4              Disable the generation of 4-operand madd.s, madd.d and related instructions.
  -mno-memops             Disable generation of memop instructions
  -mno-movt               Disallow use of movt/movw pairs (ARM only)
  -mno-ms-bitfields       Do not set the default structure layout to be compatible with the Microsoft compiler standard
  -mno-msa                Disable MSA ASE (MIPS only)
  -mno-mt                 Disable MT ASE (MIPS only)
  -mno-neg-immediates     Disallow converting instructions with negative immediates to their negation or inversion.
  -mno-nvj                Disable generation of new-value jumps
  -mno-nvs                Disable generation of new-value stores
  -mno-outline-atomics    Don't generate local calls to out-of-line atomic operations
  -mno-outline            Disable function outlining (AArch64 only)
  -mno-packets            Disable generation of instruction packets
  -mno-pic-data-is-text-relative
                          Don't assume data segments are relative to text segment
  -mno-regnames           Use only register numbers when writing assembly output
  -mno-relax              Disable linker relaxation
  -mno-restrict-it        Allow generation of complex IT blocks.
  -mno-save-restore       Disable using library calls for save and restore
  -mno-scalar-strict-align
                          Allow scalar memory accesses to be unaligned (RISC-V only)
  -mno-scatter            Disable generation of scatter instructions in auto-vectorization(x86 only)
  -mno-seses              Disable speculative execution side effect suppression (SESES)
  -mno-stack-arg-probe    Disable stack probes which are enabled by default
  -mno-strict-align       Allow memory accesses to be unaligned (AArch64/LoongArch/RISC-V only)
  -mno-tgsplit            Disable threadgroup split execution mode (AMDGPU only)
  -mno-tls-direct-seg-refs
                          Disable direct TLS access through segment registers
  -mno-tocdata=<value>    Specifies a list of variables to be exempt from the TOC datatransformation.
  -mno-tocdata            This is the default. TOC data transformation is not applied to anyvariables. Only variables specified explicitly in -mtocdata= willhave the TOC data transformation.
  -mno-unaligned-access   Force all memory accesses to be aligned (AArch32/MIPSr6 only)
  -mno-unaligned-symbols  Expect external char-aligned symbols to be without ABI alignment (SystemZ only)
  -mno-vector-strict-align
                          Allow vector memory accesses to be unaligned (RISC-V only)
  -mno-wavefrontsize64    Specify wavefront size 32 mode (AMDGPU only)
  -mnocrc                 Disallow use of CRC instructions (ARM only)
  -mnop-mcount            Generate mcount/__fentry__ calls as nops. To activate they need to be patched in.
  -mnvj                   Enable generation of new-value jumps
  -mnvs                   Enable generation of new-value stores
  -module-dependency-dir <value>
                          Directory to dump module dependencies to
  -module-file-info       Provide information about a particular module file
  -momit-leaf-frame-pointer
                          Omit frame pointer setup for leaf functions
  -moutline-atomics       Generate local calls to out-of-line atomic operations
  -moutline               Enable function outlining (AArch64 only)
  -mpacked-stack          Use packed stack layout (SystemZ only).
  -mpackets               Enable generation of instruction packets
  -mpad-max-prefix-size=<value>
                          Specify maximum number of prefixes to use for padding
  -mpic-data-is-text-relative
                          Assume data segments are relative to text segment
  -mprefer-vector-width=<value>
                          Specifies preferred vector width for auto-vectorization. Defaults to 'none' which allows target specific decisions.
  -mprintf-kind=<value>   Specify the printf lowering scheme (AMDGPU only), allowed values are "hostcall"(printing happens during kernel execution, this scheme relies on hostcalls which require system to support pcie atomics) and "buffered"(printing happens after all kernel threads exit, this uses a printf buffer and does not rely on pcie atomic support)
  -MP                     Create phony target for each dependency (other than main file)
  -mqdsp6-compat          Enable hexagon-qdsp6 backward compatibility
  -MQ <value>             Specify name of main file output to quote in depfile
  -mrecip=<value>         Control use of approximate reciprocal and reciprocal square root instructions followed by <n> iterations of Newton-Raphson refinement. <value> = ( ['!'] ['vec-'] ('rcp'|'sqrt') [('h'|'s'|'d')] [':'<n>] ) | 'all' | 'default' | 'none'
  -mrecip                 Equivalent to '-mrecip=all'
  -mrecord-mcount         Generate a __mcount_loc section entry for each __fentry__ call.
  -mregnames              Use full register names when writing assembly output
  -mrelax-all             (integrated-as) Relax all machine instructions
  -mrelax                 Enable linker relaxation
  -mrestrict-it           Disallow generation of complex IT blocks. It is off by default.
  -mrtd                   Make StdCall calling convention the default
  -mrvv-vector-bits=<value>
                          Specify the size in bits of an RVV vector register
  -msave-restore          Enable using library calls for save and restore
  -mscalar-strict-align   Force all scalar memory accesses to be aligned (RISC-V only)
  -mseses                 Enable speculative execution side effect suppression (SESES). Includes LVI control flow integrity mitigations
  -msign-return-address=<value>
                          Select return address signing scope
  -msimd=<value>          Select the SIMD extension(s) to be enabled in LoongArch either 'none', 'lsx', 'lasx'.
  -mskip-rax-setup        Skip setting up RAX register when passing variable arguments (x86 only)
  -msmall-data-limit=<value>
                          Put global and static data smaller than the limit into a special section
  -msoft-float            Use software floating point
  -msse2avx               Specify that the assembler should encode SSE instructions with VEX prefix
  -mstack-alignment=<value>
                          Set the stack alignment
  -mstack-arg-probe       Enable stack probes
  -mstack-probe-size=<value>
                          Set the stack probe size
  -mstack-protector-guard-offset=<value>
                          Use the given offset for addressing the stack-protector guard
  -mstack-protector-guard-reg=<value>
                          Use the given reg for addressing the stack-protector guard
  -mstack-protector-guard-symbol=<value>
                          Use the given symbol for addressing the stack-protector guard
  -mstack-protector-guard=<value>
                          Use the given guard (global, tls) for addressing the stack-protector guard
  -mstackrealignext       Force realign the stack at entry to every external function
  -mstackrealign          Force realign the stack at entry to every function
  -mstrict-align          Force all memory accesses to be aligned (AArch64/LoongArch/RISC-V only)
  -msve-vector-bits=<value>
                          Specify the size in bits of an SVE vector register. Defaults to the vector length agnostic value of "scalable". (AArch64 only)
  -msvr4-struct-return    Return small structs in registers (PPC32 only)
  -mtargetos=<value>      Set the deployment target to be the specified OS and OS version
  -mtgsplit               Enable threadgroup split execution mode (AMDGPU only)
  -mthread-model <value>  The thread model to use. Defaults to 'posix')
  -mtls-dialect=<value>   Which thread-local storage dialect to use for dynamic accesses of TLS variables
  -mtls-direct-seg-refs   Enable direct TLS access through segment registers (default)
  -mtls-size=<value>      Specify bit size of immediate TLS offsets (AArch64 ELF only): 12 (for 4KB) | 24 (for 16MB, default) | 32 (for 4GB) | 48 (for 256TB, needs -mcmodel=large)
  -mtocdata=<value>       Specifies a list of variables to which the TOC data transformationwill be applied.
  -mtocdata               All suitable variables will have the TOC data transformation applied
  -mtp=<value>            Thread pointer access method. For AArch32: 'soft' uses a function call, or 'tpidrurw', 'tpidruro' or 'tpidrprw' use the three CP15 registers. 'cp15' is an alias for 'tpidruro'. For AArch64: 'tpidr_el0', 'tpidr_el1', 'tpidr_el2', 'tpidr_el3' or 'tpidrro_el0' use the five system registers. 'elN' is an alias for 'tpidr_elN'.
  -mtune=<value>          Only supported on AArch64, PowerPC, RISC-V, SPARC, SystemZ, and X86
  -MT <value>             Specify name of main file output in depfile
  -munaligned-access      Allow memory accesses to be unaligned (AArch32/MIPSr6 only)
  -munaligned-symbols     Expect external char-aligned symbols to be without ABI alignment (SystemZ only)
  -munsafe-fp-atomics     Enable generation of unsafe floating point atomic instructions. May generate more efficient code, but may not respect rounding and denormal modes, and may give incorrect results for certain memory destinations. (AMDGPU only)
  -mvector-strict-align   Force all vector memory accesses to be aligned (RISC-V only)
  -mvevpu                 Emit VPU instructions for VE
  -MV                     Use NMake/Jom format for the depfile
  -mwavefrontsize64       Specify wavefront size 64 mode (AMDGPU only)
  -mxcoff-build-id=<0xHEXSTRING>
                          On AIX, request creation of a build-id string, "0xHEXSTRING", in the string table of the loader section inside the linked binary
  -mxcoff-roptr           Place constant objects with relocatable address values in the RO data section and add -bforceimprw to the linker flags (AIX only)
  -mzos-hlq-clang=<ClangHLQ>
                          High level qualifier for z/OS C++RT side deck datasets
  -mzos-hlq-csslib=<CsslibHLQ>
                          High level qualifier for z/OS CSSLIB dataset
  -mzos-hlq-le=<LeHLQ>    High level qualifier for z/OS Language Environment datasets
  -mzos-sys-include=<SysInclude>
                          Path to system headers on z/OS
  -M                      Like -MD, but also implies -E and writes to stdout by default
  -no-ansi-alias          disable use of ANSI aliasing rules optimizations
  --no-cuda-include-ptx=<value>
                          Do not include PTX for the following GPU architecture (e.g. sm_35) or 'all'. May be specified more than once.
  --no-cuda-version-check Don't error out if the detected version of the CUDA install is too low for the requested CUDA gpu architecture.
  --no-default-config     Disable loading default configuration files
  -no-fma                 Disable the combining of floating point multiples and add/subtract operations.
  -no-ftz                 Disable flush denormal results to zero
  -no-global-hoist        Disable external globals are load safe
  --no-gpu-bundle-output  Do not bundle output files of HIP device compilation
  -no-hip-rt              Do not link against HIP runtime libraries
  -no-intel-lib=<value>   Restrict linking of Intel specific libraries. Valid arguments are libirc, libimf, libirng, libsvml
  -no-intel-lib           Restrict linking of all Intel specific libraries.
  -no-ipo                 Disable LTO mode (default)
  --no-offload-arch=<value>
                          Remove CUDA/HIP offloading device architecture (e.g. sm_35, gfx906) from the list of devices to compile for. 'all' resets the list to its default value.
  --no-offload-new-driver Don't Use the new driver for offloading compilation.
  -no-parallel-source-info
                          Disable emission of source location information for parallel code generation.
  -no-sox                 Disable saving of compiler options in the executable
  --no-system-header-prefix=<prefix>
                          Treat all #include paths starting with <prefix> as not including a system header.
  -no-vec                 Disable the loop vectorization passes
  --no-wasm-opt           Disable the wasm-opt optimizer
  -nobuiltininc           Disable builtin #include directories
  -nogpuinc               Do not add include paths for CUDA/HIP and do not include the default CUDA/HIP wrapper headers
  -nogpulib               Do not link device library for CUDA/HIP device compilation
  -nohipwrapperinc        Do not include the default HIP wrapper headers and include paths
  -nolib-inline           disable inline expansion of intrinsic functions
  -nolibsycl              Do not link SYCL runtime library
  -nostdinc++             Disable standard #include directories for the C++ standard library
  --nvptx-arch-tool=<value>
                          Tool used for detecting NVIDIA GPU arch in the system.
  -ObjC++                 Treat source input files as Objective-C++ inputs
  -objcmt-allowlist-dir-path=<value>
                          Only modify files with a filename contained in the provided directory path
  -objcmt-atomic-property Make migration to 'atomic' properties
  -objcmt-migrate-all     Enable migration to modern ObjC
  -objcmt-migrate-annotation
                          Enable migration to property and method annotations
  -objcmt-migrate-designated-init
                          Enable migration to infer NS_DESIGNATED_INITIALIZER for initializer methods
  -objcmt-migrate-instancetype
                          Enable migration to infer instancetype for method result type
  -objcmt-migrate-literals
                          Enable migration to modern ObjC literals
  -objcmt-migrate-ns-macros
                          Enable migration to NS_ENUM/NS_OPTIONS macros
  -objcmt-migrate-property-dot-syntax
                          Enable migration of setter/getter messages to property-dot syntax
  -objcmt-migrate-property
                          Enable migration to modern ObjC property
  -objcmt-migrate-protocol-conformance
                          Enable migration to add protocol conformance on classes
  -objcmt-migrate-readonly-property
                          Enable migration to modern ObjC readonly property
  -objcmt-migrate-readwrite-property
                          Enable migration to modern ObjC readwrite property
  -objcmt-migrate-subscripting
                          Enable migration to modern ObjC subscripting
  -objcmt-ns-nonatomic-iosonly
                          Enable migration to use NS_NONATOMIC_IOSONLY macro for setting property's 'atomic' attribute
  -objcmt-returns-innerpointer-property
                          Enable migration to annotate property with NS_RETURNS_INNER_POINTER
  -objcmt-whitelist-dir-path=<value>
                          Alias for -objcmt-allowlist-dir-path
  -ObjC                   Treat source input files as Objective-C inputs
  -object-file-name=<file>
                          Set the output <file> for debug infos
  --offload-arch=<value>  Specify an offloading device architecture for CUDA, HIP, or OpenMP. (e.g. sm_35). If 'native' is used the compiler will detect locally installed architectures. For HIP offloading, the device architecture can be followed by target ID features delimited by a colon (e.g. gfx908:xnack+:sramecc-). May be specified more than once.
  --offload-compress      Compress offload device binaries (HIP only)
  --offload-device-only   Only compile for the offloading device.
  --offload-host-device   Compile for both the offloading host and device (default).
  --offload-host-only     Only compile for the offloading host.
  --offload-link          Use the new offloading linker to perform the link job.
  --offload-new-driver    Use the new driver for offloading compilation.
  --offload=<value>       Specify comma-separated list of offloading target triples (CUDA and HIP only)
  -o <file>               Write output to <file>
  -parallel-source-info=<value>
                          Emit source location information for parallel code generation with OpenMP and auto-parallelization.
  -pch-use <file>         Include precompiled header file
  -pc <value>             Initialize X87 floating point precision to single, double or double extended. Valid values of 32, 64 and 80
  -pedantic               Warn on language extensions
  -pg                     Enable mcount instrumentation
  -pipe                   Use pipes between commands, when possible
  --precompile            Only precompile the input
  --pretty-sgf            Emit pretty printed symbol graphs
  -print-diagnostic-options
                          Print all of Clang's warning options
  -print-effective-triple Print the effective target triple
  -print-enabled-extensions
                          Print the extensions enabled by the given target and -march/-mcpu options. (AArch64 and RISC-V only)
  -print-file-name=<file> Print the full library path of <file>
  -print-ivar-layout      Enable Objective-C Ivar layout bitmap print trace
  -print-libgcc-file-name Print the library path for the currently used compiler runtime library ("libgcc.a" or "libclang_rt.builtins.*.a")
  -print-library-module-manifest-path
                          Print the path for the C++ Standard library module manifest
  -print-multi-flags-experimental
                          Print the flags used for selecting multilibs (experimental)
  -print-prog-name=<name> Print the full program path of <name>
  -print-resource-dir     Print the resource directory pathname
  -print-rocm-search-dirs Print the paths used for finding ROCm installation
  -print-runtime-dir      Print the directory pathname containing Clang's runtime libraries
  -print-search-dirs      Print the paths used for finding libraries and programs
  -print-supported-cpus   Print supported cpu models for the given target (if target is not specified, it will print the supported cpus for the default target)
  -print-supported-extensions
                          Print supported -march extensions (RISC-V, AArch64 and ARM only)
  -print-target-triple    Print the normalized target triple
  -print-targets          Print the registered targets
  -pthread                Support POSIX threads in generated code
  --ptxas-path=<value>    Path to ptxas (used for compiling CUDA code)
  -P                      Disable linemarker output in -E mode
  -p                      Enable mcount instrumentation with prof
  -qactypes               Enable compile and link support for the Algorithmic C Data-types (AC types)
  -qdaal=<value>          Link Intel(R) Data Analytics Acceleration Library (Intel(R) DAAL) libraries and bring in the associated headers (parallel)
  -qipp-link=<value>      Link Intel(R) IPP libraries in requested manner (static,dynamic,shared)
  -qipp=<value>           Link commonly used Intel(R) Integrated Performace Primitives (Intel(R) IPP) libraries and bring in the associated headers (common,crypto,nonpic,nonpic_crypto)
  -qmkl-ilp64=<value>     Link commonly used Intel(R) Math Kernel ILP64 Variant Library (Intel(R) MKL) and bring in the associated headers (parallel,sequential,cluster)("cluster" is not supported in DPC++)
  -qmkl-sycl-impl=<value> Limit linking of SYCL-specific implementations of the Intel(R) Math Kernel Library to specified in argument. Valid arguments: blas, lapack, dft, sparse, rng, stats, vm.
  -qmkl=<value>           Link commonly used Intel(R) Math Kernel Library (Intel(R) MKL) and bring in the associated headers (parallel,sequential,cluster)("cluster" is not supported in DPC++)
  -qno-actypes            Disable the compile and link support for the Algorithmic C Data-types (AC types)
  -qno-openmp             Disable OpenMP support
  -qno-opt-dynamic-align  Disable peeling to optimize alignment for vectorization.
  -qno-opt-jump-tables    Do not use jump tables for lowering switches
  -qno-opt-matmul         Disables compiler-generated Matrix Multiply (matmul) library call
  -qno-opt-mem-layout-trans
                          Disable memory layout transformations
  -qno-opt-multiple-gather-scatter-by-shuffles
                          Disables the optimization for multiple adjacent gather/scatter type vector memory references
  -qno-opt-prefetch       Disable prefetching.
  -Qn                     Do not emit metadata containing compiler name and version
  -qopenmp-link=<value>   Choose whether to link with the static or dynamic OpenMP libraries. Default is dynamic.
  -qopenmp-simd           Emit OpenMP code only for SIMD-based constructs.
  -qopenmp-stubs          enables the user to compile OpenMP programs in sequential mode. The OpenMP directives are ignored and a stub OpenMP library is linked.
  -qopenmp-threadprivate=<value>
                          Choose which threadprivate implementation to use: compat or legacy.
  -qopenmp                Parse OpenMP pragmas and generate parallel code.
  -qopt-assume-no-loop-carried-dep=<value>
                          Set a level of performance tuning for loops.  0 - The compiler does not assume there is loop-carried dependencies (default).  1 - Assume there are no loop-carried dependencies for innermost loops.  2 - Assume there are no loop-carried dependencies for all loop levels.
  -qopt-dword-index-for-array-of-structs=<value>
                          When specified allows the compiler to use dword indexes to access elements of arrays of structs which in size do not exceed val bytes. The arrays in question should contain no more than INT_MAX / sizeof(element) elements. Allowed values for val are: 16, 32, default is 16.
  -qopt-dynamic-align     Enable peeling to optimize alignment for vectorization.
  -qopt-for-throughput=<value>
                          Optimize for throughput performance, assuming multiple jobs are running.  The memory optimizations for single job versus multiple jobs can be tuned in different ways by the compiler. Valid arguments: multi-job, single-job
  -qopt-jump-tables       Control the generation of jump tables
  -qopt-matmul            Enables compiler-generated Matrix Multiply (matmul) library call
  -qopt-mem-layout-trans=<value>
                          Control the level of memory layout transformations performed by the compiler
  -qopt-multiple-gather-scatter-by-shuffles
                          Enables the optimization for multiple adjacent gather/scatter type vector memory references
  -qopt-prefetch-distance=<value>
                          Specify the prefetch distance to be used for compiler generated prefetches inside loops. Value indicates distance from memory to L2 cache.
  -qopt-prefetch-loads-only
                          Only insert prefetches based on the loads inside the loop. Stores are ignored.
  -qopt-prefetch=<value>  Enable levels of prefetch insertion, where 0 disables.  Values of 1 - 5 are available.  Default is 2.
  -qopt-prefetch          Enable prefetch insertion.  Same as -qopt-prefetch=2.
  -qopt-report-file=<value>
                          Specify the filename or output stream (stdout, stderr) for the generated optimization report
  -qopt-report-names=<value>
                          Specifies whether mangled or unmangled names should appear in the optimization report.
  -qopt-report-phase=<value>
                          Specify one or more phases for which optimization reports are generated
  -qopt-report-stdout     Specify the generated optimization report should be directed to stdout
  -qopt-report=<value>    Generate an optimization report, min, med or max.
  -qopt-streaming-stores=<value>
                          Specifies whether streaming stores are generated.
  -qopt-zmm-usage=<value> Specifies the level of zmm registers usage, low or high
  -Qoption,<arg>           Qoption,<tool>,<args> to pass the comma separated arguments to the <tool>; <tool> can be asm for assembler (or) link/ld for linker (or) preprocessor for preprocessor (or) compiler for compiler
  -qoverride-limits       enables the user to skip throttling of loops in framework and DD.
  -qtbb                   Link Intel(R) Threading Building Blocks (Intel(R) TBB) libraries and bring in the associated headers
  -Qunused-arguments      Don't emit warning for unused driver arguments
  -Qy                     Emit metadata containing compiler name and version
  -regcall4               Set __regcall4 as a default calling convention to respect __regcall ABI v.4
  -regcall                Set __regcall as a default calling convention
  -relocatable-pch        Whether to build a relocatable precompiled header
  -reuse-exe=<exe>        Speed up FPGA aoc compile if the device code in <exe> is unchanged.
  -rewrite-legacy-objc    Rewrite Legacy Objective-C source to C++
  -rewrite-objc           Rewrite Objective-C source to C++
  --rocm-device-lib-path=<value>
                          ROCm device library path. Alternative to rocm-path.
  --rocm-path=<value>     ROCm installation path, used for finding and automatically linking required bitcode libraries.
  -Rpass-analysis=<value> Report transformation analysis from optimization passes whose name matches the given POSIX regular expression
  -Rpass-missed=<value>   Report missed transformations by optimization passes whose name matches the given POSIX regular expression
  -Rpass=<value>          Report transformations performed by optimization passes whose name matches the given POSIX regular expression
  -rtlib=<value>          Compiler runtime library to use
  -R<remark>              Enable the specified remark
  -save-stats=<value>     Save llvm statistics.
  -save-stats             Save llvm statistics.
  -save-temps=<value>     Save intermediate compilation results. <arg> can be set to 'cwd' for current working directory, or 'obj' which will save temporary files in the same directory as the final output file
  -save-temps             Alias for --save-temps=cwd
  -serialize-diagnostics <value>
                          Serialize compiler diagnostics to a file
  -shared-intel           link Intel provided libraries dynamically
  -shared-libsan          Dynamically link the sanitizer runtime
  -sox=<value>            Enable saving of compiler options, version and additional information in the executable.  Use -no-sox to disable (DEFAULT). Valid arguments: profile - Includes data when profile was used for functions that were compiled with PGO enabling options such as -fprofile-use and -fprofile-instr-use, inline - Includes a list of the functions that were inlined in each object, secure - Strip out directory names and options that use them.
  -sox                    Enable saving of compiler options in the executable
  --start-no-unused-arguments
                          Don't emit warnings about unused arguments for the following arguments
  -static-intel           link Intel provided libraries statically
  -static-libsan          Statically link the sanitizer runtime (Not supported for ASan, TSan or UBSan on darwin)
  -static-openmp          Use the static host OpenMP runtime while linking.
  -std=<value>            Language standard to compile for
  -stdlib++-isystem <directory>
                          Use directory as the C++ standard library include path
  -stdlib=<value>         C++ standard library to use
  -strict-ansi            strict ANSI conformance dialect
  -sycl-std=<value>       SYCL language standard to compile for.
  --symbol-graph-dir=<value>
                          Directory in which to emit symbol graphs.
  --system-header-prefix=<prefix>
                          Treat all #include paths starting with <prefix> as including a system header.
  -S                      Only run preprocess and compilation steps
  --target=<value>        Generate code for the given target
  -tbb                    Link Intel(R) Threading Building Blocks (Intel(R) TBB) libraries and bring in the associated headers
  -time                   Time individual commands
  -traceback              Generate traceback debug information
  -traditional-cpp        Enable some traditional CPP emulation
  -trigraphs              Process trigraph sequences
  -T <script>             Specify <script> as linker script
  -undef                  undef all system defines
  -unroll<value>          Set maximum number of times to unroll loops.  Omit n to use default heuristics.  Use 0 to disable the loop unroller.
  -unwindlib=<value>      Unwind library to use
  -use-msasm              enables the use of blocks and entire functions of assembly code within a C or C++ file
  -U <macro>              Undefine macro <macro>
  -vec-threshold<value>   Sets a threshold for the vectorization of loops based on the probability of profitable execution of the vectorized loop in parallel.
  -vecabi=<value>         Determines which vector function ABI the compiler uses to create or call vector functions. The 'gcc' (default) argument enforces compatibility with gcc. The 'cmdtarget' argument uses an extended set of vector functions.
  -vec                    Enable the loop vectorization passes
  --verify-debug-info     Verify the binary representation of debug output
  -verify-pch             Load and verify that a pre-compiled header file is not stale
  --version               Print version information
  -vfsoverlay <value>     Overlay the virtual filesystem described by file over the real file system. Additionally, pass this overlay file to the linker if it supports it
  -v                      Show commands to run and use verbose output
  -Wa,<arg>               Pass the comma separated arguments in <arg> to the assembler
  --wasm-opt              Enable the wasm-opt optimizer (default)
  -Wcheck-unicode-security
                          Enable detection and warn about Unicode constructs that can be exploited by using bi-directional formatting codes, zero-width characters in strings and use of zero-width characters and homoglyphs in identifiers. Done by using clang-tidy
  -Wdeprecated            Enable warnings for deprecated constructs and define __DEPRECATED
  -Winvalid-constexpr     Enable checking of constexpr function bodies for validity within a constant expression context
  -Wl,<arg>               Pass the comma separated arguments in <arg> to the linker
  -Wno-invalid-constexpr  Disable checking of constexpr function bodies for validity within a constant expression context
  -Wno-sycl-strict        Disable warnings which enforce strict SYCL language compatibility.
  -working-directory <value>
                          Resolve file paths relative to the specified directory
  -Wp,<arg>               Pass the comma separated arguments in <arg> to the preprocessor
  -W<warning>             Enable the specified warning
  -w                      Suppress all warnings
  -Xanalyzer <arg>        Pass <arg> to the static analyzer
  -Xarch_device <arg>     Pass <arg> to the CUDA/HIP device compilation
  -Xarch_host <arg>       Pass <arg> to the CUDA/HIP host compilation
  -Xassembler <arg>       Pass <arg> to the assembler
  -Xclang=<arg>           Alias for -Xclang
  -Xclang <arg>           Pass <arg> to clang -cc1
  -Xcuda-fatbinary <arg>  Pass <arg> to fatbinary invocation
  -Xcuda-ptxas <arg>      Pass <arg> to the ptxas assembler
  -Xlinker <arg>          Pass <arg> to the linker
  -Xoffload-linker<triple> <arg>
                          Pass <arg> to the offload linkers or the ones idenfied by -<triple>
  -Xopenmp-target-backend=<triple> <arg>
                          Pass <arg> to the OpenMP based backend identified by <triple>. Depending on the triple (spir64, spir64_gen, spir64_x86_64), the arg passed will be interpreted by the corresponding AOT tool or runtime consumer.
  -Xopenmp-target-backend <arg>
                          Pass <arg> to the OpenMP based target backend.
  -Xopenmp-target-frontend=<value>
                          Pass <arg> to the OpenMP based target frontend identified by <triple>.
  -Xopenmp-target-frontend <value>
                          Pass <arg> to the OpenMP based target frontend.
  -Xopenmp-target-linker=<triple> <arg>
                          Pass <arg> to the SYCL based target linker identified by <triple>.
  -Xopenmp-target-linker <arg>
                          Pass <arg> to the SYCL based target linker.
  -Xopenmp-target=<triple> <arg>
                          Pass <arg> to the target offloading toolchain identified by <triple>.
  -Xopenmp-target <arg>   Pass <arg> to the target offloading toolchain.
  -Xpreprocessor <arg>    Pass <arg> to the preprocessor
  -Xsycl-target-backend=<triple> <arg>
                          Pass <arg> to the SYCL based backend identified by <triple>. Depending on the triple (spir64, spir64_gen, spir64_x86_64, spir64_fpga), the arg passed will be interpreted by the corresponding AOT tool or runtime consumer.
  -Xsycl-target-backend <arg>
                          Pass <arg> to the SYCL based target backend.
  -Xsycl-target-frontend=<triple> <arg>
                          Pass <arg> to the SYCL based target frontend identified by <triple>.
  -Xsycl-target-frontend <arg>
                          Pass <arg> to the SYCL based target frontend.
  -Xsycl-target-linker=<triple> <arg>
                          Pass <arg> to the SYCL based target linker identified by <triple>.
  -Xsycl-target-linker <arg>
                          Pass <arg> to the SYCL based target linker.
  -Xs <arg>               Pass <arg> to the offline compiler.
  -Xs<arg>                Pass <arg> to the offline compiler, adding the option specifier '-' to the <arg>.
  -x <language>           Treat subsequent input files as having type <language>
  -x<code>                Generate specialized code to run exclusively on processors indicated by <code>.
  -z <arg>                Pass -z <arg> to the linker
dxc compatibility options.:
  --dxv-path=<value>  DXIL validator installation path
  -fspv-target-env=<value>
                      Specify the target environment
  -hlsl-entry <value> Entry point name for hlsl
=============================================================================================
TESTING: checkCxxRestrict from config.compilers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/compilers.py:125)
  Check for the CXX restrict keyword equivalent to C99 restrict
Executing: mpiicpc -cxx=icpx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers  -Wall -Wwrite-strings -Wno-strict-aliasing -Wno-unknown-pragmas -fstack-protector -fvisibility=hidden -O2 -march=native -mtune=native  -std=gnu++20 -fPIC  /tmp/petsc-m5p55c3k/config.compilers/conftest.cc 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
float * __restrict x;
(void)x;
  return 0;
}

          compilers: Set Cxx restrict keyword to : __restrict
            Defined "CXX_RESTRICT" to "__restrict"
Executing: mpiicpc -cxx=icpx --help | head -n 500
Detected CLANG compiler
=============================================================================================
TESTING: checkCxxComplexFix from config.compilers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/compilers.py:428)
  Determine if the CXX compiler supports utilities provided by petsccxxcomplexfix.h
Executing: mpiicpc -cxx=icpx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers  -Wall -Wwrite-strings -Wno-strict-aliasing -Wno-unknown-pragmas -fstack-protector -fvisibility=hidden -O2 -march=native -mtune=native  -std=gnu++20 -fPIC  /tmp/petsc-m5p55c3k/config.compilers/conftest.cc 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

      #include <iostream>
      #include <complex>
      #define Type         int
      #define PetscReal    double
      #define PetscComplex std::complex<double>
      /* The two lines, from petsccxxcomplexfix.h, can cause the combination "C++14 + GCC-4.x libstdc++ library" to fail, complaining imag()
         is not marked const. If the compiler can compile these two lines, it should be able to compile other lines.
      */
      static inline PetscComplex operator-(const Type& lhs, const PetscComplex& rhs) { return PetscReal(lhs) - const_cast<PetscComplex&>(rhs); }
      static inline PetscComplex operator/(const Type& lhs, const PetscComplex& rhs) { return PetscReal(lhs) / const_cast<PetscComplex&>(rhs); }
      

int main(void) {

      Type x = 2;
      PetscComplex y(1.0,1.0),z,w;
      z = x - y;
      w = x / y;
      std::cout << z << w;
      
  return 0;
}

          the CXX compiler supports petsccxxcomplexfix.h
            Defined "HAVE_CXX_COMPLEX_FIX" to "1"
=============================================================================================
TESTING: checkStdAtomic from config.compilers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/compilers.py:1442)
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

    #if defined(__cplusplus)
    #include <atomic>
    using namespace std;
    #else
    #include <stdatomic.h>
    #endif
    double dcount = 0;
    atomic_flag cat = ATOMIC_FLAG_INIT;
    

int main(void) {

    do {} while (atomic_flag_test_and_set(&cat));
    dcount++;
    atomic_flag_clear(&cat);
    
  return 0;
}

            Defined "HAVE_CXX_ATOMIC" to "1"
=============================================================================================
TESTING: checkCxxLibraries from config.compilers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/compilers.py:457)
  Determines the libraries needed to link using the C or Fortran compiler C++ source code compiled with C++. Result is stored in cxxlibs
Executing: mpiicpc -cxx=icpx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers  -Wall -Wwrite-strings -Wno-strict-aliasing -Wno-unknown-pragmas -fstack-protector -fvisibility=hidden -O2 -march=native -mtune=native  -std=gnu++20 -fPIC  /tmp/petsc-m5p55c3k/config.compilers/conftest.cc 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <iostream>
#include <vector>
void asub(void)
{std::vector<int> v;
try  { throw 20;  }  catch (int e)  { std::cout << "An exception occurred";  }}

Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
 int main(int argc,char **args)
{return 0;}
 
Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.compilers/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.compilers/conftest.o /tmp/petsc-m5p55c3k/config.compilers/confc.o 
stdout:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.compilers/confc.o: in function `asub()':
conftest.cc:(.text+0x7): undefined reference to `__cxa_allocate_exception'
/usr/bin/ld: conftest.cc:(.text+0x14): undefined reference to `typeinfo for int'
/usr/bin/ld: conftest.cc:(.text+0x1e): undefined reference to `__cxa_throw'
/usr/bin/ld: conftest.cc:(.text+0x2b): undefined reference to `__cxa_begin_catch'
/usr/bin/ld: conftest.cc:(.text+0x32): undefined reference to `std::cout'
/usr/bin/ld: conftest.cc:(.text+0x43): undefined reference to `std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)'
/usr/bin/ld: conftest.cc:(.text+0x49): undefined reference to `__cxa_end_catch'
/usr/bin/ld: conftest.cc:(.text+0x59): undefined reference to `__cxa_end_catch'
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.compilers/confc.o:(.data+0x0): undefined reference to `typeinfo for int'
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.compilers/confc.o:(.data.DW.ref.__gxx_personality_v0[DW.ref.__gxx_personality_v0]+0x0): undefined reference to `__gxx_personality_v0'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Possible ERROR while running linker: exit code 1
stderr:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.compilers/confc.o: in function `asub()':
conftest.cc:(.text+0x7): undefined reference to `__cxa_allocate_exception'
/usr/bin/ld: conftest.cc:(.text+0x14): undefined reference to `typeinfo for int'
/usr/bin/ld: conftest.cc:(.text+0x1e): undefined reference to `__cxa_throw'
/usr/bin/ld: conftest.cc:(.text+0x2b): undefined reference to `__cxa_begin_catch'
/usr/bin/ld: conftest.cc:(.text+0x32): undefined reference to `std::cout'
/usr/bin/ld: conftest.cc:(.text+0x43): undefined reference to `std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)'
/usr/bin/ld: conftest.cc:(.text+0x49): undefined reference to `__cxa_end_catch'
/usr/bin/ld: conftest.cc:(.text+0x59): undefined reference to `__cxa_end_catch'
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.compilers/confc.o:(.data+0x0): undefined reference to `typeinfo for int'
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.compilers/confc.o:(.data.DW.ref.__gxx_personality_v0[DW.ref.__gxx_personality_v0]+0x0): undefined reference to `__gxx_personality_v0'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Executing: mpiicc -cc=icx --version
stdout:
Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)
Target: x86_64-unknown-linux-gnu
Thread model: posix
InstalledDir: /opt/intel/oneapi/compiler/2025.0/bin/compiler
Configuration file: /opt/intel/oneapi/compiler/2025.0/bin/compiler/../icx.cfg
Executing: mpiicpc -cxx=icpx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers  -Wall -Wwrite-strings -Wno-strict-aliasing -Wno-unknown-pragmas -fstack-protector -fvisibility=hidden -O2 -march=native -mtune=native  -std=gnu++20 -fPIC  /tmp/petsc-m5p55c3k/config.compilers/conftest.cc 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <iostream>
#include <vector>
void asub(void)
{std::vector<int> v;
try  { throw 20;  }  catch (int e)  { std::cout << "An exception occurred";  }}

Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
 int main(int argc,char **args)
{return 0;}
 
Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.compilers/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.compilers/conftest.o /tmp/petsc-m5p55c3k/config.compilers/confc.o -lstdc++ 
          compilers: C++ requires -lstdc++ to link with C compiler
Executing: mpiicpc -cxx=icpx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers  -Wall -Wwrite-strings -Wno-strict-aliasing -Wno-unknown-pragmas -fstack-protector -fvisibility=hidden -O2 -march=native -mtune=native  -std=gnu++20 -fPIC  /tmp/petsc-m5p55c3k/config.compilers/conftest.cc 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <iostream>
#include <vector>
void asub(void)
{std::vector<int> v;
try  { throw 20;  }  catch (int e)  { std::cout << "An exception occurred";  }}

Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers  -fPIC -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.F90 
Successful compile:
Source:
      program main
      print*,'testing'
      stop
      end
 
Executing: mpiifort -fc=ifx  -o /tmp/petsc-m5p55c3k/config.compilers/conftest    -fPIC -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.compilers/conftest.o /tmp/petsc-m5p55c3k/config.compilers/confc.o -lstdc++ 
          Additional C++ libraries are not needed when using FC linker
Executing: mpiicpc -cxx=icpx -V
stdout:
Intel(R) oneAPI DPC++/C++ Compiler for applications running on Intel(R) 64, Version 2025.0.0 Build 20241008
Copyright (C) 1985-2024 Intel Corporation. All rights reserved.
=============================================================================================
TESTING: checkFortranNameMangling from config.compilers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/compilers.py:781)
  Checks Fortran name mangling, and defines HAVE_FORTRAN_UNDERSCORE, HAVE_FORTRAN_NOUNDERSCORE, HAVE_FORTRAN_CAPS
Testing Fortran mangling type underscore with code void d1chk_(void){return;}
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
void d1chk_(void){return;}

Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers  -fPIC -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.F90 
Successful compile:
Source:
      program main
       call d1chk()

      end

Executing: mpiifort -fc=ifx  -o /tmp/petsc-m5p55c3k/config.compilers/conftest    -fPIC -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.compilers/conftest.o /tmp/petsc-m5p55c3k/config.compilers/confc.o  
          compilers: Fortran name mangling is underscore
            Defined "HAVE_FORTRAN_UNDERSCORE" to "1"
Executing: mpiifort -fc=ifx --version
stdout:
ifx (IFX) 2025.0.0 20241008
Copyright (C) 1985-2024 Intel Corporation. All rights reserved.
            Defined "FORTRAN_CHARLEN_T" to "int"
=============================================================================================
TESTING: checkFortranNameManglingDouble from config.compilers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/compilers.py:819)
  Checks if symbols containing an underscore append an extra underscore, and defines HAVE_FORTRAN_UNDERSCORE_UNDERSCORE if necessary
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
void d1_chk__(void){return;}

Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers  -fPIC -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.F90 
Successful compile:
Source:
      program main
       call d1_chk()

      end

Executing: mpiifort -fc=ifx  -o /tmp/petsc-m5p55c3k/config.compilers/conftest    -fPIC -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.compilers/conftest.o /tmp/petsc-m5p55c3k/config.compilers/confc.o  
stdout:
ld: /tmp/petsc-m5p55c3k/config.compilers/conftest.o: in function `MAIN__':
ifxDsiiyp.i90:(.text+0x31): undefined reference to `d1_chk_'
Possible ERROR while running linker: exit code 1
stderr:
ld: /tmp/petsc-m5p55c3k/config.compilers/conftest.o: in function `MAIN__':
ifxDsiiyp.i90:(.text+0x31): undefined reference to `d1_chk_'
=============================================================================================
TESTING: checkFortranLibraries from config.compilers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/compilers.py:829)
  Substitutes for FLIBS the libraries needed to link using the C or C++ compiler Fortran source code compiled with Fortran. Result is stored in flibs.

    This macro is intended to be used in those situations when it is
    necessary to mix, e.g. C++ and Fortran 77, source code into a single
    program or shared library.

    For example, if object files from a C++ and Fortran 77 compiler must
    be linked together, then the C++ compiler/linker must be used for
    linking (since special C++-ish things need to happen at link time
    like calling global constructors, instantiating templates, enabling
    exception support, etc.).

    However, the Fortran 77 intrinsic and run-time libraries must be
    linked in as well, but the C++ compiler/linker does not know how to
    add these Fortran 77 libraries.

    This code was translated from the autoconf macro which was packaged in
    its current form by Matthew D. Langston <langston@SLAC.Stanford.EDU>.
    However, nearly all of this macro came from the OCTAVE_FLIBS macro in
    octave-2.0.13/aclocal.m4, and full credit should go to John W. Eaton
    for writing this extremely useful macro.
Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers  -fPIC -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.F90 
Successful compile:
Source:
      program main
      use mpi
      call MPI_Allreduce()

      end

Executing: mpiifort -fc=ifx  -o /tmp/petsc-m5p55c3k/config.compilers/conftest    -fPIC -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.compilers/conftest.o 
Executing: mpiifort -fc=ifx -V
stdout:
Intel(R) Fortran Compiler for applications running on Intel(R) 64, Version 2025.0.0 Build 20241008
Copyright (C) 1985-2024 Intel Corporation. All rights reserved.
Executing: mpiicc -cc=icx --help | head -n 80
stdout:
OVERVIEW: Intel(R) oneAPI DPC++/C++ Compiler
USAGE: icx [options] file...
OPTIONS:
  -###                    Print (but do not run) the commands to run for this compilation
  -#x                     Show commands to run and use verbose output
  -#                      Print (but do not run) the commands to run for this compilation
  -align                  Align doubles to two words in structs (x86 only)
  --amdgpu-arch-tool=<value>
                          Tool used for detecting AMD GPU arch in the system.
  --analyzer-output <value>
                          Static analyzer report output format (html|plist|plist-multi-file|plist-html|sarif|sarif-html|text).
  --analyze               Run the static analyzer
  -ansi-alias             enable use of ANSI aliasing rules optimizations user asserts that the program adheres to these rules
  -arcmt-migrate-emit-errors
                          Emit ARC errors even if the migrator can fix them
  -arcmt-migrate-report-output <value>
                          Output path for the plist report
  -ax<codes>              generate multiple, processor-specific, auto-dispatched code paths for Intel® processors, specified by <codes>, if there is a performance benefit
  -B <prefix>             Search $prefix$file for executables, libraries, and data files. If $prefix is a directory, search $prefix/$file
  -b <arg>                Pass -b <arg> to the linker on AIX
  -CC                     Include comments from within macros in preprocessed output
  -cl-denorms-are-zero    OpenCL only. Allow denormals to be flushed to zero.
  -cl-ext=<value>         OpenCL only. Enable or disable OpenCL extensions/optional features. The argument is a comma-separated sequence of one or more extension names, each prefixed by '+' or '-'.
  -cl-fast-relaxed-math   OpenCL only. Sets -cl-finite-math-only and -cl-unsafe-math-optimizations, and defines __FAST_RELAXED_MATH__.
  -cl-finite-math-only    OpenCL only. Allow floating-point optimizations that assume arguments and results are not NaNs or +-Inf.
  -cl-fp32-correctly-rounded-divide-sqrt
                          OpenCL only. Specify that single precision floating-point divide and sqrt used in the program source are correctly rounded.
  -cl-kernel-arg-info     OpenCL only. Generate kernel argument metadata.
  -cl-mad-enable          OpenCL only. Allow use of less precise MAD computations in the generated binary.
  -cl-no-signed-zeros     OpenCL only. Allow use of less precise no signed zeros computations in the generated binary.
  -cl-no-stdinc           OpenCL only. Disables all standard includes containing non-native compiler types and functions.
  -cl-opt-disable         OpenCL only. This option disables all optimizations. By default optimizations are enabled.
  -cl-single-precision-constant
                          OpenCL only. Treat double precision floating-point constant as single precision constant.
  -cl-std=<value>         OpenCL language standard to compile for.
  -cl-strict-aliasing     OpenCL only. This option is added for compatibility with OpenCL 1.0.
  -cl-uniform-work-group-size
                          OpenCL only. Defines that the global work-size be a multiple of the work-group size specified to clEnqueueNDRangeKernel
  -cl-unsafe-math-optimizations
                          OpenCL only. Allow unsafe floating-point optimizations.  Also implies -cl-no-signed-zeros and -cl-mad-enable.
  --config=<file>         Specify configuration file
  --cuda-compile-host-device
                          Compile CUDA code for both host and device (default). Has no effect on non-CUDA compilations.
  --cuda-device-only      Compile CUDA code for device only
  --cuda-feature=<value>  Manually specify the CUDA feature to use
  --cuda-host-only        Compile CUDA code for host only. Has no effect on non-CUDA compilations.
  --cuda-include-ptx=<value>
                          Include PTX for the following GPU architecture (e.g. sm_35) or 'all'. May be specified more than once.
  --cuda-noopt-device-debug
                          Enable device-side debug info generation. Disables ptxas optimizations.
  --cuda-path-ignore-env  Ignore environment variables to detect CUDA installation
  --cuda-path=<value>     CUDA installation path
  -cuid=<value>           An ID for compilation unit, which should be the same for the same compilation unit but different for different compilation units. It is used to externalize device-side static variables for single source offloading languages CUDA and HIP so that they can be accessed by the host code of the same compilation unit.
  -cxx-isystem <directory>
                          Add directory to the C++ SYSTEM include search path
  -C                      Include comments in preprocessed output
  -c                      Only run preprocess, compile, and assemble steps
  -daal=<value>           Link Intel(R) Data Analytics Acceleration Library (Intel(R) DAAL) libraries and bring in the associated headers (parallel)
  -darwin-target-variant-triple <value>
                          Specify the darwin target variant triple
  -darwin-target-variant <value>
                          Generate code for an additional runtime variant of the deployment target
  -dD                     Print macro definitions in -E mode in addition to normal output
  -debug=<value>          Enable debug information. Valid args: none, all, full, minimal
  -dependency-dot <value> Filename to write DOT-formatted header dependencies to
  -dependency-file <value>
                          Filename (or -) to write dependency output to
  -device-math-lib=<value>
                          Control the addition of device math libraries when compiling for other devices.  Valid arguments are fp64, fp32
  -dI                     Print include directives in -E mode in addition to normal output
  -dM                     Print macro definitions in -E mode instead of normal output
  -dryrun                 Print (but do not run) the commands to run for this compilation
  -dsym-dir <dir>         Directory to output dSYM's (if any) to
  -dumpdir <dumppfx>      Use <dumpfpx> as a prefix to form auxiliary and dump file names
  -dumpmachine            Display the compiler's target processor
  -dumpversion            Display the version of the compiler
  -D <macro>=<value>      Define <macro> to <value> (or 1 if <value> omitted)
  --embed-dir=<dir>       Add directory to embed search path
Detected Intel compiler
Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers  -fPIC -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.F90 
Successful compile:
Source:
      subroutine asub()
      use mpi
      print*,'testing'
      call MPI_Allreduce()
      return
      end

Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
 extern void asub_(void);
int main(int argc,char **args)
{
  asub_();
  return 0;
}
 
Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.compilers/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.compilers/conftest.o /tmp/petsc-m5p55c3k/config.compilers/confc.o 
stdout:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.compilers/confc.o: in function `asub_':
ifxbaFSFh.i90:(.text+0x4b): undefined reference to `for_write_seq_lis'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Possible ERROR while running linker: exit code 1
stderr:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.compilers/confc.o: in function `asub_':
ifxbaFSFh.i90:(.text+0x4b): undefined reference to `for_write_seq_lis'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers  -fPIC -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.F90 
Successful compile:
Source:
      subroutine asub()
      use mpi
      print*,'testing'
      call MPI_Allreduce()
      return
      end

Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
 extern void asub_(void);
int main(int argc,char **args)
{
  asub_();
  return 0;
}
 
Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.compilers/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.compilers/conftest.o /tmp/petsc-m5p55c3k/config.compilers/confc.o -lgfortran 
stdout:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.compilers/confc.o: in function `asub_':
ifx8vG4is.i90:(.text+0x4b): undefined reference to `for_write_seq_lis'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Possible ERROR while running linker: exit code 1
stderr:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.compilers/confc.o: in function `asub_':
ifx8vG4is.i90:(.text+0x4b): undefined reference to `for_write_seq_lis'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers  -fPIC -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.F90 
Successful compile:
Source:
      subroutine asub()
      use mpi
      print*,'testing'
      call MPI_Allreduce()
      return
      end

Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
 extern void asub_(void);
int main(int argc,char **args)
{
  asub_();
  return 0;
}
 
Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.compilers/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.compilers/conftest.o /tmp/petsc-m5p55c3k/config.compilers/confc.o -fortlib 
          compilers: Fortran requires -fortlib to link with C compiler
Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers  -fPIC -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.F90 
Successful compile:
Source:
      subroutine asub()
      use mpi
      print*,'testing'
      call MPI_Allreduce()
      return
      end

Executing: mpiicpc -cxx=icpx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers  -Wall -Wwrite-strings -Wno-strict-aliasing -Wno-unknown-pragmas -fstack-protector -fvisibility=hidden -O2 -march=native -mtune=native  -std=gnu++20 -fPIC  /tmp/petsc-m5p55c3k/config.compilers/conftest.cc 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
 extern "C" void asub_(void);
int main(int argc,char **args)
{
  asub_();
  return 0;
}
 
Executing: mpiicpc -cxx=icpx  -o /tmp/petsc-m5p55c3k/config.compilers/conftest    -Wall -Wwrite-strings -Wno-strict-aliasing -Wno-unknown-pragmas -fstack-protector -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.compilers/conftest.o /tmp/petsc-m5p55c3k/config.compilers/confc.o -fortlib 
          Additional Fortran libraries are not needed when using C++ linker
=============================================================================================
TESTING: checkFortranLinkingCxx from config.compilers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/compilers.py:1314)
  Check that Fortran can link C++ libraries
Executing: mpiicpc -cxx=icpx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers  -Wall -Wwrite-strings -Wno-strict-aliasing -Wno-unknown-pragmas -fstack-protector -fvisibility=hidden -O2 -march=native -mtune=native  -std=gnu++20 -fPIC  /tmp/petsc-m5p55c3k/config.compilers/conftest.cc 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
extern "C" void d1chk_(void);
void foo(void){d1chk_();}

Executing: mpiicpc -cxx=icpx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers  -Wall -Wwrite-strings -Wno-strict-aliasing -Wno-unknown-pragmas -fstack-protector -fvisibility=hidden -O2 -march=native -mtune=native  -std=gnu++20 -fPIC  /tmp/petsc-m5p55c3k/config.compilers/conftest.cc 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
extern "C" void d1chk_(void);
void d1chk_(void){return;}

Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers  -fPIC -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.F90 
Successful compile:
Source:
      program main
       call d1chk()

      end

Executing: mpiifort -fc=ifx  -o /tmp/petsc-m5p55c3k/config.compilers/conftest    -fPIC -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.compilers/conftest.o /tmp/petsc-m5p55c3k/config.compilers/cxxobj.o  /tmp/petsc-m5p55c3k/config.compilers/confc.o  
          compilers: Fortran can link C++ functions
=============================================================================================
TESTING: setupFrameworkCompilers from config.compilers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/compilers.py:1505)
  Sets the selected compilers into the framework
    child config.compilers took 5.095203 seconds
=============================================================================================
TESTING: checkFortranTypeSizes from config.compilersFortran(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/compilersFortran.py:56)
  Check whether real*8 is supported and suggest flags which will allow support
Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.compilersFortran/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.compilersFortran  -fPIC -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilersFortran/conftest.F90 
Successful compile:
Source:
      program main
      real*8 variable
      end

=============================================================================================
TESTING: checkFortranPreprocessor from config.compilersFortran(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/compilersFortran.py:73)
  Determine if Fortran handles preprocessing properly
Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.setCompilers  -fPIC -O2 -march=native -mtune=native    /tmp/petsc-m5p55c3k/config.setCompilers/conftest.F90 
Successful compile:
Source:
      program main
#define dummy 
           dummy
#ifndef dummy
       fooey
#endif
      end

              Output from compiling with  -fPIC -O2 -march=native -mtune=native  

          compilers: Fortran uses  preprocessor
=============================================================================================
TESTING: checkFortranDefineCompilerOption from config.compilersFortran(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/compilersFortran.py:96)
  Check if -WF,-Dfoobar or -Dfoobar is the compiler option to define a macro
Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.setCompilers  -fPIC -O2 -march=native -mtune=native  -DTesting  /tmp/petsc-m5p55c3k/config.setCompilers/conftest.F90 
Successful compile:
Source:
      program main
#define dummy 
           dummy
#ifndef Testing
       fooey
#endif
      end

            Output from compiling with  -fPIC -O2 -march=native -mtune=native  -DTesting

            Defined make macro "FC_DEFINE_FLAG" to "-D"
          compilers: Fortran uses -D for defining macro
=============================================================================================
TESTING: checkFortran90 from config.compilersFortran(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/compilersFortran.py:147)
  Determine whether the Fortran compiler handles F90
Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.compilersFortran/conftest.o -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran  -fPIC -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.compilersFortran/conftest.F90 
Successful compile:
Source:
      program main

        REAL(KIND=SELECTED_REAL_KIND(10)) d
        INTEGER, PARAMETER :: int = SELECTED_INT_KIND(8)
        INTEGER (KIND=int) :: ierr
        ierr = 1
      end

Executing: mpiifort -fc=ifx  -o /tmp/petsc-m5p55c3k/config.compilersFortran/conftest    -fPIC -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilersFortran/conftest.o 
          Fortran compiler supports F90
=============================================================================================
TESTING: checkFortran90FreeForm from config.compilersFortran(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/compilersFortran.py:174)
  Determine whether the Fortran compiler handles F90FreeForm
       We also require that the compiler handles lines longer than 132 characters
Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.compilersFortran/conftest.o -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran  -fPIC -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.compilersFortran/conftest.F90 
Successful compile:
Source:
      program main
      INTEGER, PARAMETER ::        int = SELECTED_INT_KIND(8);              INTEGER (KIND=int) :: ierr;       ierr                            =                                                                                                               1
      end

Executing: mpiifort -fc=ifx  -o /tmp/petsc-m5p55c3k/config.compilersFortran/conftest    -fPIC -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilersFortran/conftest.o 
            Defined "USING_F90FREEFORM" to "1"
          Fortran compiler supports F90FreeForm
=============================================================================================
TESTING: checkFortran2003 from config.compilersFortran(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/compilersFortran.py:188)
  Determine whether the Fortran compiler handles F2003
Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.compilersFortran/conftest.o -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran  -fPIC -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.compilersFortran/conftest.F90 
Successful compile:
Source:

      module Base_module
        type, public :: base_type
           integer :: A
         contains
           procedure, public :: Print => BasePrint
        end type base_type
      contains
        subroutine BasePrint(this)
          class(base_type) :: this
        end subroutine BasePrint
      end module Base_module

      program main
      use,intrinsic :: iso_c_binding
      Type(C_Ptr),Dimension(:),Pointer :: CArray
      character(kind=c_char),pointer   :: nullc => null()
      character(kind=c_char,len=5),dimension(:),pointer::list1

      allocate(list1(5))
      CArray(1:Len) = c_loc(list1)
      CArray(Len+1) = c_loc(nullc)
      end

Executing: mpiifort -fc=ifx  -o /tmp/petsc-m5p55c3k/config.compilersFortran/conftest    -fPIC -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilersFortran/conftest.o 
            Defined "USING_F2003" to "1"
          Fortran compiler supports F2003
=============================================================================================
TESTING: checkFortran90Array from config.compilersFortran(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/compilersFortran.py:224)
  Check for F90 array interfaces
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.compilersFortran/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.compilersFortran  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilersFortran/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include<stdio.h>
#include <stdlib.h>
void f90arraytest_(void* a1, void* a2,void* a3, void* i)
{
  printf("arrays [%p %p %p]\n",a1,a2,a3);
  fflush(stdout);
  return;
}
void f90ptrtest_(void* a1, void* a2,void* a3, void* i, void* p1 ,void* p2, void* p3)
{
  printf("arrays [%p %p %p]\n",a1,a2,a3);
  if ((p1 == p3) && (p1 != p2)) {
    printf("pointers match! [%p %p] [%p]\n",p1,p3,p2);
    fflush(stdout);
  } else {
    printf("pointers do not match! [%p %p] [%p]\n",p1,p3,p2);
    fflush(stdout);
    exit(111);
  }
  return;
}

======== Checking running linked program
Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.compilersFortran/conftest.o -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran  -fPIC -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.compilersFortran/conftest.F90 
Successful compile:
Source:
      program main
      Interface
         Subroutine f90ptrtest(p1,p2,p3,i)
         integer, pointer :: p1(:,:)
         integer, pointer :: p2(:,:)
         integer, pointer :: p3(:,:)
         integer i
         End Subroutine
      End Interface

      integer, pointer :: ptr1(:,:),ptr2(:,:)
      integer, target  :: array(6:8,9:21)
      integer  in

      in   = 25
      ptr1 => array
      ptr2 => array

      call f90arraytest(ptr1,ptr2,ptr1,in)
      call f90ptrtest(ptr1,ptr2,ptr1,in)

      end

Executing: mpiifort -fc=ifx  -o /tmp/petsc-m5p55c3k/config.compilersFortran/conftest    -fPIC -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilersFortran/conftest.o /tmp/petsc-m5p55c3k/config.compilersFortran/fooobj.o 
Testing executable /tmp/petsc-m5p55c3k/config.compilersFortran/conftest to see if it can be run
Executing: /tmp/petsc-m5p55c3k/config.compilersFortran/conftest
Running Executable with threads to time it out at 60
Executing: /tmp/petsc-m5p55c3k/config.compilersFortran/conftest
stdout:
arrays [0x484660 0x484660 0x484660]
arrays [0x4843f0 0x484390 0x4843f0]
pointers do not match! [0xd (nil)] [0xd]
ERROR while running executable: Could not execute "['/tmp/petsc-m5p55c3k/config.compilersFortran/conftest']":
arrays [0x484660 0x484660 0x484660]
arrays [0x4843f0 0x484390 0x4843f0]
pointers do not match! [0xd (nil)] [0xd]
          compilers: F90 uses a single argument for array pointers
=============================================================================================
TESTING: checkFortran90AssumedType from config.compilersFortran(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/compilersFortran.py:311)
  Check if Fortran compiler array pointer is a raw pointer in C
Executing: mpiifort -fc=ifx -qversion
stdout:
ifx: command line warning #10006: ignoring unknown option '-qversion'
ld: /opt/intel/oneapi/compiler/2025.0/lib/for_main.o: in function `main':
for_main.c:(.text+0x19): undefined reference to `MAIN__'
=============================================================================================
TESTING: checkFortranModuleInclude from config.compilersFortran(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/compilersFortran.py:317)
  Figures out what flag is used to specify the include path for Fortran modules
Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.compilersFortran/conftest.o -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran  -fPIC -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.compilersFortran/conftest.F90 
Successful compile:
Source:
      module configtest
      integer testint
      parameter (testint = 42)
      end module configtest

Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.compilersFortran/conftest.o -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.compilersFortran/confdir  -fPIC -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.compilersFortran/conftest.F90 
Successful compile:
Source:
      program main
      use configtest

      write(*,*) testint

      end

Executing: mpiifort -fc=ifx  -o /tmp/petsc-m5p55c3k/config.compilersFortran/conftest   -I/tmp/petsc-m5p55c3k/config.compilersFortran/confdir  -fPIC -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilersFortran/conftest.o /tmp/petsc-m5p55c3k/config.compilersFortran/configtest.o 
          compilers: Fortran module include flag -I found
=============================================================================================
TESTING: checkFortranModuleOutput from config.compilersFortran(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/compilersFortran.py:383)
  Figures out what flag is used to specify the output path for Fortran modules
Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.compilersFortran/conftest.o -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -module /tmp/petsc-m5p55c3k/config.compilersFortran/confdir  -fPIC -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.compilersFortran/conftest.F90 
Successful compile:
Source:
      module configtest
      integer testint
      parameter (testint = 42)
      end module configtest

          compilers: Fortran module output flag -module  found
=============================================================================================
TESTING: checkFortranTypeStar from config.compilersFortran(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/compilersFortran.py:136)
  Determine whether the Fortran compiler handles type(*)
Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.compilersFortran/conftest.o -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran  -fPIC -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.compilersFortran/conftest.F90 
Successful compile:
Source:
      program main
      interface
      subroutine a(b)
      type(*) :: b(:)
      end subroutine
      end interface

      end

            Defined "HAVE_FORTRAN_TYPE_STAR" to "1"
          Fortran compiler supports type(*)
=============================================================================================
TESTING: checkFortranTypeInitialize from config.compilersFortran(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/compilersFortran.py:126)
  Determines if PETSc objects in Fortran are initialized by default (doesn't work with common blocks)
            Defined "FORTRAN_TYPE_INITIALIZE" to " = -2"
          Initializing Fortran objects
=============================================================================================
TESTING: configureFortranFlush from config.compilersFortran(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/compilersFortran.py:116)
  Determine if Fortran has a flush() command
Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.compilersFortran/conftest.o -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran  -fPIC -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.compilersFortran/conftest.F90 
Successful compile:
Source:
      program main
      call flush(6)
      end

Executing: mpiifort -fc=ifx  -o /tmp/petsc-m5p55c3k/config.compilersFortran/conftest    -fPIC -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilersFortran/conftest.o 
            Defined "HAVE_FORTRAN_FLUSH" to "1"
=============================================================================================
TESTING: checkDependencyGenerationFlag from config.compilersFortran(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/compilersFortran.py:428)
  Check if -MMD works for dependency generation, and add it if it does
          Trying FC compiler flag -MMD -MP
Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran  -fPIC -O2 -march=native -mtune=native  -MMD -MP  /tmp/petsc-m5p55c3k/config.setCompilers/conftest.F90 
stdout: ifx: command line warning #10006: ignoring unknown option '-MP'
Possible ERROR while running compiler:exit code 0
stderr:
ifx: command line warning #10006: ignoring unknown option '-MP'
Source:
      program main

      end

            Output from compiling with  -fPIC -O2 -march=native -mtune=native  -MMD -MP
ifx: command line warning #10006: ignoring unknown option '-MP'
            Rejecting compiler flag -MMD -MP due to 
ifx: command line warning #10006: ignoring unknown option '-MP'
          Rejected FC compiler flag -MMD -MP
          Trying FC compiler flag -MMD
Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran  -fPIC -O2 -march=native -mtune=native  -MMD  /tmp/petsc-m5p55c3k/config.setCompilers/conftest.F90 
Successful compile:
Source:
      program main

      end

            Output from compiling with  -fPIC -O2 -march=native -mtune=native  -MMD

          Rejected FC compiler flag -MMD because no dependency file (/tmp/petsc-m5p55c3k/config.setCompilers/conftest.d) was generated
          Trying FC compiler flag -xMMD
Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran  -fPIC -O2 -march=native -mtune=native  -xMMD  /tmp/petsc-m5p55c3k/config.setCompilers/conftest.F90 
stdout: ifx: command line error: Unrecognized keyword 'MMD' for option '-x'
Possible ERROR while running compiler: exit code 1
stderr:
ifx: command line error: Unrecognized keyword 'MMD' for option '-x'
Source:
      program main

      end

            Output from compiling with  -fPIC -O2 -march=native -mtune=native  -xMMD
ifx: command line error: Unrecognized keyword 'MMD' for option '-x'

PETSc Error: No output file produced
            Rejecting compiler flag -xMMD due to nonzero status from link
          Rejected FC compiler flag -xMMD
          Trying FC compiler flag -qmakedep=gcc
Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran  -fPIC -O2 -march=native -mtune=native  -qmakedep=gcc  /tmp/petsc-m5p55c3k/config.setCompilers/conftest.F90 
stdout: ifx: command line warning #10006: ignoring unknown option '-qmakedep=gcc'
Possible ERROR while running compiler:exit code 0
stderr:
ifx: command line warning #10006: ignoring unknown option '-qmakedep=gcc'
Source:
      program main

      end

            Output from compiling with  -fPIC -O2 -march=native -mtune=native  -qmakedep=gcc
ifx: command line warning #10006: ignoring unknown option '-qmakedep=gcc'
            Rejecting compiler flag -qmakedep=gcc due to 
ifx: command line warning #10006: ignoring unknown option '-qmakedep=gcc'
          Rejected FC compiler flag -qmakedep=gcc
          Trying FC compiler flag -MD
Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran  -fPIC -O2 -march=native -mtune=native  -MD  /tmp/petsc-m5p55c3k/config.setCompilers/conftest.F90 
Successful compile:
Source:
      program main

      end

            Output from compiling with  -fPIC -O2 -march=native -mtune=native  -MD

          Rejected FC compiler flag -MD because no dependency file (/tmp/petsc-m5p55c3k/config.setCompilers/conftest.d) was generated
=============================================================================================
TESTING: checkFortran90LineLength from config.compilersFortran(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/compilersFortran.py:163)
  Determine whether the Fortran compiler has infinite line length
Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.compilersFortran/conftest.o -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran  -fPIC -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.compilersFortran/conftest.F90 
Successful compile:
Source:
      program main
      INTEGER, PARAMETER ::        int = SELECTED_INT_KIND(8);              INTEGER (KIND=int) :: ierr,ierr2;       ierr                            =                                                                                                               1; ierr
      end

Executing: mpiifort -fc=ifx  -o /tmp/petsc-m5p55c3k/config.compilersFortran/conftest    -fPIC -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilersFortran/conftest.o 
            Defined "HAVE_FORTRAN_FREE_LINE_LENGTH_NONE" to "1"
          Fortran compiler has unlimited line length
    child config.compilersFortran took 2.006534 seconds
=============================================================================================
TESTING: checkStdC from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:121)
  Determine if C standard headers support everything PETSc needs
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.headers/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

#include <stdlib.h>
#include <stdarg.h>
#include <string.h>
#include <float.h>

int main(void) {
  return 0;
}

Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <string.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <stdlib.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
======== Checking running linked program
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.headers/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

#include <stdlib.h>
#include <ctype.h>
#define ISLOWER(c) ('a' <= (c) && (c) <= 'z')
#define TOUPPER(c) (ISLOWER(c) ? 'A' + ((c) - 'a') : (c))
#define XOR(e, f) (((e) && !(f)) || (!(e) && (f)))

int main(void) {

        int i;

        for(i = 0; i < 256; i++) if (XOR(islower(i), ISLOWER(i)) || toupper(i) != TOUPPER(i)) exit(2);
        exit(0);
      
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.headers/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.headers/conftest.o 
Testing executable /tmp/petsc-m5p55c3k/config.headers/conftest to see if it can be run
Executing: /tmp/petsc-m5p55c3k/config.headers/conftest
Running Executable with threads to time it out at 60
Executing: /tmp/petsc-m5p55c3k/config.headers/conftest
=============================================================================================
TESTING: checkSysWait from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:155)
  Check for POSIX.1 compatible sys/wait.h, and defines HAVE_SYS_WAIT_H if found
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.headers/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

#include <sys/types.h>
#include <sys/wait.h>
#ifndef WEXITSTATUS
#define WEXITSTATUS(stat_val) ((unsigned)(stat_val) >> 8)
#endif
#ifndef WIFEXITED
#define WIFEXITED(stat_val) (((stat_val) & 255) == 0)
#endif

int main(void) {

    int s;
    wait (&s);
    s = WIFEXITED (s) ? WEXITSTATUS (s) : 1;
    
  return 0;
}

            Defined "HAVE_SYS_WAIT_H" to "1"
=============================================================================================
TESTING: checkTime from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:177)
  Checks if you can safely include both <sys/time.h> and <time.h>, and if so defines TIME_WITH_SYS_TIME
Checking for header: time.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <time.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
              Defined "HAVE_TIME_H" to "1"
Checking for header: sys/time.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <sys/time.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
              Defined "HAVE_SYS_TIME_H" to "1"
=============================================================================================
TESTING: checkMath from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:183)
  Checks for the math headers and defines
Checking for header: math.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <math.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.headers/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <math.h>

int main(void) {
double pi = M_PI;
(void)pi;
  return 0;
}

          Found math #defines, like M_PI
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: setjmp.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <setjmp.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
            Defined "HAVE_SETJMP_H" to "1"
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: dos.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <dos.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Possible ERROR while running preprocessor: exit code 1
stdout:
# 1 "/tmp/petsc-m5p55c3k/config.headers/conftest.c"
# 1 "<built-in>" 1
# 1 "<built-in>" 3
# 402 "<built-in>" 3
# 1 "<command line>" 1
# 1 "<built-in>" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/confdefs.h" 1
# 2 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/conffix.h" 1
# 3 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2

stderr:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'dos.h' file not found
    3 | #include <dos.h>
      |          ^~~~~~~
1 error generated.
Source:
#include "confdefs.h"
#include "conffix.h"
#include <dos.h>

Preprocess output before filtering:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'dos.h' file not found
    3 | #include <dos.h>
      |          ^~~~~~~
1 error generated.
Preprocess output after filtering:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'dos.h' file not found
    3 | #include <dos.h>
      |          ^~~~~~~
1 error generated.
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: fcntl.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <fcntl.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
            Defined "HAVE_FCNTL_H" to "1"
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: float.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <float.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
            Defined "HAVE_FLOAT_H" to "1"
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: io.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <io.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Possible ERROR while running preprocessor: exit code 1
stdout:
# 1 "/tmp/petsc-m5p55c3k/config.headers/conftest.c"
# 1 "<built-in>" 1
# 1 "<built-in>" 3
# 402 "<built-in>" 3
# 1 "<command line>" 1
# 1 "<built-in>" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/confdefs.h" 1
# 2 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/conffix.h" 1
# 3 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2

stderr:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'io.h' file not found
    3 | #include <io.h>
      |          ^~~~~~
1 error generated.
Source:
#include "confdefs.h"
#include "conffix.h"
#include <io.h>

Preprocess output before filtering:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'io.h' file not found
    3 | #include <io.h>
      |          ^~~~~~
1 error generated.
Preprocess output after filtering:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'io.h' file not found
    3 | #include <io.h>
      |          ^~~~~~
1 error generated.
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: malloc.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <malloc.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
            Defined "HAVE_MALLOC_H" to "1"
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: pwd.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <pwd.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
            Defined "HAVE_PWD_H" to "1"
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: strings.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <strings.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
            Defined "HAVE_STRINGS_H" to "1"
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: unistd.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <unistd.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
            Defined "HAVE_UNISTD_H" to "1"
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: machine/endian.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <machine/endian.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Possible ERROR while running preprocessor: exit code 1
stdout:
# 1 "/tmp/petsc-m5p55c3k/config.headers/conftest.c"
# 1 "<built-in>" 1
# 1 "<built-in>" 3
# 402 "<built-in>" 3
# 1 "<command line>" 1
# 1 "<built-in>" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/confdefs.h" 1
# 2 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/conffix.h" 1
# 3 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2

stderr:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'machine/endian.h' file not found
    3 | #include <machine/endian.h>
      |          ^~~~~~~~~~~~~~~~~~
1 error generated.
Source:
#include "confdefs.h"
#include "conffix.h"
#include <machine/endian.h>

Preprocess output before filtering:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'machine/endian.h' file not found
    3 | #include <machine/endian.h>
      |          ^~~~~~~~~~~~~~~~~~
1 error generated.
Preprocess output after filtering:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'machine/endian.h' file not found
    3 | #include <machine/endian.h>
      |          ^~~~~~~~~~~~~~~~~~
1 error generated.
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: sys/param.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <sys/param.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
            Defined "HAVE_SYS_PARAM_H" to "1"
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: sys/procfs.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <sys/procfs.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
            Defined "HAVE_SYS_PROCFS_H" to "1"
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: sys/resource.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <sys/resource.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
            Defined "HAVE_SYS_RESOURCE_H" to "1"
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: sys/systeminfo.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <sys/systeminfo.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Possible ERROR while running preprocessor: exit code 1
stdout:
# 1 "/tmp/petsc-m5p55c3k/config.headers/conftest.c"
# 1 "<built-in>" 1
# 1 "<built-in>" 3
# 402 "<built-in>" 3
# 1 "<command line>" 1
# 1 "<built-in>" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/confdefs.h" 1
# 2 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/conffix.h" 1
# 3 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2

stderr:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'sys/systeminfo.h' file not found
    3 | #include <sys/systeminfo.h>
      |          ^~~~~~~~~~~~~~~~~~
1 error generated.
Source:
#include "confdefs.h"
#include "conffix.h"
#include <sys/systeminfo.h>

Preprocess output before filtering:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'sys/systeminfo.h' file not found
    3 | #include <sys/systeminfo.h>
      |          ^~~~~~~~~~~~~~~~~~
1 error generated.
Preprocess output after filtering:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'sys/systeminfo.h' file not found
    3 | #include <sys/systeminfo.h>
      |          ^~~~~~~~~~~~~~~~~~
1 error generated.
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: sys/times.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <sys/times.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
            Defined "HAVE_SYS_TIMES_H" to "1"
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: sys/utsname.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <sys/utsname.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
            Defined "HAVE_SYS_UTSNAME_H" to "1"
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: sys/socket.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <sys/socket.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
            Defined "HAVE_SYS_SOCKET_H" to "1"
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: sys/wait.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <sys/wait.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
            Defined "HAVE_SYS_WAIT_H" to "1"
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: netinet/in.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <netinet/in.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
            Defined "HAVE_NETINET_IN_H" to "1"
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: netdb.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <netdb.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
            Defined "HAVE_NETDB_H" to "1"
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: direct.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <direct.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Possible ERROR while running preprocessor: exit code 1
stdout:
# 1 "/tmp/petsc-m5p55c3k/config.headers/conftest.c"
# 1 "<built-in>" 1
# 1 "<built-in>" 3
# 402 "<built-in>" 3
# 1 "<command line>" 1
# 1 "<built-in>" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/confdefs.h" 1
# 2 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/conffix.h" 1
# 3 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2

stderr:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'direct.h' file not found
    3 | #include <direct.h>
      |          ^~~~~~~~~~
1 error generated.
Source:
#include "confdefs.h"
#include "conffix.h"
#include <direct.h>

Preprocess output before filtering:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'direct.h' file not found
    3 | #include <direct.h>
      |          ^~~~~~~~~~
1 error generated.
Preprocess output after filtering:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'direct.h' file not found
    3 | #include <direct.h>
      |          ^~~~~~~~~~
1 error generated.
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: time.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <time.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
            Defined "HAVE_TIME_H" to "1"
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: Ws2tcpip.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <Ws2tcpip.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Possible ERROR while running preprocessor: exit code 1
stdout:
# 1 "/tmp/petsc-m5p55c3k/config.headers/conftest.c"
# 1 "<built-in>" 1
# 1 "<built-in>" 3
# 402 "<built-in>" 3
# 1 "<command line>" 1
# 1 "<built-in>" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/confdefs.h" 1
# 2 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/conffix.h" 1
# 3 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2

stderr:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'Ws2tcpip.h' file not found
    3 | #include <Ws2tcpip.h>
      |          ^~~~~~~~~~~~
1 error generated.
Source:
#include "confdefs.h"
#include "conffix.h"
#include <Ws2tcpip.h>

Preprocess output before filtering:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'Ws2tcpip.h' file not found
    3 | #include <Ws2tcpip.h>
      |          ^~~~~~~~~~~~
1 error generated.
Preprocess output after filtering:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'Ws2tcpip.h' file not found
    3 | #include <Ws2tcpip.h>
      |          ^~~~~~~~~~~~
1 error generated.
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: sys/types.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <sys/types.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
            Defined "HAVE_SYS_TYPES_H" to "1"
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: WindowsX.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <WindowsX.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Possible ERROR while running preprocessor: exit code 1
stdout:
# 1 "/tmp/petsc-m5p55c3k/config.headers/conftest.c"
# 1 "<built-in>" 1
# 1 "<built-in>" 3
# 402 "<built-in>" 3
# 1 "<command line>" 1
# 1 "<built-in>" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/confdefs.h" 1
# 2 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/conffix.h" 1
# 3 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2

stderr:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'WindowsX.h' file not found
    3 | #include <WindowsX.h>
      |          ^~~~~~~~~~~~
1 error generated.
Source:
#include "confdefs.h"
#include "conffix.h"
#include <WindowsX.h>

Preprocess output before filtering:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'WindowsX.h' file not found
    3 | #include <WindowsX.h>
      |          ^~~~~~~~~~~~
1 error generated.
Preprocess output after filtering:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'WindowsX.h' file not found
    3 | #include <WindowsX.h>
      |          ^~~~~~~~~~~~
1 error generated.
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: float.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <float.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
            Defined "HAVE_FLOAT_H" to "1"
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: ieeefp.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <ieeefp.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Possible ERROR while running preprocessor: exit code 1
stdout:
# 1 "/tmp/petsc-m5p55c3k/config.headers/conftest.c"
# 1 "<built-in>" 1
# 1 "<built-in>" 3
# 402 "<built-in>" 3
# 1 "<command line>" 1
# 1 "<built-in>" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/confdefs.h" 1
# 2 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/conffix.h" 1
# 3 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2

stderr:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'ieeefp.h' file not found
    3 | #include <ieeefp.h>
      |          ^~~~~~~~~~
1 error generated.
Source:
#include "confdefs.h"
#include "conffix.h"
#include <ieeefp.h>

Preprocess output before filtering:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'ieeefp.h' file not found
    3 | #include <ieeefp.h>
      |          ^~~~~~~~~~
1 error generated.
Preprocess output after filtering:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'ieeefp.h' file not found
    3 | #include <ieeefp.h>
      |          ^~~~~~~~~~
1 error generated.
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: stdint.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <stdint.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
            Defined "HAVE_STDINT_H" to "1"
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: inttypes.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <inttypes.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
            Defined "HAVE_INTTYPES_H" to "1"
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: immintrin.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <immintrin.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
            Defined "HAVE_IMMINTRIN_H" to "1"
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: setjmp.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <setjmp.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
            Defined "HAVE_SETJMP_H" to "1"
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: dos.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <dos.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Possible ERROR while running preprocessor: exit code 1
stdout:
# 1 "/tmp/petsc-m5p55c3k/config.headers/conftest.c"
# 1 "<built-in>" 1
# 1 "<built-in>" 3
# 402 "<built-in>" 3
# 1 "<command line>" 1
# 1 "<built-in>" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/confdefs.h" 1
# 2 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/conffix.h" 1
# 3 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2

stderr:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'dos.h' file not found
    3 | #include <dos.h>
      |          ^~~~~~~
1 error generated.
Source:
#include "confdefs.h"
#include "conffix.h"
#include <dos.h>

Preprocess output before filtering:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'dos.h' file not found
    3 | #include <dos.h>
      |          ^~~~~~~
1 error generated.
Preprocess output after filtering:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'dos.h' file not found
    3 | #include <dos.h>
      |          ^~~~~~~
1 error generated.
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: fcntl.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <fcntl.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
            Defined "HAVE_FCNTL_H" to "1"
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: float.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <float.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
            Defined "HAVE_FLOAT_H" to "1"
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: io.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <io.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Possible ERROR while running preprocessor: exit code 1
stdout:
# 1 "/tmp/petsc-m5p55c3k/config.headers/conftest.c"
# 1 "<built-in>" 1
# 1 "<built-in>" 3
# 402 "<built-in>" 3
# 1 "<command line>" 1
# 1 "<built-in>" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/confdefs.h" 1
# 2 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/conffix.h" 1
# 3 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2

stderr:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'io.h' file not found
    3 | #include <io.h>
      |          ^~~~~~
1 error generated.
Source:
#include "confdefs.h"
#include "conffix.h"
#include <io.h>

Preprocess output before filtering:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'io.h' file not found
    3 | #include <io.h>
      |          ^~~~~~
1 error generated.
Preprocess output after filtering:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'io.h' file not found
    3 | #include <io.h>
      |          ^~~~~~
1 error generated.
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: malloc.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <malloc.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
            Defined "HAVE_MALLOC_H" to "1"
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: pwd.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <pwd.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
            Defined "HAVE_PWD_H" to "1"
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: strings.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <strings.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
            Defined "HAVE_STRINGS_H" to "1"
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: unistd.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <unistd.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
            Defined "HAVE_UNISTD_H" to "1"
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: machine/endian.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <machine/endian.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Possible ERROR while running preprocessor: exit code 1
stdout:
# 1 "/tmp/petsc-m5p55c3k/config.headers/conftest.c"
# 1 "<built-in>" 1
# 1 "<built-in>" 3
# 402 "<built-in>" 3
# 1 "<command line>" 1
# 1 "<built-in>" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/confdefs.h" 1
# 2 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/conffix.h" 1
# 3 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2

stderr:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'machine/endian.h' file not found
    3 | #include <machine/endian.h>
      |          ^~~~~~~~~~~~~~~~~~
1 error generated.
Source:
#include "confdefs.h"
#include "conffix.h"
#include <machine/endian.h>

Preprocess output before filtering:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'machine/endian.h' file not found
    3 | #include <machine/endian.h>
      |          ^~~~~~~~~~~~~~~~~~
1 error generated.
Preprocess output after filtering:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'machine/endian.h' file not found
    3 | #include <machine/endian.h>
      |          ^~~~~~~~~~~~~~~~~~
1 error generated.
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: sys/param.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <sys/param.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
            Defined "HAVE_SYS_PARAM_H" to "1"
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: sys/procfs.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <sys/procfs.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
            Defined "HAVE_SYS_PROCFS_H" to "1"
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: sys/resource.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <sys/resource.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
            Defined "HAVE_SYS_RESOURCE_H" to "1"
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: sys/systeminfo.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <sys/systeminfo.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Possible ERROR while running preprocessor: exit code 1
stdout:
# 1 "/tmp/petsc-m5p55c3k/config.headers/conftest.c"
# 1 "<built-in>" 1
# 1 "<built-in>" 3
# 402 "<built-in>" 3
# 1 "<command line>" 1
# 1 "<built-in>" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/confdefs.h" 1
# 2 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/conffix.h" 1
# 3 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2

stderr:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'sys/systeminfo.h' file not found
    3 | #include <sys/systeminfo.h>
      |          ^~~~~~~~~~~~~~~~~~
1 error generated.
Source:
#include "confdefs.h"
#include "conffix.h"
#include <sys/systeminfo.h>

Preprocess output before filtering:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'sys/systeminfo.h' file not found
    3 | #include <sys/systeminfo.h>
      |          ^~~~~~~~~~~~~~~~~~
1 error generated.
Preprocess output after filtering:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'sys/systeminfo.h' file not found
    3 | #include <sys/systeminfo.h>
      |          ^~~~~~~~~~~~~~~~~~
1 error generated.
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: sys/times.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <sys/times.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
            Defined "HAVE_SYS_TIMES_H" to "1"
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: sys/utsname.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <sys/utsname.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
            Defined "HAVE_SYS_UTSNAME_H" to "1"
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: sys/socket.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <sys/socket.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
            Defined "HAVE_SYS_SOCKET_H" to "1"
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: sys/wait.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <sys/wait.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
            Defined "HAVE_SYS_WAIT_H" to "1"
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: netinet/in.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <netinet/in.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
            Defined "HAVE_NETINET_IN_H" to "1"
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: netdb.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <netdb.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
            Defined "HAVE_NETDB_H" to "1"
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: direct.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <direct.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Possible ERROR while running preprocessor: exit code 1
stdout:
# 1 "/tmp/petsc-m5p55c3k/config.headers/conftest.c"
# 1 "<built-in>" 1
# 1 "<built-in>" 3
# 402 "<built-in>" 3
# 1 "<command line>" 1
# 1 "<built-in>" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/confdefs.h" 1
# 2 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/conffix.h" 1
# 3 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2

stderr:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'direct.h' file not found
    3 | #include <direct.h>
      |          ^~~~~~~~~~
1 error generated.
Source:
#include "confdefs.h"
#include "conffix.h"
#include <direct.h>

Preprocess output before filtering:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'direct.h' file not found
    3 | #include <direct.h>
      |          ^~~~~~~~~~
1 error generated.
Preprocess output after filtering:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'direct.h' file not found
    3 | #include <direct.h>
      |          ^~~~~~~~~~
1 error generated.
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: time.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <time.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
            Defined "HAVE_TIME_H" to "1"
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: Ws2tcpip.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <Ws2tcpip.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Possible ERROR while running preprocessor: exit code 1
stdout:
# 1 "/tmp/petsc-m5p55c3k/config.headers/conftest.c"
# 1 "<built-in>" 1
# 1 "<built-in>" 3
# 402 "<built-in>" 3
# 1 "<command line>" 1
# 1 "<built-in>" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/confdefs.h" 1
# 2 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/conffix.h" 1
# 3 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2

stderr:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'Ws2tcpip.h' file not found
    3 | #include <Ws2tcpip.h>
      |          ^~~~~~~~~~~~
1 error generated.
Source:
#include "confdefs.h"
#include "conffix.h"
#include <Ws2tcpip.h>

Preprocess output before filtering:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'Ws2tcpip.h' file not found
    3 | #include <Ws2tcpip.h>
      |          ^~~~~~~~~~~~
1 error generated.
Preprocess output after filtering:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'Ws2tcpip.h' file not found
    3 | #include <Ws2tcpip.h>
      |          ^~~~~~~~~~~~
1 error generated.
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: sys/types.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <sys/types.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
            Defined "HAVE_SYS_TYPES_H" to "1"
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: WindowsX.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <WindowsX.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Possible ERROR while running preprocessor: exit code 1
stdout:
# 1 "/tmp/petsc-m5p55c3k/config.headers/conftest.c"
# 1 "<built-in>" 1
# 1 "<built-in>" 3
# 402 "<built-in>" 3
# 1 "<command line>" 1
# 1 "<built-in>" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/confdefs.h" 1
# 2 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/conffix.h" 1
# 3 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2

stderr:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'WindowsX.h' file not found
    3 | #include <WindowsX.h>
      |          ^~~~~~~~~~~~
1 error generated.
Source:
#include "confdefs.h"
#include "conffix.h"
#include <WindowsX.h>

Preprocess output before filtering:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'WindowsX.h' file not found
    3 | #include <WindowsX.h>
      |          ^~~~~~~~~~~~
1 error generated.
Preprocess output after filtering:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'WindowsX.h' file not found
    3 | #include <WindowsX.h>
      |          ^~~~~~~~~~~~
1 error generated.
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: float.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <float.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
            Defined "HAVE_FLOAT_H" to "1"
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: ieeefp.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <ieeefp.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Possible ERROR while running preprocessor: exit code 1
stdout:
# 1 "/tmp/petsc-m5p55c3k/config.headers/conftest.c"
# 1 "<built-in>" 1
# 1 "<built-in>" 3
# 402 "<built-in>" 3
# 1 "<command line>" 1
# 1 "<built-in>" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/confdefs.h" 1
# 2 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/conffix.h" 1
# 3 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2

stderr:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'ieeefp.h' file not found
    3 | #include <ieeefp.h>
      |          ^~~~~~~~~~
1 error generated.
Source:
#include "confdefs.h"
#include "conffix.h"
#include <ieeefp.h>

Preprocess output before filtering:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'ieeefp.h' file not found
    3 | #include <ieeefp.h>
      |          ^~~~~~~~~~
1 error generated.
Preprocess output after filtering:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'ieeefp.h' file not found
    3 | #include <ieeefp.h>
      |          ^~~~~~~~~~
1 error generated.
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: stdint.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <stdint.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
            Defined "HAVE_STDINT_H" to "1"
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: inttypes.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <inttypes.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
            Defined "HAVE_INTTYPES_H" to "1"
=============================================================================================
TESTING: check from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:80)
  Checks for "header", and defines HAVE_"header" if found
Checking for header: immintrin.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <immintrin.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
            Defined "HAVE_IMMINTRIN_H" to "1"
=============================================================================================
TESTING: checkRecursiveMacros from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:198)
  Checks that the preprocessor allows recursive macros, and if not defines HAVE_BROKEN_RECURSIVE_MACRO
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.headers/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
void a(int i, int j) {}
#define a(b) a(b,__LINE__)

int main(void) {
a(0);

  return 0;
}

    child config.headers took 2.917676 seconds
=============================================================================================
TESTING: configureL1CacheLineSize from config.utilities.cacheDetails(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/utilities/cacheDetails.py:127)
  
    Try to determine the size (in bytes) of an L1 cacheline. On success defines the
    variable PETSC_LEVEL1_DCACHE_LINESIZE to the determined value.
    
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.utilities.cacheDetails/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.utilities.cacheDetails/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <unistd.h>
long getconf_level1_dcache_linesize() {
  long val = sysconf(_SC_LEVEL1_DCACHE_LINESIZE);
  return val >= 0 ? val : 32;
}

int main(void) {
getconf_level1_dcache_linesize();
  return 0;
}

======== Checking running linked program
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.utilities.cacheDetails/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.utilities.cacheDetails/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <stdio.h>
#include <unistd.h>
long getconf_level1_dcache_linesize() {
  long val = sysconf(_SC_LEVEL1_DCACHE_LINESIZE);
  return val >= 0 ? val : 32;
}

int main(void) {
  FILE *output = fopen("conftestval", "w");
  if (!output) return 1;
  fprintf(output, "%ld", (long)getconf_level1_dcache_linesize());
  fclose(output);
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.utilities.cacheDetails/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.utilities.cacheDetails/conftest.o 
Testing executable /tmp/petsc-m5p55c3k/config.utilities.cacheDetails/conftest to see if it can be run
Executing: /tmp/petsc-m5p55c3k/config.utilities.cacheDetails/conftest
Running Executable with threads to time it out at 60
Executing: /tmp/petsc-m5p55c3k/config.utilities.cacheDetails/conftest
            Defined "LEVEL1_DCACHE_LINESIZE" to "64"
    child config.utilities.cacheDetails took 0.189576 seconds
=============================================================================================
TESTING: check_struct_sigaction from config.types(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/types.py:42)
  Checks if "struct sigaction" exists in signal.h. This check is for C89 check.
Checking for type: struct sigaction
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.types/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.types/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

#include <sys/types.h>
#include <stdlib.h>
#include <stddef.h>
#include<signal.h>
    

int main(void) {
struct sigaction a;
(void)a;
  return 0;
}

struct sigaction found
            Defined "HAVE_STRUCT_SIGACTION" to "1"
=============================================================================================
TESTING: check__int64 from config.types(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/types.py:48)
  Checks if __int64 exists. This is primarily for windows.
Checking for type: __int64
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.types/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.types/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

#include <sys/types.h>
#include <stdlib.h>
#include <stddef.h>

    

int main(void) {
__int64 a;
(void)a;
  return 0;
}

__int64 found
            Defined "HAVE___INT64" to "1"
=============================================================================================
TESTING: checkSizeTypes from config.types(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/types.py:54)
  Checks for types associated with sizes, such as size_t.
Checking for type: size_t
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.types/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.types/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

#include <sys/types.h>
#include <stdlib.h>
#include <stddef.h>

    

int main(void) {
size_t a;
(void)a;
  return 0;
}

size_t found
=============================================================================================
TESTING: checkFileTypes from config.types(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/types.py:64)
  Checks for types associated with files, such as mode_t, off_t, etc.
Checking for type: mode_t
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.types/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.types/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

#include <sys/types.h>
#include <stdlib.h>
#include <stddef.h>

    

int main(void) {
mode_t a;
(void)a;
  return 0;
}

mode_t found
Checking for type: off_t
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.types/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.types/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

#include <sys/types.h>
#include <stdlib.h>
#include <stddef.h>

    

int main(void) {
off_t a;
(void)a;
  return 0;
}

off_t found
=============================================================================================
TESTING: checkIntegerTypes from config.types(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/types.py:59)
  Checks for types associated with integers, such as int32_t.
Checking for type: int32_t
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.types/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.types/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

#include <sys/types.h>
#include <stdlib.h>
#include <stddef.h>

    

int main(void) {
int32_t a;
(void)a;
  return 0;
}

int32_t found
=============================================================================================
TESTING: checkPID from config.types(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/types.py:70)
  Checks for pid_t, and defines it if necessary
Checking for type: pid_t
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.types/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.types/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

#include <sys/types.h>
#include <stdlib.h>
#include <stddef.h>

    

int main(void) {
pid_t a;
(void)a;
  return 0;
}

pid_t found
=============================================================================================
TESTING: checkC99Complex from config.types(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/types.py:74)
  Check for complex numbers in C99 std
       Note that since PETSc source code uses _Complex we test specifically for that, not complex
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.types/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.types/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <complex.h>

int main(void) {
double _Complex x;
 x = I;
(void)x;
  return 0;
}

Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.types/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.types/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <complex.h>

int main(void) {
double _Complex x;
 x = I;
(void)x;
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.types/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.types/conftest.o 
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.types/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.types/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#define _GNU_SOURCE
#include <complex.h>

int main(void) {
double _Complex x;
 x = I;
(void)x;
  return 0;
}

            Defined "HAVE_C99_COMPLEX" to "1"
=============================================================================================
TESTING: checkCxxComplex from config.types(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/types.py:88)
  Check for complex numbers in namespace std
Executing: mpiicpc -cxx=icpx -c -o /tmp/petsc-m5p55c3k/config.types/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types  -Wall -Wwrite-strings -Wno-strict-aliasing -Wno-unknown-pragmas -fstack-protector -fvisibility=hidden -O2 -march=native -mtune=native  -std=gnu++20 -fPIC  /tmp/petsc-m5p55c3k/config.types/conftest.cc 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <complex>

int main(void) {
std::complex<double> x;
(void)x;
  return 0;
}

Executing: mpiicpc -cxx=icpx  -o /tmp/petsc-m5p55c3k/config.types/conftest    -Wall -Wwrite-strings -Wno-strict-aliasing -Wno-unknown-pragmas -fstack-protector -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.types/conftest.o 
            Defined "HAVE_CXX_COMPLEX" to "1"
=============================================================================================
TESTING: checkSizeof from config.types(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/types.py:99)
  Determines the size of type "typeName", and defines SIZEOF_"typeName" to be the size
Checking for size of type: void *
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.types/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.types/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

#include <sys/types.h>
#include <stdlib.h>
#include <stdio.h>
#include <stddef.h>
char assert_sizeof[(sizeof(void *)==8)*2-1];

            Defined "SIZEOF_VOID_P" to "8"
=============================================================================================
TESTING: checkSizeof from config.types(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/types.py:99)
  Determines the size of type "typeName", and defines SIZEOF_"typeName" to be the size
Checking for size of type: int
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.types/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.types/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

#include <sys/types.h>
#include <stdlib.h>
#include <stdio.h>
#include <stddef.h>
char assert_sizeof[(sizeof(int)==4)*2-1];

            Defined "SIZEOF_INT" to "4"
=============================================================================================
TESTING: checkSizeof from config.types(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/types.py:99)
  Determines the size of type "typeName", and defines SIZEOF_"typeName" to be the size
Checking for size of type: long
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.types/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.types/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

#include <sys/types.h>
#include <stdlib.h>
#include <stdio.h>
#include <stddef.h>
char assert_sizeof[(sizeof(long)==8)*2-1];

            Defined "SIZEOF_LONG" to "8"
=============================================================================================
TESTING: checkSizeof from config.types(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/types.py:99)
  Determines the size of type "typeName", and defines SIZEOF_"typeName" to be the size
Checking for size of type: long long
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.types/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.types/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

#include <sys/types.h>
#include <stdlib.h>
#include <stdio.h>
#include <stddef.h>
char assert_sizeof[(sizeof(long long)==8)*2-1];

            Defined "SIZEOF_LONG_LONG" to "8"
=============================================================================================
TESTING: checkSizeof from config.types(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/types.py:99)
  Determines the size of type "typeName", and defines SIZEOF_"typeName" to be the size
Checking for size of type: size_t
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.types/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.types/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

#include <sys/types.h>
#include <stdlib.h>
#include <stdio.h>
#include <stddef.h>
char assert_sizeof[(sizeof(size_t)==8)*2-1];

            Defined "SIZEOF_SIZE_T" to "8"
        Defined "USING_64BIT_PTR" to "1"
=============================================================================================
TESTING: checkVisibility from config.types(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/types.py:133)
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.types/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.types/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
__attribute__((visibility ("default"))) int foo(void);
  return 0;
}

            Defined "USE_VISIBILITY_C" to "1"
Executing: mpiicpc -cxx=icpx -c -o /tmp/petsc-m5p55c3k/config.types/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types  -Wall -Wwrite-strings -Wno-strict-aliasing -Wno-unknown-pragmas -fstack-protector -fvisibility=hidden -O2 -march=native -mtune=native  -std=gnu++20 -fPIC  /tmp/petsc-m5p55c3k/config.types/conftest.cc 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
__attribute__((visibility ("default"))) int foo(void);
  return 0;
}

            Defined "USE_VISIBILITY_CXX" to "1"
=============================================================================================
TESTING: checkMaxPathLen from config.types(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/types.py:155)
  Sets PETSC_MAX_PATH_LEN depending on values available on the system
Determining PETSC_MAX_PATH_LEN
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.types/conftest.o -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.types/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

#include <sys/param.h>
#include <sys/types.h>
#if defined(MAXPATHLEN)
#  define PETSC_MAX_PATH_LEN MAXPATHLEN
#elif defined(MAX_PATH)
#  define PETSC_MAX_PATH_LEN MAX_PATH
#elif defined(_MAX_PATH)
#  define PETSC_MAX_PATH_LEN _MAX_PATH
#else
#  define PETSC_MAX_PATH_LEN 4096
#endif
#define xstr(s) str(s)
#define str(s) #s
char petsc_max_path_len[] = xstr(PETSC_MAX_PATH_LEN);

int main(void) {
  return 0;
}

Preprocessing source:
#include "confdefs.h"
#include "conffix.h"

#include <sys/param.h>
#include <sys/types.h>
#if defined(MAXPATHLEN)
#  define PETSC_MAX_PATH_LEN MAXPATHLEN
#elif defined(MAX_PATH)
#  define PETSC_MAX_PATH_LEN MAX_PATH
#elif defined(_MAX_PATH)
#  define PETSC_MAX_PATH_LEN _MAX_PATH
#else
#  define PETSC_MAX_PATH_LEN 4096
#endif
#define xstr(s) str(s)
#define str(s) #s
char petsc_max_path_len[] = xstr(PETSC_MAX_PATH_LEN);

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.types  /tmp/petsc-m5p55c3k/config.types/conftest.c 
            Defined "MAX_PATH_LEN" to "4096"
    child config.types took 1.586750 seconds
=============================================================================================
TESTING: configureMemAlign from PETSc.options.memAlign(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/PETSc/options/memAlign.py:28)
  Choose memory alignment
            Defined "MEMALIGN" to "16"
          Memory alignment is 16
    child PETSc.options.memAlign took 0.000450 seconds
=============================================================================================
TESTING: check from config.libraries(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/libraries.py:186)
  Checks that the library "libName" contains "funcs", and if it does defines HAVE_LIB"libName"
       - libDir may be a list of directories
       - libName may be a list of library names
            Checking for functions [handle_sigfpes] in library ['fpe'] []
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.types  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.libraries/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
char handle_sigfpes(void);
static void _check_handle_sigfpes(void) { handle_sigfpes(); }

int main(void) {
_check_handle_sigfpes();
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.libraries/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.libraries/conftest.o  -lfpe 
stdout:
/usr/bin/ld: cannot find -lfpe: No such file or directory
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Possible ERROR while running linker: exit code 1
stderr:
/usr/bin/ld: cannot find -lfpe: No such file or directory
icx: error: linker command failed with exit code 1 (use -v to see invocation)
=============================================================================================
TESTING: check from config.libraries(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/libraries.py:186)
  Checks that the library "libName" contains "funcs", and if it does defines HAVE_LIB"libName"
       - libDir may be a list of directories
       - libName may be a list of library names
            Checking for functions [socket] in library ['socket', 'nsl'] []
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.types  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.libraries/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
char socket(void);
static void _check_socket(void) { socket(); }

int main(void) {
_check_socket();
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.libraries/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.libraries/conftest.o  -lsocket -lnsl 
stdout:
/usr/bin/ld: cannot find -lsocket: No such file or directory
/usr/bin/ld: cannot find -lnsl: No such file or directory
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Possible ERROR while running linker: exit code 1
stderr:
/usr/bin/ld: cannot find -lsocket: No such file or directory
/usr/bin/ld: cannot find -lnsl: No such file or directory
icx: error: linker command failed with exit code 1 (use -v to see invocation)
=============================================================================================
TESTING: check from config.libraries(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/libraries.py:186)
  Checks that the library "libName" contains "funcs", and if it does defines HAVE_LIB"libName"
       - libDir may be a list of directories
       - libName may be a list of library names
            Checking for functions [handle_sigfpes] in library ['fpe'] []
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.types  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.libraries/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
char handle_sigfpes(void);
static void _check_handle_sigfpes(void) { handle_sigfpes(); }

int main(void) {
_check_handle_sigfpes();
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.libraries/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.libraries/conftest.o  -lfpe 
stdout:
/usr/bin/ld: cannot find -lfpe: No such file or directory
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Possible ERROR while running linker: exit code 1
stderr:
/usr/bin/ld: cannot find -lfpe: No such file or directory
icx: error: linker command failed with exit code 1 (use -v to see invocation)
=============================================================================================
TESTING: check from config.libraries(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/libraries.py:186)
  Checks that the library "libName" contains "funcs", and if it does defines HAVE_LIB"libName"
       - libDir may be a list of directories
       - libName may be a list of library names
            Checking for functions [socket] in library ['socket', 'nsl'] []
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.types  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.libraries/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
char socket(void);
static void _check_socket(void) { socket(); }

int main(void) {
_check_socket();
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.libraries/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.libraries/conftest.o  -lsocket -lnsl 
stdout:
/usr/bin/ld: cannot find -lsocket: No such file or directory
/usr/bin/ld: cannot find -lnsl: No such file or directory
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Possible ERROR while running linker: exit code 1
stderr:
/usr/bin/ld: cannot find -lsocket: No such file or directory
/usr/bin/ld: cannot find -lnsl: No such file or directory
icx: error: linker command failed with exit code 1 (use -v to see invocation)
=============================================================================================
TESTING: checkMath from config.libraries(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/libraries.py:315)
  Check for sin() in libm, the math library
            Checking for functions [sin floor log10 pow] in library [''] []
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.types  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.libraries/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
#include <stdio.h>
double sin(double);
static void _check_sin(void) { double x,y; int s = scanf("%lf",&x); y = sin(x); printf("%f %d",y,s); }
#include <stdio.h>
double floor(double);
static void _check_floor(void) { double x,y; int s = scanf("%lf",&x); y = floor(x); printf("%f %d",y,s); }
#include <stdio.h>
double log10(double);
static void _check_log10(void) { double x,y; int s = scanf("%lf",&x); y = log10(x); printf("%f %d",y,s); }
#include <stdio.h>
double pow(double, double);
static void _check_pow(void) { double x,y; int s = scanf("%lf",&x); y = pow(x,x); printf("%f %d",y,s); }

int main(void) {
_check_sin();
_check_floor();
_check_log10();
_check_pow();
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.libraries/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.libraries/conftest.o   
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
#include <stdio.h>
double sin(double);
static void _check_sin(void) { double x,y; int s = scanf("%lf",&x); y = sin(x); printf("%f %d",y,s); }
#include <stdio.h>
double floor(double);
static void _check_floor(void) { double x,y; int s = scanf("%lf",&x); y = floor(x); printf("%f %d",y,s); }
#include <stdio.h>
double log10(double);
static void _check_log10(void) { double x,y; int s = scanf("%lf",&x); y = log10(x); printf("%f %d",y,s); }
#include <stdio.h>
double pow(double, double);
static void _check_pow(void) { double x,y; int s = scanf("%lf",&x); y = pow(x,x); printf("%f %d",y,s); }
void dummy(void) {_check_sin();
_check_floor();
_check_log10();
_check_pow();}

Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.compilersFortran  -fPIC -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.compilers/conftest.F90 
Successful compile:
Source:
      program main
      print*,'testing'
      stop
      end
 
Executing: mpiifort -fc=ifx  -o /tmp/petsc-m5p55c3k/config.compilers/conftest    -fPIC -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.o /tmp/petsc-m5p55c3k/config.compilers/confc.o   
          CheckMath: using math library []
=============================================================================================
TESTING: checkMathErf from config.libraries(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/libraries.py:336)
  Check for erf() in libm, the math library
            Checking for functions [erf] in library [] []
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.libraries/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
#include <math.h>
static void _check_erf(void) { double (*checkErf)(double) = erf;double x = 0,y; y = (*checkErf)(x); (void)y; }

int main(void) {
_check_erf();
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.libraries/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.libraries/conftest.o 
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
#include <math.h>
static void _check_erf(void) { double (*checkErf)(double) = erf;double x = 0,y; y = (*checkErf)(x); (void)y; }
void dummy(void) {_check_erf();}

Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.compilersFortran  -fPIC -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.compilers/conftest.F90 
Successful compile:
Source:
      program main
      print*,'testing'
      stop
      end
 
Executing: mpiifort -fc=ifx  -o /tmp/petsc-m5p55c3k/config.compilers/conftest    -fPIC -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.o /tmp/petsc-m5p55c3k/config.compilers/confc.o 
          erf() found
            Defined "HAVE_ERF" to "1"
=============================================================================================
TESTING: checkMathTgamma from config.libraries(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/libraries.py:345)
  Check for tgamma() in libm, the math library
            Checking for functions [tgamma] in library [] []
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.libraries/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
#include <math.h>
static void _check_tgamma(void) { double (*checkTgamma)(double) = tgamma;double x = 0,y; y = (*checkTgamma)(x); (void)y; }

int main(void) {
_check_tgamma();
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.libraries/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.libraries/conftest.o 
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
#include <math.h>
static void _check_tgamma(void) { double (*checkTgamma)(double) = tgamma;double x = 0,y; y = (*checkTgamma)(x); (void)y; }
void dummy(void) {_check_tgamma();}

Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.compilersFortran  -fPIC -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.compilers/conftest.F90 
Successful compile:
Source:
      program main
      print*,'testing'
      stop
      end
 
Executing: mpiifort -fc=ifx  -o /tmp/petsc-m5p55c3k/config.compilers/conftest    -fPIC -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.o /tmp/petsc-m5p55c3k/config.compilers/confc.o 
          tgamma() found
            Defined "HAVE_TGAMMA" to "1"
=============================================================================================
TESTING: checkMathLgamma from config.libraries(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/libraries.py:354)
  Check for lgamma() in libm, the math library
            Checking for functions [lgamma] in library [] []
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.libraries/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
#include <math.h>
#include <stdlib.h>
static void _check_lgamma(void) { double (*checkLgamma)(double) = lgamma;double x = 1,y; y = (*checkLgamma)(x);if (y != 0.) abort(); }

int main(void) {
_check_lgamma();
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.libraries/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.libraries/conftest.o 
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
#include <math.h>
#include <stdlib.h>
static void _check_lgamma(void) { double (*checkLgamma)(double) = lgamma;double x = 1,y; y = (*checkLgamma)(x);if (y != 0.) abort(); }
void dummy(void) {_check_lgamma();}

Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.compilersFortran  -fPIC -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.compilers/conftest.F90 
Successful compile:
Source:
      program main
      print*,'testing'
      stop
      end
 
Executing: mpiifort -fc=ifx  -o /tmp/petsc-m5p55c3k/config.compilers/conftest    -fPIC -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.o /tmp/petsc-m5p55c3k/config.compilers/confc.o 
          lgamma() found
            Defined "HAVE_LGAMMA" to "1"
=============================================================================================
TESTING: checkMathFenv from config.libraries(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/libraries.py:367)
  Checks if <fenv.h> can be used with FE_DFL_ENV
            Checking for functions [fesetenv] in library [] []
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.libraries/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
#include <fenv.h>
static void _check_fesetenv(void) { fesetenv(FE_DFL_ENV); }

int main(void) {
_check_fesetenv();
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.libraries/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.libraries/conftest.o 
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
#include <fenv.h>
static void _check_fesetenv(void) { fesetenv(FE_DFL_ENV); }
void dummy(void) {_check_fesetenv();}

Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.compilersFortran  -fPIC -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.compilers/conftest.F90 
Successful compile:
Source:
      program main
      print*,'testing'
      stop
      end
 
Executing: mpiifort -fc=ifx  -o /tmp/petsc-m5p55c3k/config.compilers/conftest    -fPIC -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.o /tmp/petsc-m5p55c3k/config.compilers/confc.o 
            Defined "HAVE_FENV_H" to "1"
            Checking for functions [feclearexcept] in library [] []
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.libraries/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
#include <fenv.h>
static void _check_feclearexcept(void) { feclearexcept(FE_INEXACT); }

int main(void) {
_check_feclearexcept();
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.libraries/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.libraries/conftest.o 
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
#include <fenv.h>
static void _check_feclearexcept(void) { feclearexcept(FE_INEXACT); }
void dummy(void) {_check_feclearexcept();}

Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.compilersFortran  -fPIC -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.compilers/conftest.F90 
Successful compile:
Source:
      program main
      print*,'testing'
      stop
      end
 
Executing: mpiifort -fc=ifx  -o /tmp/petsc-m5p55c3k/config.compilers/conftest    -fPIC -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.o /tmp/petsc-m5p55c3k/config.compilers/confc.o 
            Defined "HAVE_FE_VALUES" to "1"
=============================================================================================
TESTING: checkMathLog2 from config.libraries(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/libraries.py:379)
  Check for log2() in libm, the math library
            Checking for functions [log2] in library [] []
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.libraries/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
#include <math.h>
static void _check_log2(void) { double (*checkLog2)(double) = log2; double x = 2.5, y = (*checkLog2)(x); (void)y; }

int main(void) {
_check_log2();
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.libraries/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.libraries/conftest.o 
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
#include <math.h>
static void _check_log2(void) { double (*checkLog2)(double) = log2; double x = 2.5, y = (*checkLog2)(x); (void)y; }
void dummy(void) {_check_log2();}

Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.compilersFortran  -fPIC -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.compilers/conftest.F90 
Successful compile:
Source:
      program main
      print*,'testing'
      stop
      end
 
Executing: mpiifort -fc=ifx  -o /tmp/petsc-m5p55c3k/config.compilers/conftest    -fPIC -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.o /tmp/petsc-m5p55c3k/config.compilers/confc.o 
          log2() found
            Defined "HAVE_LOG2" to "1"
=============================================================================================
TESTING: checkRealtime from config.libraries(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/libraries.py:388)
  Check for presence of clock_gettime() in realtime library (POSIX Realtime extensions)
            Checking for functions [clock_gettime] in library [''] []
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.libraries/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
#include <time.h>
static void _check_clock_gettime(void) { struct timespec tp; clock_gettime(CLOCK_REALTIME,&tp); }

int main(void) {
_check_clock_gettime();
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.libraries/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.libraries/conftest.o   
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
#include <time.h>
static void _check_clock_gettime(void) { struct timespec tp; clock_gettime(CLOCK_REALTIME,&tp); }
void dummy(void) {_check_clock_gettime();}

Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.compilersFortran  -fPIC -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.compilers/conftest.F90 
Successful compile:
Source:
      program main
      print*,'testing'
      stop
      end
 
Executing: mpiifort -fc=ifx  -o /tmp/petsc-m5p55c3k/config.compilers/conftest    -fPIC -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.o /tmp/petsc-m5p55c3k/config.compilers/confc.o   
          realtime functions are linked in by default
=============================================================================================
TESTING: checkDynamic from config.libraries(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/libraries.py:404)
  Check for the header and libraries necessary for dynamic library manipulation
            Checking for functions [dlopen] in library ['dl'] []
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.libraries/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
char dlopen(void);
static void _check_dlopen(void) { dlopen(); }

int main(void) {
_check_dlopen();
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.libraries/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.libraries/conftest.o  -ldl 
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
char dlopen(void);
static void _check_dlopen(void) { dlopen(); }
void dummy(void) {_check_dlopen();}

Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.compilersFortran  -fPIC -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.compilers/conftest.F90 
Successful compile:
Source:
      program main
      print*,'testing'
      stop
      end
 
Executing: mpiifort -fc=ifx  -o /tmp/petsc-m5p55c3k/config.compilers/conftest    -fPIC -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.o /tmp/petsc-m5p55c3k/config.compilers/confc.o  -ldl 
              Defined "HAVE_LIBDL" to "1"
Checking for header: dlfcn.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <dlfcn.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
              Defined "HAVE_DLFCN_H" to "1"
=============================================================================================
TESTING: checkExecutableExportFlag from config.libraries(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/libraries.py:630)
  Checks for the flag that allows executables to export symbols to dlsym()
======== Checking running linked program
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.libraries/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

#include <stdio.h>
#include <stdlib.h>
#ifdef PETSC_HAVE_DLFCN_H
#include <dlfcn.h>
#endif

#define PETSC_DLLEXPORT __attribute__((visibility ("default")))

extern PETSC_DLLEXPORT int foo() {
  return 42;
}
    

int main(void) {

  void *lib;
  int (*foo)();

  lib = dlopen(NULL, RTLD_LAZY);
  if (!lib) {
    fprintf(stderr, "Could not open executable: %s\n", dlerror());
    exit(1);
  }
  foo = (int (*)(void)) dlsym(lib, "foo");
  if (!foo) {
    fprintf(stderr, "Could not find function in executable\n");
    exit(1);
  }
  if ((*foo)() != 42) {
    fprintf(stderr, "Could not run function\n");
    exit(1);
  }
  
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.libraries/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.libraries/conftest.o  -ldl
Testing executable /tmp/petsc-m5p55c3k/config.libraries/conftest to see if it can be run
Executing: /tmp/petsc-m5p55c3k/config.libraries/conftest
Running Executable with threads to time it out at 60
Executing: /tmp/petsc-m5p55c3k/config.libraries/conftest
stdout: Could not find function in executable
ERROR while running executable: Could not execute "['/tmp/petsc-m5p55c3k/config.libraries/conftest']":
Could not find function in executable

            Executable does not export symbols for dlopen()
======== Checking running linked program
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native -Wl,-export_dynamic  /tmp/petsc-m5p55c3k/config.libraries/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

#include <stdio.h>
#include <stdlib.h>
#ifdef PETSC_HAVE_DLFCN_H
#include <dlfcn.h>
#endif

#define PETSC_DLLEXPORT __attribute__((visibility ("default")))

extern PETSC_DLLEXPORT int foo() {
  return 42;
}
    

int main(void) {

  void *lib;
  int (*foo)();

  lib = dlopen(NULL, RTLD_LAZY);
  if (!lib) {
    fprintf(stderr, "Could not open executable: %s\n", dlerror());
    exit(1);
  }
  foo = (int (*)(void)) dlsym(lib, "foo");
  if (!foo) {
    fprintf(stderr, "Could not find function in executable\n");
    exit(1);
  }
  if ((*foo)() != 42) {
    fprintf(stderr, "Could not run function\n");
    exit(1);
  }
  
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.libraries/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native -Wl,-export_dynamic /tmp/petsc-m5p55c3k/config.libraries/conftest.o  -ldl
stdout: /usr/bin/ld: warning: cannot find entry symbol xport_dynamic; defaulting to 00000000004010a0
Possible ERROR while running linker:exit code 0
stderr:
/usr/bin/ld: warning: cannot find entry symbol xport_dynamic; defaulting to 00000000004010a0
Testing executable /tmp/petsc-m5p55c3k/config.libraries/conftest to see if it can be run
Executing: /tmp/petsc-m5p55c3k/config.libraries/conftest
Running Executable with threads to time it out at 60
Executing: /tmp/petsc-m5p55c3k/config.libraries/conftest
stdout: Could not find function in executable
ERROR while running executable: Could not execute "['/tmp/petsc-m5p55c3k/config.libraries/conftest']":
Could not find function in executable

            Executable does not export symbols for dlopen()
======== Checking running linked program
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native -Wl,-export-dynamic  /tmp/petsc-m5p55c3k/config.libraries/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

#include <stdio.h>
#include <stdlib.h>
#ifdef PETSC_HAVE_DLFCN_H
#include <dlfcn.h>
#endif

#define PETSC_DLLEXPORT __attribute__((visibility ("default")))

extern PETSC_DLLEXPORT int foo() {
  return 42;
}
    

int main(void) {

  void *lib;
  int (*foo)();

  lib = dlopen(NULL, RTLD_LAZY);
  if (!lib) {
    fprintf(stderr, "Could not open executable: %s\n", dlerror());
    exit(1);
  }
  foo = (int (*)(void)) dlsym(lib, "foo");
  if (!foo) {
    fprintf(stderr, "Could not find function in executable\n");
    exit(1);
  }
  if ((*foo)() != 42) {
    fprintf(stderr, "Could not run function\n");
    exit(1);
  }
  
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.libraries/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native -Wl,-export-dynamic /tmp/petsc-m5p55c3k/config.libraries/conftest.o  -ldl
Testing executable /tmp/petsc-m5p55c3k/config.libraries/conftest to see if it can be run
Executing: /tmp/petsc-m5p55c3k/config.libraries/conftest
Running Executable with threads to time it out at 60
Executing: /tmp/petsc-m5p55c3k/config.libraries/conftest
            Executable exports symbols for dlopen()
            Defined "HAVE_EXECUTABLE_EXPORT" to "1"
            Defined make macro "EXEFLAGS" to "-Wl,-export-dynamic"
    child config.libraries took 3.812203 seconds
=============================================================================================
TESTING: configureLibraryOptions from PETSc.options.libraryOptions(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/PETSc/options/libraryOptions.py:38)
  Sets PETSC_USE_DEBUG, PETSC_USE_INFO, PETSC_USE_LOG, PETSC_USE_CTABLE, PETSC_USE_DMLANDAU_2D, PETSC_USE_FORTRAN_KERNELS, and PETSC_USE_AVX512_KERNELS
            Defined "USE_LOG" to "1"
Executing: mpiicc -cc=icx -qversion
stdout: icx: error: unknown argument '-qversion'; did you mean '--version'?
            Defined "USE_MALLOC_COALESCED" to "1"
            Defined "USE_INFO" to "1"
            Defined "USE_CTABLE" to "1"
            Defined "USE_DMLANDAU_2D" to "1"
            **********Checking if running on BGL/IBM detected
              Checking for functions [bgl_perfctr_void] in library [''] []
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.libraries/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
char bgl_perfctr_void(void);
static void _check_bgl_perfctr_void(void) { bgl_perfctr_void(); }

int main(void) {
_check_bgl_perfctr_void();
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.libraries/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.libraries/conftest.o   
stdout:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.libraries/conftest.o: in function `main':
conftest.c:(.text+0x16): undefined reference to `bgl_perfctr_void'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Possible ERROR while running linker: exit code 1
stderr:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.libraries/conftest.o: in function `main':
conftest.c:(.text+0x16): undefined reference to `bgl_perfctr_void'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
              Checking for functions [ADIOI_BGL_Open] in library [''] []
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.libraries/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
char ADIOI_BGL_Open(void);
static void _check_ADIOI_BGL_Open(void) { ADIOI_BGL_Open(); }

int main(void) {
_check_ADIOI_BGL_Open();
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.libraries/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.libraries/conftest.o   
stdout:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.libraries/conftest.o: in function `main':
conftest.c:(.text+0x16): undefined reference to `ADIOI_BGL_Open'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Possible ERROR while running linker: exit code 1
stderr:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.libraries/conftest.o: in function `main':
conftest.c:(.text+0x16): undefined reference to `ADIOI_BGL_Open'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
            *********BGL/IBM test failure
            Defined "USE_BACKWARD_LOOP" to "1"
            Defined "USE_AVX512_KERNELS" to "1"
=============================================================================================
TESTING: configureISColorValueType from PETSc.options.libraryOptions(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/PETSc/options/libraryOptions.py:93)
  Sets PETSC_IS_COLORING_VALUE_TYPE, PETSC_MPIU_IS_COLORING_VALUE_TYPE, and PETSC_IS_COLORING_MAX as required by ISColoring
            Defined "MPIU_IS_COLORING_VALUE_TYPE" to "MPI_UNSIGNED_SHORT"
            Defined "IS_COLORING_MAX" to "USHRT_MAX"
            Defined "IS_COLORING_VALUE_TYPE" to "short"
            Defined "IS_COLORING_VALUE_TYPE_F" to "integer2"
    child PETSc.options.libraryOptions took 0.277687 seconds
    child config.atomics took 0.000004 seconds
=============================================================================================
TESTING: checkVSNPrintf from config.functions(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/functions.py:106)
  Checks whether vsnprintf requires a char * last argument, and if it does defines HAVE_VSNPRINTF_CHAR
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.functions/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.functions/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <stdio.h>
#include <stdarg.h>

int main(void) {
va_list Argp = { 0 };char str[6];
vsnprintf(str,5, "%d", Argp );
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.functions/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.functions/conftest.o 
            Defined "HAVE_VSNPRINTF" to "1"
=============================================================================================
TESTING: checkNanosleep from config.functions(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/functions.py:136)
  Check for functional nanosleep() - as time.h behaves differently for different compiler flags - like -std=c89
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.functions/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.functions/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <time.h>

int main(void) {
struct timespec tp;
 tp.tv_sec = 0;
 tp.tv_nsec = (long)(1e9);
 nanosleep(&tp,0);
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.functions/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.functions/conftest.o 
            Defined "HAVE_NANOSLEEP" to "1"
=============================================================================================
TESTING: checkMemmove from config.functions(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/functions.py:142)
  Check for functional memmove() - as MS VC requires correct includes to for this test
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.functions/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.functions/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <string.h>

int main(void) {
 char c1[1], c2[1] = "c";
 size_t n=1;
 memmove(c1,c2,n);
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.functions/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.functions/conftest.o 
            Defined "HAVE_MEMMOVE" to "1"
=============================================================================================
TESTING: checkSignalHandlerType from config.functions(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/functions.py:112)
  Checks the type of C++ signals handlers, and defines SIGNAL_CAST to the correct value
Executing: mpiicpc -cxx=icpx -c -o /tmp/petsc-m5p55c3k/config.functions/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions  -Wall -Wwrite-strings -Wno-strict-aliasing -Wno-unknown-pragmas -fstack-protector -fvisibility=hidden -O2 -march=native -mtune=native  -std=gnu++20 -fPIC  /tmp/petsc-m5p55c3k/config.functions/conftest.cc 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <signal.h>
static void myhandler(int sig) {}

int main(void) {
signal(SIGFPE,myhandler);
  return 0;
}

Executing: mpiicpc -cxx=icpx  -o /tmp/petsc-m5p55c3k/config.functions/conftest    -Wall -Wwrite-strings -Wno-strict-aliasing -Wno-unknown-pragmas -fstack-protector -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.functions/conftest.o 
            Defined "SIGNAL_CAST" to " "
=============================================================================================
TESTING: checkFreeReturnType from config.functions(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/functions.py:122)
  Checks whether free returns void or int, and defines HAVE_FREE_RETURN_INT
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.functions/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.functions/conftest.c 
stdout:
/tmp/petsc-m5p55c3k/config.functions/conftest.c:6:25: error: assigning to 'int' from incompatible type 'void'
    6 | int ierr; void *p; ierr = free(p); return ierr;
      |                         ^ ~~~~~~~
1 error generated.
Possible ERROR while running compiler: exit code 1
stderr:
/tmp/petsc-m5p55c3k/config.functions/conftest.c:6:25: error: assigning to 'int' from incompatible type 'void'
    6 | int ierr; void *p; ierr = free(p); return ierr;
      |                         ^ ~~~~~~~
1 error generated.
Source:
#include "confdefs.h"
#include "conffix.h"
#include <stdlib.h>

int main(void) {
int ierr; void *p; ierr = free(p); return ierr;
  return 0;
}

              Compile failed inside link

=============================================================================================
TESTING: checkVariableArgumentLists from config.functions(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/functions.py:128)
  Checks whether the variable argument list functionality is working
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.functions/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.functions/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <stdarg.h>

int main(void) {
  va_list l1, l2;
  va_copy(l1, l2);
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.functions/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.functions/conftest.o 
            Defined "HAVE_VA_COPY" to "1"
=============================================================================================
TESTING: checkClassify from config.functions(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/functions.py:85)
  Recursive decompose to rapidly classify functions as found or missing
    To confirm that a function is missing, we require a compile/link
    failure with only that function in a compilation unit.  In contrast,
    we can confirm that many functions are present by compiling them all
    together in a large compilation unit.  We optimistically compile
    everything together, then trim all functions that were named in the
    error message and bisect the result.  The trimming is only an
    optimization to increase the likelihood of a big-batch compile
    succeeding; we do not rely on the compiler naming missing functions.
    
Checking for functions [sleep realpath dlopen lseek stricmp bzero rand fpsetsticky gethostname posix_memalign _mkdir __gcov_dump gethostbyname strcasecmp getrusage _set_output_format readlink _access getpagesize drand48 PXFGETARG _getcwd sbreak socket uname dlsym _snprintf getcwd dlerror fpresetsticky getdomainname access fork _lseek snprintf _sleep usleep time clock dlclose popen]
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.functions/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.functions/conftest.c 
stdout:
/tmp/petsc-m5p55c3k/config.functions/conftest.c:18:6: warning: incompatible redeclaration of library function 'bzero' [-Wincompatible-library-redeclaration]
   18 | char bzero();
      |      ^
/tmp/petsc-m5p55c3k/config.functions/conftest.c:18:6: note: 'bzero' is a builtin with type 'void (void *, unsigned long)'
/tmp/petsc-m5p55c3k/config.functions/conftest.c:26:6: warning: incompatible redeclaration of library function 'strcasecmp' [-Wincompatible-library-redeclaration]
   26 | char strcasecmp();
      |      ^
/tmp/petsc-m5p55c3k/config.functions/conftest.c:26:6: note: 'strcasecmp' is a builtin with type 'int (const char *, const char *)'
/tmp/petsc-m5p55c3k/config.functions/conftest.c:47:6: warning: incompatible redeclaration of library function 'snprintf' [-Wincompatible-library-redeclaration]
   47 | char snprintf();
      |      ^
/tmp/petsc-m5p55c3k/config.functions/conftest.c:47:6: note: 'snprintf' is a builtin with type 'int (char *restrict, unsigned long, const char *restrict, ...)'
3 warnings generated.
Possible ERROR while running compiler:exit code 0
stderr:
/tmp/petsc-m5p55c3k/config.functions/conftest.c:18:6: warning: incompatible redeclaration of library function 'bzero' [-Wincompatible-library-redeclaration]
   18 | char bzero();
      |      ^
/tmp/petsc-m5p55c3k/config.functions/conftest.c:18:6: note: 'bzero' is a builtin with type 'void (void *, unsigned long)'
/tmp/petsc-m5p55c3k/config.functions/conftest.c:26:6: warning: incompatible redeclaration of library function 'strcasecmp' [-Wincompatible-library-redeclaration]
   26 | char strcasecmp();
      |      ^
/tmp/petsc-m5p55c3k/config.functions/conftest.c:26:6: note: 'strcasecmp' is a builtin with type 'int (const char *, const char *)'
/tmp/petsc-m5p55c3k/config.functions/conftest.c:47:6: warning: incompatible redeclaration of library function 'snprintf' [-Wincompatible-library-redeclaration]
   47 | char snprintf();
      |      ^
/tmp/petsc-m5p55c3k/config.functions/conftest.c:47:6: note: 'snprintf' is a builtin with type 'int (char *restrict, unsigned long, const char *restrict, ...)'
3 warnings generated.
Source:
#include "confdefs.h"
#include "conffix.h"

/* System header to define __stub macros and hopefully no other prototypes since they would conflict with our 'char funcname()' declaration below. */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error. */
#ifdef __cplusplus
extern "C" {
#endif

/* We use char because int might match the return type of a gcc2
builtin and then its argument prototype would still apply. */
char sleep();
char realpath();
char dlopen();
char lseek();
char stricmp();
char bzero();
char rand();
char fpsetsticky();
char gethostname();
char posix_memalign();
char _mkdir();
char __gcov_dump();
char gethostbyname();
char strcasecmp();
char getrusage();
char _set_output_format();
char readlink();
char _access();
char getpagesize();
char drand48();
char PXFGETARG();
char _getcwd();
char sbreak();
char socket();
char uname();
char dlsym();
char _snprintf();
char getcwd();
char dlerror();
char fpresetsticky();
char getdomainname();
char access();
char fork();
char _lseek();
char snprintf();
char _sleep();
char usleep();
char time();
char clock();
char dlclose();
char popen();

#ifdef __cplusplus
}
#endif

int main(void) {

#if defined (__stub_sleep) || defined (__stub___sleep)
sleep_will_always_fail_with_ENOSYS();
#else
sleep();
#endif

#if defined (__stub_realpath) || defined (__stub___realpath)
realpath_will_always_fail_with_ENOSYS();
#else
realpath();
#endif

#if defined (__stub_dlopen) || defined (__stub___dlopen)
dlopen_will_always_fail_with_ENOSYS();
#else
dlopen();
#endif

#if defined (__stub_lseek) || defined (__stub___lseek)
lseek_will_always_fail_with_ENOSYS();
#else
lseek();
#endif

#if defined (__stub_stricmp) || defined (__stub___stricmp)
stricmp_will_always_fail_with_ENOSYS();
#else
stricmp();
#endif

#if defined (__stub_bzero) || defined (__stub___bzero)
bzero_will_always_fail_with_ENOSYS();
#else
bzero();
#endif

#if defined (__stub_rand) || defined (__stub___rand)
rand_will_always_fail_with_ENOSYS();
#else
rand();
#endif

#if defined (__stub_fpsetsticky) || defined (__stub___fpsetsticky)
fpsetsticky_will_always_fail_with_ENOSYS();
#else
fpsetsticky();
#endif

#if defined (__stub_gethostname) || defined (__stub___gethostname)
gethostname_will_always_fail_with_ENOSYS();
#else
gethostname();
#endif

#if defined (__stub_posix_memalign) || defined (__stub___posix_memalign)
posix_memalign_will_always_fail_with_ENOSYS();
#else
posix_memalign();
#endif

#if defined (__stub__mkdir) || defined (__stub____mkdir)
_mkdir_will_always_fail_with_ENOSYS();
#else
_mkdir();
#endif

#if defined (__stub___gcov_dump) || defined (__stub_____gcov_dump)
__gcov_dump_will_always_fail_with_ENOSYS();
#else
__gcov_dump();
#endif

#if defined (__stub_gethostbyname) || defined (__stub___gethostbyname)
gethostbyname_will_always_fail_with_ENOSYS();
#else
gethostbyname();
#endif

#if defined (__stub_strcasecmp) || defined (__stub___strcasecmp)
strcasecmp_will_always_fail_with_ENOSYS();
#else
strcasecmp();
#endif

#if defined (__stub_getrusage) || defined (__stub___getrusage)
getrusage_will_always_fail_with_ENOSYS();
#else
getrusage();
#endif

#if defined (__stub__set_output_format) || defined (__stub____set_output_format)
_set_output_format_will_always_fail_with_ENOSYS();
#else
_set_output_format();
#endif

#if defined (__stub_readlink) || defined (__stub___readlink)
readlink_will_always_fail_with_ENOSYS();
#else
readlink();
#endif

#if defined (__stub__access) || defined (__stub____access)
_access_will_always_fail_with_ENOSYS();
#else
_access();
#endif

#if defined (__stub_getpagesize) || defined (__stub___getpagesize)
getpagesize_will_always_fail_with_ENOSYS();
#else
getpagesize();
#endif

#if defined (__stub_drand48) || defined (__stub___drand48)
drand48_will_always_fail_with_ENOSYS();
#else
drand48();
#endif

#if defined (__stub_PXFGETARG) || defined (__stub___PXFGETARG)
PXFGETARG_will_always_fail_with_ENOSYS();
#else
PXFGETARG();
#endif

#if defined (__stub__getcwd) || defined (__stub____getcwd)
_getcwd_will_always_fail_with_ENOSYS();
#else
_getcwd();
#endif

#if defined (__stub_sbreak) || defined (__stub___sbreak)
sbreak_will_always_fail_with_ENOSYS();
#else
sbreak();
#endif

#if defined (__stub_socket) || defined (__stub___socket)
socket_will_always_fail_with_ENOSYS();
#else
socket();
#endif

#if defined (__stub_uname) || defined (__stub___uname)
uname_will_always_fail_with_ENOSYS();
#else
uname();
#endif

#if defined (__stub_dlsym) || defined (__stub___dlsym)
dlsym_will_always_fail_with_ENOSYS();
#else
dlsym();
#endif

#if defined (__stub__snprintf) || defined (__stub____snprintf)
_snprintf_will_always_fail_with_ENOSYS();
#else
_snprintf();
#endif

#if defined (__stub_getcwd) || defined (__stub___getcwd)
getcwd_will_always_fail_with_ENOSYS();
#else
getcwd();
#endif

#if defined (__stub_dlerror) || defined (__stub___dlerror)
dlerror_will_always_fail_with_ENOSYS();
#else
dlerror();
#endif

#if defined (__stub_fpresetsticky) || defined (__stub___fpresetsticky)
fpresetsticky_will_always_fail_with_ENOSYS();
#else
fpresetsticky();
#endif

#if defined (__stub_getdomainname) || defined (__stub___getdomainname)
getdomainname_will_always_fail_with_ENOSYS();
#else
getdomainname();
#endif

#if defined (__stub_access) || defined (__stub___access)
access_will_always_fail_with_ENOSYS();
#else
access();
#endif

#if defined (__stub_fork) || defined (__stub___fork)
fork_will_always_fail_with_ENOSYS();
#else
fork();
#endif

#if defined (__stub__lseek) || defined (__stub____lseek)
_lseek_will_always_fail_with_ENOSYS();
#else
_lseek();
#endif

#if defined (__stub_snprintf) || defined (__stub___snprintf)
snprintf_will_always_fail_with_ENOSYS();
#else
snprintf();
#endif

#if defined (__stub__sleep) || defined (__stub____sleep)
_sleep_will_always_fail_with_ENOSYS();
#else
_sleep();
#endif

#if defined (__stub_usleep) || defined (__stub___usleep)
usleep_will_always_fail_with_ENOSYS();
#else
usleep();
#endif

#if defined (__stub_time) || defined (__stub___time)
time_will_always_fail_with_ENOSYS();
#else
time();
#endif

#if defined (__stub_clock) || defined (__stub___clock)
clock_will_always_fail_with_ENOSYS();
#else
clock();
#endif

#if defined (__stub_dlclose) || defined (__stub___dlclose)
dlclose_will_always_fail_with_ENOSYS();
#else
dlclose();
#endif

#if defined (__stub_popen) || defined (__stub___popen)
popen_will_always_fail_with_ENOSYS();
#else
popen();
#endif

  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.functions/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.functions/conftest.o 
stdout:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.functions/conftest.o: in function `main':
conftest.c:(.text+0x34): undefined reference to `stricmp'
/usr/bin/ld: conftest.c:(.text+0x49): undefined reference to `fpsetsticky'
/usr/bin/ld: conftest.c:(.text+0x5e): undefined reference to `_mkdir'
/usr/bin/ld: conftest.c:(.text+0x65): undefined reference to `__gcov_dump'
/usr/bin/ld: conftest.c:(.text+0x81): undefined reference to `_set_output_format'
/usr/bin/ld: conftest.c:(.text+0x8f): undefined reference to `_access'
/usr/bin/ld: conftest.c:(.text+0xa4): undefined reference to `PXFGETARG'
/usr/bin/ld: conftest.c:(.text+0xab): undefined reference to `_getcwd'
/usr/bin/ld: conftest.c:(.text+0xb2): undefined reference to `sbreak'
/usr/bin/ld: conftest.c:(.text+0xce): undefined reference to `_snprintf'
/usr/bin/ld: conftest.c:(.text+0xe3): undefined reference to `fpresetsticky'
/usr/bin/ld: conftest.c:(.text+0xff): undefined reference to `_lseek'
/usr/bin/ld: conftest.c:(.text+0x10d): undefined reference to `_sleep'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Possible ERROR while running linker: exit code 1
stderr:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.functions/conftest.o: in function `main':
conftest.c:(.text+0x34): undefined reference to `stricmp'
/usr/bin/ld: conftest.c:(.text+0x49): undefined reference to `fpsetsticky'
/usr/bin/ld: conftest.c:(.text+0x5e): undefined reference to `_mkdir'
/usr/bin/ld: conftest.c:(.text+0x65): undefined reference to `__gcov_dump'
/usr/bin/ld: conftest.c:(.text+0x81): undefined reference to `_set_output_format'
/usr/bin/ld: conftest.c:(.text+0x8f): undefined reference to `_access'
/usr/bin/ld: conftest.c:(.text+0xa4): undefined reference to `PXFGETARG'
/usr/bin/ld: conftest.c:(.text+0xab): undefined reference to `_getcwd'
/usr/bin/ld: conftest.c:(.text+0xb2): undefined reference to `sbreak'
/usr/bin/ld: conftest.c:(.text+0xce): undefined reference to `_snprintf'
/usr/bin/ld: conftest.c:(.text+0xe3): undefined reference to `fpresetsticky'
/usr/bin/ld: conftest.c:(.text+0xff): undefined reference to `_lseek'
/usr/bin/ld: conftest.c:(.text+0x10d): undefined reference to `_sleep'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Checking for functions [realpath dlopen bzero rand gethostname posix_memalign gethostbyname strcasecmp getrusage readlink getpagesize]
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.functions/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.functions/conftest.c 
stdout:
/tmp/petsc-m5p55c3k/config.functions/conftest.c:15:6: warning: incompatible redeclaration of library function 'bzero' [-Wincompatible-library-redeclaration]
   15 | char bzero();
      |      ^
/tmp/petsc-m5p55c3k/config.functions/conftest.c:15:6: note: 'bzero' is a builtin with type 'void (void *, unsigned long)'
/tmp/petsc-m5p55c3k/config.functions/conftest.c:20:6: warning: incompatible redeclaration of library function 'strcasecmp' [-Wincompatible-library-redeclaration]
   20 | char strcasecmp();
      |      ^
/tmp/petsc-m5p55c3k/config.functions/conftest.c:20:6: note: 'strcasecmp' is a builtin with type 'int (const char *, const char *)'
2 warnings generated.
Possible ERROR while running compiler:exit code 0
stderr:
/tmp/petsc-m5p55c3k/config.functions/conftest.c:15:6: warning: incompatible redeclaration of library function 'bzero' [-Wincompatible-library-redeclaration]
   15 | char bzero();
      |      ^
/tmp/petsc-m5p55c3k/config.functions/conftest.c:15:6: note: 'bzero' is a builtin with type 'void (void *, unsigned long)'
/tmp/petsc-m5p55c3k/config.functions/conftest.c:20:6: warning: incompatible redeclaration of library function 'strcasecmp' [-Wincompatible-library-redeclaration]
   20 | char strcasecmp();
      |      ^
/tmp/petsc-m5p55c3k/config.functions/conftest.c:20:6: note: 'strcasecmp' is a builtin with type 'int (const char *, const char *)'
2 warnings generated.
Source:
#include "confdefs.h"
#include "conffix.h"

/* System header to define __stub macros and hopefully no other prototypes since they would conflict with our 'char funcname()' declaration below. */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error. */
#ifdef __cplusplus
extern "C" {
#endif

/* We use char because int might match the return type of a gcc2
builtin and then its argument prototype would still apply. */
char realpath();
char dlopen();
char bzero();
char rand();
char gethostname();
char posix_memalign();
char gethostbyname();
char strcasecmp();
char getrusage();
char readlink();
char getpagesize();

#ifdef __cplusplus
}
#endif

int main(void) {

#if defined (__stub_realpath) || defined (__stub___realpath)
realpath_will_always_fail_with_ENOSYS();
#else
realpath();
#endif

#if defined (__stub_dlopen) || defined (__stub___dlopen)
dlopen_will_always_fail_with_ENOSYS();
#else
dlopen();
#endif

#if defined (__stub_bzero) || defined (__stub___bzero)
bzero_will_always_fail_with_ENOSYS();
#else
bzero();
#endif

#if defined (__stub_rand) || defined (__stub___rand)
rand_will_always_fail_with_ENOSYS();
#else
rand();
#endif

#if defined (__stub_gethostname) || defined (__stub___gethostname)
gethostname_will_always_fail_with_ENOSYS();
#else
gethostname();
#endif

#if defined (__stub_posix_memalign) || defined (__stub___posix_memalign)
posix_memalign_will_always_fail_with_ENOSYS();
#else
posix_memalign();
#endif

#if defined (__stub_gethostbyname) || defined (__stub___gethostbyname)
gethostbyname_will_always_fail_with_ENOSYS();
#else
gethostbyname();
#endif

#if defined (__stub_strcasecmp) || defined (__stub___strcasecmp)
strcasecmp_will_always_fail_with_ENOSYS();
#else
strcasecmp();
#endif

#if defined (__stub_getrusage) || defined (__stub___getrusage)
getrusage_will_always_fail_with_ENOSYS();
#else
getrusage();
#endif

#if defined (__stub_readlink) || defined (__stub___readlink)
readlink_will_always_fail_with_ENOSYS();
#else
readlink();
#endif

#if defined (__stub_getpagesize) || defined (__stub___getpagesize)
getpagesize_will_always_fail_with_ENOSYS();
#else
getpagesize();
#endif

  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.functions/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.functions/conftest.o 
                    Defined "HAVE_REALPATH" to "1"
                    Defined "HAVE_DLOPEN" to "1"
                    Defined "HAVE_BZERO" to "1"
                    Defined "HAVE_RAND" to "1"
                    Defined "HAVE_GETHOSTNAME" to "1"
                    Defined "HAVE_POSIX_MEMALIGN" to "1"
                    Defined "HAVE_GETHOSTBYNAME" to "1"
                    Defined "HAVE_STRCASECMP" to "1"
                    Defined "HAVE_GETRUSAGE" to "1"
                    Defined "HAVE_READLINK" to "1"
                    Defined "HAVE_GETPAGESIZE" to "1"
Checking for functions [drand48 socket uname dlsym dlerror getdomainname fork usleep time clock dlclose popen]
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.functions/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.functions/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

/* System header to define __stub macros and hopefully no other prototypes since they would conflict with our 'char funcname()' declaration below. */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error. */
#ifdef __cplusplus
extern "C" {
#endif

/* We use char because int might match the return type of a gcc2
builtin and then its argument prototype would still apply. */
char drand48();
char socket();
char uname();
char dlsym();
char dlerror();
char getdomainname();
char fork();
char usleep();
char time();
char clock();
char dlclose();
char popen();

#ifdef __cplusplus
}
#endif

int main(void) {

#if defined (__stub_drand48) || defined (__stub___drand48)
drand48_will_always_fail_with_ENOSYS();
#else
drand48();
#endif

#if defined (__stub_socket) || defined (__stub___socket)
socket_will_always_fail_with_ENOSYS();
#else
socket();
#endif

#if defined (__stub_uname) || defined (__stub___uname)
uname_will_always_fail_with_ENOSYS();
#else
uname();
#endif

#if defined (__stub_dlsym) || defined (__stub___dlsym)
dlsym_will_always_fail_with_ENOSYS();
#else
dlsym();
#endif

#if defined (__stub_dlerror) || defined (__stub___dlerror)
dlerror_will_always_fail_with_ENOSYS();
#else
dlerror();
#endif

#if defined (__stub_getdomainname) || defined (__stub___getdomainname)
getdomainname_will_always_fail_with_ENOSYS();
#else
getdomainname();
#endif

#if defined (__stub_fork) || defined (__stub___fork)
fork_will_always_fail_with_ENOSYS();
#else
fork();
#endif

#if defined (__stub_usleep) || defined (__stub___usleep)
usleep_will_always_fail_with_ENOSYS();
#else
usleep();
#endif

#if defined (__stub_time) || defined (__stub___time)
time_will_always_fail_with_ENOSYS();
#else
time();
#endif

#if defined (__stub_clock) || defined (__stub___clock)
clock_will_always_fail_with_ENOSYS();
#else
clock();
#endif

#if defined (__stub_dlclose) || defined (__stub___dlclose)
dlclose_will_always_fail_with_ENOSYS();
#else
dlclose();
#endif

#if defined (__stub_popen) || defined (__stub___popen)
popen_will_always_fail_with_ENOSYS();
#else
popen();
#endif

  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.functions/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.functions/conftest.o 
                    Defined "HAVE_DRAND48" to "1"
                    Defined "HAVE_SOCKET" to "1"
                    Defined "HAVE_UNAME" to "1"
                    Defined "HAVE_DLSYM" to "1"
                    Defined "HAVE_DLERROR" to "1"
                    Defined "HAVE_GETDOMAINNAME" to "1"
                    Defined "HAVE_FORK" to "1"
                    Defined "HAVE_USLEEP" to "1"
                    Defined "HAVE_TIME" to "1"
                    Defined "HAVE_CLOCK" to "1"
                    Defined "HAVE_DLCLOSE" to "1"
                    Defined "HAVE_POPEN" to "1"
Checking for functions [sleep]
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.functions/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.functions/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

/* System header to define __stub macros and hopefully no other prototypes since they would conflict with our 'char funcname()' declaration below. */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error. */
#ifdef __cplusplus
extern "C" {
#endif

/* We use char because int might match the return type of a gcc2
builtin and then its argument prototype would still apply. */
char sleep();

#ifdef __cplusplus
}
#endif

int main(void) {

#if defined (__stub_sleep) || defined (__stub___sleep)
sleep_will_always_fail_with_ENOSYS();
#else
sleep();
#endif

  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.functions/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.functions/conftest.o 
                    Defined "HAVE_SLEEP" to "1"
Checking for functions [lseek]
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.functions/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.functions/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

/* System header to define __stub macros and hopefully no other prototypes since they would conflict with our 'char funcname()' declaration below. */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error. */
#ifdef __cplusplus
extern "C" {
#endif

/* We use char because int might match the return type of a gcc2
builtin and then its argument prototype would still apply. */
char lseek();

#ifdef __cplusplus
}
#endif

int main(void) {

#if defined (__stub_lseek) || defined (__stub___lseek)
lseek_will_always_fail_with_ENOSYS();
#else
lseek();
#endif

  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.functions/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.functions/conftest.o 
                    Defined "HAVE_LSEEK" to "1"
Checking for functions [stricmp]
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.functions/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.functions/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

/* System header to define __stub macros and hopefully no other prototypes since they would conflict with our 'char funcname()' declaration below. */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error. */
#ifdef __cplusplus
extern "C" {
#endif

/* We use char because int might match the return type of a gcc2
builtin and then its argument prototype would still apply. */
char stricmp();

#ifdef __cplusplus
}
#endif

int main(void) {

#if defined (__stub_stricmp) || defined (__stub___stricmp)
stricmp_will_always_fail_with_ENOSYS();
#else
stricmp();
#endif

  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.functions/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.functions/conftest.o 
stdout:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.functions/conftest.o: in function `main':
conftest.c:(.text+0x18): undefined reference to `stricmp'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Possible ERROR while running linker: exit code 1
stderr:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.functions/conftest.o: in function `main':
conftest.c:(.text+0x18): undefined reference to `stricmp'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Checking for functions [fpsetsticky]
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.functions/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.functions/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

/* System header to define __stub macros and hopefully no other prototypes since they would conflict with our 'char funcname()' declaration below. */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error. */
#ifdef __cplusplus
extern "C" {
#endif

/* We use char because int might match the return type of a gcc2
builtin and then its argument prototype would still apply. */
char fpsetsticky();

#ifdef __cplusplus
}
#endif

int main(void) {

#if defined (__stub_fpsetsticky) || defined (__stub___fpsetsticky)
fpsetsticky_will_always_fail_with_ENOSYS();
#else
fpsetsticky();
#endif

  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.functions/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.functions/conftest.o 
stdout:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.functions/conftest.o: in function `main':
conftest.c:(.text+0x18): undefined reference to `fpsetsticky'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Possible ERROR while running linker: exit code 1
stderr:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.functions/conftest.o: in function `main':
conftest.c:(.text+0x18): undefined reference to `fpsetsticky'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Checking for functions [_mkdir]
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.functions/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.functions/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

/* System header to define __stub macros and hopefully no other prototypes since they would conflict with our 'char funcname()' declaration below. */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error. */
#ifdef __cplusplus
extern "C" {
#endif

/* We use char because int might match the return type of a gcc2
builtin and then its argument prototype would still apply. */
char _mkdir();

#ifdef __cplusplus
}
#endif

int main(void) {

#if defined (__stub__mkdir) || defined (__stub____mkdir)
_mkdir_will_always_fail_with_ENOSYS();
#else
_mkdir();
#endif

  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.functions/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.functions/conftest.o 
stdout:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.functions/conftest.o: in function `main':
conftest.c:(.text+0x18): undefined reference to `_mkdir'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Possible ERROR while running linker: exit code 1
stderr:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.functions/conftest.o: in function `main':
conftest.c:(.text+0x18): undefined reference to `_mkdir'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Checking for functions [__gcov_dump]
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.functions/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.functions/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

/* System header to define __stub macros and hopefully no other prototypes since they would conflict with our 'char funcname()' declaration below. */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error. */
#ifdef __cplusplus
extern "C" {
#endif

/* We use char because int might match the return type of a gcc2
builtin and then its argument prototype would still apply. */
char __gcov_dump();

#ifdef __cplusplus
}
#endif

int main(void) {

#if defined (__stub___gcov_dump) || defined (__stub_____gcov_dump)
__gcov_dump_will_always_fail_with_ENOSYS();
#else
__gcov_dump();
#endif

  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.functions/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.functions/conftest.o 
stdout:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.functions/conftest.o: in function `main':
conftest.c:(.text+0x18): undefined reference to `__gcov_dump'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Possible ERROR while running linker: exit code 1
stderr:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.functions/conftest.o: in function `main':
conftest.c:(.text+0x18): undefined reference to `__gcov_dump'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Checking for functions [_set_output_format]
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.functions/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.functions/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

/* System header to define __stub macros and hopefully no other prototypes since they would conflict with our 'char funcname()' declaration below. */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error. */
#ifdef __cplusplus
extern "C" {
#endif

/* We use char because int might match the return type of a gcc2
builtin and then its argument prototype would still apply. */
char _set_output_format();

#ifdef __cplusplus
}
#endif

int main(void) {

#if defined (__stub__set_output_format) || defined (__stub____set_output_format)
_set_output_format_will_always_fail_with_ENOSYS();
#else
_set_output_format();
#endif

  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.functions/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.functions/conftest.o 
stdout:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.functions/conftest.o: in function `main':
conftest.c:(.text+0x18): undefined reference to `_set_output_format'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Possible ERROR while running linker: exit code 1
stderr:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.functions/conftest.o: in function `main':
conftest.c:(.text+0x18): undefined reference to `_set_output_format'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Checking for functions [_access]
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.functions/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.functions/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

/* System header to define __stub macros and hopefully no other prototypes since they would conflict with our 'char funcname()' declaration below. */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error. */
#ifdef __cplusplus
extern "C" {
#endif

/* We use char because int might match the return type of a gcc2
builtin and then its argument prototype would still apply. */
char _access();

#ifdef __cplusplus
}
#endif

int main(void) {

#if defined (__stub__access) || defined (__stub____access)
_access_will_always_fail_with_ENOSYS();
#else
_access();
#endif

  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.functions/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.functions/conftest.o 
stdout:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.functions/conftest.o: in function `main':
conftest.c:(.text+0x18): undefined reference to `_access'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Possible ERROR while running linker: exit code 1
stderr:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.functions/conftest.o: in function `main':
conftest.c:(.text+0x18): undefined reference to `_access'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Checking for functions [PXFGETARG]
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.functions/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.functions/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

/* System header to define __stub macros and hopefully no other prototypes since they would conflict with our 'char funcname()' declaration below. */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error. */
#ifdef __cplusplus
extern "C" {
#endif

/* We use char because int might match the return type of a gcc2
builtin and then its argument prototype would still apply. */
char PXFGETARG();

#ifdef __cplusplus
}
#endif

int main(void) {

#if defined (__stub_PXFGETARG) || defined (__stub___PXFGETARG)
PXFGETARG_will_always_fail_with_ENOSYS();
#else
PXFGETARG();
#endif

  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.functions/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.functions/conftest.o 
stdout:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.functions/conftest.o: in function `main':
conftest.c:(.text+0x18): undefined reference to `PXFGETARG'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Possible ERROR while running linker: exit code 1
stderr:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.functions/conftest.o: in function `main':
conftest.c:(.text+0x18): undefined reference to `PXFGETARG'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Checking for functions [_getcwd]
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.functions/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.functions/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

/* System header to define __stub macros and hopefully no other prototypes since they would conflict with our 'char funcname()' declaration below. */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error. */
#ifdef __cplusplus
extern "C" {
#endif

/* We use char because int might match the return type of a gcc2
builtin and then its argument prototype would still apply. */
char _getcwd();

#ifdef __cplusplus
}
#endif

int main(void) {

#if defined (__stub__getcwd) || defined (__stub____getcwd)
_getcwd_will_always_fail_with_ENOSYS();
#else
_getcwd();
#endif

  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.functions/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.functions/conftest.o 
stdout:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.functions/conftest.o: in function `main':
conftest.c:(.text+0x18): undefined reference to `_getcwd'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Possible ERROR while running linker: exit code 1
stderr:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.functions/conftest.o: in function `main':
conftest.c:(.text+0x18): undefined reference to `_getcwd'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Checking for functions [sbreak]
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.functions/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.functions/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

/* System header to define __stub macros and hopefully no other prototypes since they would conflict with our 'char funcname()' declaration below. */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error. */
#ifdef __cplusplus
extern "C" {
#endif

/* We use char because int might match the return type of a gcc2
builtin and then its argument prototype would still apply. */
char sbreak();

#ifdef __cplusplus
}
#endif

int main(void) {

#if defined (__stub_sbreak) || defined (__stub___sbreak)
sbreak_will_always_fail_with_ENOSYS();
#else
sbreak();
#endif

  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.functions/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.functions/conftest.o 
stdout:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.functions/conftest.o: in function `main':
conftest.c:(.text+0x18): undefined reference to `sbreak'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Possible ERROR while running linker: exit code 1
stderr:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.functions/conftest.o: in function `main':
conftest.c:(.text+0x18): undefined reference to `sbreak'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Checking for functions [_snprintf]
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.functions/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.functions/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

/* System header to define __stub macros and hopefully no other prototypes since they would conflict with our 'char funcname()' declaration below. */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error. */
#ifdef __cplusplus
extern "C" {
#endif

/* We use char because int might match the return type of a gcc2
builtin and then its argument prototype would still apply. */
char _snprintf();

#ifdef __cplusplus
}
#endif

int main(void) {

#if defined (__stub__snprintf) || defined (__stub____snprintf)
_snprintf_will_always_fail_with_ENOSYS();
#else
_snprintf();
#endif

  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.functions/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.functions/conftest.o 
stdout:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.functions/conftest.o: in function `main':
conftest.c:(.text+0x18): undefined reference to `_snprintf'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Possible ERROR while running linker: exit code 1
stderr:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.functions/conftest.o: in function `main':
conftest.c:(.text+0x18): undefined reference to `_snprintf'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Checking for functions [getcwd]
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.functions/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.functions/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

/* System header to define __stub macros and hopefully no other prototypes since they would conflict with our 'char funcname()' declaration below. */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error. */
#ifdef __cplusplus
extern "C" {
#endif

/* We use char because int might match the return type of a gcc2
builtin and then its argument prototype would still apply. */
char getcwd();

#ifdef __cplusplus
}
#endif

int main(void) {

#if defined (__stub_getcwd) || defined (__stub___getcwd)
getcwd_will_always_fail_with_ENOSYS();
#else
getcwd();
#endif

  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.functions/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.functions/conftest.o 
                    Defined "HAVE_GETCWD" to "1"
Checking for functions [fpresetsticky]
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.functions/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.functions/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

/* System header to define __stub macros and hopefully no other prototypes since they would conflict with our 'char funcname()' declaration below. */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error. */
#ifdef __cplusplus
extern "C" {
#endif

/* We use char because int might match the return type of a gcc2
builtin and then its argument prototype would still apply. */
char fpresetsticky();

#ifdef __cplusplus
}
#endif

int main(void) {

#if defined (__stub_fpresetsticky) || defined (__stub___fpresetsticky)
fpresetsticky_will_always_fail_with_ENOSYS();
#else
fpresetsticky();
#endif

  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.functions/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.functions/conftest.o 
stdout:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.functions/conftest.o: in function `main':
conftest.c:(.text+0x18): undefined reference to `fpresetsticky'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Possible ERROR while running linker: exit code 1
stderr:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.functions/conftest.o: in function `main':
conftest.c:(.text+0x18): undefined reference to `fpresetsticky'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Checking for functions [access]
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.functions/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.functions/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

/* System header to define __stub macros and hopefully no other prototypes since they would conflict with our 'char funcname()' declaration below. */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error. */
#ifdef __cplusplus
extern "C" {
#endif

/* We use char because int might match the return type of a gcc2
builtin and then its argument prototype would still apply. */
char access();

#ifdef __cplusplus
}
#endif

int main(void) {

#if defined (__stub_access) || defined (__stub___access)
access_will_always_fail_with_ENOSYS();
#else
access();
#endif

  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.functions/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.functions/conftest.o 
                    Defined "HAVE_ACCESS" to "1"
Checking for functions [_lseek]
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.functions/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.functions/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

/* System header to define __stub macros and hopefully no other prototypes since they would conflict with our 'char funcname()' declaration below. */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error. */
#ifdef __cplusplus
extern "C" {
#endif

/* We use char because int might match the return type of a gcc2
builtin and then its argument prototype would still apply. */
char _lseek();

#ifdef __cplusplus
}
#endif

int main(void) {

#if defined (__stub__lseek) || defined (__stub____lseek)
_lseek_will_always_fail_with_ENOSYS();
#else
_lseek();
#endif

  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.functions/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.functions/conftest.o 
stdout:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.functions/conftest.o: in function `main':
conftest.c:(.text+0x18): undefined reference to `_lseek'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Possible ERROR while running linker: exit code 1
stderr:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.functions/conftest.o: in function `main':
conftest.c:(.text+0x18): undefined reference to `_lseek'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Checking for functions [snprintf]
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.functions/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.functions/conftest.c 
stdout:
/tmp/petsc-m5p55c3k/config.functions/conftest.c:13:6: warning: incompatible redeclaration of library function 'snprintf' [-Wincompatible-library-redeclaration]
   13 | char snprintf();
      |      ^
/tmp/petsc-m5p55c3k/config.functions/conftest.c:13:6: note: 'snprintf' is a builtin with type 'int (char *restrict, unsigned long, const char *restrict, ...)'
1 warning generated.
Possible ERROR while running compiler:exit code 0
stderr:
/tmp/petsc-m5p55c3k/config.functions/conftest.c:13:6: warning: incompatible redeclaration of library function 'snprintf' [-Wincompatible-library-redeclaration]
   13 | char snprintf();
      |      ^
/tmp/petsc-m5p55c3k/config.functions/conftest.c:13:6: note: 'snprintf' is a builtin with type 'int (char *restrict, unsigned long, const char *restrict, ...)'
1 warning generated.
Source:
#include "confdefs.h"
#include "conffix.h"

/* System header to define __stub macros and hopefully no other prototypes since they would conflict with our 'char funcname()' declaration below. */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error. */
#ifdef __cplusplus
extern "C" {
#endif

/* We use char because int might match the return type of a gcc2
builtin and then its argument prototype would still apply. */
char snprintf();

#ifdef __cplusplus
}
#endif

int main(void) {

#if defined (__stub_snprintf) || defined (__stub___snprintf)
snprintf_will_always_fail_with_ENOSYS();
#else
snprintf();
#endif

  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.functions/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.functions/conftest.o 
                    Defined "HAVE_SNPRINTF" to "1"
Checking for functions [_sleep]
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.functions/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.functions/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

/* System header to define __stub macros and hopefully no other prototypes since they would conflict with our 'char funcname()' declaration below. */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error. */
#ifdef __cplusplus
extern "C" {
#endif

/* We use char because int might match the return type of a gcc2
builtin and then its argument prototype would still apply. */
char _sleep();

#ifdef __cplusplus
}
#endif

int main(void) {

#if defined (__stub__sleep) || defined (__stub____sleep)
_sleep_will_always_fail_with_ENOSYS();
#else
_sleep();
#endif

  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.functions/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.functions/conftest.o 
stdout:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.functions/conftest.o: in function `main':
conftest.c:(.text+0x18): undefined reference to `_sleep'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Possible ERROR while running linker: exit code 1
stderr:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.functions/conftest.o: in function `main':
conftest.c:(.text+0x18): undefined reference to `_sleep'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Executing: mpiicc -cc=icx -v
stdout:
mpiicx for the Intel(R) MPI Library 2021.14 for Linux*
Copyright Intel Corporation.
stdout:
Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)
Target: x86_64-unknown-linux-gnu
Thread model: posix
InstalledDir: /opt/intel/oneapi/compiler/2025.0/bin/compiler
Configuration file: /opt/intel/oneapi/compiler/2025.0/bin/compiler/../icx.cfg
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/13
Selected GCC installation: /usr/lib/gcc/x86_64-linux-gnu/13
Candidate multilib: .;@m64
Selected multilib: .;@m64
icx: warning: argument unused during compilation: '-I /opt/intel/oneapi/mpi/2021.14/include' [-Wunused-command-line-argument]
=============================================================================================
TESTING: checkMmap from config.functions(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/functions.py:148)
  Check for functional mmap() to allocate shared memory and define HAVE_MMAP
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.functions/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.functions/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <sys/mman.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>

int main(void) {
int fd;
 fd=open("/tmp/file",O_RDWR);
 mmap((void*)0,100,PROT_READ|PROT_WRITE,MAP_SHARED,fd,0);
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.functions/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.functions/conftest.o 
            Defined "HAVE_MMAP" to "1"
=============================================================================================
TESTING: checkMkstemp from config.functions(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/functions.py:154)
  Check for mkstemp() to avoid using tmpnam as it is often deprecated
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.functions/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.functions/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#define _XOPEN_SOURCE 600
#include <stdlib.h>
#include <string.h>

int main(void) {
char filename[100];
 strcpy(filename, "/tmp/fileXXXXXX");
 mkstemp(filename);
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.functions/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.functions/conftest.o 
            Defined "HAVE_MKSTEMP" to "1"
=============================================================================================
TESTING: checkTmpnam_s from config.functions(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/functions.py:159)
  Check for tmpnam_s() to avoid using tmpnam as it is often deprecated
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.functions/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.functions/conftest.c 
stdout:
/tmp/petsc-m5p55c3k/config.functions/conftest.c:7:2: error: call to undeclared function 'tmpnam_s'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]
    7 |  tmpnam_s(filename, sizeof(filename));
      |  ^
/tmp/petsc-m5p55c3k/config.functions/conftest.c:7:2: note: did you mean 'tmpnam_r'?
/usr/include/stdio.h:216:14: note: 'tmpnam_r' declared here
  216 | extern char *tmpnam_r (char __s[L_tmpnam]) __THROW __wur;
      |              ^
1 error generated.
Possible ERROR while running compiler: exit code 1
stderr:
/tmp/petsc-m5p55c3k/config.functions/conftest.c:7:2: error: call to undeclared function 'tmpnam_s'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]
    7 |  tmpnam_s(filename, sizeof(filename));
      |  ^
/tmp/petsc-m5p55c3k/config.functions/conftest.c:7:2: note: did you mean 'tmpnam_r'?
/usr/include/stdio.h:216:14: note: 'tmpnam_r' declared here
  216 | extern char *tmpnam_r (char __s[L_tmpnam]) __THROW __wur;
      |              ^
1 error generated.
Source:
#include "confdefs.h"
#include "conffix.h"
#include <stdio.h>

int main(void) {
char filename[L_tmpnam];
 tmpnam_s(filename, sizeof(filename));
  return 0;
}

              Compile failed inside link

    child config.functions took 3.570527 seconds
=============================================================================================
TESTING: configureMemorySize from config.utilities.getResidentSetSize(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/utilities/getResidentSetSize.py:31)
  Try to determine how to measure the memory usage
            Defined "USE_PROC_FOR_SIZE" to "1"
          Using /proc for PetscMemoryGetCurrentUsage()
    child config.utilities.getResidentSetSize took 0.001058 seconds
=============================================================================================
TESTING: configureFPTrap from config.utilities.FPTrap(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/utilities/FPTrap.py:26)
  Checking the handling of floating point traps
Checking for header: sigfpe.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <sigfpe.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Possible ERROR while running preprocessor: exit code 1
stdout:
# 1 "/tmp/petsc-m5p55c3k/config.headers/conftest.c"
# 1 "<built-in>" 1
# 1 "<built-in>" 3
# 402 "<built-in>" 3
# 1 "<command line>" 1
# 1 "<built-in>" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/confdefs.h" 1
# 2 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/conffix.h" 1
# 3 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2

stderr:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'sigfpe.h' file not found
    3 | #include <sigfpe.h>
      |          ^~~~~~~~~~
1 error generated.
Source:
#include "confdefs.h"
#include "conffix.h"
#include <sigfpe.h>

Preprocess output before filtering:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'sigfpe.h' file not found
    3 | #include <sigfpe.h>
      |          ^~~~~~~~~~
1 error generated.
Preprocess output after filtering:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'sigfpe.h' file not found
    3 | #include <sigfpe.h>
      |          ^~~~~~~~~~
1 error generated.
Checking for header: fpxcp.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <fpxcp.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Possible ERROR while running preprocessor: exit code 1
stdout:
# 1 "/tmp/petsc-m5p55c3k/config.headers/conftest.c"
# 1 "<built-in>" 1
# 1 "<built-in>" 3
# 402 "<built-in>" 3
# 1 "<command line>" 1
# 1 "<built-in>" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/confdefs.h" 1
# 2 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/conffix.h" 1
# 3 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2

stderr:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'fpxcp.h' file not found
    3 | #include <fpxcp.h>
      |          ^~~~~~~~~
1 error generated.
Source:
#include "confdefs.h"
#include "conffix.h"
#include <fpxcp.h>

Preprocess output before filtering:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'fpxcp.h' file not found
    3 | #include <fpxcp.h>
      |          ^~~~~~~~~
1 error generated.
Preprocess output after filtering:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'fpxcp.h' file not found
    3 | #include <fpxcp.h>
      |          ^~~~~~~~~
1 error generated.
Checking for header: floatingpoint.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <floatingpoint.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Possible ERROR while running preprocessor: exit code 1
stdout:
# 1 "/tmp/petsc-m5p55c3k/config.headers/conftest.c"
# 1 "<built-in>" 1
# 1 "<built-in>" 3
# 402 "<built-in>" 3
# 1 "<command line>" 1
# 1 "<built-in>" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/confdefs.h" 1
# 2 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/conffix.h" 1
# 3 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2

stderr:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'floatingpoint.h' file not found
    3 | #include <floatingpoint.h>
      |          ^~~~~~~~~~~~~~~~~
1 error generated.
Source:
#include "confdefs.h"
#include "conffix.h"
#include <floatingpoint.h>

Preprocess output before filtering:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'floatingpoint.h' file not found
    3 | #include <floatingpoint.h>
      |          ^~~~~~~~~~~~~~~~~
1 error generated.
Preprocess output after filtering:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'floatingpoint.h' file not found
    3 | #include <floatingpoint.h>
      |          ^~~~~~~~~~~~~~~~~
1 error generated.
    child config.utilities.FPTrap took 0.103517 seconds
=============================================================================================
TESTING: configureFortranCommandLine from config.utilities.fortranCommandLine(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/utilities/fortranCommandLine.py:27)
  Check for the mechanism to retrieve command line arguments in Fortran
            Checking for functions [] in library [''] []
Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.libraries  -fPIC -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.libraries/conftest.F90 
Successful compile:
Source:
      program main
      integer i
      character(len=80) arg
      i = command_argument_count()
      call get_command_argument(i,arg)
      end

Executing: mpiifort -fc=ifx  -o /tmp/petsc-m5p55c3k/config.libraries/conftest    -fPIC -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.libraries/conftest.o   
    child config.utilities.fortranCommandLine took 0.142365 seconds
=============================================================================================
TESTING: configureFeatureTestMacros from config.utilities.featureTestMacros(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/utilities/featureTestMacros.py:13)
  Checks if certain feature test macros are support
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.utilities.featureTestMacros/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.utilities.featureTestMacros/conftest.c 
stdout:
/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros/conftest.c:4:10: fatal error: 'sysctl.h' file not found
    4 | #include <sysctl.h>
      |          ^~~~~~~~~~
1 error generated.
Possible ERROR while running compiler: exit code 1
stderr:
/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros/conftest.c:4:10: fatal error: 'sysctl.h' file not found
    4 | #include <sysctl.h>
      |          ^~~~~~~~~~
1 error generated.
Source:
#include "confdefs.h"
#include "conffix.h"
#define _POSIX_C_SOURCE 200112L
#include <sysctl.h>

int main(void) {
  return 0;
}

Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.utilities.featureTestMacros/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.utilities.featureTestMacros/conftest.c 
stdout:
In file included from /tmp/petsc-m5p55c3k/config.utilities.featureTestMacros/conftest.c:4:
In file included from /usr/include/stdlib.h:26:
In file included from /usr/include/x86_64-linux-gnu/bits/libc-header-start.h:33:
/usr/include/features.h:196:3: warning: "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE" [-W#warnings]
  196 | # warning "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE"
      |   ^
1 warning generated.
Possible ERROR while running compiler:exit code 0
stderr:
In file included from /tmp/petsc-m5p55c3k/config.utilities.featureTestMacros/conftest.c:4:
In file included from /usr/include/stdlib.h:26:
In file included from /usr/include/x86_64-linux-gnu/bits/libc-header-start.h:33:
/usr/include/features.h:196:3: warning: "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE" [-W#warnings]
  196 | # warning "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE"
      |   ^
1 warning generated.
Source:
#include "confdefs.h"
#include "conffix.h"
#define _BSD_SOURCE
#include<stdlib.h>

int main(void) {
  return 0;
}

            Defined "_BSD_SOURCE" to "1"
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.utilities.featureTestMacros/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.utilities.featureTestMacros/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#define _DEFAULT_SOURCE
#include<stdlib.h>

int main(void) {
  return 0;
}

            Defined "_DEFAULT_SOURCE" to "1"
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.utilities.featureTestMacros/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.utilities.featureTestMacros/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#define _GNU_SOURCE
#include <sched.h>

int main(void) {
cpu_set_t mset;
CPU_ZERO(&mset);
  return 0;
}

            Defined "_GNU_SOURCE" to "1"
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.utilities.featureTestMacros/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.utilities.featureTestMacros/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#define _GNU_SOURCE
#include <stdlib.h>
#include <dlfcn.h>

int main(void) {
Dl_info info;
if (dladdr(*(void **)&exit, &info) == 0) return 1;

  return 0;
}

            Defined "_GNU_SOURCE" to "1"
    child config.utilities.featureTestMacros took 0.225402 seconds
=============================================================================================
TESTING: configureMissingUtypeTypedefs from config.utilities.missing(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/utilities/missing.py:54)
   Checks if u_short is undefined 
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <sys/types.h>

int main(void) {
u_short foo;
(void)foo;
  return 0;
}

=============================================================================================
TESTING: configureMissingFunctions from config.utilities.missing(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/utilities/missing.py:60)
  Checks for SOCKETS and getline
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <stdio.h>
char *lineptr;
size_t n;
FILE *stream;

int main(void) {
getline(&lineptr, &n, stream);

  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.utilities.missing/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.o 
=============================================================================================
TESTING: configureMissingSignals from config.utilities.missing(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/utilities/missing.py:80)
  Check for missing signals, and define MISSING_<signal name> if necessary
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <signal.h>

int main(void) {
int i=SIGABRT;
(void)i;
  return 0;
}

Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <signal.h>

int main(void) {
int i=SIGALRM;
(void)i;
  return 0;
}

Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <signal.h>

int main(void) {
int i=SIGBUS;
(void)i;
  return 0;
}

Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <signal.h>

int main(void) {
int i=SIGCHLD;
(void)i;
  return 0;
}

Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <signal.h>

int main(void) {
int i=SIGCONT;
(void)i;
  return 0;
}

Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <signal.h>

int main(void) {
int i=SIGFPE;
(void)i;
  return 0;
}

Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <signal.h>

int main(void) {
int i=SIGHUP;
(void)i;
  return 0;
}

Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <signal.h>

int main(void) {
int i=SIGILL;
(void)i;
  return 0;
}

Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <signal.h>

int main(void) {
int i=SIGINT;
(void)i;
  return 0;
}

Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <signal.h>

int main(void) {
int i=SIGKILL;
(void)i;
  return 0;
}

Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <signal.h>

int main(void) {
int i=SIGPIPE;
(void)i;
  return 0;
}

Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <signal.h>

int main(void) {
int i=SIGQUIT;
(void)i;
  return 0;
}

Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <signal.h>

int main(void) {
int i=SIGSEGV;
(void)i;
  return 0;
}

Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <signal.h>

int main(void) {
int i=SIGSTOP;
(void)i;
  return 0;
}

Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <signal.h>

int main(void) {
int i=SIGSYS;
(void)i;
  return 0;
}

Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <signal.h>

int main(void) {
int i=SIGTERM;
(void)i;
  return 0;
}

Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <signal.h>

int main(void) {
int i=SIGTRAP;
(void)i;
  return 0;
}

Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <signal.h>

int main(void) {
int i=SIGTSTP;
(void)i;
  return 0;
}

Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <signal.h>

int main(void) {
int i=SIGURG;
(void)i;
  return 0;
}

Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <signal.h>

int main(void) {
int i=SIGUSR1;
(void)i;
  return 0;
}

Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <signal.h>

int main(void) {
int i=SIGUSR2;
(void)i;
  return 0;
}

=============================================================================================
TESTING: configureMissingGetdomainnamePrototype from config.utilities.missing(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/utilities/missing.py:88)
  Check for missing function prototype for getdomainname()
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

#if !defined(_BSD_SOURCE)
#define _BSD_SOURCE
#endif

#if !defined(_DEFAULT_SOURCE)
#define _DEFAULT_SOURCE
#endif

#if !defined(_GNU_SOURCE)
#define _GNU_SOURCE
#endif

#ifdef PETSC_HAVE_UNISTD_H
#include <unistd.h>
#endif
#ifdef PETSC_HAVE_NETDB_H
#include <netdb.h>
#endif

int main(void) {

int (*getdomainname_ptr)(char*,size_t) = getdomainname;
char test[10];
if (getdomainname_ptr(test,10)) return 1;

  return 0;
}

Executing: mpiicpc -cxx=icpx -c -o /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.missing  -Wall -Wwrite-strings -Wno-strict-aliasing -Wno-unknown-pragmas -fstack-protector -fvisibility=hidden -O2 -march=native -mtune=native  -std=gnu++20 -fPIC  /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.cc 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

#if !defined(_BSD_SOURCE)
#define _BSD_SOURCE
#endif

#if !defined(_DEFAULT_SOURCE)
#define _DEFAULT_SOURCE
#endif

#if !defined(_GNU_SOURCE)
#define _GNU_SOURCE
#endif

#ifdef PETSC_HAVE_UNISTD_H
#include <unistd.h>
#endif
#ifdef PETSC_HAVE_NETDB_H
#include <netdb.h>
#endif

int main(void) {

int (*getdomainname_ptr)(char*,size_t) = getdomainname;
char test[10];
if (getdomainname_ptr(test,10)) return 1;

  return 0;
}

Executing: mpiicpc -cxx=icpx  -o /tmp/petsc-m5p55c3k/config.utilities.missing/conftest    -Wall -Wwrite-strings -Wno-strict-aliasing -Wno-unknown-pragmas -fstack-protector -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.o 
=============================================================================================
TESTING: configureMissingSrandPrototype from config.utilities.missing(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/utilities/missing.py:114)
  Checks for missing random number generator prototypes
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

#if !defined(_BSD_SOURCE)
#define _BSD_SOURCE
#endif

#if !defined(_DEFAULT_SOURCE)
#define _DEFAULT_SOURCE
#endif

#if !defined(_GNU_SOURCE)
#define _GNU_SOURCE
#endif

#include <stdlib.h>

int main(void) {

double (*drand48_ptr)(void) = drand48;
void (*srand48_ptr)(long int) = srand48;
long int seed=10;
srand48_ptr(seed);
if (drand48_ptr() > 0.5) return 1;

  return 0;
}

Executing: mpiicpc -cxx=icpx -c -o /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.missing  -Wall -Wwrite-strings -Wno-strict-aliasing -Wno-unknown-pragmas -fstack-protector -fvisibility=hidden -O2 -march=native -mtune=native  -std=gnu++20 -fPIC  /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.cc 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

#if !defined(_BSD_SOURCE)
#define _BSD_SOURCE
#endif

#if !defined(_DEFAULT_SOURCE)
#define _DEFAULT_SOURCE
#endif

#if !defined(_GNU_SOURCE)
#define _GNU_SOURCE
#endif

#include <stdlib.h>

int main(void) {

double (*drand48_ptr)(void) = drand48;
void (*srand48_ptr)(long int) = srand48;
long int seed=10;
srand48_ptr(seed);
if (drand48_ptr() > 0.5) return 1;

  return 0;
}

Executing: mpiicpc -cxx=icpx  -o /tmp/petsc-m5p55c3k/config.utilities.missing/conftest    -Wall -Wwrite-strings -Wno-strict-aliasing -Wno-unknown-pragmas -fstack-protector -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.utilities.missing/conftest.o 
    child config.utilities.missing took 1.634196 seconds
=============================================================================================
TESTING: checkSharedDynamicPicOptions from PETSc.options.sharedLibraries(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/PETSc/options/sharedLibraries.py:33)
  if user specified out-dated 'with-shared' or 'with-dynamic' - flag an error
=============================================================================================
TESTING: configureSharedLibraries from PETSc.options.sharedLibraries(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/PETSc/options/sharedLibraries.py:48)
  Checks whether shared libraries should be used, for which you must
      - Specify --with-shared-libraries
      - Have found a working shared linker
    Defines PETSC_USE_SHARED_LIBRARIES if they are used
            Defined make rule "shared_arch" with dependencies "shared_linux" and code []
            Defined make macro "SONAME_FUNCTION" to "$(1).$(SL_LINKER_SUFFIX).$(2)"
            Defined make macro "SL_LINKER_FUNCTION" to " -shared  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native -Wl,-soname,$(call SONAME_FUNCTION,$(notdir $(1)),$(2))"
Executing: mpiicc -cc=icx -v
stdout:
mpiicx for the Intel(R) MPI Library 2021.14 for Linux*
Copyright Intel Corporation.
stdout:
Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)
Target: x86_64-unknown-linux-gnu
Thread model: posix
InstalledDir: /opt/intel/oneapi/compiler/2025.0/bin/compiler
Configuration file: /opt/intel/oneapi/compiler/2025.0/bin/compiler/../icx.cfg
Found candidate GCC installation: /usr/lib/gcc/x86_64-linux-gnu/13
Selected GCC installation: /usr/lib/gcc/x86_64-linux-gnu/13
Candidate multilib: .;@m64
Selected multilib: .;@m64
icx: warning: argument unused during compilation: '-I /opt/intel/oneapi/mpi/2021.14/include' [-Wunused-command-line-argument]
            Defined make macro "BUILDSHAREDLIB" to "yes"
            Defined "USE_SHARED_LIBRARIES" to "1"
=============================================================================================
TESTING: configureDynamicLibraries from PETSc.options.sharedLibraries(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/PETSc/options/sharedLibraries.py:92)
  Checks whether dynamic loading is available (with dlfcn.h and libdl)
            Defined "HAVE_DYNAMIC_LIBRARIES" to "1"
=============================================================================================
TESTING: configureSerializedFunctions from PETSc.options.sharedLibraries(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/PETSc/options/sharedLibraries.py:98)
  
    Defines PETSC_SERIALIZE_FUNCTIONS if they are used
    Requires shared libraries
=============================================================================================
TESTING: checkSymbolResolution from PETSc.options.sharedLibraries(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/PETSc/options/sharedLibraries.py:107)
  Checks that dladdr() works
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#define _GNU_SOURCE
#include<stdlib.h>
#include <dlfcn.h>

int main(void) {
Dl_info info;
if (dladdr(*(void **)&exit, &info) == 0) return 1;

  return 0;
}

            Defined "HAVE_DLADDR" to "1"
Checking for header: cxxabi.h
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <cxxabi.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.headers  /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Possible ERROR while running preprocessor: exit code 1
stdout:
# 1 "/tmp/petsc-m5p55c3k/config.headers/conftest.c"
# 1 "<built-in>" 1
# 1 "<built-in>" 3
# 402 "<built-in>" 3
# 1 "<command line>" 1
# 1 "<built-in>" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/confdefs.h" 1
# 2 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2
# 1 "/tmp/petsc-m5p55c3k/config.headers/conffix.h" 1
# 3 "/tmp/petsc-m5p55c3k/config.headers/conftest.c" 2

stderr:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'cxxabi.h' file not found
    3 | #include <cxxabi.h>
      |          ^~~~~~~~~~
1 error generated.
Source:
#include "confdefs.h"
#include "conffix.h"
#include <cxxabi.h>

Preprocess output before filtering:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'cxxabi.h' file not found
    3 | #include <cxxabi.h>
      |          ^~~~~~~~~~
1 error generated.
Preprocess output after filtering:
/tmp/petsc-m5p55c3k/config.headers/conftest.c:3:10: fatal error: 'cxxabi.h' file not found
    3 | #include <cxxabi.h>
      |          ^~~~~~~~~~
1 error generated.
    child PETSc.options.sharedLibraries took 0.120351 seconds
=============================================================================================
TESTING: configureScalarType from PETSc.options.scalarTypes(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/PETSc/options/scalarTypes.py:42)
  Choose between real and complex numbers
          Scalar type is real
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/PETSc.options.scalarTypes/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/PETSc.options.scalarTypes/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <math.h>

int main(void) {
double b = 2.0; int a = isnormal(b);(void)a;
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/PETSc.options.scalarTypes/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/PETSc.options.scalarTypes/conftest.o 
            Defined "HAVE_ISNORMAL" to "1"
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/PETSc.options.scalarTypes/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/PETSc.options.scalarTypes/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <math.h>

int main(void) {
double b = 2.0; int a = isnan(b);(void)a;
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/PETSc.options.scalarTypes/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/PETSc.options.scalarTypes/conftest.o 
            Defined "HAVE_ISNAN" to "1"
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/PETSc.options.scalarTypes/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/PETSc.options.scalarTypes/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <math.h>

int main(void) {
double b = 2.0; int a = isinf(b);(void)a;
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/PETSc.options.scalarTypes/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/PETSc.options.scalarTypes/conftest.o 
            Defined "HAVE_ISINF" to "1"
=============================================================================================
TESTING: configurePrecision from PETSc.options.scalarTypes(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/PETSc/options/scalarTypes.py:83)
  Set the default real number precision for PETSc objects
Checking C compiler works with __float128
            Checking for functions [logq] in library ['quadmath'] []
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.libraries/conftest.c 
stdout:
/tmp/petsc-m5p55c3k/config.libraries/conftest.c:4:10: fatal error: 'quadmath.h' file not found
    4 | #include <quadmath.h>
      |          ^~~~~~~~~~~~
1 error generated.
Possible ERROR while running compiler: exit code 1
stderr:
/tmp/petsc-m5p55c3k/config.libraries/conftest.c:4:10: fatal error: 'quadmath.h' file not found
    4 | #include <quadmath.h>
      |          ^~~~~~~~~~~~
1 error generated.
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
#include <quadmath.h>
static void _check_logq(void) { __float128 f = 0.0; logq(f); }

int main(void) {
_check_logq();
  return 0;
}

                Compile failed inside link

Checking C compiler works with __fp16
            Checking for functions [] in library [''] []
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.libraries/conftest.c 
stdout:
/tmp/petsc-m5p55c3k/config.libraries/conftest.c:4:15: error: function return value cannot have __fp16 type; did you forget * ?
    4 | static __fp16 ret___fp16(__fp16 f) { return f; }
      |               ^
/tmp/petsc-m5p55c3k/config.libraries/conftest.c:4:33: error: parameters cannot have __fp16 type; did you forget * ?
    4 | static __fp16 ret___fp16(__fp16 f) { return f; }
      |                                 ^
2 errors generated.
Possible ERROR while running compiler: exit code 1
stderr:
/tmp/petsc-m5p55c3k/config.libraries/conftest.c:4:15: error: function return value cannot have __fp16 type; did you forget * ?
    4 | static __fp16 ret___fp16(__fp16 f) { return f; }
      |               ^
/tmp/petsc-m5p55c3k/config.libraries/conftest.c:4:33: error: parameters cannot have __fp16 type; did you forget * ?
    4 | static __fp16 ret___fp16(__fp16 f) { return f; }
      |                                 ^
2 errors generated.
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
static __fp16 ret___fp16(__fp16 f) { return f; }
static void _check_(void) { __fp16 f = 1.0, g; g = ret___fp16(f); (void)g; }

int main(void) {
_check_();
  return 0;
}

                Compile failed inside link

            Defined "USE_REAL_DOUBLE" to "1"
            Defined make macro "PETSC_SCALAR_SIZE" to "64"
          Precision is double
    child PETSc.options.scalarTypes took 0.465214 seconds
=============================================================================================
TESTING: configureMkdir from config.programs(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/programs.py:23)
  Make sure we can have mkdir automatically make intermediate directories
    Checking for program /opt/intel/oneapi/mpi/2021.14/bin/mkdir...not found
    Checking for program /opt/intel/oneapi/mkl/2025.0/bin/mkdir...not found
    Checking for program /opt/intel/oneapi/dpcpp-ct/2025.0/bin/mkdir...not found
    Checking for program /opt/intel/oneapi/dev-utilities/2025.0/bin/mkdir...not found
    Checking for program /opt/intel/oneapi/debugger/2025.0/opt/debugger/bin/mkdir...not found
    Checking for program /opt/intel/oneapi/compiler/2025.0/bin/mkdir...not found
    Checking for program /usr/local/sbin/mkdir...not found
    Checking for program /usr/local/bin/mkdir...not found
    Checking for program /usr/sbin/mkdir...not found
    Checking for program /usr/bin/mkdir...found
Executing: /usr/bin/mkdir -p .conftest/tmp
          Adding -p flag to /usr/bin/mkdir -p to automatically create directories
            Defined make macro "MKDIR" to "/usr/bin/mkdir -p"
=============================================================================================
TESTING: configureAutoreconf from config.programs(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/programs.py:45)
  Check for autoreconf
    Checking for program /opt/intel/oneapi/mpi/2021.14/bin/autoreconf...not found
    Checking for program /opt/intel/oneapi/mkl/2025.0/bin/autoreconf...not found
    Checking for program /opt/intel/oneapi/dpcpp-ct/2025.0/bin/autoreconf...not found
    Checking for program /opt/intel/oneapi/dev-utilities/2025.0/bin/autoreconf...not found
    Checking for program /opt/intel/oneapi/debugger/2025.0/opt/debugger/bin/autoreconf...not found
    Checking for program /opt/intel/oneapi/compiler/2025.0/bin/autoreconf...not found
    Checking for program /usr/local/sbin/autoreconf...not found
    Checking for program /usr/local/bin/autoreconf...not found
    Checking for program /usr/sbin/autoreconf...not found
    Checking for program /usr/bin/autoreconf...found
Executing: ['/usr/bin/autoreconf']
          autoreconf test successful!
    Checking for program /opt/intel/oneapi/mpi/2021.14/bin/libtoolize...not found
    Checking for program /opt/intel/oneapi/mkl/2025.0/bin/libtoolize...not found
    Checking for program /opt/intel/oneapi/dpcpp-ct/2025.0/bin/libtoolize...not found
    Checking for program /opt/intel/oneapi/dev-utilities/2025.0/bin/libtoolize...not found
    Checking for program /opt/intel/oneapi/debugger/2025.0/opt/debugger/bin/libtoolize...not found
    Checking for program /opt/intel/oneapi/compiler/2025.0/bin/libtoolize...not found
    Checking for program /usr/local/sbin/libtoolize...not found
    Checking for program /usr/local/bin/libtoolize...not found
    Checking for program /usr/sbin/libtoolize...not found
    Checking for program /usr/bin/libtoolize...found
=============================================================================================
TESTING: configurePrograms from config.programs(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/programs.py:74)
  Check for the programs needed to build and run PETSc
    Checking for program /opt/intel/oneapi/mpi/2021.14/bin/bash...not found
    Checking for program /opt/intel/oneapi/mkl/2025.0/bin/bash...not found
    Checking for program /opt/intel/oneapi/dpcpp-ct/2025.0/bin/bash...not found
    Checking for program /opt/intel/oneapi/dev-utilities/2025.0/bin/bash...not found
    Checking for program /opt/intel/oneapi/debugger/2025.0/opt/debugger/bin/bash...not found
    Checking for program /opt/intel/oneapi/compiler/2025.0/bin/bash...not found
    Checking for program /usr/local/sbin/bash...not found
    Checking for program /usr/local/bin/bash...not found
    Checking for program /usr/sbin/bash...not found
    Checking for program /usr/bin/bash...found
              Defined make macro "SHELL" to "/usr/bin/bash"
    Checking for program /opt/intel/oneapi/mpi/2021.14/bin/sed...not found
    Checking for program /opt/intel/oneapi/mkl/2025.0/bin/sed...not found
    Checking for program /opt/intel/oneapi/dpcpp-ct/2025.0/bin/sed...not found
    Checking for program /opt/intel/oneapi/dev-utilities/2025.0/bin/sed...not found
    Checking for program /opt/intel/oneapi/debugger/2025.0/opt/debugger/bin/sed...not found
    Checking for program /opt/intel/oneapi/compiler/2025.0/bin/sed...not found
    Checking for program /usr/local/sbin/sed...not found
    Checking for program /usr/local/bin/sed...not found
    Checking for program /usr/sbin/sed...not found
    Checking for program /usr/bin/sed...found
              Defined make macro "SED" to "/usr/bin/sed"
Executing: /usr/bin/sed -i s/sed/sd/g "/tmp/petsc-m5p55c3k/config.programs/sed1"
          Adding SEDINPLACE cmd: /usr/bin/sed -i
            Defined make macro "SEDINPLACE" to "/usr/bin/sed -i"
    Checking for program /opt/intel/oneapi/mpi/2021.14/bin/mv...not found
    Checking for program /opt/intel/oneapi/mkl/2025.0/bin/mv...not found
    Checking for program /opt/intel/oneapi/dpcpp-ct/2025.0/bin/mv...not found
    Checking for program /opt/intel/oneapi/dev-utilities/2025.0/bin/mv...not found
    Checking for program /opt/intel/oneapi/debugger/2025.0/opt/debugger/bin/mv...not found
    Checking for program /opt/intel/oneapi/compiler/2025.0/bin/mv...not found
    Checking for program /usr/local/sbin/mv...not found
    Checking for program /usr/local/bin/mv...not found
    Checking for program /usr/sbin/mv...not found
    Checking for program /usr/bin/mv...found
              Defined make macro "MV" to "/usr/bin/mv"
    Checking for program /opt/intel/oneapi/mpi/2021.14/bin/cp...not found
    Checking for program /opt/intel/oneapi/mkl/2025.0/bin/cp...not found
    Checking for program /opt/intel/oneapi/dpcpp-ct/2025.0/bin/cp...not found
    Checking for program /opt/intel/oneapi/dev-utilities/2025.0/bin/cp...not found
    Checking for program /opt/intel/oneapi/debugger/2025.0/opt/debugger/bin/cp...not found
    Checking for program /opt/intel/oneapi/compiler/2025.0/bin/cp...not found
    Checking for program /usr/local/sbin/cp...not found
    Checking for program /usr/local/bin/cp...not found
    Checking for program /usr/sbin/cp...not found
    Checking for program /usr/bin/cp...found
              Defined make macro "CP" to "/usr/bin/cp"
    Checking for program /opt/intel/oneapi/mpi/2021.14/bin/grep...not found
    Checking for program /opt/intel/oneapi/mkl/2025.0/bin/grep...not found
    Checking for program /opt/intel/oneapi/dpcpp-ct/2025.0/bin/grep...not found
    Checking for program /opt/intel/oneapi/dev-utilities/2025.0/bin/grep...not found
    Checking for program /opt/intel/oneapi/debugger/2025.0/opt/debugger/bin/grep...not found
    Checking for program /opt/intel/oneapi/compiler/2025.0/bin/grep...not found
    Checking for program /usr/local/sbin/grep...not found
    Checking for program /usr/local/bin/grep...not found
    Checking for program /usr/sbin/grep...not found
    Checking for program /usr/bin/grep...found
              Defined make macro "GREP" to "/usr/bin/grep"
    Checking for program /opt/intel/oneapi/mpi/2021.14/bin/rm...not found
    Checking for program /opt/intel/oneapi/mkl/2025.0/bin/rm...not found
    Checking for program /opt/intel/oneapi/dpcpp-ct/2025.0/bin/rm...not found
    Checking for program /opt/intel/oneapi/dev-utilities/2025.0/bin/rm...not found
    Checking for program /opt/intel/oneapi/debugger/2025.0/opt/debugger/bin/rm...not found
    Checking for program /opt/intel/oneapi/compiler/2025.0/bin/rm...not found
    Checking for program /usr/local/sbin/rm...not found
    Checking for program /usr/local/bin/rm...not found
    Checking for program /usr/sbin/rm...not found
    Checking for program /usr/bin/rm...found
              Defined make macro "RM" to "/usr/bin/rm -f"
    Checking for program /opt/intel/oneapi/mpi/2021.14/bin/diff...not found
    Checking for program /opt/intel/oneapi/mkl/2025.0/bin/diff...not found
    Checking for program /opt/intel/oneapi/dpcpp-ct/2025.0/bin/diff...not found
    Checking for program /opt/intel/oneapi/dev-utilities/2025.0/bin/diff...not found
    Checking for program /opt/intel/oneapi/debugger/2025.0/opt/debugger/bin/diff...not found
    Checking for program /opt/intel/oneapi/compiler/2025.0/bin/diff...not found
    Checking for program /usr/local/sbin/diff...not found
    Checking for program /usr/local/bin/diff...not found
    Checking for program /usr/sbin/diff...not found
    Checking for program /usr/bin/diff...found
Executing: "/usr/bin/diff" -w "/tmp/petsc-m5p55c3k/config.programs/diff1" "/tmp/petsc-m5p55c3k/config.programs/diff2"
            Defined make macro "DIFF" to "/usr/bin/diff -w"
    Checking for program /usr/ucb/ps...not found
    Checking for program /usr/usb/ps...not found
    Checking for program /srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/lib/petsc/bin/win32fe/ps...not found
  Unable to find programs: ['ps'] in listing of the specific search path: ['/usr/ucb', '/usr/usb']
      Warning accessing /usr/ucb gives errors: [Errno 2] No such file or directory: '/usr/ucb'
      Warning accessing /usr/usb gives errors: [Errno 2] No such file or directory: '/usr/usb'
            Defined make macro "PYTHON" to "/usr/bin/python3"
    Checking for program /opt/intel/oneapi/mpi/2021.14/bin/m4...not found
    Checking for program /opt/intel/oneapi/mkl/2025.0/bin/m4...not found
    Checking for program /opt/intel/oneapi/dpcpp-ct/2025.0/bin/m4...not found
    Checking for program /opt/intel/oneapi/dev-utilities/2025.0/bin/m4...not found
    Checking for program /opt/intel/oneapi/debugger/2025.0/opt/debugger/bin/m4...not found
    Checking for program /opt/intel/oneapi/compiler/2025.0/bin/m4...not found
    Checking for program /usr/local/sbin/m4...not found
    Checking for program /usr/local/bin/m4...not found
    Checking for program /usr/sbin/m4...not found
    Checking for program /usr/bin/m4...found
              Defined make macro "M4" to "/usr/bin/m4"
    child config.programs took 1.619216 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.make(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.make(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
=============================================================================================
TESTING: configureMake from config.packages.make(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/make.py:98)
  Check Guesses for GNU make
Executing: gmake --version
stdout:
GNU Make 4.3
Built for x86_64-pc-linux-gnu
Copyright (C) 1988-2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
    Checking for program /opt/intel/oneapi/mpi/2021.14/bin/gmake...not found
    Checking for program /opt/intel/oneapi/mkl/2025.0/bin/gmake...not found
    Checking for program /opt/intel/oneapi/dpcpp-ct/2025.0/bin/gmake...not found
    Checking for program /opt/intel/oneapi/dev-utilities/2025.0/bin/gmake...not found
    Checking for program /opt/intel/oneapi/debugger/2025.0/opt/debugger/bin/gmake...not found
    Checking for program /opt/intel/oneapi/compiler/2025.0/bin/gmake...not found
    Checking for program /usr/local/sbin/gmake...not found
    Checking for program /usr/local/bin/gmake...not found
    Checking for program /usr/sbin/gmake...not found
    Checking for program /usr/bin/gmake...found
              Defined make macro "MAKE" to "/usr/bin/gmake"
    Checking for program /opt/intel/oneapi/mpi/2021.14/bin/make...not found
    Checking for program /opt/intel/oneapi/mkl/2025.0/bin/make...not found
    Checking for program /opt/intel/oneapi/dpcpp-ct/2025.0/bin/make...not found
    Checking for program /opt/intel/oneapi/dev-utilities/2025.0/bin/make...not found
    Checking for program /opt/intel/oneapi/debugger/2025.0/opt/debugger/bin/make...not found
    Checking for program /opt/intel/oneapi/compiler/2025.0/bin/make...not found
    Checking for program /usr/local/sbin/make...not found
    Checking for program /usr/local/bin/make...not found
    Checking for program /usr/sbin/make...not found
    Checking for program /usr/bin/make...found
              Defined make macro "MAKE_USER" to "make"
=============================================================================================
TESTING: setupGNUMake from config.packages.make(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/make.py:152)
  Setup other GNU make stuff
            Defined make rule "libc" with dependencies "${LIBNAME}(${OBJSC})" and code []
            Defined make rule "libcxx" with dependencies "${LIBNAME}(${OBJSCXX})" and code []
            Defined make rule "libcu" with dependencies "${LIBNAME}(${OBJSCU})" and code []
            Defined make rule "libf" with dependencies "${OBJSF}" and code -${AR} ${AR_FLAGS} ${LIBNAME} ${OBJSF}
            Defined make macro "OMAKE_PRINTDIR" to "/usr/bin/gmake --print-directory"
            Defined make macro "OMAKE" to "/usr/bin/gmake --no-print-directory"
            Defined "OMAKE" to ""/usr/bin/gmake --no-print-directory""
            Defined make macro "MAKE_PAR_OUT_FLG" to "--output-sync=recurse"
=============================================================================================
TESTING: configureMakeNP from config.packages.make(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/make.py:200)
  check no of cores on the build machine [perhaps to do make '-j ncores']
          module multiprocessing found 6 cores: using make_np = 5
            Defined make macro "MAKE_NP" to "5"
            Defined make macro "MAKE_TEST_NP" to "3"
            Defined make macro "MAKE_LOAD" to "9.0"
            Defined make macro "NPMAX" to "6"
    child config.packages.make took 0.007092 seconds
=============================================================================================
TESTING: locateBison from config.packages.bison(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/bison.py:31)
Looking for default Bison executable
    Checking for program /opt/intel/oneapi/mpi/2021.14/bin/bison...not found
    Checking for program /opt/intel/oneapi/mkl/2025.0/bin/bison...not found
    Checking for program /opt/intel/oneapi/dpcpp-ct/2025.0/bin/bison...not found
    Checking for program /opt/intel/oneapi/dev-utilities/2025.0/bin/bison...not found
    Checking for program /opt/intel/oneapi/debugger/2025.0/opt/debugger/bin/bison...not found
    Checking for program /opt/intel/oneapi/compiler/2025.0/bin/bison...not found
    Checking for program /usr/local/sbin/bison...not found
    Checking for program /usr/local/bin/bison...not found
    Checking for program /usr/sbin/bison...not found
    Checking for program /usr/bin/bison...not found
    Checking for program /sbin/bison...not found
    Checking for program /bin/bison...not found
    Checking for program /usr/games/bison...not found
    Checking for program /usr/local/games/bison...not found
    Checking for program /snap/bin/bison...not found
    Checking for program /snap/bin/bison...not found
    Checking for program /srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/lib/petsc/bin/win32fe/bison...not found
    child config.packages.bison took 0.000589 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.sycl(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.sycl(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.sycl took 0.000432 seconds
        Defined "PYTHON_EXE" to ""/usr/bin/python3""
        Defined make macro "PYTHON_EXE" to ""/usr/bin/python3""
Executing: ['/usr/bin/python3', '-c', 'import sysconfig;print(sysconfig.get_python_version())']
stdout: 3.12
Executing: ['/usr/bin/python3', '-c', 'import cython;print(cython.__version__)']
stdout:
Traceback (most recent call last):
  File "<string>", line 1, in <module>
ModuleNotFoundError: No module named 'cython'
      Python being used /usr/bin/python3 does not have the Cython package
Executing: /usr/bin/python3 -c "import numpy"
    child config.packages.python took 0.261391 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.X(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: checkDependencies from config.packages.X(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:988)
  Loop over declared dependencies of package and error if any are missing
=============================================================================================
TESTING: configureLibrary from config.packages.X(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1014)
  Find an installation and check if it can work with PETSc
==================================================================================
          Checking for a functional X
          Checking for library in Compiler specific search X: []
=============================================================================================
TESTING: check from config.libraries(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/libraries.py:186)
  Checks that the library "libName" contains "funcs", and if it does defines HAVE_LIB"libName"
       - libDir may be a list of directories
       - libName may be a list of library names
              Checking for functions [XSetWMName] in library [] []
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.libraries/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
char XSetWMName(void);
static void _check_XSetWMName(void) { XSetWMName(); }

int main(void) {
_check_XSetWMName();
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.libraries/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.libraries/conftest.o 
stdout:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.libraries/conftest.o: in function `main':
conftest.c:(.text+0x16): undefined reference to `XSetWMName'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Possible ERROR while running linker: exit code 1
stderr:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.libraries/conftest.o: in function `main':
conftest.c:(.text+0x16): undefined reference to `XSetWMName'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
          Checking for library in Compiler specific search X: ['libX11.a']
=============================================================================================
TESTING: check from config.libraries(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/libraries.py:186)
  Checks that the library "libName" contains "funcs", and if it does defines HAVE_LIB"libName"
       - libDir may be a list of directories
       - libName may be a list of library names
              Checking for functions [XSetWMName] in library ['libX11.a'] []
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.libraries/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
char XSetWMName(void);
static void _check_XSetWMName(void) { XSetWMName(); }

int main(void) {
_check_XSetWMName();
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.libraries/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.libraries/conftest.o  -lX11 
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
char XSetWMName(void);
static void _check_XSetWMName(void) { XSetWMName(); }
void dummy(void) {_check_XSetWMName();}

Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers  -fPIC -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.compilers/conftest.F90 
Successful compile:
Source:
      program main
      print*,'testing'
      stop
      end
 
Executing: mpiifort -fc=ifx  -o /tmp/petsc-m5p55c3k/config.compilers/conftest    -fPIC -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.o /tmp/petsc-m5p55c3k/config.compilers/confc.o  -lX11 
                Defined "HAVE_LIBX11" to "1"
          Checking for headers ['X11/Xlib.h'] in Compiler specific search X: []
=============================================================================================
TESTING: checkInclude from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:89)
  Checks if a particular include file can be found along particular include paths
Checking for header files ['X11/Xlib.h'] in []
                Checking include with compiler flags var CPPFLAGS []
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <X11/Xlib.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.headers   /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
Found header files ['X11/Xlib.h'] in []
=============================================================================================
TESTING: checkVersion from config.packages.X(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1171)
  Uses self.version, self.minversion, self.maxversion, self.versionname, and self.versioninclude to determine if package has required version
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"

#include "xorg/xorg-server.h"
#include "xorg/xorgVersion.h"

#define  PetscXstr_(s) PetscStr_(s)
#define  PetscStr_(s)  #s
const char *ver = "petscpkgver(" PetscXstr_(XORG_VERSION_MAJOR.XORG_VERSION_MINOR.XORG_VERSION_PATCH.XORG_VERSION_SNAP) ")";

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.packages.X   /tmp/petsc-m5p55c3k/config.packages.X/conftest.c 
Possible ERROR while running preprocessor: exit code 1
stdout:
# 1 "/tmp/petsc-m5p55c3k/config.packages.X/conftest.c"
# 1 "<built-in>" 1
# 1 "<built-in>" 3
# 402 "<built-in>" 3
# 1 "<command line>" 1
# 1 "<built-in>" 2
# 1 "/tmp/petsc-m5p55c3k/config.packages.X/conftest.c" 2
# 1 "/tmp/petsc-m5p55c3k/config.packages.X/confdefs.h" 1
# 2 "/tmp/petsc-m5p55c3k/config.packages.X/conftest.c" 2
# 1 "/tmp/petsc-m5p55c3k/config.packages.X/conffix.h" 1
# 3 "/tmp/petsc-m5p55c3k/config.packages.X/conftest.c" 2






const char *ver = "petscpkgver(" "XORG_VERSION_MAJOR.XORG_VERSION_MINOR.XORG_VERSION_PATCH.XORG_VERSION_SNAP" ")";
stderr:
/tmp/petsc-m5p55c3k/config.packages.X/conftest.c:4:10: fatal error: 'xorg/xorg-server.h' file not found
    4 | #include "xorg/xorg-server.h"
      |          ^~~~~~~~~~~~~~~~~~~~
1 error generated.
Source:
#include "confdefs.h"
#include "conffix.h"

#include "xorg/xorg-server.h"
#include "xorg/xorgVersion.h"

#define  PetscXstr_(s) PetscStr_(s)
#define  PetscStr_(s)  #s
const char *ver = "petscpkgver(" PetscXstr_(XORG_VERSION_MAJOR.XORG_VERSION_MINOR.XORG_VERSION_PATCH.XORG_VERSION_SNAP) ")";

Found the raw version string: (" "XORG_VERSION_MAJOR.XORG_VERSION_MINOR.XORG_VERSION_PATCH.XORG_VERSION_SNAP" ")"
This is the processed version string: XORG_VERSION_MAJOR.XORG_VERSION_MINOR.XORG_VERSION_PATCH.XORG_VERSION_SNAP
For x unable to convert version information (XORG_VERSION_MAJOR.XORG_VERSION_MINOR.XORG_VERSION_PATCH.XORG_VERSION_SNAP) to standard form, skipping version check
=============================================================================================
TESTING: checkSharedLibrary from config.packages.X(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1084)
  By default we don't care about checking if the library is shared
    child config.packages.X took 0.526237 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.hwloc(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.hwloc(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.hwloc took 0.001178 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.hip(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.hip(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.hip took 0.000994 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.thrust(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.thrust(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.thrust took 0.001116 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.cuda(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.cuda(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
=============================================================================================
TESTING: checkKnownBadCUDAHostCompilerCombo from config.packages.cuda(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/cuda.py:483)
  
    Check for nvcc + host compiler combinations that are unable to compile or have some other known
    defect and prints a warning to the user. Has no other effect.

    For example:
    1. CUDA 11.5 + gcc 11.3.0 produces

    /usr/include/c++/11/bits/std_function.h:435:145: error: parameter packs not expanded with '...':
  435 |         function(_Functor&& __f)
      |         ^

    
    child config.packages.cuda took 0.001131 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.OpenMPI(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.OpenMPI(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.OpenMPI took 0.001024 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.MPICH(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.MPICH(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.MPICH took 0.000991 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.MPI(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: checkDependencies from config.packages.MPI(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:988)
  Loop over declared dependencies of package and error if any are missing
=============================================================================================
TESTING: configureLibrary from config.packages.MPI(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/MPI.py:920)
  Calls the regular package configureLibrary and then does an additional test needed by MPI
==================================================================================
            Checking for a functional MPI
            Checking for library in Compiler specific search MPI: []
=============================================================================================
TESTING: check from config.libraries(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/libraries.py:186)
  Checks that the library "libName" contains "funcs", and if it does defines HAVE_LIB"libName"
       - libDir may be a list of directories
       - libName may be a list of library names
                Checking for functions [MPI_Init MPI_Comm_create] in library [] []
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.libraries/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
char MPI_Init(void);
static void _check_MPI_Init(void) { MPI_Init(); }
char MPI_Comm_create(void);
static void _check_MPI_Comm_create(void) { MPI_Comm_create(); }

int main(void) {
_check_MPI_Init();
_check_MPI_Comm_create();
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.libraries/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.libraries/conftest.o 
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
char MPI_Init(void);
static void _check_MPI_Init(void) { MPI_Init(); }
char MPI_Comm_create(void);
static void _check_MPI_Comm_create(void) { MPI_Comm_create(); }
void dummy(void) {_check_MPI_Init();
_check_MPI_Comm_create();}

Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers  -fPIC -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.compilers/conftest.F90 
Successful compile:
Source:
      program main
      print*,'testing'
      stop
      end
 
Executing: mpiifort -fc=ifx  -o /tmp/petsc-m5p55c3k/config.compilers/conftest    -fPIC -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.o /tmp/petsc-m5p55c3k/config.compilers/confc.o 
            Checking for headers ['mpi.h'] in Compiler specific search MPI: []
=============================================================================================
TESTING: checkInclude from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:89)
  Checks if a particular include file can be found along particular include paths
Checking for header files ['mpi.h'] in []
                  Checking include with compiler flags var CPPFLAGS []
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <mpi.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.packages.X -I/tmp/petsc-m5p55c3k/config.headers   /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
Found header files ['mpi.h'] in []
            Defined "HAVE_MPI_F90MODULE_VISIBILITY" to "1"
=============================================================================================
TESTING: checkMPIDistro from config.packages.MPI(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/MPI.py:721)
  Determine if MPICH_NUMVERSION, OMPI_MAJOR_VERSION or MSMPI_VER exist in mpi.h
       Used for consistency checking of MPI installation at compile time
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <mpi.h>
const char *mpich_ver = I_MPI_VERSION;

int main(void) {
  return 0;
}

Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <mpi.h>
const char *mpich_ver = I_MPI_VERSION;

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.packages.X -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.packages.MPI   /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.c 
              Unable to parse I_MPI version from header. Probably a buggy preprocessor
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.c 
stdout:
/tmp/petsc-m5p55c3k/config.packages.MPI/conftest.c:4:17: warning: implicit conversion from 'long' to 'int' changes value from 20211400300 to -1263436180 [-Wconstant-conversion]
    4 | int mpich_ver = I_MPI_NUMVERSION;
      |     ~~~~~~~~~   ^~~~~~~~~~~~~~~~
/opt/intel/oneapi/mpi/2021.14/include/mpi.h:616:26: note: expanded from macro 'I_MPI_NUMVERSION'
  616 | #define I_MPI_NUMVERSION 20211400300
      |                          ^~~~~~~~~~~
1 warning generated.
Possible ERROR while running compiler:exit code 0
stderr:
/tmp/petsc-m5p55c3k/config.packages.MPI/conftest.c:4:17: warning: implicit conversion from 'long' to 'int' changes value from 20211400300 to -1263436180 [-Wconstant-conversion]
    4 | int mpich_ver = I_MPI_NUMVERSION;
      |     ~~~~~~~~~   ^~~~~~~~~~~~~~~~
/opt/intel/oneapi/mpi/2021.14/include/mpi.h:616:26: note: expanded from macro 'I_MPI_NUMVERSION'
  616 | #define I_MPI_NUMVERSION 20211400300
      |                          ^~~~~~~~~~~
1 warning generated.
Source:
#include "confdefs.h"
#include "conffix.h"
#include <mpi.h>
int mpich_ver = I_MPI_NUMVERSION;

int main(void) {
  return 0;
}

Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <mpi.h>
int mpich_ver = I_MPI_NUMVERSION;

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.packages.X -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.packages.MPI   /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.c 
                Defined "HAVE_I_MPI_NUMVERSION" to "20211400300"
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.c 
stdout:
/tmp/petsc-m5p55c3k/config.packages.MPI/conftest.c:4:17: error: use of undeclared identifier 'MVAPICH2_NUMVERSION'
    4 | int mpich_ver = MVAPICH2_NUMVERSION;
      |                 ^
1 error generated.
Possible ERROR while running compiler: exit code 1
stderr:
/tmp/petsc-m5p55c3k/config.packages.MPI/conftest.c:4:17: error: use of undeclared identifier 'MVAPICH2_NUMVERSION'
    4 | int mpich_ver = MVAPICH2_NUMVERSION;
      |                 ^
1 error generated.
Source:
#include "confdefs.h"
#include "conffix.h"
#include <mpi.h>
int mpich_ver = MVAPICH2_NUMVERSION;

int main(void) {
  return 0;
}

Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <mpi.h>
int mpich_ver = MPICH_NUMVERSION;

int main(void) {
  return 0;
}

Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <mpi.h>
int mpich_ver = MPICH_NUMVERSION;

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.packages.X -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.packages.MPI   /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.c 
                Defined "HAVE_MPICH_NUMVERSION" to "30400002"
=============================================================================================
TESTING: configureMPI2 from config.packages.MPI(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/MPI.py:395)
  Check for functions added to the interface in MPI-2
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <mpi.h>

int main(void) {

      int a,b,c,d,flag,sendbuf[1]={1},recvbuf[1]={2};
      MPI_Datatype newtype;
      if (MPI_Allreduce(MPI_IN_PLACE,0,1,MPI_INT,MPI_SUM,MPI_COMM_SELF)) return 0;
      if (MPI_Finalized(&flag)) return 0;
      if (MPI_Type_dup(MPI_INT,&newtype)) return 0;
      if (MPI_Exscan(sendbuf,recvbuf,1,MPI_INT,MPI_SUM,MPI_COMM_WORLD)) return 0;
      if (MPI_Reduce_scatter(sendbuf,recvbuf,sendbuf,MPI_INT,MPI_SUM,MPI_COMM_WORLD)) return 0;
      if (MPI_Type_get_envelope(MPI_INT,&a,&b,&c,&d)) return 0;
    
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.packages.MPI/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.o  
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <mpi.h>

int main(void) {
int count=2; int blocklens[2]={0,1}; MPI_Aint indices[2]={0,1}; MPI_Datatype old_types[2]={MPI_INT,MPI_DOUBLE}; MPI_Datatype *newtype = 0;
                                              if (MPI_Type_create_struct(count, blocklens, indices, old_types, newtype)) { }

  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.packages.MPI/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.o  
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <mpi.h>

int main(void) {
MPI_Comm_errhandler_fn * p_err_fun = 0; MPI_Errhandler * p_errhandler = 0; if (MPI_Comm_create_errhandler(p_err_fun,p_errhandler)) { }

  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.packages.MPI/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.o  
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <mpi.h>

int main(void) {
if (MPI_Comm_set_errhandler(MPI_COMM_WORLD,MPI_ERRORS_RETURN)) { }

  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.packages.MPI/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.o  
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <mpi.h>

int main(void) {
if (MPI_Reduce_local(0, 0, 0, MPI_INT, MPI_SUM)) { }

  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.packages.MPI/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.o  
                Defined "HAVE_MPI_REDUCE_LOCAL" to "1"
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <mpi.h>

int main(void) {
char version[MPI_MAX_LIBRARY_VERSION_STRING];int verlen;if (MPI_Get_library_version(version,&verlen)) { }

  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.packages.MPI/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.o  
                Defined "HAVE_MPI_GET_LIBRARY_VERSION" to "1"
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <mpi.h>

int main(void) {
int base[100]; MPI_Win win = 0; if (MPI_Win_create(base,100,4,MPI_INFO_NULL,MPI_COMM_WORLD,&win)) { }
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.packages.MPI/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.o  
                Defined "HAVE_MPI_WIN_CREATE" to "1"
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <mpi.h>

int main(void) {
int ptr[1] = {0}; MPI_Win win = 0; if (MPI_Accumulate(ptr,1,MPI_INT,0,0,1,MPI_INT,MPI_REPLACE,win)) { }
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.packages.MPI/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.o  
                Defined "HAVE_MPI_ONE_SIDED" to "1"
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <mpi.h>

int main(void) {
int provided; if (MPI_Init_thread(0,0,MPI_THREAD_FUNNELED,&provided)) return 0;
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.packages.MPI/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.o  
                Defined "HAVE_MPI_INIT_THREAD" to "1"
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <mpi.h>

int main(void) {

     int sendbuf[2] = {1,2};
     int recvbuf[1];
     if (MPI_Reduce_scatter_block(sendbuf,recvbuf,1,MPI_INT,MPI_SUM,MPI_COMM_WORLD)) return 0;
    
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.packages.MPI/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.o  
                Defined "HAVE_MPI_REDUCE_SCATTER_BLOCK" to "1"
=============================================================================================
TESTING: configureMPI3 from config.packages.MPI(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/MPI.py:454)
  Check for functions added to the interface in MPI-3
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <mpi.h>

int main(void) {
MPI_Comm scomm; MPI_Aint size=128; int disp_unit=8,*baseptr; MPI_Win win;
                       if (MPI_Comm_split_type(MPI_COMM_WORLD, MPI_COMM_TYPE_SHARED, 0, MPI_INFO_NULL, &scomm)) { }
                       if (MPI_Win_allocate_shared(size,disp_unit,MPI_INFO_NULL,MPI_COMM_WORLD,&baseptr,&win)) { }
                       if (MPI_Win_shared_query(win,0,&size,&disp_unit,&baseptr)) { }

  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.packages.MPI/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.o  
                Defined "HAVE_MPI_PROCESS_SHARED_MEMORY" to "1"
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <mpi.h>

int main(void) {

                        int send=0,recv,counts[2]={1,1},displs[2]={1,2}; MPI_Request req;
                        if (MPI_Iscatter(&send,1,MPI_INT,&recv,1,MPI_INT,0,MPI_COMM_WORLD,&req)) return 0;
                        if (MPI_Iscatterv(&send,counts,displs,MPI_INT,&recv,1,MPI_INT,0,MPI_COMM_WORLD,&req)) return 0;
                        if (MPI_Igather(&send,1,MPI_INT,&recv,1,MPI_INT,0,MPI_COMM_WORLD,&req)) return 0;
                        if (MPI_Igatherv(&send,1,MPI_INT,&recv,counts,displs,MPI_INT,0,MPI_COMM_WORLD,&req)) return 0;
                        if (MPI_Iallgather(&send,1,MPI_INT,&recv,1,MPI_INT,MPI_COMM_WORLD,&req)) return 0;
                        if (MPI_Iallgatherv(&send,1,MPI_INT,&recv,counts,displs,MPI_INT,MPI_COMM_WORLD,&req)) return 0;
                        if (MPI_Ialltoall(&send,1,MPI_INT,&recv,1,MPI_INT,MPI_COMM_WORLD,&req)) return 0;
                        if (MPI_Iallreduce(&send,&recv,1,MPI_INT,MPI_SUM,MPI_COMM_WORLD,&req)) return 0;
                        if (MPI_Ibarrier(MPI_COMM_WORLD,&req)) return 0;
                      
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.packages.MPI/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.o  
                Defined "HAVE_MPI_NONBLOCKING_COLLECTIVES" to "1"
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <mpi.h>

int main(void) {
MPI_Comm distcomm; 
                       MPI_Request req; 
                       if (MPI_Dist_graph_create_adjacent(MPI_COMM_WORLD,0,0,MPI_WEIGHTS_EMPTY,0,0,MPI_WEIGHTS_EMPTY,MPI_INFO_NULL,0,&distcomm)) { }
                       if (MPI_Neighbor_alltoallv(0,0,0,MPI_INT,0,0,0,MPI_INT,distcomm)) { }
                       if (MPI_Ineighbor_alltoallv(0,0,0,MPI_INT,0,0,0,MPI_INT,distcomm,&req)) { }

  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.packages.MPI/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.o  
                Defined "HAVE_MPI_NEIGHBORHOOD_COLLECTIVES" to "1"
                Checking for functions [yaksuri_cudai_unpack_wchar_t] in library [] []
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.packages.MPI  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.libraries/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
char yaksuri_cudai_unpack_wchar_t(void);
static void _check_yaksuri_cudai_unpack_wchar_t(void) { yaksuri_cudai_unpack_wchar_t(); }

int main(void) {
_check_yaksuri_cudai_unpack_wchar_t();
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.libraries/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.libraries/conftest.o  
stdout:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.libraries/conftest.o: in function `main':
conftest.c:(.text+0x16): undefined reference to `yaksuri_cudai_unpack_wchar_t'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Possible ERROR while running linker: exit code 1
stderr:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.libraries/conftest.o: in function `main':
conftest.c:(.text+0x16): undefined reference to `yaksuri_cudai_unpack_wchar_t'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.packages.MPI  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <mpi.h>

int main(void) {
int ptr[1] = {0}; MPI_Win win = 0; if (MPI_Get_accumulate(ptr,1,MPI_INT,ptr,1,MPI_INT,0,0,1,MPI_INT,MPI_SUM,win)) { }

  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.packages.MPI/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.o  
                Defined "HAVE_MPI_GET_ACCUMULATE" to "1"
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.packages.MPI  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <mpi.h>

int main(void) {
int ptr[1]; MPI_Win win = 0; MPI_Request req; if (MPI_Rget(ptr,1,MPI_INT,0,1,1,MPI_INT,win,&req)) { }

  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.packages.MPI/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.o  
                Defined "HAVE_MPI_RGET" to "1"
=============================================================================================
TESTING: configureMPI4 from config.packages.MPI(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/MPI.py:522)
  Check for functions added to the interface in MPI-4
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.packages.MPI  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <mpi.h>

int main(void) {

      int         buf[1]={0},dest=1,source=1,tag=0;
      MPI_Count   count=1;
      MPI_Request req;
      MPI_Status  stat;
      if (MPI_Send_c(buf,count,MPI_INT,dest,tag,MPI_COMM_WORLD)) return 1;
      if (MPI_Send_init_c(buf,count,MPI_INT,dest,tag,MPI_COMM_WORLD,&req)) return 1;
      if (MPI_Isend_c(buf,count,MPI_INT,dest,tag,MPI_COMM_WORLD,&req)) return 1;
      if (MPI_Recv_c(buf,count,MPI_INT,source,tag,MPI_COMM_WORLD,&stat)) return 1;
      if (MPI_Recv_init_c(buf,count,MPI_INT,source,tag,MPI_COMM_WORLD,&req)) return 1;
      if (MPI_Irecv_c(buf,count,MPI_INT,source,tag,MPI_COMM_WORLD,&req)) return 1;
      if (MPI_Neighbor_alltoallv_c(0,0,0,MPI_INT,0,0,0,MPI_INT,MPI_COMM_WORLD)) return 1;
      if (MPI_Ineighbor_alltoallv_c(0,0,0,MPI_INT,0,0,0,MPI_INT,MPI_COMM_WORLD,&req)) return 1;
    if (MPI_Reduce_local_c(0,0,0,MPI_INT,MPI_SUM)) return 1;

  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.packages.MPI/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.o  
                Defined "HAVE_MPI_LARGE_COUNT" to "1"
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.packages.MPI  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.c 
stdout:
/tmp/petsc-m5p55c3k/config.packages.MPI/conftest.c:9:82: warning: variable 'info' is uninitialized when used here [-Wuninitialized]
    9 |       if (MPI_Neighbor_alltoallv_init(0,0,0,MPI_INT,0,0,0,MPI_INT,MPI_COMM_WORLD,info,&req)) return 1;
      |                                                                                  ^~~~
/tmp/petsc-m5p55c3k/config.packages.MPI/conftest.c:8:23: note: initialize the variable 'info' to silence this warning
    8 |       MPI_Info    info;
      |                       ^
      |                        = 0
1 warning generated.
Possible ERROR while running compiler:exit code 0
stderr:
/tmp/petsc-m5p55c3k/config.packages.MPI/conftest.c:9:82: warning: variable 'info' is uninitialized when used here [-Wuninitialized]
    9 |       if (MPI_Neighbor_alltoallv_init(0,0,0,MPI_INT,0,0,0,MPI_INT,MPI_COMM_WORLD,info,&req)) return 1;
      |                                                                                  ^~~~
/tmp/petsc-m5p55c3k/config.packages.MPI/conftest.c:8:23: note: initialize the variable 'info' to silence this warning
    8 |       MPI_Info    info;
      |                       ^
      |                        = 0
1 warning generated.
Source:
#include "confdefs.h"
#include "conffix.h"
#include <mpi.h>

int main(void) {

      MPI_Request req;
      MPI_Info    info;
      if (MPI_Neighbor_alltoallv_init(0,0,0,MPI_INT,0,0,0,MPI_INT,MPI_COMM_WORLD,info,&req)) return 1;
    
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.packages.MPI/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.o  
                Defined "HAVE_MPI_PERSISTENT_NEIGHBORHOOD_COLLECTIVES" to "1"
=============================================================================================
TESTING: configureMPIX from config.packages.MPI(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/MPI.py:560)
  Check for experimental functions added by MPICH or Open MPI as MPIX
=============================================================================================
TESTING: configureMPIEXEC from config.packages.MPI(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/MPI.py:201)
  Checking for location of mpiexec
    Checking for program /opt/intel/oneapi/mpi/2021.14/bin/mpiexec...found
    Checking for program /opt/intel/oneapi/mpi/2021.14/bin/mpiexec...found
Running Executable with threads to time it out at 120
Executing: mpiexec -n 1 printenv
stdout:
LESSOPEN=| /usr/bin/lesspipe %s
LIBRARY_PATH=/opt/intel/oneapi/tcm/1.2/lib:/opt/intel/oneapi/umf/0.9/lib:/opt/intel/oneapi/tbb/2022.0/env/../lib/intel64/gcc4.8:/opt/intel/oneapi/pti/0.10/lib:/opt/intel/oneapi/mpi/2021.14/lib:/opt/intel/oneapi/mkl/2025.0/lib:/opt/intel/oneapi/ipp/2022.0/lib:/opt/intel/oneapi/dal/2025.0/lib/intel64:/opt/intel/oneapi/compiler/2025.0/lib:/opt/intel/oneapi/ccl/2021.14/lib/
CMPLR_ROOT=/opt/intel/oneapi/compiler/2025.0
TCM_ROOT=/opt/intel/oneapi/tcm/1.2
USER=dhyan
XDG_SESSION_TYPE=x11
INTEL_PYTHONHOME=/opt/intel/oneapi/debugger/2025.0/opt/debugger
CLUTTER_DISABLE_MIPMAPPED_TEXT=1
SHLVL=1
LD_LIBRARY_PATH=/opt/intel/oneapi/tcm/1.2/lib:/opt/intel/oneapi/umf/0.9/lib:/opt/intel/oneapi/tbb/2022.0/env/../lib/intel64/gcc4.8:/opt/intel/oneapi/pti/0.10/lib:/opt/intel/oneapi/mpi/2021.14/opt/mpi/libfabric/lib:/opt/intel/oneapi/mpi/2021.14/lib:/opt/intel/oneapi/mkl/2025.0/lib:/opt/intel/oneapi/ipp/2022.0/lib:/opt/intel/oneapi/debugger/2025.0/opt/debugger/lib:/opt/intel/oneapi/dal/2025.0/lib/intel64:/opt/intel/oneapi/compiler/2025.0/opt/compiler/lib:/opt/intel/oneapi/compiler/2025.0/lib:/opt/intel/oneapi/ccl/2021.14/lib/:/home/dhyan/petsc/arch-linux-c-opt/lib:/home/dhyan/slepc/arch-linux-c-opt/lib:
HOME=/home/dhyan
DESKTOP_SESSION=ubuntu
GNOME_SHELL_SESSION_MODE=ubuntu
GTK_MODULES=gail:atk-bridge
IPPROOT=/opt/intel/oneapi/ipp/2022.0
OCL_ICD_FILENAMES=/opt/intel/oneapi/compiler/2025.0/lib/libintelocl.so
SYSTEMD_EXEC_PID=3084
GSM_SKIP_SSH_AGENT_WORKAROUND=true
DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1001/bus
TBBROOT=/opt/intel/oneapi/tbb/2022.0/env/..
COLORTERM=truecolor
DIAGUTIL_PATH=/opt/intel/oneapi/dpcpp-ct/2025.0/etc/dpct/sys_check/sys_check.sh:/opt/intel/oneapi/compiler/2025.0/etc/compiler/sys_check/sys_check.sh
DEBUGINFOD_URLS=https://debuginfod.ubuntu.com 
INFOPATH=/opt/intel/oneapi/debugger/2025.0/share/info
LOGNAME=dhyan
DPL_ROOT=/opt/intel/oneapi/dpl/2022.7
DAL_MAJOR_BINARY=3
_=/usr/bin/python3
PKG_CONFIG_PATH=/opt/intel/oneapi/tbb/2022.0/env/../lib/pkgconfig:/opt/intel/oneapi/mpi/2021.14/lib/pkgconfig:/opt/intel/oneapi/mkl/2025.0/lib/pkgconfig:/opt/intel/oneapi/dpl/2022.7/lib/pkgconfig:/opt/intel/oneapi/dal/2025.0/lib/pkgconfig:/opt/intel/oneapi/compiler/2025.0/lib/pkgconfig:/opt/intel/oneapi/ccl/2021.14/lib/pkgconfig/
MEMORY_PRESSURE_WATCH=/sys/fs/cgroup/user.slice/user-1001.slice/user@1001.service/session.slice/org.gnome.Shell@x11.service/memory.pressure
XDG_SESSION_CLASS=user
USERNAME=dhyan
TERM=xterm-256color
COLUMNS=80
GNOME_DESKTOP_SESSION_ID=this-is-deprecated
WINDOWPATH=2
GDB_INFO=/opt/intel/oneapi/debugger/2025.0/share/info/
PATH=/opt/intel/oneapi/mpi/2021.14/bin:/opt/intel/oneapi/mkl/2025.0/bin:/opt/intel/oneapi/dpcpp-ct/2025.0/bin:/opt/intel/oneapi/dev-utilities/2025.0/bin:/opt/intel/oneapi/debugger/2025.0/opt/debugger/bin:/opt/intel/oneapi/compiler/2025.0/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin
SESSION_MANAGER=local/chrysoprase:@/tmp/.ICE-unix/3038,unix/chrysoprase:/tmp/.ICE-unix/3038
ONEAPI_ROOT=/opt/intel/oneapi
CCL_CONFIGURATION=cpu_gpu_dpcpp
XDG_MENU_PREFIX=gnome-
GNOME_TERMINAL_SCREEN=/org/gnome/Terminal/screen/b9ade34c_f0f7_43d8_b44c_ceef1c1f6fb8
DALROOT=/opt/intel/oneapi/dal/2025.0
UMF_ROOT=/opt/intel/oneapi/umf/0.9
XDG_RUNTIME_DIR=/run/user/1001
DISPLAY=:1
CCL_ROOT=/opt/intel/oneapi/ccl/2021.14
LANG=en_US.UTF-8
XDG_CURRENT_DESKTOP=ubuntu:GNOME
XMODIFIERS=@im=ibus
XDG_SESSION_DESKTOP=ubuntu
XAUTHORITY=/run/user/1001/gdm/Xauthority
LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=00:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.avif=01;35:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:*~=00;90:*#=00;90:*.bak=00;90:*.crdownload=00;90:*.dpkg-dist=00;90:*.dpkg-new=00;90:*.dpkg-old=00;90:*.dpkg-tmp=00;90:*.old=00;90:*.orig=00;90:*.part=00;90:*.rej=00;90:*.rpmnew=00;90:*.rpmorig=00;90:*.rpmsave=00;90:*.swp=00;90:*.tmp=00;90:*.ucf-dist=00;90:*.ucf-new=00;90:*.ucf-old=00;90:
GNOME_TERMINAL_SERVICE=:1.354
SSH_AUTH_SOCK=/run/user/1001/keyring/ssh
SHELL=/bin/bash
CCL_CONFIGURATION_PATH=
Pti_DIR=/opt/intel/oneapi/pti/0.10/lib/cmake/pti
QT_ACCESSIBILITY=1
DAL_MINOR_BINARY=0
GDMSESSION=ubuntu
LESSCLOSE=/usr/bin/lesspipe %s %s
MKLROOT=/opt/intel/oneapi/mkl/2025.0
GPG_AGENT_INFO=/run/user/1001/gnupg/S.gpg-agent:0:1
SETVARS_COMPLETED=1
IPP_TARGET_ARCH=intel64
CLASSPATH=/opt/intel/oneapi/mpi/2021.14/share/java/mpi.jar
NLSPATH=/opt/intel/oneapi/compiler/2025.0/lib/compiler/locale/%l_%t/%N
QT_IM_MODULE=ibus
FI_PROVIDER_PATH=/opt/intel/oneapi/mpi/2021.14/opt/mpi/libfabric/lib/prov:/usr/lib/x86_64-linux-gnu/libfabric
PWD=/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4
XDG_CONFIG_DIRS=/etc/xdg/xdg-ubuntu:/etc/xdg
XDG_DATA_DIRS=/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop
I_MPI_ROOT=/opt/intel/oneapi/mpi/2021.14
LINES=24
CPATH=/opt/intel/oneapi/umf/0.9/include:/opt/intel/oneapi/tbb/2022.0/env/../include:/opt/intel/oneapi/pti/0.10/include:/opt/intel/oneapi/mpi/2021.14/include:/opt/intel/oneapi/mkl/2025.0/include:/opt/intel/oneapi/ipp/2022.0/include:/opt/intel/oneapi/dpl/2022.7/include:/opt/intel/oneapi/dpcpp-ct/2025.0/include:/opt/intel/oneapi/dev-utilities/2025.0/include:/opt/intel/oneapi/dal/2025.0/include:/opt/intel/oneapi/ccl/2021.14/include
MEMORY_PRESSURE_WRITE=c29tZSAyMDAwMDAgMjAwMDAwMAA=
MANPATH=/opt/intel/oneapi/mpi/2021.14/share/man:/opt/intel/oneapi/debugger/2025.0/share/man:/opt/intel/oneapi/compiler/2025.0/share/man:
VTE_VERSION=7600
CMAKE_PREFIX_PATH=/opt/intel/oneapi/tbb/2022.0/env/..:/opt/intel/oneapi/pti/0.10/lib/cmake/pti:/opt/intel/oneapi/mkl/2025.0/lib/cmake:/opt/intel/oneapi/ipp/2022.0/lib/cmake/ipp:/opt/intel/oneapi/dpl/2022.7/lib/cmake/oneDPL:/opt/intel/oneapi/dal/2025.0:/opt/intel/oneapi/compiler/2025.0
HYDRA_BSTRAP_PGID=0
HYDRA_BSTRAP_PROXY_ID=0
HYDRA_BSTRAP_NODE_ID=0
HYDRA_BSTRAP_UPSTREAM_FD=7
HYDRA_BSTRAP_SUBTREE_SIZE=1
HYDRA_BSTRAP_TREE_WIDTH=16
HYDRA_BSTRAP_NUM_DOWNSTREAM_PROXIES=0
HYDRA_BSTRAP_DOWNSTREAM_CONTROL=
HYDRA_BSTRAP_DOWNSTREAM_STDOUT=
HYDRA_BSTRAP_DOWNSTREAM_STDERR=
HYDRA_BSTRAP_DOWNSTREAM_PID=
HYDRA_BSTRAP_LOCALHOST=chrysoprase
HYDRA_BSTRAP_DEBUG=0
HYDRA_BSTRAP_NUM_LAUNCHES=-1
HYDRA_IP_VERSION=2
HYDRA_BSTRAP_DOWNSTREAM_HOSTS=
HYDRA_BSTRAP_LAUNCHER=ssh
HYDRA_LAUNCH_TYPE=2
I_MPI_HYDRA_TOPOLIB=hwloc
I_MPI_INFO_NUMA_NODE_NUM=1
I_MPI_INFO_NUMA_NODE_MAP=
PMI_SIZE=1
PMI_RANK=0
PMI_FD=9
MPI_LOCALNRANKS=1
MPI_LOCALRANKID=0
GFORTRAN_UNBUFFERED_PRECONNECTED=y
I_MPI_HYDRA_UUID=310f0100-d959-bd11-a13c-0600455b1660
I_MPI_INTERNAL_MEM_POLICY=default
I_MPI_BIND_WIN_ALLOCATE=localalloc
I_MPI_INFO_STATE=0
I_MPI_INFO_MODE=263
I_MPI_INFO_VEND=1
I_MPI_INFO_FLGB=14251
I_MPI_INFO_FLGC=2147417087
I_MPI_INFO_FLGD=-1075053569
I_MPI_INFO_FLGCEXT=0
I_MPI_INFO_FLGDEXT=-1677720576
I_MPI_INFO_DESC=1342177285
I_MPI_INFO_BRAND=Intel(R) Xeon(R) 
I_MPI_INFO_SERIAL=E5-1650 v3 
I_MPI_INFO_C_NAME=Unknown
I_MPI_INFO_SIGN=198386
I_MPI_INFO_LCPU=6
I_MPI_INFO_PACK=0,0,0,0,0,0
I_MPI_INFO_CORE=0,1,2,3,4,5
I_MPI_INFO_THREAD=0,0,0,0,0,0
I_MPI_INFO_CACHE1=0,1,2,3,4,5
I_MPI_INFO_CACHE2=0,1,2,3,4,5
I_MPI_INFO_CACHE3=0,0,0,0,0,0
I_MPI_INFO_CACHES=3
I_MPI_INFO_CACHE_SHARE=2,2,16
I_MPI_INFO_CACHE_SIZE=32768,262144,15728640
I_MPI_INFO_NC=6
I_MPI_INFO_NP=1
I_MPI_PIN_MAPPING=1:0 0
I_MPI_PIN_INFO=x0,1,2,3,4,5
I_MPI_RETURN_WIN_MEM_NUMA=-1,0
                Defined make macro "MPIEXEC" to "/opt/intel/oneapi/mpi/2021.14/bin/mpiexec"
    Checking for program /usr/libexec/ApplicationFirewall/socketfilterfw...not found
    Checking for program /srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/lib/petsc/bin/win32fe/socketfilterfw...not found
  Unable to find programs: ['socketfilterfw'] in listing of the specific search path: ['/usr/libexec/ApplicationFirewall']
      Warning accessing /usr/libexec/ApplicationFirewall gives errors: [Errno 2] No such file or directory: '/usr/libexec/ApplicationFirewall'
    Checking for program /opt/intel/oneapi/mpi/2021.14/bin/hostname...not found
    Checking for program /opt/intel/oneapi/mkl/2025.0/bin/hostname...not found
    Checking for program /opt/intel/oneapi/dpcpp-ct/2025.0/bin/hostname...not found
    Checking for program /opt/intel/oneapi/dev-utilities/2025.0/bin/hostname...not found
    Checking for program /opt/intel/oneapi/debugger/2025.0/opt/debugger/bin/hostname...not found
    Checking for program /opt/intel/oneapi/compiler/2025.0/bin/hostname...not found
    Checking for program /usr/local/sbin/hostname...not found
    Checking for program /usr/local/bin/hostname...not found
    Checking for program /usr/sbin/hostname...not found
    Checking for program /usr/bin/hostname...found
                  Defined make macro "HOSTNAME" to "hostname"
Running Executable with threads to time it out at 60
Executing: hostname
stdout: chrysoprase
              Return code from hostname: 0

              Hostname works, running network checks
    Checking for program /sbin/ping...not found
    Checking for program /opt/intel/oneapi/mpi/2021.14/bin/ping...not found
    Checking for program /opt/intel/oneapi/mkl/2025.0/bin/ping...not found
    Checking for program /opt/intel/oneapi/dpcpp-ct/2025.0/bin/ping...not found
    Checking for program /opt/intel/oneapi/dev-utilities/2025.0/bin/ping...not found
    Checking for program /opt/intel/oneapi/debugger/2025.0/opt/debugger/bin/ping...not found
    Checking for program /opt/intel/oneapi/compiler/2025.0/bin/ping...not found
    Checking for program /usr/local/sbin/ping...not found
    Checking for program /usr/local/bin/ping...not found
    Checking for program /usr/sbin/ping...not found
    Checking for program /usr/bin/ping...found
                  Defined make macro "PING" to "ping"
Running Executable with threads to time it out at 60
Executing: ping -c 2 chrysoprase
stdout:
PING chrysoprase (::1) 56 data bytes
64 bytes from ip6-localhost (::1): icmp_seq=1 ttl=64 time=0.023 ms
64 bytes from ip6-localhost (::1): icmp_seq=2 ttl=64 time=0.019 ms
--- chrysoprase ping statistics ---
2 packets transmitted, 2 received, 0% packet loss, time 1018ms
rtt min/avg/max/mdev = 0.019/0.021/0.023/0.002 ms
              Return code from ping: 0

=============================================================================================
======== Checking running linked program
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.packages.MPI  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <mpi.h>

int main(void) {
MPI_Init(0,0);
MPI_Finalize();

  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.packages.MPI/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.o 
Testing executable /tmp/petsc-m5p55c3k/config.packages.MPI/conftest to see if it can be run
Executing: /opt/intel/oneapi/mpi/2021.14/bin/mpiexec -n 1 /tmp/petsc-m5p55c3k/config.packages.MPI/conftest
Running Executable with threads to time it out at 120
Executing: /opt/intel/oneapi/mpi/2021.14/bin/mpiexec -n 1 /tmp/petsc-m5p55c3k/config.packages.MPI/conftest
=============================================================================================
TESTING: configureMPIEXEC_TAIL from config.packages.MPI(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/MPI.py:190)
  Checking for location of mpiexec_tail
                Defined make macro "MPIEXEC_TAIL" to ""
=============================================================================================
TESTING: configureMPITypes from config.packages.MPI(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/MPI.py:606)
  Checking for MPI Datatype handles
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.packages.MPI  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <stdlib.h>
#include <mpi.h>

int main(void) {
int size;
int ierr;
MPI_Init(0,0);
ierr = MPI_Type_size(MPI_LONG_DOUBLE, &size);
if(ierr || (size == 0)) exit(1);
MPI_Finalize();

  return 0;
}

                Defined "HAVE_MPI_LONG_DOUBLE" to "1"
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.packages.MPI  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <stdlib.h>
#include <mpi.h>

int main(void) {
int size;
int ierr;
MPI_Init(0,0);
ierr = MPI_Type_size(MPI_INT64_T, &size);
if(ierr || (size == 0)) exit(1);
MPI_Finalize();

  return 0;
}

                Defined "HAVE_MPI_INT64_T" to "1"
=============================================================================================
TESTING: SGIMPICheck from config.packages.MPI(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/MPI.py:650)
  Returns true if SGI MPI is used
                Checking for functions [MPI_SGI_barrier] in library [] []
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.packages.MPI  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.libraries/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
char MPI_SGI_barrier(void);
static void _check_MPI_SGI_barrier(void) { MPI_SGI_barrier(); }

int main(void) {
_check_MPI_SGI_barrier();
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.libraries/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.libraries/conftest.o 
stdout:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.libraries/conftest.o: in function `main':
conftest.c:(.text+0x16): undefined reference to `MPI_SGI_barrier'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Possible ERROR while running linker: exit code 1
stderr:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.libraries/conftest.o: in function `main':
conftest.c:(.text+0x16): undefined reference to `MPI_SGI_barrier'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
              SGI MPI test failure
=============================================================================================
TESTING: CxxMPICheck from config.packages.MPI(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/MPI.py:660)
  Make sure C++ can compile and link
Checking for header mpi.h
Checking for C++ MPI_Finalize()
                Checking for functions [MPI_Finalize] in library [] []
Executing: mpiicpc -cxx=icpx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/config.libraries  -Wall -Wwrite-strings -Wno-strict-aliasing -Wno-unknown-pragmas -fstack-protector -fvisibility=hidden -O2 -march=native -mtune=native  -std=gnu++20 -fPIC   /tmp/petsc-m5p55c3k/config.libraries/conftest.cc 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
#include <mpi.h>
static void _check_MPI_Finalize(void) { int ierr;
ierr = MPI_Finalize();
(void)ierr; }

int main(void) {
_check_MPI_Finalize();
  return 0;
}

Executing: mpiicpc -cxx=icpx  -o /tmp/petsc-m5p55c3k/config.libraries/conftest    -Wall -Wwrite-strings -Wno-strict-aliasing -Wno-unknown-pragmas -fstack-protector -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.libraries/conftest.o 
=============================================================================================
TESTING: FortranMPICheck from config.packages.MPI(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/MPI.py:676)
  Make sure fortran include [mpif.h] and library symbols are found
Checking for fortran mpi_init()
                Checking for functions [] in library [] []
Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.libraries  -fPIC -O2 -march=native -mtune=native    /tmp/petsc-m5p55c3k/config.libraries/conftest.F90 
Successful compile:
Source:
      program main
#include "mpif.h"
       integer ierr
       call mpi_init(ierr)
      end

Executing: mpiifort -fc=ifx  -o /tmp/petsc-m5p55c3k/config.libraries/conftest    -fPIC -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.libraries/conftest.o 
Checking for mpi.mod
                Checking for functions [] in library [] []
Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.libraries  -fPIC -O2 -march=native -mtune=native    /tmp/petsc-m5p55c3k/config.libraries/conftest.F90 
Successful compile:
Source:
      program main
       use mpi
       integer(kind=selected_int_kind(5)) ierr,rank
       call mpi_init(ierr)
       call mpi_comm_rank(MPI_COMM_WORLD,rank,ierr)

      end

Executing: mpiifort -fc=ifx  -o /tmp/petsc-m5p55c3k/config.libraries/conftest    -fPIC -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.libraries/conftest.o 
                Defined "HAVE_MPI_F90MODULE" to "1"
=============================================================================================
TESTING: configureIO from config.packages.MPI(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/MPI.py:697)
  Check for the functions in MPI/IO
       - Define HAVE_MPIIO if they are present
       - Some older MPI 1 implementations are missing these
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.packages.MPI  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <mpi.h>

int main(void) {
MPI_Aint lb, extent;
if (MPI_Type_get_extent(MPI_INT, &lb, &extent)) { }

                                                 MPI_File fh = 0;
void *buf = 0;
MPI_Status status;
if (MPI_File_write_all(fh, buf, 1, MPI_INT, &status)) { }

                                                 if (MPI_File_read_all(fh, buf, 1, MPI_INT, &status)) { }

                                                 MPI_Offset disp = 0;
MPI_Info info = 0;
if (MPI_File_set_view(fh, disp, MPI_INT, MPI_INT, "", info)) { }

                                                 if (MPI_File_open(MPI_COMM_SELF, "", 0, info, &fh)) { }

                                                 if (MPI_File_close(&fh)) { }

  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.packages.MPI/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.o  
                Defined "HAVE_MPIIO" to "1"
=============================================================================================
TESTING: findMPIIncludeAndLib from config.packages.MPI(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/MPI.py:810)
  Find MPI include paths and libraries from "mpicc -show" or Cray "cc --cray-print-opts=cflags/libs" and save.
=============================================================================================
TESTING: PetscArchMPICheck from config.packages.MPI(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/MPI.py:894)
  Check that previously configured for MPI include files are not in the PETSC_ARCH directory
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.packages.MPI  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <mpi.h>

int main(void) {
int combiner = MPI_COMBINER_DUP;(void)combiner;
  return 0;
}

            Defined "HAVE_MPI_COMBINER_DUP" to "1"
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.packages.MPI  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <mpi.h>

int main(void) {
int combiner = MPI_COMBINER_CONTIGUOUS;(void)combiner;
  return 0;
}

            Defined "HAVE_MPI_COMBINER_CONTIGUOUS" to "1"
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.packages.MPI  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <mpi.h>

int main(void) {
int combiner = MPI_COMBINER_NAMED;(void)combiner;
  return 0;
}

            Defined "HAVE_MPI_COMBINER_NAMED" to "1"
=============================================================================================
TESTING: checkVersion from config.packages.MPI(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1171)
  Uses self.version, self.minversion, self.maxversion, self.versionname, and self.versioninclude to determine if package has required version
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"

#include "mpi.h"

#define  PetscXstr_(s) PetscStr_(s)
#define  PetscStr_(s)  #s
const char *ver = "petscpkgver(" PetscXstr_(MPI_VERSION) ")";

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.packages.X -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.packages.MPI   /tmp/petsc-m5p55c3k/config.packages.MPI/conftest.c 
Found the raw version string: (" "3" ")"
This is the processed version string: 3
For mpi need 2 <= 3 <= 
=============================================================================================
TESTING: checkSharedLibrary from config.packages.MPI(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1084)
  By default we don't care about checking if the library is shared
    child config.packages.MPI took 6.128058 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.zstd(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.zstd(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.zstd took 0.001209 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.yaml(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.yaml(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.yaml took 0.001097 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.sprng(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.sprng(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.sprng took 0.001115 seconds
      Not a clone of PETSc or no Fortran compiler or fortran-bindings disabled, don't need Sowing

    child config.packages.sowing took 0.000427 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.revolve(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.revolve(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.revolve took 0.001154 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.radau5(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.radau5(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.radau5 took 0.001142 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.petsc4py(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.petsc4py(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/petsc4py.py:136)
  Adds rules for building petsc4py to PETSc makefiles
            Defined make rule "petsc4py-build" with dependencies "" and code []
            Defined make rule "petsc4py-install" with dependencies "" and code []
            Defined make rule "petsc4pytest" with dependencies "" and code []
    child config.packages.petsc4py took 0.001687 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.pami(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.pami(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.pami took 0.000998 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.opengles(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.opengles(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.opengles took 0.000955 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.opencl(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.opencl(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.opencl took 0.000977 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.mpi4py(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.mpi4py(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.mpi4py took 0.001128 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.mpe(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.mpe(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.mpe took 0.001087 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.memkind(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.memkind(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.memkind took 0.000970 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.libmesh(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.libmesh(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/libmesh.py:69)
            Defined make rule "libmesh-build" with dependencies "" and code []
            Defined make rule "libmesh-install" with dependencies "" and code []
    child config.packages.libmesh took 0.001606 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.moose(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.moose(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.moose took 0.001020 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.libjpeg(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.libjpeg(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.libjpeg took 0.001109 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.gsl(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.gsl(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.gsl took 0.001104 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.ssl(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/ssl.py:58)
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.ssl(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.ssl took 0.001155 seconds
    child config.packages.gmsh took 0.000167 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.gmp(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.gmp(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.gmp took 0.001099 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.mpfr(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.mpfr(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.mpfr took 0.001078 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.giflib(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.giflib(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.giflib took 0.001100 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.cub(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.cub(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.cub took 0.001121 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.ctetgen(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.ctetgen(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.ctetgen took 0.001013 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.concurrencykit(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.concurrencykit(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.concurrencykit took 0.001095 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.cams(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.cams(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.cams took 0.001105 seconds
=============================================================================================
TESTING: locateC2html from config.packages.c2html(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/c2html.py:33)
  Determine location of c2html executable
Looking for default C2html executable
    Checking for program /opt/intel/oneapi/mpi/2021.14/bin/c2html...not found
    Checking for program /opt/intel/oneapi/mkl/2025.0/bin/c2html...not found
    Checking for program /opt/intel/oneapi/dpcpp-ct/2025.0/bin/c2html...not found
    Checking for program /opt/intel/oneapi/dev-utilities/2025.0/bin/c2html...not found
    Checking for program /opt/intel/oneapi/debugger/2025.0/opt/debugger/bin/c2html...not found
    Checking for program /opt/intel/oneapi/compiler/2025.0/bin/c2html...not found
    Checking for program /usr/local/sbin/c2html...not found
    Checking for program /usr/local/bin/c2html...not found
    Checking for program /usr/sbin/c2html...not found
    Checking for program /usr/bin/c2html...not found
    Checking for program /sbin/c2html...not found
    Checking for program /bin/c2html...not found
    Checking for program /usr/games/c2html...not found
    Checking for program /usr/local/games/c2html...not found
    Checking for program /snap/bin/c2html...not found
    Checking for program /snap/bin/c2html...not found
    Checking for program /srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/lib/petsc/bin/win32fe/c2html...not found
    child config.packages.c2html took 0.001507 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.boost(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.boost(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.boost took 0.001144 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.silo(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.silo(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.silo took 0.001082 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.Random123(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.Random123(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.Random123 took 0.001074 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.PARTY(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.PARTY(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.PARTY took 0.001083 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.NVSHMEM(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.NVSHMEM(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.NVSHMEM took 0.000875 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.MatlabEngine(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.MatlabEngine(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.MatlabEngine took 0.000899 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.Matlab(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.Matlab(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.Matlab took 0.000784 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.Mathematica(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.Mathematica(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.Mathematica took 0.000814 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.regex(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: checkDependencies from config.packages.regex(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:988)
  Loop over declared dependencies of package and error if any are missing
=============================================================================================
TESTING: configureLibrary from config.packages.regex(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1014)
  Find an installation and check if it can work with PETSc
==================================================================================
          Checking for a functional regex
          Checking for library in Compiler specific search REGEX: []
=============================================================================================
TESTING: check from config.libraries(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/libraries.py:186)
  Checks that the library "libName" contains "funcs", and if it does defines HAVE_LIB"libName"
       - libDir may be a list of directories
       - libName may be a list of library names
              Checking for functions [regexec regcomp regfree] in library [] []
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.packages.MPI  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.libraries/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
char regexec(void);
static void _check_regexec(void) { regexec(); }
char regcomp(void);
static void _check_regcomp(void) { regcomp(); }
char regfree(void);
static void _check_regfree(void) { regfree(); }

int main(void) {
_check_regexec();
_check_regcomp();
_check_regfree();
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.libraries/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.libraries/conftest.o 
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.packages.MPI  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
char regexec(void);
static void _check_regexec(void) { regexec(); }
char regcomp(void);
static void _check_regcomp(void) { regcomp(); }
char regfree(void);
static void _check_regfree(void) { regfree(); }
void dummy(void) {_check_regexec();
_check_regcomp();
_check_regfree();}

Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.libraries  -fPIC -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.compilers/conftest.F90 
Successful compile:
Source:
      program main
      print*,'testing'
      stop
      end
 
Executing: mpiifort -fc=ifx  -o /tmp/petsc-m5p55c3k/config.compilers/conftest    -fPIC -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.o /tmp/petsc-m5p55c3k/config.compilers/confc.o 
          Checking for headers ['regex.h'] in Compiler specific search REGEX: []
=============================================================================================
TESTING: checkInclude from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:89)
  Checks if a particular include file can be found along particular include paths
Checking for header files ['regex.h'] in []
                Checking include with compiler flags var CPPFLAGS []
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <regex.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.packages.X -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.packages.MPI   /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
Found header files ['regex.h'] in []
=============================================================================================
TESTING: checkVersion from config.packages.regex(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1171)
  Uses self.version, self.minversion, self.maxversion, self.versionname, and self.versioninclude to determine if package has required version
=============================================================================================
TESTING: checkSharedLibrary from config.packages.regex(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1084)
  By default we don't care about checking if the library is shared
    child config.packages.regex took 0.353155 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.libceed(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.libceed(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.libceed took 0.001185 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.opengl(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.opengl(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.opengl took 0.000979 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.glut(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.glut(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.glut took 0.000940 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.GLVis(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.GLVis(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.GLVis took 0.001088 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.CoDiPack(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.CoDiPack(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.CoDiPack took 0.001116 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.adblaslapack(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.adblaslapack(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.adblaslapack took 0.001083 seconds
    child config.packages.cxxlibs took 0.000010 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.szlib(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.szlib(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.szlib took 0.001123 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.zlib(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.zlib(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.zlib took 0.001104 seconds
    child config.packages.mathlib took 0.000013 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.tetgen(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.tetgen(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.tetgen took 0.001081 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.tchem(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.tchem(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.tchem took 0.001096 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.saws(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.saws(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.saws took 0.001112 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.libpng(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.libpng(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.libpng took 0.001084 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.Triangle(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.Triangle(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.Triangle took 0.001111 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.KS(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.KS(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.KS took 0.001068 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.Chaco(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.Chaco(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.Chaco took 0.001104 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.hdf5(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.hdf5(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.hdf5 took 0.001096 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.ascem-io(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.ascem-io(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.ascem-io took 0.001067 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.pflotran(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.pflotran(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.pflotran took 0.001040 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.SAMRAI(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.SAMRAI(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.SAMRAI took 0.001074 seconds
    child config.packages.flibs took 0.000010 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.pnetcdf(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.pnetcdf(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.pnetcdf took 0.001078 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.netcdf(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.netcdf(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.netcdf took 0.001098 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.fblaslapack(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.fblaslapack(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.fblaslapack took 0.001033 seconds
=============================================================================================
TESTING: locateCMake from config.packages.cmake(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/cmake.py:54)
Looking for default CMake executable
    Checking for program /opt/intel/oneapi/mpi/2021.14/bin/cmake...not found
    Checking for program /opt/intel/oneapi/mkl/2025.0/bin/cmake...not found
    Checking for program /opt/intel/oneapi/dpcpp-ct/2025.0/bin/cmake...not found
    Checking for program /opt/intel/oneapi/dev-utilities/2025.0/bin/cmake...not found
    Checking for program /opt/intel/oneapi/debugger/2025.0/opt/debugger/bin/cmake...not found
    Checking for program /opt/intel/oneapi/compiler/2025.0/bin/cmake...not found
    Checking for program /usr/local/sbin/cmake...not found
    Checking for program /usr/local/bin/cmake...not found
    Checking for program /usr/sbin/cmake...not found
    Checking for program /usr/bin/cmake...found
              Defined make macro "CMAKE" to "/usr/bin/cmake"
Looking for default CTest executable
    Checking for program /opt/intel/oneapi/mpi/2021.14/bin/ctest...not found
    Checking for program /opt/intel/oneapi/mkl/2025.0/bin/ctest...not found
    Checking for program /opt/intel/oneapi/dpcpp-ct/2025.0/bin/ctest...not found
    Checking for program /opt/intel/oneapi/dev-utilities/2025.0/bin/ctest...not found
    Checking for program /opt/intel/oneapi/debugger/2025.0/opt/debugger/bin/ctest...not found
    Checking for program /opt/intel/oneapi/compiler/2025.0/bin/ctest...not found
    Checking for program /usr/local/sbin/ctest...not found
    Checking for program /usr/local/bin/ctest...not found
    Checking for program /usr/sbin/ctest...not found
    Checking for program /usr/bin/ctest...found
              Defined make macro "CTEST" to "/usr/bin/ctest"
Executing: /usr/bin/cmake --version
stdout:
cmake version 3.28.3
CMake suite maintained and supported by Kitware (kitware.com/cmake).
CMake version found 3.28.3
    child config.packages.cmake took 0.018423 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.unittestcpp(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.unittestcpp(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.unittestcpp took 0.001234 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.muparser(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.muparser(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.muparser took 0.001106 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.hcephes(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.hcephes(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.hcephes took 0.001123 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.googletest(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.googletest(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.googletest took 0.001096 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.opencascade(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.opencascade(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.opencascade took 0.001097 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.combblas(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.combblas(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.combblas took 0.001159 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.cgns(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.cgns(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.cgns took 0.001115 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.amgx(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.amgx(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.amgx took 0.001188 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.alquimia(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.alquimia(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.alquimia took 0.001078 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.exodusii(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.exodusii(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.exodusii took 0.001139 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.eigen(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.eigen(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.eigen took 0.001163 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.grid(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.grid(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.grid took 0.001136 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.metis(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.metis(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.metis took 0.001121 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.pragmatic(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.pragmatic(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.pragmatic took 0.001164 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.parmetis(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.parmetis(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.parmetis took 0.001113 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.netlib-lapack(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.netlib-lapack(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.netlib-lapack took 0.001115 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.pthread(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: checkDependencies from config.packages.pthread(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:988)
  Loop over declared dependencies of package and error if any are missing
=============================================================================================
TESTING: configureLibrary from config.packages.pthread(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/pthread.py:19)
   Checks for pthread_barrier_t 
==================================================================================
            Checking for a functional pthread
            Checking for library in Compiler specific search PTHREAD: []
=============================================================================================
TESTING: check from config.libraries(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/libraries.py:186)
  Checks that the library "libName" contains "funcs", and if it does defines HAVE_LIB"libName"
       - libDir may be a list of directories
       - libName may be a list of library names
                Checking for functions [pthread_create] in library [] []
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.packages.MPI  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.libraries/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
char pthread_create(void);
static void _check_pthread_create(void) { pthread_create(); }

int main(void) {
_check_pthread_create();
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.libraries/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.libraries/conftest.o 
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.packages.MPI  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
char pthread_create(void);
static void _check_pthread_create(void) { pthread_create(); }
void dummy(void) {_check_pthread_create();}

Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.libraries  -fPIC -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.compilers/conftest.F90 
Successful compile:
Source:
      program main
      print*,'testing'
      stop
      end
 
Executing: mpiifort -fc=ifx  -o /tmp/petsc-m5p55c3k/config.compilers/conftest    -fPIC -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.o /tmp/petsc-m5p55c3k/config.compilers/confc.o 
            Checking for headers ['pthread.h'] in Compiler specific search PTHREAD: []
=============================================================================================
TESTING: checkInclude from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:89)
  Checks if a particular include file can be found along particular include paths
Checking for header files ['pthread.h'] in []
                  Checking include with compiler flags var CPPFLAGS []
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <pthread.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.packages.X -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.packages.MPI   /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
Found header files ['pthread.h'] in []
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.packages.pthread/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.packages.pthread/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <pthread.h>

int main(void) {
pthread_barrier_t *a;
(void)a;
  return 0;
}

=============================================================================================
TESTING: checkVersion from config.packages.pthread(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1171)
  Uses self.version, self.minversion, self.maxversion, self.versionname, and self.versioninclude to determine if package has required version
=============================================================================================
TESTING: checkSharedLibrary from config.packages.pthread(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1084)
  By default we don't care about checking if the library is shared
    child config.packages.pthread took 0.409357 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.egads(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.egads(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.egads took 0.001117 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.PTScotch(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.PTScotch(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.PTScotch took 0.001150 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.mmg(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.mmg(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.mmg took 0.001121 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.parmmg(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.parmmg(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.parmmg took 0.001128 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.Zoltan(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.Zoltan(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.Zoltan took 0.001169 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.ADIOS(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.ADIOS(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.ADIOS took 0.001112 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.openmp(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.openmp(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.openmp took 0.001006 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.viennacl(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.viennacl(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.viennacl took 0.001122 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.zfp(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.zfp(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.zfp took 0.001104 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.ColPack(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.ColPack(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.ColPack took 0.001154 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.ADOLC(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.ADOLC(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.ADOLC took 0.001121 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.openblas(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.openblas(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.openblas took 0.001100 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.blis(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.blis(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.blis took 0.001122 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.f2cblaslapack(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.f2cblaslapack(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.f2cblaslapack took 0.000998 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.BlasLapack(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: checkDependencies from config.packages.BlasLapack(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:988)
  Loop over declared dependencies of package and error if any are missing
=============================================================================================
TESTING: configureLibrary from config.packages.BlasLapack(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/BlasLapack.py:506)
Looking for BLAS/LAPACK in user specified directory: /opt/intel/oneapi/mkl/2025.0
Files and directories in that directory:
['lib', 'include', 'bin', 'etc', '.toolkit_linking_tool', 'env', 'share']
Files and directories in that directory:
['lib', 'include', 'bin', 'etc', '.toolkit_linking_tool', 'env', 'share']
================================================================================
Checking for BLAS and LAPACK in User specified MATLAB [ILP64] MKL Linux lib dir
=============================================================================================
TESTING: checkLib from config.packages.BlasLapack(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/BlasLapack.py:114)
  Checking for BLAS and LAPACK symbols
              Checking for Fortran name mangling underscore on BLAS/LAPACK
                  Checking for functions [ddot_] in library ['/opt/intel/oneapi/mkl/2025.0/bin/glnxa64/mkl.so', '/opt/intel/oneapi/mkl/2025.0/sys/os/glnxa64/libiomp5.so', 'pthread'] ['-fortlib']
                  Checking directory of requested libraries:/opt/intel/oneapi/mkl/2025.0/bin/glnxa64 for first library:mkl.s
                  Directory of requested libraries /opt/intel/oneapi/mkl/2025.0/bin/glnxa64 does not exist
              Checking for no name mangling on BLAS/LAPACK
                  Checking for functions [ddot] in library ['/opt/intel/oneapi/mkl/2025.0/bin/glnxa64/mkl.so', '/opt/intel/oneapi/mkl/2025.0/sys/os/glnxa64/libiomp5.so', 'pthread'] ['-fortlib']
                  Checking directory of requested libraries:/opt/intel/oneapi/mkl/2025.0/bin/glnxa64 for first library:mkl.s
                  Directory of requested libraries /opt/intel/oneapi/mkl/2025.0/bin/glnxa64 does not exist
              Unknown name mangling in BLAS/LAPACK
================================================================================
Checking for BLAS and LAPACK in User specified MATLAB [ILP64] MKL macOS lib dir
=============================================================================================
TESTING: checkLib from config.packages.BlasLapack(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/BlasLapack.py:114)
  Checking for BLAS and LAPACK symbols
              Checking for Fortran name mangling underscore on BLAS/LAPACK
                  Checking for functions [ddot_] in library ['/opt/intel/oneapi/mkl/2025.0/bin/maci64/mkl.dylib', '/opt/intel/oneapi/mkl/2025.0/sys/os/maci64/libiomp5.dylib', 'pthread'] ['-fortlib']
                  Checking directory of requested libraries:/opt/intel/oneapi/mkl/2025.0/bin/maci64 for first library:mkl.dyli
                  Directory of requested libraries /opt/intel/oneapi/mkl/2025.0/bin/maci64 does not exist
              Checking for no name mangling on BLAS/LAPACK
                  Checking for functions [ddot] in library ['/opt/intel/oneapi/mkl/2025.0/bin/maci64/mkl.dylib', '/opt/intel/oneapi/mkl/2025.0/sys/os/maci64/libiomp5.dylib', 'pthread'] ['-fortlib']
                  Checking directory of requested libraries:/opt/intel/oneapi/mkl/2025.0/bin/maci64 for first library:mkl.dyli
                  Directory of requested libraries /opt/intel/oneapi/mkl/2025.0/bin/maci64 does not exist
              Unknown name mangling in BLAS/LAPACK
================================================================================
Checking for BLAS and LAPACK in User specified MKL11/12 and later
=============================================================================================
TESTING: checkLib from config.packages.BlasLapack(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/BlasLapack.py:114)
  Checking for BLAS and LAPACK symbols
              Checking for Fortran name mangling underscore on BLAS/LAPACK
                  Checking for functions [ddot_] in library ['/opt/intel/oneapi/mkl/2025.0/libmkl_intel_lp64.a', 'mkl_core', 'mkl_sequential', 'pthread'] ['-fortlib']
                  Checking directory of requested libraries:/opt/intel/oneapi/mkl/2025.0 for first library:libmkl_intel_lp64.
                  Files in directory:['lib', 'include', 'bin', 'etc', '.toolkit_linking_tool', 'env', 'share']
              Checking for no name mangling on BLAS/LAPACK
                  Checking for functions [ddot] in library ['/opt/intel/oneapi/mkl/2025.0/libmkl_intel_lp64.a', 'mkl_core', 'mkl_sequential', 'pthread'] ['-fortlib']
                  Checking directory of requested libraries:/opt/intel/oneapi/mkl/2025.0 for first library:libmkl_intel_lp64.
                  Files in directory:['lib', 'include', 'bin', 'etc', '.toolkit_linking_tool', 'env', 'share']
              Unknown name mangling in BLAS/LAPACK
            MKL Path not found.. skipping: /opt/intel/oneapi/mkl/2025.0/lib/64
            MKL Path not found.. skipping: /opt/intel/oneapi/mkl/2025.0/lib/ia64
            MKL Path not found.. skipping: /opt/intel/oneapi/mkl/2025.0/lib/em64t
Files and directories in that directory:
['libmkl_rt.so.2', 'libmkl_blas95_ilp64.a', 'libmkl_vml_avx2.so.2', 'libmkl_vml_cmpt.so.2', 'libmkl_tbb_thread.a', 'libmkl_blacs_openmpi_ilp64.so.2', 'libmkl_scalapack_lp64.a', 'libmkl_sycl_lapack.so', 'libmkl_sycl_data_fitting.so', 'libmkl_sequential.a', 'libmkl_sequential.so.2', 'libmkl_blas95_lp64.a', 'libmkl_blacs_openmpi_lp64.so', 'libmkl_tbb_thread.so', 'libmkl_sycl_vm.so', 'libmkl_sycl_blas.so', 'libmkl_sycl_dft.so.5', 'libmkl_scalapack_ilp64.so.2', 'libmkl_sycl_stats.so.5', 'libmkl_gf_ilp64.so', 'libmkl_blacs_intelmpi_lp64.so', 'libmkl_sycl_rng.so', 'libmkl_vml_mc3.so.2', 'libmkl_blacs_openmpi_lp64.a', 'libmkl_blacs_intelmpi_ilp64.so', 'libmkl_sycl_data_fitting.so.5', 'libmkl_intel_lp64.a', 'libmkl_sycl.a', 'libmkl_intel_lp64.so.2', 'libmkl_core.so.2', 'libmkl_mc3.so.2', 'libmkl_intel_thread.so.2', 'libmkl_scalapack_lp64.so.2', 'libmkl_gf_ilp64.a', 'libmkl_vml_def.so.2', 'libmkl_cdft_core.so.2', 'libmkl_scalapack_ilp64.so', 'libmkl_gnu_thread.a', 'intel64', 'libmkl_scalapack_ilp64.a', 'libmkl_gf_lp64.so', 'libmkl_tbb_thread.so.2', 'libmkl_blacs_openmpi_ilp64.so', 'libmkl_core.so', 'libmkl_lapack95_lp64.a', 'libmkl_intel_lp64.so', 'libmkl_sequential.so', 'libmkl_avx512.so.2', 'libmkl_blacs_intelmpi_ilp64.so.2', 'libmkl_intel_ilp64.so.2', 'libmkl_sycl_sparse.so.5', 'libmkl_gf_lp64.a', 'libmkl_sycl_vm.so.5', 'libmkl_sycl_sparse.so', 'libmkl_gnu_thread.so.2', 'libmkl_intel_thread.so', 'libmkl_sycl_dft.so', 'libmkl_vml_avx512.so.2', 'libmkl_gnu_thread.so', 'libmkl_blacs_openmpi_ilp64.a', 'libmkl_blacs_intelmpi_ilp64.a', 'libmkl_intel_ilp64.a', 'libmkl_sycl.so', 'libmkl_sycl_stats.so', 'libmkl_cdft_core.so', 'libmkl_scalapack_lp64.so', 'cmake', 'libmkl_sycl_lapack.so.5', 'libmkl_sycl_rng.so.5', 'libmkl_sycl_blas.so.5', 'libmkl_blacs_openmpi_lp64.so.2', 'libmkl_def.so.2', 'libmkl_gf_ilp64.so.2', 'libmkl_blacs_intelmpi_lp64.so.2', 'libmkl_cdft_core.a', 'libmkl_gf_lp64.so.2', 'libmkl_rt.so', 'libmkl_blacs_intelmpi_lp64.a', 'libmkl_lapack95_ilp64.a', 'libmkl_intel_thread.a', 'pkgconfig', 'libmkl_avx2.so.2', 'libmkl_core.a', 'libmkl_intel_ilp64.so']
================================================================================
Checking for BLAS and LAPACK in User specified MKL11/12 Linux32
=============================================================================================
TESTING: checkLib from config.packages.BlasLapack(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/BlasLapack.py:114)
  Checking for BLAS and LAPACK symbols
              Checking for Fortran name mangling underscore on BLAS/LAPACK
                  Checking for functions [ddot_] in library ['/opt/intel/oneapi/mkl/2025.0/lib/intel64/libmkl_intel_lp64.a', 'mkl_core', 'mkl_sequential', 'pthread'] ['-fortlib']
                  Checking directory of requested libraries:/opt/intel/oneapi/mkl/2025.0/lib/intel64 for first library:libmkl_intel_lp64.
                  Files in directory:['libmkl_rt.so.2', 'libmkl_blas95_ilp64.a', 'libmkl_vml_avx2.so.2', 'libmkl_vml_cmpt.so.2', 'libmkl_tbb_thread.a', 'libmkl_blacs_openmpi_ilp64.so.2', 'libmkl_scalapack_lp64.a', 'libmkl_sycl_lapack.so', 'libmkl_sycl_data_fitting.so', 'libmkl_sequential.a', 'libmkl_sequential.so.2', 'libmkl_blas95_lp64.a', 'libmkl_blacs_openmpi_lp64.so', 'libmkl_tbb_thread.so', 'libmkl_sycl_vm.so', 'libmkl_sycl_blas.so', 'libmkl_sycl_dft.so.5', 'libmkl_scalapack_ilp64.so.2', 'libmkl_sycl_stats.so.5', 'libmkl_gf_ilp64.so', 'libmkl_blacs_intelmpi_lp64.so', 'libmkl_sycl_rng.so', 'libmkl_vml_mc3.so.2', 'libmkl_blacs_openmpi_lp64.a', 'libmkl_blacs_intelmpi_ilp64.so', 'libmkl_sycl_data_fitting.so.5', 'libmkl_intel_lp64.a', 'libmkl_sycl.a', 'libmkl_intel_lp64.so.2', 'libmkl_core.so.2', 'libmkl_mc3.so.2', 'libmkl_intel_thread.so.2', 'libmkl_scalapack_lp64.so.2', 'libmkl_gf_ilp64.a', 'libmkl_vml_def.so.2', 'libmkl_cdft_core.so.2', 'libmkl_scalapack_ilp64.so', 'libmkl_gnu_thread.a', 'intel64', 'libmkl_scalapack_ilp64.a', 'libmkl_gf_lp64.so', 'libmkl_tbb_thread.so.2', 'libmkl_blacs_openmpi_ilp64.so', 'libmkl_core.so', 'libmkl_lapack95_lp64.a', 'libmkl_intel_lp64.so', 'libmkl_sequential.so', 'libmkl_avx512.so.2', 'libmkl_blacs_intelmpi_ilp64.so.2', 'libmkl_intel_ilp64.so.2', 'libmkl_sycl_sparse.so.5', 'libmkl_gf_lp64.a', 'libmkl_sycl_vm.so.5', 'libmkl_sycl_sparse.so', 'libmkl_gnu_thread.so.2', 'libmkl_intel_thread.so', 'libmkl_sycl_dft.so', 'libmkl_vml_avx512.so.2', 'libmkl_gnu_thread.so', 'libmkl_blacs_openmpi_ilp64.a', 'libmkl_blacs_intelmpi_ilp64.a', 'libmkl_intel_ilp64.a', 'libmkl_sycl.so', 'libmkl_sycl_stats.so', 'libmkl_cdft_core.so', 'libmkl_scalapack_lp64.so', 'cmake', 'libmkl_sycl_lapack.so.5', 'libmkl_sycl_rng.so.5', 'libmkl_sycl_blas.so.5', 'libmkl_blacs_openmpi_lp64.so.2', 'libmkl_def.so.2', 'libmkl_gf_ilp64.so.2', 'libmkl_blacs_intelmpi_lp64.so.2', 'libmkl_cdft_core.a', 'libmkl_gf_lp64.so.2', 'libmkl_rt.so', 'libmkl_blacs_intelmpi_lp64.a', 'libmkl_lapack95_ilp64.a', 'libmkl_intel_thread.a', 'pkgconfig', 'libmkl_avx2.so.2', 'libmkl_core.a', 'libmkl_intel_ilp64.so']
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.libraries  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.libraries/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
char ddot_(void);
static void _check_ddot_(void) { ddot_(); }

int main(void) {
_check_ddot_();
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.libraries/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.libraries/conftest.o  -Wl,-rpath,/opt/intel/oneapi/mkl/2025.0/lib/intel64 -L/opt/intel/oneapi/mkl/2025.0/lib/intel64 -lmkl_intel_lp64 -lmkl_core -lmkl_sequential -lpthread -fortlib 
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
char ddot_(void);
static void _check_ddot_(void) { ddot_(); }
void dummy(void) {_check_ddot_();}

Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.libraries  -fPIC -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.compilers/conftest.F90 
Successful compile:
Source:
      program main
      print*,'testing'
      stop
      end
 
Executing: mpiifort -fc=ifx  -o /tmp/petsc-m5p55c3k/config.compilers/conftest    -fPIC -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.o /tmp/petsc-m5p55c3k/config.compilers/confc.o  -Wl,-rpath,/opt/intel/oneapi/mkl/2025.0/lib/intel64 -L/opt/intel/oneapi/mkl/2025.0/lib/intel64 -lmkl_intel_lp64 -lmkl_core -lmkl_sequential -lpthread -fortlib 
                    Defined "HAVE_LIBMKL_INTEL_LP64" to "1"
                    Defined "HAVE_LIBMKL_CORE" to "1"
                    Defined "HAVE_LIBMKL_SEQUENTIAL" to "1"
                    Defined "HAVE_LIBPTHREAD" to "1"
                  Checking for functions [dgetrs_] in library ['/opt/intel/oneapi/mkl/2025.0/lib/intel64/libmkl_intel_lp64.a', 'mkl_core', 'mkl_sequential', 'pthread'] ['-fortlib']
                  Checking directory of requested libraries:/opt/intel/oneapi/mkl/2025.0/lib/intel64 for first library:libmkl_intel_lp64.
                  Files in directory:['libmkl_rt.so.2', 'libmkl_blas95_ilp64.a', 'libmkl_vml_avx2.so.2', 'libmkl_vml_cmpt.so.2', 'libmkl_tbb_thread.a', 'libmkl_blacs_openmpi_ilp64.so.2', 'libmkl_scalapack_lp64.a', 'libmkl_sycl_lapack.so', 'libmkl_sycl_data_fitting.so', 'libmkl_sequential.a', 'libmkl_sequential.so.2', 'libmkl_blas95_lp64.a', 'libmkl_blacs_openmpi_lp64.so', 'libmkl_tbb_thread.so', 'libmkl_sycl_vm.so', 'libmkl_sycl_blas.so', 'libmkl_sycl_dft.so.5', 'libmkl_scalapack_ilp64.so.2', 'libmkl_sycl_stats.so.5', 'libmkl_gf_ilp64.so', 'libmkl_blacs_intelmpi_lp64.so', 'libmkl_sycl_rng.so', 'libmkl_vml_mc3.so.2', 'libmkl_blacs_openmpi_lp64.a', 'libmkl_blacs_intelmpi_ilp64.so', 'libmkl_sycl_data_fitting.so.5', 'libmkl_intel_lp64.a', 'libmkl_sycl.a', 'libmkl_intel_lp64.so.2', 'libmkl_core.so.2', 'libmkl_mc3.so.2', 'libmkl_intel_thread.so.2', 'libmkl_scalapack_lp64.so.2', 'libmkl_gf_ilp64.a', 'libmkl_vml_def.so.2', 'libmkl_cdft_core.so.2', 'libmkl_scalapack_ilp64.so', 'libmkl_gnu_thread.a', 'intel64', 'libmkl_scalapack_ilp64.a', 'libmkl_gf_lp64.so', 'libmkl_tbb_thread.so.2', 'libmkl_blacs_openmpi_ilp64.so', 'libmkl_core.so', 'libmkl_lapack95_lp64.a', 'libmkl_intel_lp64.so', 'libmkl_sequential.so', 'libmkl_avx512.so.2', 'libmkl_blacs_intelmpi_ilp64.so.2', 'libmkl_intel_ilp64.so.2', 'libmkl_sycl_sparse.so.5', 'libmkl_gf_lp64.a', 'libmkl_sycl_vm.so.5', 'libmkl_sycl_sparse.so', 'libmkl_gnu_thread.so.2', 'libmkl_intel_thread.so', 'libmkl_sycl_dft.so', 'libmkl_vml_avx512.so.2', 'libmkl_gnu_thread.so', 'libmkl_blacs_openmpi_ilp64.a', 'libmkl_blacs_intelmpi_ilp64.a', 'libmkl_intel_ilp64.a', 'libmkl_sycl.so', 'libmkl_sycl_stats.so', 'libmkl_cdft_core.so', 'libmkl_scalapack_lp64.so', 'cmake', 'libmkl_sycl_lapack.so.5', 'libmkl_sycl_rng.so.5', 'libmkl_sycl_blas.so.5', 'libmkl_blacs_openmpi_lp64.so.2', 'libmkl_def.so.2', 'libmkl_gf_ilp64.so.2', 'libmkl_blacs_intelmpi_lp64.so.2', 'libmkl_cdft_core.a', 'libmkl_gf_lp64.so.2', 'libmkl_rt.so', 'libmkl_blacs_intelmpi_lp64.a', 'libmkl_lapack95_ilp64.a', 'libmkl_intel_thread.a', 'pkgconfig', 'libmkl_avx2.so.2', 'libmkl_core.a', 'libmkl_intel_ilp64.so']
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.libraries/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
char dgetrs_(void);
static void _check_dgetrs_(void) { dgetrs_(); }

int main(void) {
_check_dgetrs_();
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.libraries/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.libraries/conftest.o  -Wl,-rpath,/opt/intel/oneapi/mkl/2025.0/lib/intel64 -L/opt/intel/oneapi/mkl/2025.0/lib/intel64 -lmkl_intel_lp64 -lmkl_core -lmkl_sequential -lpthread -fortlib 
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
char dgetrs_(void);
static void _check_dgetrs_(void) { dgetrs_(); }
void dummy(void) {_check_dgetrs_();}

Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.libraries  -fPIC -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.compilers/conftest.F90 
Successful compile:
Source:
      program main
      print*,'testing'
      stop
      end
 
Executing: mpiifort -fc=ifx  -o /tmp/petsc-m5p55c3k/config.compilers/conftest    -fPIC -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.o /tmp/petsc-m5p55c3k/config.compilers/confc.o  -Wl,-rpath,/opt/intel/oneapi/mkl/2025.0/lib/intel64 -L/opt/intel/oneapi/mkl/2025.0/lib/intel64 -lmkl_intel_lp64 -lmkl_core -lmkl_sequential -lpthread -fortlib 
                    Defined "HAVE_LIBMKL_INTEL_LP64" to "1"
                    Defined "HAVE_LIBMKL_CORE" to "1"
                    Defined "HAVE_LIBMKL_SEQUENTIAL" to "1"
                    Defined "HAVE_LIBPTHREAD" to "1"
                  Checking for functions [dgeev_] in library ['/opt/intel/oneapi/mkl/2025.0/lib/intel64/libmkl_intel_lp64.a', 'mkl_core', 'mkl_sequential', 'pthread'] ['-fortlib']
                  Checking directory of requested libraries:/opt/intel/oneapi/mkl/2025.0/lib/intel64 for first library:libmkl_intel_lp64.
                  Files in directory:['libmkl_rt.so.2', 'libmkl_blas95_ilp64.a', 'libmkl_vml_avx2.so.2', 'libmkl_vml_cmpt.so.2', 'libmkl_tbb_thread.a', 'libmkl_blacs_openmpi_ilp64.so.2', 'libmkl_scalapack_lp64.a', 'libmkl_sycl_lapack.so', 'libmkl_sycl_data_fitting.so', 'libmkl_sequential.a', 'libmkl_sequential.so.2', 'libmkl_blas95_lp64.a', 'libmkl_blacs_openmpi_lp64.so', 'libmkl_tbb_thread.so', 'libmkl_sycl_vm.so', 'libmkl_sycl_blas.so', 'libmkl_sycl_dft.so.5', 'libmkl_scalapack_ilp64.so.2', 'libmkl_sycl_stats.so.5', 'libmkl_gf_ilp64.so', 'libmkl_blacs_intelmpi_lp64.so', 'libmkl_sycl_rng.so', 'libmkl_vml_mc3.so.2', 'libmkl_blacs_openmpi_lp64.a', 'libmkl_blacs_intelmpi_ilp64.so', 'libmkl_sycl_data_fitting.so.5', 'libmkl_intel_lp64.a', 'libmkl_sycl.a', 'libmkl_intel_lp64.so.2', 'libmkl_core.so.2', 'libmkl_mc3.so.2', 'libmkl_intel_thread.so.2', 'libmkl_scalapack_lp64.so.2', 'libmkl_gf_ilp64.a', 'libmkl_vml_def.so.2', 'libmkl_cdft_core.so.2', 'libmkl_scalapack_ilp64.so', 'libmkl_gnu_thread.a', 'intel64', 'libmkl_scalapack_ilp64.a', 'libmkl_gf_lp64.so', 'libmkl_tbb_thread.so.2', 'libmkl_blacs_openmpi_ilp64.so', 'libmkl_core.so', 'libmkl_lapack95_lp64.a', 'libmkl_intel_lp64.so', 'libmkl_sequential.so', 'libmkl_avx512.so.2', 'libmkl_blacs_intelmpi_ilp64.so.2', 'libmkl_intel_ilp64.so.2', 'libmkl_sycl_sparse.so.5', 'libmkl_gf_lp64.a', 'libmkl_sycl_vm.so.5', 'libmkl_sycl_sparse.so', 'libmkl_gnu_thread.so.2', 'libmkl_intel_thread.so', 'libmkl_sycl_dft.so', 'libmkl_vml_avx512.so.2', 'libmkl_gnu_thread.so', 'libmkl_blacs_openmpi_ilp64.a', 'libmkl_blacs_intelmpi_ilp64.a', 'libmkl_intel_ilp64.a', 'libmkl_sycl.so', 'libmkl_sycl_stats.so', 'libmkl_cdft_core.so', 'libmkl_scalapack_lp64.so', 'cmake', 'libmkl_sycl_lapack.so.5', 'libmkl_sycl_rng.so.5', 'libmkl_sycl_blas.so.5', 'libmkl_blacs_openmpi_lp64.so.2', 'libmkl_def.so.2', 'libmkl_gf_ilp64.so.2', 'libmkl_blacs_intelmpi_lp64.so.2', 'libmkl_cdft_core.a', 'libmkl_gf_lp64.so.2', 'libmkl_rt.so', 'libmkl_blacs_intelmpi_lp64.a', 'libmkl_lapack95_ilp64.a', 'libmkl_intel_thread.a', 'pkgconfig', 'libmkl_avx2.so.2', 'libmkl_core.a', 'libmkl_intel_ilp64.so']
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.libraries/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
char dgeev_(void);
static void _check_dgeev_(void) { dgeev_(); }

int main(void) {
_check_dgeev_();
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.libraries/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.libraries/conftest.o  -Wl,-rpath,/opt/intel/oneapi/mkl/2025.0/lib/intel64 -L/opt/intel/oneapi/mkl/2025.0/lib/intel64 -lmkl_intel_lp64 -lmkl_core -lmkl_sequential -lpthread -fortlib 
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
char dgeev_(void);
static void _check_dgeev_(void) { dgeev_(); }
void dummy(void) {_check_dgeev_();}

Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.libraries  -fPIC -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.compilers/conftest.F90 
Successful compile:
Source:
      program main
      print*,'testing'
      stop
      end
 
Executing: mpiifort -fc=ifx  -o /tmp/petsc-m5p55c3k/config.compilers/conftest    -fPIC -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.o /tmp/petsc-m5p55c3k/config.compilers/confc.o  -Wl,-rpath,/opt/intel/oneapi/mkl/2025.0/lib/intel64 -L/opt/intel/oneapi/mkl/2025.0/lib/intel64 -lmkl_intel_lp64 -lmkl_core -lmkl_sequential -lpthread -fortlib 
                    Defined "HAVE_LIBMKL_INTEL_LP64" to "1"
                    Defined "HAVE_LIBMKL_CORE" to "1"
                    Defined "HAVE_LIBMKL_SEQUENTIAL" to "1"
                    Defined "HAVE_LIBPTHREAD" to "1"
              Found Fortran mangling on BLAS/LAPACK which is underscore
            Defined "BLASLAPACK_UNDERSCORE" to "1"
=============================================================================================
TESTING: checkMKL from config.packages.BlasLapack(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/BlasLapack.py:598)
  Check for Intel MKL library
                Checking for functions [mkl_set_num_threads] in library ['/opt/intel/oneapi/mkl/2025.0/lib/intel64/libmkl_intel_lp64.a', 'mkl_core', 'mkl_sequential', 'pthread', '-fortlib'] []
                Checking directory of requested libraries:/opt/intel/oneapi/mkl/2025.0/lib/intel64 for first library:libmkl_intel_lp64.
                Files in directory:['libmkl_rt.so.2', 'libmkl_blas95_ilp64.a', 'libmkl_vml_avx2.so.2', 'libmkl_vml_cmpt.so.2', 'libmkl_tbb_thread.a', 'libmkl_blacs_openmpi_ilp64.so.2', 'libmkl_scalapack_lp64.a', 'libmkl_sycl_lapack.so', 'libmkl_sycl_data_fitting.so', 'libmkl_sequential.a', 'libmkl_sequential.so.2', 'libmkl_blas95_lp64.a', 'libmkl_blacs_openmpi_lp64.so', 'libmkl_tbb_thread.so', 'libmkl_sycl_vm.so', 'libmkl_sycl_blas.so', 'libmkl_sycl_dft.so.5', 'libmkl_scalapack_ilp64.so.2', 'libmkl_sycl_stats.so.5', 'libmkl_gf_ilp64.so', 'libmkl_blacs_intelmpi_lp64.so', 'libmkl_sycl_rng.so', 'libmkl_vml_mc3.so.2', 'libmkl_blacs_openmpi_lp64.a', 'libmkl_blacs_intelmpi_ilp64.so', 'libmkl_sycl_data_fitting.so.5', 'libmkl_intel_lp64.a', 'libmkl_sycl.a', 'libmkl_intel_lp64.so.2', 'libmkl_core.so.2', 'libmkl_mc3.so.2', 'libmkl_intel_thread.so.2', 'libmkl_scalapack_lp64.so.2', 'libmkl_gf_ilp64.a', 'libmkl_vml_def.so.2', 'libmkl_cdft_core.so.2', 'libmkl_scalapack_ilp64.so', 'libmkl_gnu_thread.a', 'intel64', 'libmkl_scalapack_ilp64.a', 'libmkl_gf_lp64.so', 'libmkl_tbb_thread.so.2', 'libmkl_blacs_openmpi_ilp64.so', 'libmkl_core.so', 'libmkl_lapack95_lp64.a', 'libmkl_intel_lp64.so', 'libmkl_sequential.so', 'libmkl_avx512.so.2', 'libmkl_blacs_intelmpi_ilp64.so.2', 'libmkl_intel_ilp64.so.2', 'libmkl_sycl_sparse.so.5', 'libmkl_gf_lp64.a', 'libmkl_sycl_vm.so.5', 'libmkl_sycl_sparse.so', 'libmkl_gnu_thread.so.2', 'libmkl_intel_thread.so', 'libmkl_sycl_dft.so', 'libmkl_vml_avx512.so.2', 'libmkl_gnu_thread.so', 'libmkl_blacs_openmpi_ilp64.a', 'libmkl_blacs_intelmpi_ilp64.a', 'libmkl_intel_ilp64.a', 'libmkl_sycl.so', 'libmkl_sycl_stats.so', 'libmkl_cdft_core.so', 'libmkl_scalapack_lp64.so', 'cmake', 'libmkl_sycl_lapack.so.5', 'libmkl_sycl_rng.so.5', 'libmkl_sycl_blas.so.5', 'libmkl_blacs_openmpi_lp64.so.2', 'libmkl_def.so.2', 'libmkl_gf_ilp64.so.2', 'libmkl_blacs_intelmpi_lp64.so.2', 'libmkl_cdft_core.a', 'libmkl_gf_lp64.so.2', 'libmkl_rt.so', 'libmkl_blacs_intelmpi_lp64.a', 'libmkl_lapack95_ilp64.a', 'libmkl_intel_thread.a', 'pkgconfig', 'libmkl_avx2.so.2', 'libmkl_core.a', 'libmkl_intel_ilp64.so']
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.libraries/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
char mkl_set_num_threads(void);
static void _check_mkl_set_num_threads(void) { mkl_set_num_threads(); }

int main(void) {
_check_mkl_set_num_threads();
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.libraries/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.libraries/conftest.o  -Wl,-rpath,/opt/intel/oneapi/mkl/2025.0/lib/intel64 -L/opt/intel/oneapi/mkl/2025.0/lib/intel64 -lmkl_intel_lp64 -lmkl_core -lmkl_sequential -lpthread -fortlib 
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
char mkl_set_num_threads(void);
static void _check_mkl_set_num_threads(void) { mkl_set_num_threads(); }
void dummy(void) {_check_mkl_set_num_threads();}

Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.libraries  -fPIC -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.compilers/conftest.F90 
Successful compile:
Source:
      program main
      print*,'testing'
      stop
      end
 
Executing: mpiifort -fc=ifx  -o /tmp/petsc-m5p55c3k/config.compilers/conftest    -fPIC -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.o /tmp/petsc-m5p55c3k/config.compilers/confc.o  -Wl,-rpath,/opt/intel/oneapi/mkl/2025.0/lib/intel64 -L/opt/intel/oneapi/mkl/2025.0/lib/intel64 -lmkl_intel_lp64 -lmkl_core -lmkl_sequential -lpthread -fortlib 
                  Defined "HAVE_LIBMKL_INTEL_LP64" to "1"
                  Defined "HAVE_LIBMKL_CORE" to "1"
                  Defined "HAVE_LIBMKL_SEQUENTIAL" to "1"
                  Defined "HAVE_LIBPTHREAD" to "1"
                Checking for functions [flexiblas_avail] in library ['/opt/intel/oneapi/mkl/2025.0/lib/intel64/libmkl_intel_lp64.a', 'mkl_core', 'mkl_sequential', 'pthread', '-fortlib'] []
                Checking directory of requested libraries:/opt/intel/oneapi/mkl/2025.0/lib/intel64 for first library:libmkl_intel_lp64.
                Files in directory:['libmkl_rt.so.2', 'libmkl_blas95_ilp64.a', 'libmkl_vml_avx2.so.2', 'libmkl_vml_cmpt.so.2', 'libmkl_tbb_thread.a', 'libmkl_blacs_openmpi_ilp64.so.2', 'libmkl_scalapack_lp64.a', 'libmkl_sycl_lapack.so', 'libmkl_sycl_data_fitting.so', 'libmkl_sequential.a', 'libmkl_sequential.so.2', 'libmkl_blas95_lp64.a', 'libmkl_blacs_openmpi_lp64.so', 'libmkl_tbb_thread.so', 'libmkl_sycl_vm.so', 'libmkl_sycl_blas.so', 'libmkl_sycl_dft.so.5', 'libmkl_scalapack_ilp64.so.2', 'libmkl_sycl_stats.so.5', 'libmkl_gf_ilp64.so', 'libmkl_blacs_intelmpi_lp64.so', 'libmkl_sycl_rng.so', 'libmkl_vml_mc3.so.2', 'libmkl_blacs_openmpi_lp64.a', 'libmkl_blacs_intelmpi_ilp64.so', 'libmkl_sycl_data_fitting.so.5', 'libmkl_intel_lp64.a', 'libmkl_sycl.a', 'libmkl_intel_lp64.so.2', 'libmkl_core.so.2', 'libmkl_mc3.so.2', 'libmkl_intel_thread.so.2', 'libmkl_scalapack_lp64.so.2', 'libmkl_gf_ilp64.a', 'libmkl_vml_def.so.2', 'libmkl_cdft_core.so.2', 'libmkl_scalapack_ilp64.so', 'libmkl_gnu_thread.a', 'intel64', 'libmkl_scalapack_ilp64.a', 'libmkl_gf_lp64.so', 'libmkl_tbb_thread.so.2', 'libmkl_blacs_openmpi_ilp64.so', 'libmkl_core.so', 'libmkl_lapack95_lp64.a', 'libmkl_intel_lp64.so', 'libmkl_sequential.so', 'libmkl_avx512.so.2', 'libmkl_blacs_intelmpi_ilp64.so.2', 'libmkl_intel_ilp64.so.2', 'libmkl_sycl_sparse.so.5', 'libmkl_gf_lp64.a', 'libmkl_sycl_vm.so.5', 'libmkl_sycl_sparse.so', 'libmkl_gnu_thread.so.2', 'libmkl_intel_thread.so', 'libmkl_sycl_dft.so', 'libmkl_vml_avx512.so.2', 'libmkl_gnu_thread.so', 'libmkl_blacs_openmpi_ilp64.a', 'libmkl_blacs_intelmpi_ilp64.a', 'libmkl_intel_ilp64.a', 'libmkl_sycl.so', 'libmkl_sycl_stats.so', 'libmkl_cdft_core.so', 'libmkl_scalapack_lp64.so', 'cmake', 'libmkl_sycl_lapack.so.5', 'libmkl_sycl_rng.so.5', 'libmkl_sycl_blas.so.5', 'libmkl_blacs_openmpi_lp64.so.2', 'libmkl_def.so.2', 'libmkl_gf_ilp64.so.2', 'libmkl_blacs_intelmpi_lp64.so.2', 'libmkl_cdft_core.a', 'libmkl_gf_lp64.so.2', 'libmkl_rt.so', 'libmkl_blacs_intelmpi_lp64.a', 'libmkl_lapack95_ilp64.a', 'libmkl_intel_thread.a', 'pkgconfig', 'libmkl_avx2.so.2', 'libmkl_core.a', 'libmkl_intel_ilp64.so']
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.libraries/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
char flexiblas_avail(void);
static void _check_flexiblas_avail(void) { flexiblas_avail(); }

int main(void) {
_check_flexiblas_avail();
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.libraries/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.libraries/conftest.o  -Wl,-rpath,/opt/intel/oneapi/mkl/2025.0/lib/intel64 -L/opt/intel/oneapi/mkl/2025.0/lib/intel64 -lmkl_intel_lp64 -lmkl_core -lmkl_sequential -lpthread -fortlib 
stdout:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.libraries/conftest.o: in function `main':
conftest.c:(.text+0x16): undefined reference to `flexiblas_avail'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Possible ERROR while running linker: exit code 1
stderr:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.libraries/conftest.o: in function `main':
conftest.c:(.text+0x16): undefined reference to `flexiblas_avail'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
                Defined "HAVE_MKL_LIBS" to "1"
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.packages.BlasLapack/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.packages.BlasLapack/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include "mkl_spblas.h"

int main(void) {
  return 0;
}

              MKL mkl_spblas.h found in default include path.
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"

#include "mkl_version.h"

#define  PetscXstr_(s) PetscStr_(s)
#define  PetscStr_(s)  #s
const char *ver = "petscpkgver(" PetscXstr_(INTEL_MKL_VERSION) ")";

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.packages.X -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack   /tmp/petsc-m5p55c3k/config.packages.BlasLapack/conftest.c 
Found the raw version string: (" "20250000" ")"
This is the processed version string: 20250000
For blaslapack need  <= 20250000 <= 
=============================================================================================
TESTING: checklsame from config.packages.BlasLapack(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/BlasLapack.py:712)
   Do the BLAS/LAPACK libraries have a valid lsame() function with correct binding.
                Checking for functions [lsame_] in library ['/opt/intel/oneapi/mkl/2025.0/lib/intel64/libmkl_intel_lp64.a', 'mkl_core', 'mkl_sequential', 'pthread', '-fortlib'] []
                Checking directory of requested libraries:/opt/intel/oneapi/mkl/2025.0/lib/intel64 for first library:libmkl_intel_lp64.
                Files in directory:['libmkl_rt.so.2', 'libmkl_blas95_ilp64.a', 'libmkl_vml_avx2.so.2', 'libmkl_vml_cmpt.so.2', 'libmkl_tbb_thread.a', 'libmkl_blacs_openmpi_ilp64.so.2', 'libmkl_scalapack_lp64.a', 'libmkl_sycl_lapack.so', 'libmkl_sycl_data_fitting.so', 'libmkl_sequential.a', 'libmkl_sequential.so.2', 'libmkl_blas95_lp64.a', 'libmkl_blacs_openmpi_lp64.so', 'libmkl_tbb_thread.so', 'libmkl_sycl_vm.so', 'libmkl_sycl_blas.so', 'libmkl_sycl_dft.so.5', 'libmkl_scalapack_ilp64.so.2', 'libmkl_sycl_stats.so.5', 'libmkl_gf_ilp64.so', 'libmkl_blacs_intelmpi_lp64.so', 'libmkl_sycl_rng.so', 'libmkl_vml_mc3.so.2', 'libmkl_blacs_openmpi_lp64.a', 'libmkl_blacs_intelmpi_ilp64.so', 'libmkl_sycl_data_fitting.so.5', 'libmkl_intel_lp64.a', 'libmkl_sycl.a', 'libmkl_intel_lp64.so.2', 'libmkl_core.so.2', 'libmkl_mc3.so.2', 'libmkl_intel_thread.so.2', 'libmkl_scalapack_lp64.so.2', 'libmkl_gf_ilp64.a', 'libmkl_vml_def.so.2', 'libmkl_cdft_core.so.2', 'libmkl_scalapack_ilp64.so', 'libmkl_gnu_thread.a', 'intel64', 'libmkl_scalapack_ilp64.a', 'libmkl_gf_lp64.so', 'libmkl_tbb_thread.so.2', 'libmkl_blacs_openmpi_ilp64.so', 'libmkl_core.so', 'libmkl_lapack95_lp64.a', 'libmkl_intel_lp64.so', 'libmkl_sequential.so', 'libmkl_avx512.so.2', 'libmkl_blacs_intelmpi_ilp64.so.2', 'libmkl_intel_ilp64.so.2', 'libmkl_sycl_sparse.so.5', 'libmkl_gf_lp64.a', 'libmkl_sycl_vm.so.5', 'libmkl_sycl_sparse.so', 'libmkl_gnu_thread.so.2', 'libmkl_intel_thread.so', 'libmkl_sycl_dft.so', 'libmkl_vml_avx512.so.2', 'libmkl_gnu_thread.so', 'libmkl_blacs_openmpi_ilp64.a', 'libmkl_blacs_intelmpi_ilp64.a', 'libmkl_intel_ilp64.a', 'libmkl_sycl.so', 'libmkl_sycl_stats.so', 'libmkl_cdft_core.so', 'libmkl_scalapack_lp64.so', 'cmake', 'libmkl_sycl_lapack.so.5', 'libmkl_sycl_rng.so.5', 'libmkl_sycl_blas.so.5', 'libmkl_blacs_openmpi_lp64.so.2', 'libmkl_def.so.2', 'libmkl_gf_ilp64.so.2', 'libmkl_blacs_intelmpi_lp64.so.2', 'libmkl_cdft_core.a', 'libmkl_gf_lp64.so.2', 'libmkl_rt.so', 'libmkl_blacs_intelmpi_lp64.a', 'libmkl_lapack95_ilp64.a', 'libmkl_intel_thread.a', 'pkgconfig', 'libmkl_avx2.so.2', 'libmkl_core.a', 'libmkl_intel_ilp64.so']
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack -I/tmp/petsc-m5p55c3k/config.libraries  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.libraries/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
char lsame_(void);
static void _check_lsame_(void) { lsame_(); }

int main(void) {
_check_lsame_();
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.libraries/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.libraries/conftest.o  -Wl,-rpath,/opt/intel/oneapi/mkl/2025.0/lib/intel64 -L/opt/intel/oneapi/mkl/2025.0/lib/intel64 -lmkl_intel_lp64 -lmkl_core -lmkl_sequential -lpthread -fortlib 
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
char lsame_(void);
static void _check_lsame_(void) { lsame_(); }
void dummy(void) {_check_lsame_();}

Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.libraries  -fPIC -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.compilers/conftest.F90 
Successful compile:
Source:
      program main
      print*,'testing'
      stop
      end
 
Executing: mpiifort -fc=ifx  -o /tmp/petsc-m5p55c3k/config.compilers/conftest    -fPIC -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.o /tmp/petsc-m5p55c3k/config.compilers/confc.o  -Wl,-rpath,/opt/intel/oneapi/mkl/2025.0/lib/intel64 -L/opt/intel/oneapi/mkl/2025.0/lib/intel64 -lmkl_intel_lp64 -lmkl_core -lmkl_sequential -lpthread -fortlib 
                  Defined "HAVE_LIBMKL_INTEL_LP64" to "1"
                  Defined "HAVE_LIBMKL_CORE" to "1"
                  Defined "HAVE_LIBMKL_SEQUENTIAL" to "1"
                  Defined "HAVE_LIBPTHREAD" to "1"
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
char *dgeev_(void);
char* testroutine(void){return dgeev_();
}
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.setCompilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
char *dgeev_(void);
char* testroutine(void){return dgeev_();
}
Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.setCompilers/libconftest.so  -shared  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.setCompilers/conftest.o -Wl,-rpath,/opt/intel/oneapi/mkl/2025.0/lib/intel64 -L/opt/intel/oneapi/mkl/2025.0/lib/intel64 -fortlib -lmkl_intel_lp64 -lmkl_core -lmkl_sequential -lpthread -lmkl_intel_lp64 -lmkl_core -lmkl_sequential -lpthread 
=============================================================================================
TESTING: checkRuntimeIssues from config.packages.BlasLapack(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/BlasLapack.py:771)
  Determines if BLAS/LAPACK routines use 32 or 64-bit integers
32-bit BLAS indices based on the BLAS/LAPACK library being used
Checking if sdot() returns a float or a double
======== Checking running linked program
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.packages.BlasLapack/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.packages.BlasLapack/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <sys/types.h>
#include <stdlib.h>
#include <stdio.h>
#include <stddef.h>

int main(void) {
FILE *output = fopen("runtimetestoutput","w");
extern float sdot_(const int*,const float*,const int *,const float*,const int*);
                  float x1[1] = {3.0};
                  int one1 = 1;
                  long long int ione1 = 1;
                  float sdotresult = 0;
                  int blasint64 = 0;

                  if (!blasint64) {
                       sdotresult = sdot_(&one1,x1,&one1,x1,&one1);
                     } else {
                       sdotresult = sdot_((const int*)&ione1,x1,(const int*)&ione1,x1,(const int*)&ione1);
                     }
                  fprintf(output, "--known-sdot-returns-double=%d",sdotresult != 9);

  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.packages.BlasLapack/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.packages.BlasLapack/conftest.o -Wl,-rpath,/opt/intel/oneapi/mkl/2025.0/lib/intel64 -L/opt/intel/oneapi/mkl/2025.0/lib/intel64 -lmkl_intel_lp64 -lmkl_core -lmkl_sequential -lpthread -fortlib 
Testing executable /tmp/petsc-m5p55c3k/config.packages.BlasLapack/conftest to see if it can be run
Executing: /tmp/petsc-m5p55c3k/config.packages.BlasLapack/conftest
Running Executable with threads to time it out at 60
Executing: /tmp/petsc-m5p55c3k/config.packages.BlasLapack/conftest
Checking for sdot() return double: result 0
Checking if snrm() returns a float or a double
======== Checking running linked program
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.packages.BlasLapack/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.packages.BlasLapack/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <sys/types.h>
#include <stdlib.h>
#include <stdio.h>
#include <stddef.h>

int main(void) {
FILE *output = fopen("runtimetestoutput","w");
extern float snrm2_(const int*,const float*,const int*);
                  float x2[1] = {3.0};
                  int one2 = 1;
                  long long int ione2 = 1;
                  float normresult = 0;
                  int blasint64 = 0;

                  if (!blasint64) {
                       normresult = snrm2_(&one2,x2,&one2);
                     } else {
                       normresult = snrm2_((const int*)&ione2,x2,(const int*)&ione2);
                     }
                  fprintf(output, "--known-snrm2-returns-double=%d",normresult != 3);

  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.packages.BlasLapack/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.packages.BlasLapack/conftest.o -Wl,-rpath,/opt/intel/oneapi/mkl/2025.0/lib/intel64 -L/opt/intel/oneapi/mkl/2025.0/lib/intel64 -lmkl_intel_lp64 -lmkl_core -lmkl_sequential -lpthread -fortlib 
Testing executable /tmp/petsc-m5p55c3k/config.packages.BlasLapack/conftest to see if it can be run
Executing: /tmp/petsc-m5p55c3k/config.packages.BlasLapack/conftest
Running Executable with threads to time it out at 60
Executing: /tmp/petsc-m5p55c3k/config.packages.BlasLapack/conftest
Checking for snrm2() return double: result 0
            Checking for functions [bli_thread_set_num_threads] in library ['/opt/intel/oneapi/mkl/2025.0/lib/intel64/libmkl_intel_lp64.a', 'mkl_core', 'mkl_sequential', 'pthread', '-fortlib'] []
            Checking directory of requested libraries:/opt/intel/oneapi/mkl/2025.0/lib/intel64 for first library:libmkl_intel_lp64.
            Files in directory:['libmkl_rt.so.2', 'libmkl_blas95_ilp64.a', 'libmkl_vml_avx2.so.2', 'libmkl_vml_cmpt.so.2', 'libmkl_tbb_thread.a', 'libmkl_blacs_openmpi_ilp64.so.2', 'libmkl_scalapack_lp64.a', 'libmkl_sycl_lapack.so', 'libmkl_sycl_data_fitting.so', 'libmkl_sequential.a', 'libmkl_sequential.so.2', 'libmkl_blas95_lp64.a', 'libmkl_blacs_openmpi_lp64.so', 'libmkl_tbb_thread.so', 'libmkl_sycl_vm.so', 'libmkl_sycl_blas.so', 'libmkl_sycl_dft.so.5', 'libmkl_scalapack_ilp64.so.2', 'libmkl_sycl_stats.so.5', 'libmkl_gf_ilp64.so', 'libmkl_blacs_intelmpi_lp64.so', 'libmkl_sycl_rng.so', 'libmkl_vml_mc3.so.2', 'libmkl_blacs_openmpi_lp64.a', 'libmkl_blacs_intelmpi_ilp64.so', 'libmkl_sycl_data_fitting.so.5', 'libmkl_intel_lp64.a', 'libmkl_sycl.a', 'libmkl_intel_lp64.so.2', 'libmkl_core.so.2', 'libmkl_mc3.so.2', 'libmkl_intel_thread.so.2', 'libmkl_scalapack_lp64.so.2', 'libmkl_gf_ilp64.a', 'libmkl_vml_def.so.2', 'libmkl_cdft_core.so.2', 'libmkl_scalapack_ilp64.so', 'libmkl_gnu_thread.a', 'intel64', 'libmkl_scalapack_ilp64.a', 'libmkl_gf_lp64.so', 'libmkl_tbb_thread.so.2', 'libmkl_blacs_openmpi_ilp64.so', 'libmkl_core.so', 'libmkl_lapack95_lp64.a', 'libmkl_intel_lp64.so', 'libmkl_sequential.so', 'libmkl_avx512.so.2', 'libmkl_blacs_intelmpi_ilp64.so.2', 'libmkl_intel_ilp64.so.2', 'libmkl_sycl_sparse.so.5', 'libmkl_gf_lp64.a', 'libmkl_sycl_vm.so.5', 'libmkl_sycl_sparse.so', 'libmkl_gnu_thread.so.2', 'libmkl_intel_thread.so', 'libmkl_sycl_dft.so', 'libmkl_vml_avx512.so.2', 'libmkl_gnu_thread.so', 'libmkl_blacs_openmpi_ilp64.a', 'libmkl_blacs_intelmpi_ilp64.a', 'libmkl_intel_ilp64.a', 'libmkl_sycl.so', 'libmkl_sycl_stats.so', 'libmkl_cdft_core.so', 'libmkl_scalapack_lp64.so', 'cmake', 'libmkl_sycl_lapack.so.5', 'libmkl_sycl_rng.so.5', 'libmkl_sycl_blas.so.5', 'libmkl_blacs_openmpi_lp64.so.2', 'libmkl_def.so.2', 'libmkl_gf_ilp64.so.2', 'libmkl_blacs_intelmpi_lp64.so.2', 'libmkl_cdft_core.a', 'libmkl_gf_lp64.so.2', 'libmkl_rt.so', 'libmkl_blacs_intelmpi_lp64.a', 'libmkl_lapack95_ilp64.a', 'libmkl_intel_thread.a', 'pkgconfig', 'libmkl_avx2.so.2', 'libmkl_core.a', 'libmkl_intel_ilp64.so']
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.libraries/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
char bli_thread_set_num_threads(void);
static void _check_bli_thread_set_num_threads(void) { bli_thread_set_num_threads(); }

int main(void) {
_check_bli_thread_set_num_threads();
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.libraries/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.libraries/conftest.o  -Wl,-rpath,/opt/intel/oneapi/mkl/2025.0/lib/intel64 -L/opt/intel/oneapi/mkl/2025.0/lib/intel64 -lmkl_intel_lp64 -lmkl_core -lmkl_sequential -lpthread -fortlib 
stdout:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.libraries/conftest.o: in function `main':
conftest.c:(.text+0x16): undefined reference to `bli_thread_set_num_threads'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Possible ERROR while running linker: exit code 1
stderr:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.libraries/conftest.o: in function `main':
conftest.c:(.text+0x16): undefined reference to `bli_thread_set_num_threads'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
            Checking for functions [openblas_set_num_threads] in library ['/opt/intel/oneapi/mkl/2025.0/lib/intel64/libmkl_intel_lp64.a', 'mkl_core', 'mkl_sequential', 'pthread', '-fortlib'] []
            Checking directory of requested libraries:/opt/intel/oneapi/mkl/2025.0/lib/intel64 for first library:libmkl_intel_lp64.
            Files in directory:['libmkl_rt.so.2', 'libmkl_blas95_ilp64.a', 'libmkl_vml_avx2.so.2', 'libmkl_vml_cmpt.so.2', 'libmkl_tbb_thread.a', 'libmkl_blacs_openmpi_ilp64.so.2', 'libmkl_scalapack_lp64.a', 'libmkl_sycl_lapack.so', 'libmkl_sycl_data_fitting.so', 'libmkl_sequential.a', 'libmkl_sequential.so.2', 'libmkl_blas95_lp64.a', 'libmkl_blacs_openmpi_lp64.so', 'libmkl_tbb_thread.so', 'libmkl_sycl_vm.so', 'libmkl_sycl_blas.so', 'libmkl_sycl_dft.so.5', 'libmkl_scalapack_ilp64.so.2', 'libmkl_sycl_stats.so.5', 'libmkl_gf_ilp64.so', 'libmkl_blacs_intelmpi_lp64.so', 'libmkl_sycl_rng.so', 'libmkl_vml_mc3.so.2', 'libmkl_blacs_openmpi_lp64.a', 'libmkl_blacs_intelmpi_ilp64.so', 'libmkl_sycl_data_fitting.so.5', 'libmkl_intel_lp64.a', 'libmkl_sycl.a', 'libmkl_intel_lp64.so.2', 'libmkl_core.so.2', 'libmkl_mc3.so.2', 'libmkl_intel_thread.so.2', 'libmkl_scalapack_lp64.so.2', 'libmkl_gf_ilp64.a', 'libmkl_vml_def.so.2', 'libmkl_cdft_core.so.2', 'libmkl_scalapack_ilp64.so', 'libmkl_gnu_thread.a', 'intel64', 'libmkl_scalapack_ilp64.a', 'libmkl_gf_lp64.so', 'libmkl_tbb_thread.so.2', 'libmkl_blacs_openmpi_ilp64.so', 'libmkl_core.so', 'libmkl_lapack95_lp64.a', 'libmkl_intel_lp64.so', 'libmkl_sequential.so', 'libmkl_avx512.so.2', 'libmkl_blacs_intelmpi_ilp64.so.2', 'libmkl_intel_ilp64.so.2', 'libmkl_sycl_sparse.so.5', 'libmkl_gf_lp64.a', 'libmkl_sycl_vm.so.5', 'libmkl_sycl_sparse.so', 'libmkl_gnu_thread.so.2', 'libmkl_intel_thread.so', 'libmkl_sycl_dft.so', 'libmkl_vml_avx512.so.2', 'libmkl_gnu_thread.so', 'libmkl_blacs_openmpi_ilp64.a', 'libmkl_blacs_intelmpi_ilp64.a', 'libmkl_intel_ilp64.a', 'libmkl_sycl.so', 'libmkl_sycl_stats.so', 'libmkl_cdft_core.so', 'libmkl_scalapack_lp64.so', 'cmake', 'libmkl_sycl_lapack.so.5', 'libmkl_sycl_rng.so.5', 'libmkl_sycl_blas.so.5', 'libmkl_blacs_openmpi_lp64.so.2', 'libmkl_def.so.2', 'libmkl_gf_ilp64.so.2', 'libmkl_blacs_intelmpi_lp64.so.2', 'libmkl_cdft_core.a', 'libmkl_gf_lp64.so.2', 'libmkl_rt.so', 'libmkl_blacs_intelmpi_lp64.a', 'libmkl_lapack95_ilp64.a', 'libmkl_intel_thread.a', 'pkgconfig', 'libmkl_avx2.so.2', 'libmkl_core.a', 'libmkl_intel_ilp64.so']
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.libraries/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
char openblas_set_num_threads(void);
static void _check_openblas_set_num_threads(void) { openblas_set_num_threads(); }

int main(void) {
_check_openblas_set_num_threads();
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.libraries/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.libraries/conftest.o  -Wl,-rpath,/opt/intel/oneapi/mkl/2025.0/lib/intel64 -L/opt/intel/oneapi/mkl/2025.0/lib/intel64 -lmkl_intel_lp64 -lmkl_core -lmkl_sequential -lpthread -fortlib 
stdout:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.libraries/conftest.o: in function `main':
conftest.c:(.text+0x16): undefined reference to `openblas_set_num_threads'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Possible ERROR while running linker: exit code 1
stderr:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.libraries/conftest.o: in function `main':
conftest.c:(.text+0x16): undefined reference to `openblas_set_num_threads'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
            Checking for functions [APL_dgemm] in library ['/opt/intel/oneapi/mkl/2025.0/lib/intel64/libmkl_intel_lp64.a', 'mkl_core', 'mkl_sequential', 'pthread', '-fortlib'] []
            Checking directory of requested libraries:/opt/intel/oneapi/mkl/2025.0/lib/intel64 for first library:libmkl_intel_lp64.
            Files in directory:['libmkl_rt.so.2', 'libmkl_blas95_ilp64.a', 'libmkl_vml_avx2.so.2', 'libmkl_vml_cmpt.so.2', 'libmkl_tbb_thread.a', 'libmkl_blacs_openmpi_ilp64.so.2', 'libmkl_scalapack_lp64.a', 'libmkl_sycl_lapack.so', 'libmkl_sycl_data_fitting.so', 'libmkl_sequential.a', 'libmkl_sequential.so.2', 'libmkl_blas95_lp64.a', 'libmkl_blacs_openmpi_lp64.so', 'libmkl_tbb_thread.so', 'libmkl_sycl_vm.so', 'libmkl_sycl_blas.so', 'libmkl_sycl_dft.so.5', 'libmkl_scalapack_ilp64.so.2', 'libmkl_sycl_stats.so.5', 'libmkl_gf_ilp64.so', 'libmkl_blacs_intelmpi_lp64.so', 'libmkl_sycl_rng.so', 'libmkl_vml_mc3.so.2', 'libmkl_blacs_openmpi_lp64.a', 'libmkl_blacs_intelmpi_ilp64.so', 'libmkl_sycl_data_fitting.so.5', 'libmkl_intel_lp64.a', 'libmkl_sycl.a', 'libmkl_intel_lp64.so.2', 'libmkl_core.so.2', 'libmkl_mc3.so.2', 'libmkl_intel_thread.so.2', 'libmkl_scalapack_lp64.so.2', 'libmkl_gf_ilp64.a', 'libmkl_vml_def.so.2', 'libmkl_cdft_core.so.2', 'libmkl_scalapack_ilp64.so', 'libmkl_gnu_thread.a', 'intel64', 'libmkl_scalapack_ilp64.a', 'libmkl_gf_lp64.so', 'libmkl_tbb_thread.so.2', 'libmkl_blacs_openmpi_ilp64.so', 'libmkl_core.so', 'libmkl_lapack95_lp64.a', 'libmkl_intel_lp64.so', 'libmkl_sequential.so', 'libmkl_avx512.so.2', 'libmkl_blacs_intelmpi_ilp64.so.2', 'libmkl_intel_ilp64.so.2', 'libmkl_sycl_sparse.so.5', 'libmkl_gf_lp64.a', 'libmkl_sycl_vm.so.5', 'libmkl_sycl_sparse.so', 'libmkl_gnu_thread.so.2', 'libmkl_intel_thread.so', 'libmkl_sycl_dft.so', 'libmkl_vml_avx512.so.2', 'libmkl_gnu_thread.so', 'libmkl_blacs_openmpi_ilp64.a', 'libmkl_blacs_intelmpi_ilp64.a', 'libmkl_intel_ilp64.a', 'libmkl_sycl.so', 'libmkl_sycl_stats.so', 'libmkl_cdft_core.so', 'libmkl_scalapack_lp64.so', 'cmake', 'libmkl_sycl_lapack.so.5', 'libmkl_sycl_rng.so.5', 'libmkl_sycl_blas.so.5', 'libmkl_blacs_openmpi_lp64.so.2', 'libmkl_def.so.2', 'libmkl_gf_ilp64.so.2', 'libmkl_blacs_intelmpi_lp64.so.2', 'libmkl_cdft_core.a', 'libmkl_gf_lp64.so.2', 'libmkl_rt.so', 'libmkl_blacs_intelmpi_lp64.a', 'libmkl_lapack95_ilp64.a', 'libmkl_intel_thread.a', 'pkgconfig', 'libmkl_avx2.so.2', 'libmkl_core.a', 'libmkl_intel_ilp64.so']
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.libraries/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
char APL_dgemm(void);
static void _check_APL_dgemm(void) { APL_dgemm(); }

int main(void) {
_check_APL_dgemm();
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.libraries/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.libraries/conftest.o  -Wl,-rpath,/opt/intel/oneapi/mkl/2025.0/lib/intel64 -L/opt/intel/oneapi/mkl/2025.0/lib/intel64 -lmkl_intel_lp64 -lmkl_core -lmkl_sequential -lpthread -fortlib 
stdout:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.libraries/conftest.o: in function `main':
conftest.c:(.text+0x16): undefined reference to `APL_dgemm'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
Possible ERROR while running linker: exit code 1
stderr:
/usr/bin/ld: /tmp/petsc-m5p55c3k/config.libraries/conftest.o: in function `main':
conftest.c:(.text+0x16): undefined reference to `APL_dgemm'
icx: error: linker command failed with exit code 1 (use -v to see invocation)
=============================================================================================
TESTING: checkVersion from config.packages.BlasLapack(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1171)
  Uses self.version, self.minversion, self.maxversion, self.versionname, and self.versioninclude to determine if package has required version
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"

#include "mkl_version.h"

#define  PetscXstr_(s) PetscStr_(s)
#define  PetscStr_(s)  #s
const char *ver = "petscpkgver(" PetscXstr_(INTEL_MKL_VERSION) ")";

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.packages.X -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack   /tmp/petsc-m5p55c3k/config.packages.BlasLapack/conftest.c 
Found the raw version string: (" "20250000" ")"
This is the processed version string: 20250000
For blaslapack need  <= 20250000 <= 
=============================================================================================
TESTING: checkSharedLibrary from config.packages.BlasLapack(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1084)
  By default we don't care about checking if the library is shared
    child config.packages.BlasLapack took 5.361953 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.sundials2(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.sundials2(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.sundials2 took 0.001201 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.spai(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/spai.py:54)
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.spai(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.spai took 0.001215 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.raja(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.raja(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.raja took 0.001176 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.pARMS(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.pARMS(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.pARMS took 0.001152 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.p4est(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.p4est(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.p4est took 0.001101 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.mkl_sparse_optimize(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: checkDependencies from config.packages.mkl_sparse_optimize(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:988)
  Loop over declared dependencies of package and error if any are missing
=============================================================================================
TESTING: configureLibrary from config.packages.mkl_sparse_optimize(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/mkl_sparse_optimize.py:52)
==================================================================================
            Checking for a functional mkl_sparse_optimize
            Checking for library in Compiler specific search MKL_SPARSE_OPTIMIZE: []
=============================================================================================
TESTING: check from config.libraries(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/libraries.py:186)
  Checks that the library "libName" contains "funcs", and if it does defines HAVE_LIB"libName"
       - libDir may be a list of directories
       - libName may be a list of library names
                Checking for functions [mkl_sparse_optimize mkl_sparse_s_create_bsr] in library [] ['/opt/intel/oneapi/mkl/2025.0/lib/intel64/libmkl_intel_lp64.a', 'mkl_core', 'mkl_sequential', 'pthread', '-fortlib']
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.libraries/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
char mkl_sparse_optimize(void);
static void _check_mkl_sparse_optimize(void) { mkl_sparse_optimize(); }
char mkl_sparse_s_create_bsr(void);
static void _check_mkl_sparse_s_create_bsr(void) { mkl_sparse_s_create_bsr(); }

int main(void) {
_check_mkl_sparse_optimize();
_check_mkl_sparse_s_create_bsr();
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.libraries/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.libraries/conftest.o  -Wl,-rpath,/opt/intel/oneapi/mkl/2025.0/lib/intel64 -L/opt/intel/oneapi/mkl/2025.0/lib/intel64 -lmkl_intel_lp64 -lmkl_core -lmkl_sequential -lpthread -fortlib 
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
char mkl_sparse_optimize(void);
static void _check_mkl_sparse_optimize(void) { mkl_sparse_optimize(); }
char mkl_sparse_s_create_bsr(void);
static void _check_mkl_sparse_s_create_bsr(void) { mkl_sparse_s_create_bsr(); }
void dummy(void) {_check_mkl_sparse_optimize();
_check_mkl_sparse_s_create_bsr();}

Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.libraries  -fPIC -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.compilers/conftest.F90 
Successful compile:
Source:
      program main
      print*,'testing'
      stop
      end
 
Executing: mpiifort -fc=ifx  -o /tmp/petsc-m5p55c3k/config.compilers/conftest    -fPIC -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.o /tmp/petsc-m5p55c3k/config.compilers/confc.o  -Wl,-rpath,/opt/intel/oneapi/mkl/2025.0/lib/intel64 -L/opt/intel/oneapi/mkl/2025.0/lib/intel64 -lmkl_intel_lp64 -lmkl_core -lmkl_sequential -lpthread -fortlib 
            Checking for headers ['mkl.h', 'mkl_spblas.h'] in Compiler specific search MKL_SPARSE_OPTIMIZE: []
=============================================================================================
TESTING: checkInclude from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:89)
  Checks if a particular include file can be found along particular include paths
Checking for header files ['mkl.h', 'mkl_spblas.h'] in []
                  Checking include with compiler flags var CPPFLAGS []
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <mkl.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.packages.X -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack   /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
                  Checking include with compiler flags var CPPFLAGS []
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <mkl_spblas.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.packages.X -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack   /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
Found header files ['mkl.h', 'mkl_spblas.h'] in []
=============================================================================================
TESTING: checkHaveUsableSp2m from config.packages.mkl_sparse_optimize(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/mkl_sparse_optimize.py:25)
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.packages.mkl_sparse_optimize/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack -I/tmp/petsc-m5p55c3k/config.packages.mkl_sparse_optimize  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.packages.mkl_sparse_optimize/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <mkl_spblas.h>
sparse_request_t request = SPARSE_STAGE_FULL_MULT_NO_VAL;

int main(void) {
  return 0;
}

Looking for mkl_sparse_sp2m() that is usable for MatMatMultSymbolic()/Numeric(): result 1
                Defined "HAVE_MKL_SPARSE_SP2M_FEATURE" to "1"
=============================================================================================
TESTING: checkMklSpblasDeprecated from config.packages.mkl_sparse_optimize(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/mkl_sparse_optimize.py:37)
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.packages.mkl_sparse_optimize/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack -I/tmp/petsc-m5p55c3k/config.packages.mkl_sparse_optimize  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.packages.mkl_sparse_optimize/conftest.c 
stdout:
/tmp/petsc-m5p55c3k/config.packages.mkl_sparse_optimize/conftest.c:4:1: error: unknown type name 'DEPRECATED'
    4 | DEPRECATED void foo();
      | ^
1 error generated.
Possible ERROR while running compiler: exit code 1
stderr:
/tmp/petsc-m5p55c3k/config.packages.mkl_sparse_optimize/conftest.c:4:1: error: unknown type name 'DEPRECATED'
    4 | DEPRECATED void foo();
      | ^
1 error generated.
Source:
#include "confdefs.h"
#include "conffix.h"
#include <mkl_spblas.h>
DEPRECATED void foo();

int main(void) {
  return 0;
}

Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.packages.mkl_sparse_optimize/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack -I/tmp/petsc-m5p55c3k/config.packages.mkl_sparse_optimize  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.packages.mkl_sparse_optimize/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <mkl_spblas.h>
MKL_DEPRECATED void foo();

int main(void) {
  return 0;
}

Checking to see if original MKL SpBLAS is declared deprecated: result 1
                Defined "MKL_SPBLAS_DEPRECATED" to "1"
=============================================================================================
TESTING: checkVersion from config.packages.mkl_sparse_optimize(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1171)
  Uses self.version, self.minversion, self.maxversion, self.versionname, and self.versioninclude to determine if package has required version
=============================================================================================
TESTING: checkSharedLibrary from config.packages.mkl_sparse_optimize(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1084)
  By default we don't care about checking if the library is shared
    child config.packages.mkl_sparse_optimize took 1.032475 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.mkl_sparse(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: checkDependencies from config.packages.mkl_sparse(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:988)
  Loop over declared dependencies of package and error if any are missing
=============================================================================================
TESTING: configureLibrary from config.packages.mkl_sparse(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/mkl_sparse.py:25)
==================================================================================
            Checking for a functional mkl_sparse
            Checking for library in Compiler specific search MKL_SPARSE: []
=============================================================================================
TESTING: check from config.libraries(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/libraries.py:186)
  Checks that the library "libName" contains "funcs", and if it does defines HAVE_LIB"libName"
       - libDir may be a list of directories
       - libName may be a list of library names
                Checking for functions [mkl_dcsrmv] in library [] ['/opt/intel/oneapi/mkl/2025.0/lib/intel64/libmkl_intel_lp64.a', 'mkl_core', 'mkl_sequential', 'pthread', '-fortlib']
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.packages.mkl_sparse_optimize  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.libraries/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
char mkl_dcsrmv(void);
static void _check_mkl_dcsrmv(void) { mkl_dcsrmv(); }

int main(void) {
_check_mkl_dcsrmv();
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/config.libraries/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/config.libraries/conftest.o  -Wl,-rpath,/opt/intel/oneapi/mkl/2025.0/lib/intel64 -L/opt/intel/oneapi/mkl/2025.0/lib/intel64 -lmkl_intel_lp64 -lmkl_core -lmkl_sequential -lpthread -fortlib 
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.packages.mkl_sparse_optimize  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
char mkl_dcsrmv(void);
static void _check_mkl_dcsrmv(void) { mkl_dcsrmv(); }
void dummy(void) {_check_mkl_dcsrmv();}

Executing: mpiifort -fc=ifx -c -o /tmp/petsc-m5p55c3k/config.compilers/conftest.o -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.libraries  -fPIC -O2 -march=native -mtune=native   /tmp/petsc-m5p55c3k/config.compilers/conftest.F90 
Successful compile:
Source:
      program main
      print*,'testing'
      stop
      end
 
Executing: mpiifort -fc=ifx  -o /tmp/petsc-m5p55c3k/config.compilers/conftest    -fPIC -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.compilers/conftest.o /tmp/petsc-m5p55c3k/config.compilers/confc.o  -Wl,-rpath,/opt/intel/oneapi/mkl/2025.0/lib/intel64 -L/opt/intel/oneapi/mkl/2025.0/lib/intel64 -lmkl_intel_lp64 -lmkl_core -lmkl_sequential -lpthread -fortlib 
            Checking for headers ['mkl.h', 'mkl_spblas.h'] in Compiler specific search MKL_SPARSE: []
=============================================================================================
TESTING: checkInclude from config.headers(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/headers.py:89)
  Checks if a particular include file can be found along particular include paths
Checking for header files ['mkl.h', 'mkl_spblas.h'] in []
                  Checking include with compiler flags var CPPFLAGS []
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <mkl.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.packages.X -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack   /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
                  Checking include with compiler flags var CPPFLAGS []
Preprocessing source:
#include "confdefs.h"
#include "conffix.h"
#include <mkl_spblas.h>

Executing: mpiicc -cc=icx -E  -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.packages.X -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack   /tmp/petsc-m5p55c3k/config.headers/conftest.c 
Preprocess output before filtering:
Preprocess output after filtering:
Found header files ['mkl.h', 'mkl_spblas.h'] in []
=============================================================================================
TESTING: checkVersion from config.packages.mkl_sparse(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1171)
  Uses self.version, self.minversion, self.maxversion, self.versionname, and self.versioninclude to determine if package has required version
=============================================================================================
TESTING: checkSharedLibrary from config.packages.mkl_sparse(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1084)
  By default we don't care about checking if the library is shared
    child config.packages.mkl_sparse took 0.876992 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.mkl_cpardiso(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/mkl_cpardiso.py:20)
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.mkl_cpardiso(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.mkl_cpardiso took 0.000723 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.kokkos(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.kokkos(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.kokkos took 0.000687 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.kokkos-kernels(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.kokkos-kernels(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.kokkos-kernels took 0.000726 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.htool(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.htool(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.htool took 0.000643 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.hpl(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.hpl(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.hpl took 0.000738 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.magma(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.magma(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.magma took 0.000713 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.kblas(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.kblas(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.kblas took 0.000678 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.h2opus(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.h2opus(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.h2opus took 0.000641 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.fftw(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.fftw(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.fftw took 0.000696 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.elemental(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.elemental(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.elemental took 0.000716 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.ml(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.ml(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.ml took 0.000687 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.mkl_pardiso(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/mkl_pardiso.py:21)
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.mkl_pardiso(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.mkl_pardiso took 0.000633 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.SuperLU_DIST(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.SuperLU_DIST(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.SuperLU_DIST took 0.000682 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.SuperLU(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.SuperLU(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.SuperLU took 0.000697 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.PaStiX(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.PaStiX(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.PaStiX took 0.000683 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.scalapack(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.scalapack(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.scalapack took 0.000702 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.slate(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.slate(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.slate took 0.000679 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.butterflypack(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.butterflypack(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.butterflypack took 0.000686 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.strumpack(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/strumpack.py:108)
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.strumpack(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.strumpack took 0.000752 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.MUMPS(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/MUMPS.py:70)
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.MUMPS(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.MUMPS took 0.000840 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.MOAB(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.MOAB(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.MOAB took 0.000708 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.SuiteSparse(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.SuiteSparse(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.SuiteSparse took 0.000687 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.Chombo(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/Chombo.py:126)
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.Chombo(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.Chombo took 0.000733 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.hypre(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/hypre.py:185)
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.hypre(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.hypre took 0.000751 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.Trilinos(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.Trilinos(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.Trilinos took 0.000691 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.xSDKTrilinos(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.xSDKTrilinos(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.xSDKTrilinos took 0.000666 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.mstk(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.mstk(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1088)
  Called if --with-packagename=0; does nothing by default
    child config.packages.mstk took 0.000675 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.slepc(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.slepc(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/slepc.py:110)
            Defined make rule "slepc-build" with dependencies "" and code []
            Defined make rule "slepc-install" with dependencies "" and code []
    child config.packages.slepc took 0.001063 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.hpddm(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.hpddm(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/hpddm.py:108)
            Defined make rule "hpddm-build" with dependencies "" and code []
            Defined make rule "hpddm-install" with dependencies "" and code []
    child config.packages.hpddm took 0.001484 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.bamg(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.bamg(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/bamg.py:94)
            Defined make rule "bamg-build" with dependencies "" and code []
            Defined make rule "bamg-install" with dependencies "" and code []
    child config.packages.bamg took 0.001550 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.MFEM(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.MFEM(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/MFEM.py:243)
            Defined make rule "mfem-build" with dependencies "" and code []
            Defined make rule "mfem-install" with dependencies "" and code []
    child config.packages.MFEM took 0.001486 seconds
=============================================================================================
TESTING: consistencyChecks from config.packages.AMReX(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/package.py:1092)
  Checks run on the system and currently installed packages that need to be correct for the package now being configured
=============================================================================================
TESTING: alternateConfigureLibrary from config.packages.AMReX(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/BuildSystem/config/packages/AMReX.py:166)
  Adds rules for building AMReX to PETSc makefiles
            Defined make rule "amrex-build" with dependencies "" and code []
            Defined make rule "amrex-install" with dependencies "" and code []
    child config.packages.AMReX took 0.001613 seconds
=============================================================================================
TESTING: configureRTLDDefault from PETSc.Configure(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/PETSc/Configure.py:770)
  Check for dynamic library feature
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.packages.mkl_sparse_optimize -I/tmp/petsc-m5p55c3k/PETSc.Configure  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <dlfcn.h>
 void *ptr =  RTLD_DEFAULT;

int main(void) {
  return 0;
}

            Defined "HAVE_RTLD_DEFAULT" to "1"
=============================================================================================
TESTING: configurePrefetch from PETSc.Configure(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/PETSc/Configure.py:546)
  Sees if there are any prefetch functions supported
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.packages.mkl_sparse_optimize -I/tmp/petsc-m5p55c3k/PETSc.Configure  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <xmmintrin.h>

int main(void) {
void *v = 0;_mm_prefetch((const char*)v,_MM_HINT_NTA);

  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/PETSc.Configure/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.o 
            Defined "HAVE_XMMINTRIN_H" to "1"
            Defined "Prefetch(a,b,c)" to "_mm_prefetch((const char*)(a),(c))"
            Defined "PREFETCH_HINT_NTA" to "_MM_HINT_NTA"
            Defined "PREFETCH_HINT_T0" to "_MM_HINT_T0"
            Defined "PREFETCH_HINT_T1" to "_MM_HINT_T1"
            Defined "PREFETCH_HINT_T2" to "_MM_HINT_T2"
=============================================================================================
TESTING: configureUnused from PETSc.Configure(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/PETSc/Configure.py:614)
  Sees if __attribute((unused)) is supported
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.packages.mkl_sparse_optimize -I/tmp/petsc-m5p55c3k/PETSc.Configure  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
__attribute((unused)) static int myfunc(__attribute((unused)) void *name){ return 1;}

int main(void) {
int i = 0;
int j = myfunc(&i);
(void)j;
typedef void* atype;
__attribute((unused))  atype a;
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/PETSc.Configure/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.o 
            Defined "UNUSED" to "__attribute((unused))"
=============================================================================================
TESTING: configureDeprecated from PETSc.Configure(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/PETSc/Configure.py:632)
  Check if __attribute((deprecated)) is supported
Executing: mpiicc -cc=icx --help | head -n 80
stdout:
OVERVIEW: Intel(R) oneAPI DPC++/C++ Compiler
USAGE: icx [options] file...
OPTIONS:
  -###                    Print (but do not run) the commands to run for this compilation
  -#x                     Show commands to run and use verbose output
  -#                      Print (but do not run) the commands to run for this compilation
  -align                  Align doubles to two words in structs (x86 only)
  --amdgpu-arch-tool=<value>
                          Tool used for detecting AMD GPU arch in the system.
  --analyzer-output <value>
                          Static analyzer report output format (html|plist|plist-multi-file|plist-html|sarif|sarif-html|text).
  --analyze               Run the static analyzer
  -ansi-alias             enable use of ANSI aliasing rules optimizations user asserts that the program adheres to these rules
  -arcmt-migrate-emit-errors
                          Emit ARC errors even if the migrator can fix them
  -arcmt-migrate-report-output <value>
                          Output path for the plist report
  -ax<codes>              generate multiple, processor-specific, auto-dispatched code paths for Intel® processors, specified by <codes>, if there is a performance benefit
  -B <prefix>             Search $prefix$file for executables, libraries, and data files. If $prefix is a directory, search $prefix/$file
  -b <arg>                Pass -b <arg> to the linker on AIX
  -CC                     Include comments from within macros in preprocessed output
  -cl-denorms-are-zero    OpenCL only. Allow denormals to be flushed to zero.
  -cl-ext=<value>         OpenCL only. Enable or disable OpenCL extensions/optional features. The argument is a comma-separated sequence of one or more extension names, each prefixed by '+' or '-'.
  -cl-fast-relaxed-math   OpenCL only. Sets -cl-finite-math-only and -cl-unsafe-math-optimizations, and defines __FAST_RELAXED_MATH__.
  -cl-finite-math-only    OpenCL only. Allow floating-point optimizations that assume arguments and results are not NaNs or +-Inf.
  -cl-fp32-correctly-rounded-divide-sqrt
                          OpenCL only. Specify that single precision floating-point divide and sqrt used in the program source are correctly rounded.
  -cl-kernel-arg-info     OpenCL only. Generate kernel argument metadata.
  -cl-mad-enable          OpenCL only. Allow use of less precise MAD computations in the generated binary.
  -cl-no-signed-zeros     OpenCL only. Allow use of less precise no signed zeros computations in the generated binary.
  -cl-no-stdinc           OpenCL only. Disables all standard includes containing non-native compiler types and functions.
  -cl-opt-disable         OpenCL only. This option disables all optimizations. By default optimizations are enabled.
  -cl-single-precision-constant
                          OpenCL only. Treat double precision floating-point constant as single precision constant.
  -cl-std=<value>         OpenCL language standard to compile for.
  -cl-strict-aliasing     OpenCL only. This option is added for compatibility with OpenCL 1.0.
  -cl-uniform-work-group-size
                          OpenCL only. Defines that the global work-size be a multiple of the work-group size specified to clEnqueueNDRangeKernel
  -cl-unsafe-math-optimizations
                          OpenCL only. Allow unsafe floating-point optimizations.  Also implies -cl-no-signed-zeros and -cl-mad-enable.
  --config=<file>         Specify configuration file
  --cuda-compile-host-device
                          Compile CUDA code for both host and device (default). Has no effect on non-CUDA compilations.
  --cuda-device-only      Compile CUDA code for device only
  --cuda-feature=<value>  Manually specify the CUDA feature to use
  --cuda-host-only        Compile CUDA code for host only. Has no effect on non-CUDA compilations.
  --cuda-include-ptx=<value>
                          Include PTX for the following GPU architecture (e.g. sm_35) or 'all'. May be specified more than once.
  --cuda-noopt-device-debug
                          Enable device-side debug info generation. Disables ptxas optimizations.
  --cuda-path-ignore-env  Ignore environment variables to detect CUDA installation
  --cuda-path=<value>     CUDA installation path
  -cuid=<value>           An ID for compilation unit, which should be the same for the same compilation unit but different for different compilation units. It is used to externalize device-side static variables for single source offloading languages CUDA and HIP so that they can be accessed by the host code of the same compilation unit.
  -cxx-isystem <directory>
                          Add directory to the C++ SYSTEM include search path
  -C                      Include comments in preprocessed output
  -c                      Only run preprocess, compile, and assemble steps
  -daal=<value>           Link Intel(R) Data Analytics Acceleration Library (Intel(R) DAAL) libraries and bring in the associated headers (parallel)
  -darwin-target-variant-triple <value>
                          Specify the darwin target variant triple
  -darwin-target-variant <value>
                          Generate code for an additional runtime variant of the deployment target
  -dD                     Print macro definitions in -E mode in addition to normal output
  -debug=<value>          Enable debug information. Valid args: none, all, full, minimal
  -dependency-dot <value> Filename to write DOT-formatted header dependencies to
  -dependency-file <value>
                          Filename (or -) to write dependency output to
  -device-math-lib=<value>
                          Control the addition of device math libraries when compiling for other devices.  Valid arguments are fp64, fp32
  -dI                     Print include directives in -E mode in addition to normal output
  -dM                     Print macro definitions in -E mode instead of normal output
  -dryrun                 Print (but do not run) the commands to run for this compilation
  -dsym-dir <dir>         Directory to output dSYM's (if any) to
  -dumpdir <dumppfx>      Use <dumpfpx> as a prefix to form auxiliary and dump file names
  -dumpmachine            Display the compiler's target processor
  -dumpversion            Display the version of the compiler
  -D <macro>=<value>      Define <macro> to <value> (or 1 if <value> omitted)
  --embed-dir=<dir>       Add directory to embed search path
Detected Intel compiler
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.packages.mkl_sparse_optimize -I/tmp/petsc-m5p55c3k/PETSc.Configure  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#define DEPRECATED_FUNCTION_BASE(string_literal_why) __attribute__((deprecated(string_literal_why)))
DEPRECATED_FUNCTION_BASE("asdasdadsasd") int myfunc(void) { return 1; }

int main(void) {
  return 0;
}

            configureDeprecated: '__attribute__((deprecated(string_literal_why)))' appears to work
              Defined "DEPRECATED_FUNCTION_BASE(string_literal_why)" to "__attribute__((deprecated(string_literal_why)))"
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.packages.mkl_sparse_optimize -I/tmp/petsc-m5p55c3k/PETSc.Configure  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#define DEPRECATED_TYPEDEF_BASE(string_literal_why) __attribute__((deprecated(string_literal_why)))
typedef int my_int DEPRECATED_TYPEDEF_BASE("asdasdadsasd");

int main(void) {
  return 0;
}

            configureDeprecated: '__attribute__((deprecated(string_literal_why)))' appears to work
              Defined "DEPRECATED_TYPEDEF_BASE(string_literal_why)" to "__attribute__((deprecated(string_literal_why)))"
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.packages.mkl_sparse_optimize -I/tmp/petsc-m5p55c3k/PETSc.Configure  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#define DEPRECATED_ENUM_BASE(string_literal_why) __attribute__((deprecated(string_literal_why)))
enum E { oldval DEPRECATED_ENUM_BASE("asdasdadsasd"), newval };

int main(void) {
  return 0;
}

            configureDeprecated: '__attribute__((deprecated(string_literal_why)))' appears to work
              Defined "DEPRECATED_ENUM_BASE(string_literal_why)" to "__attribute__((deprecated(string_literal_why)))"
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.packages.mkl_sparse_optimize -I/tmp/petsc-m5p55c3k/PETSc.Configure  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#define DEPRECATED_OBJECT_BASE(string_literal_why) __attribute__((deprecated(string_literal_why)))
DEPRECATED_OBJECT_BASE("asdasdadsasd") int x;

int main(void) {
  return 0;
}

            configureDeprecated: '__attribute__((deprecated(string_literal_why)))' appears to work
              Defined "DEPRECATED_OBJECT_BASE(string_literal_why)" to "__attribute__((deprecated(string_literal_why)))"
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.packages.mkl_sparse_optimize -I/tmp/petsc-m5p55c3k/PETSc.Configure  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#define TEST _Pragma("GCC warning "Testing _Pragma"") value

int main(void) {
  return 0;
}

            Defined "DEPRECATED_MACRO_BASE_(why)" to "_Pragma(#why)"
            Defined "DEPRECATED_MACRO_BASE(string_literal_why)" to "PETSC_DEPRECATED_MACRO_BASE_(GCC warning string_literal_why)"
=============================================================================================
TESTING: configureIsatty from PETSc.Configure(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/PETSc/Configure.py:626)
  Check if the Unix C function isatty() works correctly
       Actually just assumes it does not work correctly on batch systems
            Defined "USE_ISATTY" to "1"
=============================================================================================
TESTING: configureExpect from PETSc.Configure(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/PETSc/Configure.py:699)
  Sees if the __builtin_expect directive is supported
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.packages.mkl_sparse_optimize -I/tmp/petsc-m5p55c3k/PETSc.Configure  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
if (__builtin_expect(0,1)) return 1;
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/PETSc.Configure/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.o 
            Defined "HAVE_BUILTIN_EXPECT" to "1"
=============================================================================================
TESTING: configureAlign from PETSc.Configure(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/PETSc/Configure.py:683)
  Check if __attribute(aligned) is supported
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.packages.mkl_sparse_optimize -I/tmp/petsc-m5p55c3k/PETSc.Configure  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
struct mystruct {int myint;} __attribute((aligned(16)));
char assert_aligned[(sizeof(struct mystruct)==16)*2-1];

int main(void) {
  return 0;
}

            Defined "ATTRIBUTEALIGNED(size)" to "__attribute((aligned(size)))"
            Defined "HAVE_ATTRIBUTEALIGNED" to "1"
=============================================================================================
TESTING: configureFunctionName from PETSc.Configure(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/PETSc/Configure.py:706)
  Sees if the compiler supports __func__ or a variant.
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.packages.mkl_sparse_optimize -I/tmp/petsc-m5p55c3k/PETSc.Configure  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
if (__func__[0] != 'm') return 1;
  return 0;
}

Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.packages.mkl_sparse_optimize -I/tmp/petsc-m5p55c3k/PETSc.Configure  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
if (__func__[0] != 'm') return 1;
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/PETSc.Configure/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.o 
            Defined "FUNCTION_NAME_C" to "__func__"
Executing: mpiicpc -cxx=icpx -c -o /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/PETSc.Configure  -Wall -Wwrite-strings -Wno-strict-aliasing -Wno-unknown-pragmas -fstack-protector -fvisibility=hidden -O2 -march=native -mtune=native  -std=gnu++20 -fPIC  /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.cc 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
if (__func__[0] != 'm') return 1;
  return 0;
}

Executing: mpiicpc -cxx=icpx -c -o /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/PETSc.Configure  -Wall -Wwrite-strings -Wno-strict-aliasing -Wno-unknown-pragmas -fstack-protector -fvisibility=hidden -O2 -march=native -mtune=native  -std=gnu++20 -fPIC  /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.cc 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"

int main(void) {
if (__func__[0] != 'm') return 1;
  return 0;
}

Executing: mpiicpc -cxx=icpx  -o /tmp/petsc-m5p55c3k/PETSc.Configure/conftest    -Wall -Wwrite-strings -Wno-strict-aliasing -Wno-unknown-pragmas -fstack-protector -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.o 
            Defined "FUNCTION_NAME_CXX" to "__func__"
=============================================================================================
TESTING: configureIntptrt from PETSc.Configure(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/PETSc/Configure.py:724)
  Determine what to use for uintptr_t and intptr_t
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.packages.mkl_sparse_optimize -I/tmp/petsc-m5p55c3k/PETSc.Configure  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <stdint.h>

int main(void) {
int x; uintptr_t i = (uintptr_t)&x; (void)i;
  return 0;
}

              Defined "UINTPTR_T" to "uintptr_t"
              Defined "UINTPTR_T_FMT" to ""#" PRIxPTR"
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.packages.mkl_sparse_optimize -I/tmp/petsc-m5p55c3k/PETSc.Configure  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <stdint.h>

int main(void) {
int x; intptr_t i = (intptr_t)&x; (void)i;
  return 0;
}

              Defined "INTPTR_T" to "intptr_t"
              Defined "INTPTR_T_FMT" to ""#" PRIxPTR"
=============================================================================================
TESTING: configureSolaris from PETSc.Configure(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/PETSc/Configure.py:776)
  Solaris specific stuff
=============================================================================================
TESTING: configureLinux from PETSc.Configure(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/PETSc/Configure.py:798)
  Linux specific stuff
            Defined "HAVE_DOUBLE_ALIGN_MALLOC" to "1"
=============================================================================================
TESTING: configureDarwin from PETSc.Configure(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/PETSc/Configure.py:789)
  Log brew configuration for Apple systems
Executing: ['brew', 'config']
stdout: [Errno 2] No such file or directory: 'brew'
=============================================================================================
TESTING: configureWin32 from PETSc.Configure(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/PETSc/Configure.py:804)
  Win32 non-cygwin specific stuff
              Checking for functions [GetComputerName] in library ['Kernel32.lib'] []
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.packages.mkl_sparse_optimize -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/PETSc.Configure  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.libraries/conftest.c 
stdout:
/tmp/petsc-m5p55c3k/config.libraries/conftest.c:4:10: fatal error: 'windows.h' file not found
    4 | #include <windows.h>
      |          ^~~~~~~~~~~
1 error generated.
Possible ERROR while running compiler: exit code 1
stderr:
/tmp/petsc-m5p55c3k/config.libraries/conftest.c:4:10: fatal error: 'windows.h' file not found
    4 | #include <windows.h>
      |          ^~~~~~~~~~~
1 error generated.
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
#include <windows.h>
static void _check_GetComputerName(void) { GetComputerName(NULL,NULL);; }

int main(void) {
_check_GetComputerName();
  return 0;
}

                  Compile failed inside link

              Checking for functions [GetComputerName] in library ['kernel32'] []
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.packages.mkl_sparse_optimize -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/PETSc.Configure  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.libraries/conftest.c 
stdout:
/tmp/petsc-m5p55c3k/config.libraries/conftest.c:4:10: fatal error: 'windows.h' file not found
    4 | #include <windows.h>
      |          ^~~~~~~~~~~
1 error generated.
Possible ERROR while running compiler: exit code 1
stderr:
/tmp/petsc-m5p55c3k/config.libraries/conftest.c:4:10: fatal error: 'windows.h' file not found
    4 | #include <windows.h>
      |          ^~~~~~~~~~~
1 error generated.
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
#include <windows.h>
static void _check_GetComputerName(void) { GetComputerName(NULL,NULL);; }

int main(void) {
_check_GetComputerName();
  return 0;
}

                  Compile failed inside link

              Checking for functions [GetUserName] in library ['Advapi32.lib'] []
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.packages.mkl_sparse_optimize -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/PETSc.Configure  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.libraries/conftest.c 
stdout:
/tmp/petsc-m5p55c3k/config.libraries/conftest.c:4:10: fatal error: 'windows.h' file not found
    4 | #include <windows.h>
      |          ^~~~~~~~~~~
1 error generated.
Possible ERROR while running compiler: exit code 1
stderr:
/tmp/petsc-m5p55c3k/config.libraries/conftest.c:4:10: fatal error: 'windows.h' file not found
    4 | #include <windows.h>
      |          ^~~~~~~~~~~
1 error generated.
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
#include <windows.h>
static void _check_GetUserName(void) { GetUserName(NULL,NULL);; }

int main(void) {
_check_GetUserName();
  return 0;
}

                  Compile failed inside link

              Checking for functions [GetUserName] in library ['advapi32'] []
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.packages.mkl_sparse_optimize -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/PETSc.Configure  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.libraries/conftest.c 
stdout:
/tmp/petsc-m5p55c3k/config.libraries/conftest.c:4:10: fatal error: 'windows.h' file not found
    4 | #include <windows.h>
      |          ^~~~~~~~~~~
1 error generated.
Possible ERROR while running compiler: exit code 1
stderr:
/tmp/petsc-m5p55c3k/config.libraries/conftest.c:4:10: fatal error: 'windows.h' file not found
    4 | #include <windows.h>
      |          ^~~~~~~~~~~
1 error generated.
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
#include <windows.h>
static void _check_GetUserName(void) { GetUserName(NULL,NULL);; }

int main(void) {
_check_GetUserName();
  return 0;
}

                  Compile failed inside link

              Checking for functions [GetDC] in library ['User32.lib'] []
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.packages.mkl_sparse_optimize -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/PETSc.Configure  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.libraries/conftest.c 
stdout:
/tmp/petsc-m5p55c3k/config.libraries/conftest.c:4:10: fatal error: 'windows.h' file not found
    4 | #include <windows.h>
      |          ^~~~~~~~~~~
1 error generated.
Possible ERROR while running compiler: exit code 1
stderr:
/tmp/petsc-m5p55c3k/config.libraries/conftest.c:4:10: fatal error: 'windows.h' file not found
    4 | #include <windows.h>
      |          ^~~~~~~~~~~
1 error generated.
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
#include <windows.h>
static void _check_GetDC(void) { GetDC(0);; }

int main(void) {
_check_GetDC();
  return 0;
}

                  Compile failed inside link

              Checking for functions [GetDC] in library ['user32'] []
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.packages.mkl_sparse_optimize -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/PETSc.Configure  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.libraries/conftest.c 
stdout:
/tmp/petsc-m5p55c3k/config.libraries/conftest.c:4:10: fatal error: 'windows.h' file not found
    4 | #include <windows.h>
      |          ^~~~~~~~~~~
1 error generated.
Possible ERROR while running compiler: exit code 1
stderr:
/tmp/petsc-m5p55c3k/config.libraries/conftest.c:4:10: fatal error: 'windows.h' file not found
    4 | #include <windows.h>
      |          ^~~~~~~~~~~
1 error generated.
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
#include <windows.h>
static void _check_GetDC(void) { GetDC(0);; }

int main(void) {
_check_GetDC();
  return 0;
}

                  Compile failed inside link

              Checking for functions [CreateCompatibleDC] in library ['Gdi32.lib'] []
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.packages.mkl_sparse_optimize -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/PETSc.Configure  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.libraries/conftest.c 
stdout:
/tmp/petsc-m5p55c3k/config.libraries/conftest.c:4:10: fatal error: 'windows.h' file not found
    4 | #include <windows.h>
      |          ^~~~~~~~~~~
1 error generated.
Possible ERROR while running compiler: exit code 1
stderr:
/tmp/petsc-m5p55c3k/config.libraries/conftest.c:4:10: fatal error: 'windows.h' file not found
    4 | #include <windows.h>
      |          ^~~~~~~~~~~
1 error generated.
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
#include <windows.h>
static void _check_CreateCompatibleDC(void) { CreateCompatibleDC(0);; }

int main(void) {
_check_CreateCompatibleDC();
  return 0;
}

                  Compile failed inside link

              Checking for functions [CreateCompatibleDC] in library ['gdi32'] []
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/config.libraries/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.packages.mkl_sparse_optimize -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/PETSc.Configure  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/config.libraries/conftest.c 
stdout:
/tmp/petsc-m5p55c3k/config.libraries/conftest.c:4:10: fatal error: 'windows.h' file not found
    4 | #include <windows.h>
      |          ^~~~~~~~~~~
1 error generated.
Possible ERROR while running compiler: exit code 1
stderr:
/tmp/petsc-m5p55c3k/config.libraries/conftest.c:4:10: fatal error: 'windows.h' file not found
    4 | #include <windows.h>
      |          ^~~~~~~~~~~
1 error generated.
Source:
#include "confdefs.h"
#include "conffix.h"
/* Override any gcc2 internal prototype to avoid an error. */
#include <windows.h>
static void _check_CreateCompatibleDC(void) { CreateCompatibleDC(0);; }

int main(void) {
_check_CreateCompatibleDC();
  return 0;
}

                  Compile failed inside link

Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.packages.mkl_sparse_optimize -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/PETSc.Configure  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <sys/types.h>

int main(void) {
uid_t u;
(void)u;
  return 0;
}

Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.packages.mkl_sparse_optimize -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/PETSc.Configure  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#if defined(PETSC_HAVE_UNISTD_H)
#include <unistd.h>
#endif

int main(void) {
int a=R_OK;
(void)a;
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/PETSc.Configure/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.o 
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.packages.mkl_sparse_optimize -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/PETSc.Configure  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <sys/stat.h>

int main(void) {
int a=0;
if (S_ISDIR(a)){}

  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/PETSc.Configure/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.o 
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.packages.mkl_sparse_optimize -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/PETSc.Configure  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.c 
stdout:
/tmp/petsc-m5p55c3k/PETSc.Configure/conftest.c:3:10: fatal error: 'windows.h' file not found
    3 | #include <windows.h>
      |          ^~~~~~~~~~~
1 error generated.
Possible ERROR while running compiler: exit code 1
stderr:
/tmp/petsc-m5p55c3k/PETSc.Configure/conftest.c:3:10: fatal error: 'windows.h' file not found
    3 | #include <windows.h>
      |          ^~~~~~~~~~~
1 error generated.
Source:
#include "confdefs.h"
#include "conffix.h"
#include <windows.h>

int main(void) {
LARGE_INTEGER a;
DWORD b=a.u.HighPart;

  return 0;
}

Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.packages.mkl_sparse_optimize -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/PETSc.Configure  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.c 
stdout:
/tmp/petsc-m5p55c3k/PETSc.Configure/conftest.c:3:10: fatal error: 'windows.h' file not found
    3 | #include <windows.h>
      |          ^~~~~~~~~~~
1 error generated.
Possible ERROR while running compiler: exit code 1
stderr:
/tmp/petsc-m5p55c3k/PETSc.Configure/conftest.c:3:10: fatal error: 'windows.h' file not found
    3 | #include <windows.h>
      |          ^~~~~~~~~~~
1 error generated.
Source:
#include "confdefs.h"
#include "conffix.h"
#include <windows.h>
#include <fcntl.h>

int main(void) {
int flags = O_BINARY;
  return 0;
}

            Defined "REPLACE_DIR_SEPARATOR" to "'\\'"
            Defined "DIR_SEPARATOR" to "'/'"
            Defined "DIR" to ""/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4""
            Defined make macro "wPETSC_DIR" to "/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4"
            Defined "ARCH" to ""arch-linux-c-opt""
=============================================================================================
TESTING: configureCygwinBrokenPipe from PETSc.Configure(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/PETSc/Configure.py:1243)
  Cygwin version <= 1.7.18 had issues with pipes and long commands invoked from gnu-make
    http://cygwin.com/ml/cygwin/2013-05/msg00340.html 
=============================================================================================
TESTING: configureDefaultArch from PETSc.Configure(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/PETSc/Configure.py:1259)
=============================================================================================
TESTING: configureScript from PETSc.Configure(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/PETSc/Configure.py:1276)
  Output a script in the conf directory which will reproduce the configuration
=============================================================================================
TESTING: configureInstall from PETSc.Configure(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/PETSc/Configure.py:1315)
  Setup the directories for installation
            Defined make rule "print_mesg_after_build" with dependencies "" and code ['-@echo "========================================="', '-@echo "Now to check if the libraries are working do:"', '-@echo "${MAKE_USER} PETSC_DIR=${PETSC_DIR} PETSC_ARCH=${PETSC_ARCH} check"', '-@echo "========================================="']
=============================================================================================
TESTING: configureAtoll from PETSc.Configure(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/PETSc/Configure.py:609)
  Checks if atoll exists
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.packages.mkl_sparse_optimize -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/PETSc.Configure  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#define _POSIX_C_SOURCE 200112L
#include <stdlib.h>

int main(void) {
long v = atoll("25");
(void)v;
  return 0;
}

Executing: mpiicc -cc=icx  -o /tmp/petsc-m5p55c3k/PETSc.Configure/conftest    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.o 
            Defined "HAVE_ATOLL" to "1"
=============================================================================================
TESTING: configureCoverage from PETSc.Configure(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/PETSc/Configure.py:991)
  
    Configure coverage for all available languages.

    If user did not request coverage, this function does nothing and returns immediatel.
    Therefore the following only apply to the case where the user requested coverage.

    On success:
    - defines PETSC_USE_COVERAGE to 1

    On failure:
    - If no compilers supported the coverage flag, throws RuntimeError
    -
    
            configureCoverage(): coverage was disabled from command line or default
=============================================================================================
TESTING: configureCoverageExecutable from PETSc.Configure(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/PETSc/Configure.py:1129)
  
    Check that a code-coverage collecting tool exists and is on PATH.

    On success:
    - Adds PETSC_COVERAGE_EXEC make macro containing the full path to the coverage tool executable.

    Raises RuntimeError if:
    - User explicitly requests auto-detection of the coverage tool from command line, and this
      routine fails to guess the suitable tool name.
    - The routine fails to find the tool, and --with-coverage is true
    
            checkCoverage: NOT required to find an executable
            checkCoverage: User did not explicitly set coverage exec (got 'default-auto'), trying to auto-detect based on compiler 'mpiicc -cc=icx'
Executing: mpiicc -cc=icx --help | head -n 20 
stdout:
OVERVIEW: Intel(R) oneAPI DPC++/C++ Compiler
USAGE: icx [options] file...
OPTIONS:
  -###                    Print (but do not run) the commands to run for this compilation
  -#x                     Show commands to run and use verbose output
  -#                      Print (but do not run) the commands to run for this compilation
  -align                  Align doubles to two words in structs (x86 only)
  --amdgpu-arch-tool=<value>
                          Tool used for detecting AMD GPU arch in the system.
  --analyzer-output <value>
                          Static analyzer report output format (html|plist|plist-multi-file|plist-html|sarif|sarif-html|text).
  --analyze               Run the static analyzer
  -ansi-alias             enable use of ANSI aliasing rules optimizations user asserts that the program adheres to these rules
  -arcmt-migrate-emit-errors
                          Emit ARC errors even if the migrator can fix them
  -arcmt-migrate-report-output <value>
                          Output path for the plist report
  -ax<codes>              generate multiple, processor-specific, auto-dispatched code paths for Intel® processors, specified by <codes>, if there is a performance benefit
Executing: mpiicc -cc=icx --help
stdout:
OVERVIEW: Intel(R) oneAPI DPC++/C++ Compiler
USAGE: icx [options] file...
OPTIONS:
  -###                    Print (but do not run) the commands to run for this compilation
  -#x                     Show commands to run and use verbose output
  -#                      Print (but do not run) the commands to run for this compilation
  -align                  Align doubles to two words in structs (x86 only)
  --amdgpu-arch-tool=<value>
                          Tool used for detecting AMD GPU arch in the system.
  --analyzer-output <value>
                          Static analyzer report output format (html|plist|plist-multi-file|plist-html|sarif|sarif-html|text).
  --analyze               Run the static analyzer
  -ansi-alias             enable use of ANSI aliasing rules optimizations user asserts that the program adheres to these rules
  -arcmt-migrate-emit-errors
                          Emit ARC errors even if the migrator can fix them
  -arcmt-migrate-report-output <value>
                          Output path for the plist report
  -ax<codes>              generate multiple, processor-specific, auto-dispatched code paths for Intel® processors, specified by <codes>, if there is a performance benefit
  -B <prefix>             Search $prefix$file for executables, libraries, and data files. If $prefix is a directory, search $prefix/$file
  -b <arg>                Pass -b <arg> to the linker on AIX
  -CC                     Include comments from within macros in preprocessed output
  -cl-denorms-are-zero    OpenCL only. Allow denormals to be flushed to zero.
  -cl-ext=<value>         OpenCL only. Enable or disable OpenCL extensions/optional features. The argument is a comma-separated sequence of one or more extension names, each prefixed by '+' or '-'.
  -cl-fast-relaxed-math   OpenCL only. Sets -cl-finite-math-only and -cl-unsafe-math-optimizations, and defines __FAST_RELAXED_MATH__.
  -cl-finite-math-only    OpenCL only. Allow floating-point optimizations that assume arguments and results are not NaNs or +-Inf.
  -cl-fp32-correctly-rounded-divide-sqrt
                          OpenCL only. Specify that single precision floating-point divide and sqrt used in the program source are correctly rounded.
  -cl-kernel-arg-info     OpenCL only. Generate kernel argument metadata.
  -cl-mad-enable          OpenCL only. Allow use of less precise MAD computations in the generated binary.
  -cl-no-signed-zeros     OpenCL only. Allow use of less precise no signed zeros computations in the generated binary.
  -cl-no-stdinc           OpenCL only. Disables all standard includes containing non-native compiler types and functions.
  -cl-opt-disable         OpenCL only. This option disables all optimizations. By default optimizations are enabled.
  -cl-single-precision-constant
                          OpenCL only. Treat double precision floating-point constant as single precision constant.
  -cl-std=<value>         OpenCL language standard to compile for.
  -cl-strict-aliasing     OpenCL only. This option is added for compatibility with OpenCL 1.0.
  -cl-uniform-work-group-size
                          OpenCL only. Defines that the global work-size be a multiple of the work-group size specified to clEnqueueNDRangeKernel
  -cl-unsafe-math-optimizations
                          OpenCL only. Allow unsafe floating-point optimizations.  Also implies -cl-no-signed-zeros and -cl-mad-enable.
  --config=<file>         Specify configuration file
  --cuda-compile-host-device
                          Compile CUDA code for both host and device (default). Has no effect on non-CUDA compilations.
  --cuda-device-only      Compile CUDA code for device only
  --cuda-feature=<value>  Manually specify the CUDA feature to use
  --cuda-host-only        Compile CUDA code for host only. Has no effect on non-CUDA compilations.
  --cuda-include-ptx=<value>
                          Include PTX for the following GPU architecture (e.g. sm_35) or 'all'. May be specified more than once.
  --cuda-noopt-device-debug
                          Enable device-side debug info generation. Disables ptxas optimizations.
  --cuda-path-ignore-env  Ignore environment variables to detect CUDA installation
  --cuda-path=<value>     CUDA installation path
  -cuid=<value>           An ID for compilation unit, which should be the same for the same compilation unit but different for different compilation units. It is used to externalize device-side static variables for single source offloading languages CUDA and HIP so that they can be accessed by the host code of the same compilation unit.
  -cxx-isystem <directory>
                          Add directory to the C++ SYSTEM include search path
  -C                      Include comments in preprocessed output
  -c                      Only run preprocess, compile, and assemble steps
  -daal=<value>           Link Intel(R) Data Analytics Acceleration Library (Intel(R) DAAL) libraries and bring in the associated headers (parallel)
  -darwin-target-variant-triple <value>
                          Specify the darwin target variant triple
  -darwin-target-variant <value>
                          Generate code for an additional runtime variant of the deployment target
  -dD                     Print macro definitions in -E mode in addition to normal output
  -debug=<value>          Enable debug information. Valid args: none, all, full, minimal
  -dependency-dot <value> Filename to write DOT-formatted header dependencies to
  -dependency-file <value>
                          Filename (or -) to write dependency output to
  -device-math-lib=<value>
                          Control the addition of device math libraries when compiling for other devices.  Valid arguments are fp64, fp32
  -dI                     Print include directives in -E mode in addition to normal output
  -dM                     Print macro definitions in -E mode instead of normal output
  -dryrun                 Print (but do not run) the commands to run for this compilation
  -dsym-dir <dir>         Directory to output dSYM's (if any) to
  -dumpdir <dumppfx>      Use <dumpfpx> as a prefix to form auxiliary and dump file names
  -dumpmachine            Display the compiler's target processor
  -dumpversion            Display the version of the compiler
  -D <macro>=<value>      Define <macro> to <value> (or 1 if <value> omitted)
  --embed-dir=<dir>       Add directory to embed search path
  -emit-ast               Emit Clang AST files for source inputs
  --emit-extension-symbol-graphs
                          Generate additional symbol graphs for extended modules.
  -emit-interface-stubs   Generate Interface Stub Files.
  -emit-llvm              Use the LLVM representation for assembler and object files
  -emit-merged-ifs        Generate Interface Stub Files, emit merged text not binary.
  --emit-static-lib       Enable linker job to emit a static library.
  -emit-symbol-graph      Generate Extract API information as a side effect of compilation.
  --end-no-unused-arguments
                          Start emitting warnings for unused driver arguments
  -EP                     Preprocess to stdout, omitting #line directives.
  --extract-api-ignores=<value>
                          Comma separated list of files containing a new line separated list of API symbols to ignore when extracting API information.
  -extract-api            Extract API information
  -E                      Only run the preprocessor
  -faapcs-bitfield-load   Follows the AAPCS standard that all volatile bit-field write generates at least one load. (ARM only).
  -faapcs-bitfield-width  Follow the AAPCS standard requirement stating that volatile bit-field width is dictated by the field container type. (ARM only).
  -faddrsig               Emit an address-significance table
  -falign-functions=<value>
                          Align the start of functions on a 2 (DEFAULT) or <n> byte boundary where <n> is a power of 2.
  -falign-functions       align the start of functions to an optimal machine-dependent value.
  -falign-loops=<N>       N must be a power of two. Align loops to the boundary
  -falign-stack=assume-16-byte
                          Assume the stack is aligned on 16-byte boundaries
  -falign-stack=assume-4-byte
                          Assume the stack is aligned on 4-byte boundaries
  -falign-stack=maintain-16-byte
                          Do not assume any alignment, but maintain alignment in case the stack is already aligned
  -faligned-allocation    Enable C++17 aligned allocation functions
  -fallow-editor-placeholders
                          Treat editor placeholders as valid source code
  -faltivec-src-compat=<value>
                          Source-level compatibility for Altivec vectors (for PowerPC targets). This includes results of vector comparison (scalar for 'xl', vector for 'gcc') as well as behavior when initializing with a scalar (splatting for 'xl', element zero only for 'gcc'). For 'mixed', the compatibility is as 'gcc' for 'vector bool/vector pixel' and as 'xl' for other types. Current default is 'mixed'.
  -fansi-escape-codes     Use ANSI escape codes for diagnostics
  -fapinotes-modules      Enable module-based external API notes support
  -fapinotes-swift-version=<version>
                          Specify the Swift version to use when filtering API notes
  -fapinotes              Enable external API notes support
  -fapple-kext            Use Apple's kernel extensions ABI
  -fapple-link-rtlib      Force linking the clang builtins runtime library
  -fapple-pragma-pack     Enable Apple gcc-compatible #pragma pack handling
  -fapplication-extension Restrict code to those available for App Extensions
  -fapprox-func           Allow certain math function calls to be replaced with an approximately equivalent calculation
  -fargument-noalias      Enables 'noalias' attribute for all pointer-type arguments
  -fassume-nothrow-exception-dtor
                          Assume that exception objects' destructors are non-throwing
  -fasync-exceptions      Enable EH Asynchronous exceptions
  -fauto-import           MinGW specific. Enable code generation support for automatic dllimport, and enable support for it in the linker. Enabled by default.
  -fbasic-block-address-map
                          Emit the basic block address map section.
  -fbasic-block-sections=<value>
                          Place each function's basic blocks in unique sections (ELF Only)
  -fbinutils-version=<major.minor>
                          Produced object files can use all ELF features supported by this binutils version and newer. If -fno-integrated-as is specified, the generated assembly will consider GNU as support. 'none' means that all ELF features can be used, regardless of binutils support. Defaults to 2.26.
  -fblocks                Enable the 'blocks' language feature
  -fborland-extensions    Accept non-standard constructs supported by the Borland compiler
  -fbuild-session-file=<file>
                          Use the last modification time of <file> as the build session timestamp
  -fbuild-session-timestamp=<time since Epoch in seconds>
                          Time when the current build session started
  -fbuiltin-module-map    Load the clang builtins module map file.
  -fc++-abi=<value>       C++ ABI to use. This will override the target C++ ABI.
  -fcall-saved-x10        Make the x10 register call-saved (AArch64 only)
  -fcall-saved-x11        Make the x11 register call-saved (AArch64 only)
  -fcall-saved-x12        Make the x12 register call-saved (AArch64 only)
  -fcall-saved-x13        Make the x13 register call-saved (AArch64 only)
  -fcall-saved-x14        Make the x14 register call-saved (AArch64 only)
  -fcall-saved-x15        Make the x15 register call-saved (AArch64 only)
  -fcall-saved-x18        Make the x18 register call-saved (AArch64 only)
  -fcall-saved-x8         Make the x8 register call-saved (AArch64 only)
  -fcall-saved-x9         Make the x9 register call-saved (AArch64 only)
  -fcaret-diagnostics-max-lines=<value>
                          Set the maximum number of source lines to show in a caret diagnostic (0 = no limit).
  -fcf-protection=<value> Instrument control-flow architecture protection
  -fcf-protection         Enable cf-protection in 'full' mode
  -fchar8_t               Enable C++ builtin type char8_t
  -fcheck-new             Do not assume C++ operator new may not return NULL
  -fclang-abi-compat=<version>
                          Attempt to match the ABI of Clang <version>
  -fclangir               Use the ClangIR pipeline to compile
  -fcolor-diagnostics     Enable colors in diagnostics
  -fcomment-block-commands=<arg>
                          Treat each comma separated argument in <arg> as a documentation comment block command
  -fcommon                Place uninitialized global variables in a common block
  -fcomplete-member-pointers
                          Require member pointer base types to be complete if they would be significant under the Microsoft ABI
  -fconstexpr-backtrace-limit=<value>
                          Set the maximum number of entries to print in a constexpr evaluation backtrace (0 = no limit)
  -fconstexpr-depth=<value>
                          Set the maximum depth of recursive constexpr function calls
  -fconstexpr-steps=<value>
                          Set the maximum number of steps in constexpr function evaluation
  -fcoro-aligned-allocation
                          Prefer aligned allocation for C++ Coroutines
  -fcoroutines            Enable support for the C++ Coroutines
  -fcoverage-compilation-dir=<value>
                          The compilation directory to embed in the coverage mapping.
  -fcoverage-mapping      Generate coverage mapping to enable code coverage analysis
  -fcoverage-mcdc         Enable MC/DC criteria when generating code coverage
  -fcoverage-prefix-map=<old>=<new>
                          remap file source paths <old> to <new> in coverage mapping. If there are multiple options, prefix replacement is applied in reverse order starting from the last one
  -fcrash-diagnostics-dir=<dir>
                          Put crash-report files in <dir>
  -fcrash-diagnostics=<value>
                          Set level of crash diagnostic reporting, (option: off, compiler, all)
  -fcrash-diagnostics     Enable crash diagnostic reporting (default)
  -fcs-profile-generate=<directory>
                          Generate instrumented code to collect context sensitive execution counts into <directory>/default.profraw (overridden by LLVM_PROFILE_FILE env var)
  -fcs-profile-generate   Generate instrumented code to collect context sensitive execution counts into default.profraw (overridden by LLVM_PROFILE_FILE env var)
  -fcuda-prec-sqrt        Specify that sqrt is correctly rounded (for CUDA devices)
  -fcuda-short-ptr        Use 32-bit pointers for accessing const/local/shared address spaces
  -fcx-fortran-rules      Range reduction is enabled for complex arithmetic operations.
  -fcx-limited-range      Basic algebraic expansions of complex arithmetic operations involving are enabled.
  -fcxx-exceptions        Enable C++ exceptions
  -fcxx-modules           Enable modules for C++
  -fdata-sections         Place each data in its own section
  -fdebug-compilation-dir=<value>
                          The compilation directory to embed in the debug info
  -fdebug-default-version=<value>
                          Default DWARF version to use, if a -g option caused DWARF debug info to be produced
  -fdebug-info-for-profiling
                          Emit extra debug info to make sample profile more accurate
  -fdebug-macro           Emit macro debug information
  -fdebug-prefix-map=<old>=<new>
                          For paths in debug info, remap directory <old> to <new>. If multiple options match a path, the last option wins
  -fdebug-ranges-base-address
                          Use DWARF base address selection entries in .debug_ranges
  -fdebug-types-section   Place debug types in their own section (ELF Only)
  -fdeclspec              Allow __declspec as a keyword
  -fdefine-target-os-macros
                          Enable predefined target OS macros
  -fdelayed-template-parsing
                          Parse templated function definitions at the end of the translation unit
  -fdelete-null-pointer-checks
                          Treat usage of null pointers as undefined behavior (default)
  -fdiagnostics-absolute-paths
                          Print absolute paths in diagnostics
  -fdiagnostics-hotness-threshold=<value>
                          Prevent optimization remarks from being output if they do not have at least this profile count. Use 'auto' to apply the threshold from profile summary
  -fdiagnostics-misexpect-tolerance=<value>
                          Prevent misexpect diagnostics from being output if the profile counts are within N% of the expected. 
  -fdiagnostics-parseable-fixits
                          Print fix-its in machine parseable form
  -fdiagnostics-print-source-range-info
                          Print source range spans in numeric form
  -fdiagnostics-show-hotness
                          Enable profile hotness information in diagnostic line
  -fdiagnostics-show-note-include-stack
                          Display include stacks for diagnostic notes
  -fdiagnostics-show-option
                          Print option name with mappable diagnostics
  -fdiagnostics-show-template-tree
                          Print a template comparison tree for differing templates
  -fdigraphs              Enable alternative token representations '<:', ':>', '<%', '%>', '%:', '%:%:' (default)
  -fdirect-access-external-data
                          Don't use GOT indirection to reference external data symbols
  -fdisable-block-signature-string
                          Disable block signature string)
  -fdiscard-value-names   Discard value names in LLVM IR
  -fdollars-in-identifiers
                          Allow '$' in identifiers
  -fdriver-only           Only run the driver.
  -fdwarf-exceptions      Use DWARF style exceptions
  -feliminate-unused-debug-types
                          Do not emit  debug info for defined but unused types
  -fembed-bitcode-marker  Embed placeholder LLVM IR data as a marker
  -fembed-bitcode=<option>
                          Embed LLVM bitcode
  -fembed-bitcode         Embed LLVM IR bitcode as data
  -fembed-offload-object=<value>
                          Embed Offloading device-side binary into host object file as a section.
  -femit-all-decls        Emit all declarations, even if unused
  -femit-class-debug-always
                          Emit debug information for a C++ class into each object file where the class is used. This flag is useful for tools which are unable to resolve incomplete type descriptions.  Using this option may cause a large increase in the size of the debug information
  -femit-compact-unwind-non-canonical
                          Try emitting Compact-Unwind for non-canonical entries. Maybe overriden by other constraints
  -femit-dwarf-unwind=<value>
                          When to emit DWARF unwind (EH frame) info
  -femulated-tls          Use emutls functions to access thread_local variables
  -fenable-matrix         Enable matrix data type and related builtin functions
  -fexceptions            Enable support for exception handling
  -fexcess-precision=<value>
                          Allows control over excess precision on targets where native support for the precision types is not available. By default, excess precision is used to calculate intermediate results following the rules specified in ISO C99.
  -fexperimental-late-parse-attributes
                          Enable experimental late parsing of attributes
  -fexperimental-library  Control whether unstable and experimental library features are enabled. This option enables various library features that are either experimental (also known as TSes), or have been but are not stable yet in the selected Standard Library implementation. It is not recommended to use this option in production code, since neither ABI nor API stability are guaranteed. This is intended to provide a preview of features that will ship in the future for experimentation purposes
  -fexperimental-modules-reduced-bmi
                          Generate the reduced BMI
  -fexperimental-new-constant-interpreter
                          Enable the experimental new constant interpreter
  -fexperimental-openacc-macro-override <value>
                          Overrides the _OPENACC macro value for experimental testing during OpenACC support development
  -fexperimental-relative-c++-abi-vtables
                          Use the experimental C++ class ABI for classes with virtual tables
  -fexperimental-sanitize-metadata-ignorelist=<value>
                          Disable sanitizer metadata for modules and functions that match the provided special case list
  -fexperimental-sanitize-metadata=<value>
                          Specify the type of metadata to emit for binary analysis sanitizers
  -fexperimental-strict-floating-point
                          Enables the use of non-default rounding modes and non-default exception handling on targets that are not currently ready.
  -fextend-arguments=<value>
                          Controls how scalar integer arguments are extended in calls to unprototyped and varargs functions
  -ffast-math             Allow aggressive, lossy floating-point optimizations
  -ffat-lto-objects       Enable fat LTO object support
  -ffile-compilation-dir=<value>
                          The compilation directory to embed in the debug info and coverage mapping.
  -ffile-prefix-map=<value>
                          remap file source paths in debug info, predefined preprocessor macros and __builtin_FILE(). Implies -ffile-reproducible.
  -ffile-reproducible     Use the target's platform-specific path separator character when expanding the __FILE__ macro
  -ffine-grained-bitfield-accesses
                          Use separate accesses for consecutive bitfield runs with legal widths and alignments.
  -ffinite-loops          Assume all non-trivial loops are finite.
  -ffinite-math-only      Allow floating-point optimizations that assume arguments and results are not NaNs or +-inf. This defines the \_\_FINITE\_MATH\_ONLY\_\_ preprocessor macro.
  -ffixed-a0              Reserve the a0 register (M68k only)
  -ffixed-a1              Reserve the a1 register (M68k only)
  -ffixed-a2              Reserve the a2 register (M68k only)
  -ffixed-a3              Reserve the a3 register (M68k only)
  -ffixed-a4              Reserve the a4 register (M68k only)
  -ffixed-a5              Reserve the a5 register (M68k only)
  -ffixed-a6              Reserve the a6 register (M68k only)
  -ffixed-d0              Reserve the d0 register (M68k only)
  -ffixed-d1              Reserve the d1 register (M68k only)
  -ffixed-d2              Reserve the d2 register (M68k only)
  -ffixed-d3              Reserve the d3 register (M68k only)
  -ffixed-d4              Reserve the d4 register (M68k only)
  -ffixed-d5              Reserve the d5 register (M68k only)
  -ffixed-d6              Reserve the d6 register (M68k only)
  -ffixed-d7              Reserve the d7 register (M68k only)
  -ffixed-g1              Reserve the G1 register (SPARC only)
  -ffixed-g2              Reserve the G2 register (SPARC only)
  -ffixed-g3              Reserve the G3 register (SPARC only)
  -ffixed-g4              Reserve the G4 register (SPARC only)
  -ffixed-g5              Reserve the G5 register (SPARC only)
  -ffixed-g6              Reserve the G6 register (SPARC only)
  -ffixed-g7              Reserve the G7 register (SPARC only)
  -ffixed-i0              Reserve the I0 register (SPARC only)
  -ffixed-i1              Reserve the I1 register (SPARC only)
  -ffixed-i2              Reserve the I2 register (SPARC only)
  -ffixed-i3              Reserve the I3 register (SPARC only)
  -ffixed-i4              Reserve the I4 register (SPARC only)
  -ffixed-i5              Reserve the I5 register (SPARC only)
  -ffixed-l0              Reserve the L0 register (SPARC only)
  -ffixed-l1              Reserve the L1 register (SPARC only)
  -ffixed-l2              Reserve the L2 register (SPARC only)
  -ffixed-l3              Reserve the L3 register (SPARC only)
  -ffixed-l4              Reserve the L4 register (SPARC only)
  -ffixed-l5              Reserve the L5 register (SPARC only)
  -ffixed-l6              Reserve the L6 register (SPARC only)
  -ffixed-l7              Reserve the L7 register (SPARC only)
  -ffixed-o0              Reserve the O0 register (SPARC only)
  -ffixed-o1              Reserve the O1 register (SPARC only)
  -ffixed-o2              Reserve the O2 register (SPARC only)
  -ffixed-o3              Reserve the O3 register (SPARC only)
  -ffixed-o4              Reserve the O4 register (SPARC only)
  -ffixed-o5              Reserve the O5 register (SPARC only)
  -ffixed-point           Enable fixed point types
  -ffixed-r19             Reserve register r19 (Hexagon only)
  -ffixed-r9              Reserve the r9 register (ARM only)
  -ffixed-x10             Reserve the x10 register (AArch64/RISC-V only)
  -ffixed-x11             Reserve the x11 register (AArch64/RISC-V only)
  -ffixed-x12             Reserve the x12 register (AArch64/RISC-V only)
  -ffixed-x13             Reserve the x13 register (AArch64/RISC-V only)
  -ffixed-x14             Reserve the x14 register (AArch64/RISC-V only)
  -ffixed-x15             Reserve the x15 register (AArch64/RISC-V only)
  -ffixed-x16             Reserve the x16 register (AArch64/RISC-V only)
  -ffixed-x17             Reserve the x17 register (AArch64/RISC-V only)
  -ffixed-x18             Reserve the x18 register (AArch64/RISC-V only)
  -ffixed-x19             Reserve the x19 register (AArch64/RISC-V only)
  -ffixed-x1              Reserve the x1 register (AArch64/RISC-V only)
  -ffixed-x20             Reserve the x20 register (AArch64/RISC-V only)
  -ffixed-x21             Reserve the x21 register (AArch64/RISC-V only)
  -ffixed-x22             Reserve the x22 register (AArch64/RISC-V only)
  -ffixed-x23             Reserve the x23 register (AArch64/RISC-V only)
  -ffixed-x24             Reserve the x24 register (AArch64/RISC-V only)
  -ffixed-x25             Reserve the x25 register (AArch64/RISC-V only)
  -ffixed-x26             Reserve the x26 register (AArch64/RISC-V only)
  -ffixed-x27             Reserve the x27 register (AArch64/RISC-V only)
  -ffixed-x28             Reserve the x28 register (AArch64/RISC-V only)
  -ffixed-x29             Reserve the x29 register (AArch64/RISC-V only)
  -ffixed-x2              Reserve the x2 register (AArch64/RISC-V only)
  -ffixed-x30             Reserve the x30 register (AArch64/RISC-V only)
  -ffixed-x31             Reserve the x31 register (AArch64/RISC-V only)
  -ffixed-x3              Reserve the x3 register (AArch64/RISC-V only)
  -ffixed-x4              Reserve the x4 register (AArch64/RISC-V only)
  -ffixed-x5              Reserve the x5 register (AArch64/RISC-V only)
  -ffixed-x6              Reserve the x6 register (AArch64/RISC-V only)
  -ffixed-x7              Reserve the x7 register (AArch64/RISC-V only)
  -ffixed-x8              Reserve the x8 register (AArch64/RISC-V only)
  -ffixed-x9              Reserve the x9 register (AArch64/RISC-V only)
  -fforce-check-cxx20-modules-input-files
                          Check the input source files from C++20 modules explicitly
  -fforce-dwarf-frame     Always emit a debug frame section
  -fforce-emit-vtables    Emits more virtual tables to improve devirtualization
  -fforce-enable-int128   Enable support for int128_t type
  -ffp-accuracy=<value>   Specifies the required accuracy for floating-point operations and library calls.
  -ffp-contract=<value>   Form fused FP ops (e.g. FMAs)
  -ffp-eval-method=<value>
                          Specifies the evaluation method to use for floating-point arithmetic.
  -ffp-exception-behavior=<value>
                          Specifies the exception behavior of floating-point operations.
  -ffp-model=<value>      Controls the semantics of floating-point calculations.
  -ffreestanding          Assert that the compilation takes place in a freestanding environment
  -ffuchsia-api-level=<value>
                          Set Fuchsia API level
  -ffunction-sections     Place each function in its own section
  -fglobal-isel           Enables the global instruction selector
  -fgnu-keywords          Allow GNU-extension keywords regardless of language standard
  -fgnu-runtime           Generate output compatible with the standard GNU Objective-C runtime
  -fgnu89-inline          Use the gnu89 inline semantics
  -fgnuc-version=<value>  Sets various macros to claim compatibility with the given GCC version (default is 4.2.1)
  -fgpu-allow-device-init Allow device side init function in HIP (experimental)
  -fgpu-approx-transcendentals
                          Use approximate transcendental functions
  -fgpu-default-stream=<value>
                          Specify default stream. The default value is 'legacy'. (CUDA/HIP only)
  -fgpu-defer-diag        Defer host/device related diagnostic messages for CUDA/HIP
  -fgpu-flush-denormals-to-zero
                          Flush denormal floating point values to zero in CUDA/HIP device mode.
  -fgpu-rdc               Generate relocatable device code, also known as separate compilation mode
  -fgpu-sanitize          Enable sanitizer for supported offloading devices
  -fhelp                  Display available options
  -fhip-emit-relocatable  Compile HIP source to relocatable
  -fhip-fp32-correctly-rounded-divide-sqrt
                          Specify that single precision floating-point divide and sqrt used in the program source are correctly rounded (HIP device compilation only)
  -fhip-kernel-arg-name   Specify that kernel argument names are preserved (HIP only)
  -fhip-new-launch-api    Use new kernel launching API for HIP
  -fhlsl-strict-availability
                          Enables strict availability diagnostic mode for HLSL built-in functions.
  -fhls                   Enable Intel FPGA High Level Synthesis extensions
  -fhonor-infinities      Specify that floating-point optimizations are not allowed that assume arguments and results are not +-inf.
  -fhonor-nan-compares    Honor NaN compares with fast math
  -fhonor-nans            Specify that floating-point optimizations are not allowed that assume arguments and results are not NANs.
  -fignore-exceptions     Enable support for ignoring exception handling constructs
  -fimf-absolute-error=<value>
                          Define the maximum allowable absolute error for math library function results
  -fimf-accuracy-bits=<value>
                          Define the relative error, measured by the number of correct bits,for math library function results
  -fimf-arch-consistency=<value>
                          Ensures that the math library functions produce consistent results across different implementations of the same architecture
  -fimf-domain-exclusion=<value>
                          Indicates the input arguments domain on which math functions must provide correct results.
  -fimf-max-error=<value> defines the maximum allowable relative error, measured in ulps, for math library function results
  -fimf-precision=<value> Defines the accuracy (precision) for math library functions.
  -fimf-use-svml=<value>  Instruct the compiler to implement math library functions using the Short Vector Math Library(SVML)
  -fimplicit-module-maps  Implicitly search the file system for module map files.
  -fincremental-extensions
                          Enable incremental processing extensions such as processingstatements on the global scope.
  -finline-functions      Inline suitable functions
  -finline-hint-functions Inline functions which are (explicitly or implicitly) marked inline
  -finline-max-stacksize=<value>
                          Suppress inlining of functions whose stack size exceeds the given value
  -finput-charset=<value> Specify the default character set for source files
  -finstrument-function-entry-bare
                          Instrument function entry only, after inlining, without arguments to the instrumentation call
  -finstrument-functions-after-inlining
                          Like -finstrument-functions, but insert the calls after inlining
  -finstrument-functions  Generate calls to instrument function entry and exit
  -fintegrated-as         Enable the integrated assembler
  -fintegrated-cc1        Run cc1 in-process
  -fintegrated-objemitter Use internal machine object code emitter.
  -fintel-long-double-size=<value>
                          Overrides the size of long double from the architecture/OS defaults.
  -fintelfpga             Perform ahead-of-time compilation for FPGA
  -fiopenmp-simd          Same as -qopenmp-simd
  -fiopenmp               Same as -qopenmp
  -fjmc                   Enable just-my-code debugging
  -fjump-tables           Use jump tables for lowering switches
  -fkeep-persistent-storage-variables
                          Enable keeping all variables that have a persistent storage duration, including global, static and thread-local variables, to guarantee that they can be directly addressed
  -fkeep-static-consts    Keep static const variables even if unused
  -fkeep-system-includes  Instead of expanding system headers when emitting preprocessor output, preserve the #include directive. Useful when producing preprocessed output for test case reduction. May produce incorrect output if preprocessor symbols that control the included content (e.g. _XOPEN_SOURCE) are defined in the including source file. The portability of the resulting source to other compilation environments is not guaranteed.
                          
                          Only valid with -E.
  -flax-vector-conversions=<value>
                          Enable implicit vector bit-casts
  -flink-huge-device-code Generate and use a custom linker script for huge device code sections
  -flto-jobs=<value>      Controls the backend parallelism of -flto=thin (default of 0 means the number of threads will be derived from the number of CPUs detected)
  -flto=auto              Enable LTO in 'full' mode
  -flto=jobserver         Enable LTO in 'full' mode
  -flto=<value>           Set LTO mode
  -flto                   Enable LTO in 'full' mode
  -fmacro-backtrace-limit=<value>
                          Set the maximum number of entries to print in a macro expansion backtrace (0 = no limit)
  -fmacro-prefix-map=<value>
                          remap file source paths in predefined preprocessor macros and __builtin_FILE(). Implies -ffile-reproducible.
  -fmaintain-32-byte-stack-align
                          Do not assume any alignment, but maintain alignment in case the stack is already aligned
  -fmath-errno            Require math functions to indicate errors by setting errno
  -fmax-tokens=<value>    Max total number of preprocessed tokens for -Wmax-tokens.
  -fmax-type-align=<value>
                          Specify the maximum alignment to enforce on pointers lacking an explicit alignment
  -fma                    Enable the combining of floating point multiples and add/subtract operations.
  -fmemory-profile-use=<pathname>
                          Use memory profile for profile-guided memory optimization
  -fmemory-profile=<directory>
                          Enable heap memory profiling and dump results into <directory>
  -fmemory-profile        Enable heap memory profiling
  -fmerge-all-constants   Allow merging of constants
  -fmerge-debug-strings   Merge identical debug strings in different object files.
  -fmessage-length=<value>
                          Format message diagnostics so that they fit within N columns
  -fminimize-whitespace   Ignore the whitespace from the input file when emitting preprocessor output. It will only contain whitespace when necessary, e.g. to keep two minus signs from merging into to an increment operator. Useful with the -P option to normalize whitespace such that two files with only formatting changes are equal.
                          
                          Only valid with -E on C-like inputs and incompatible with -traditional-cpp.
  -fmodule-file=[<name>=]<file>
                          Specify the mapping of module name to precompiled module file, or load a module file if name is omitted.
  -fmodule-header=<kind>  Build a C++20 Header Unit from a header that should be found in the user (fmodule-header=user) or system (fmodule-header=system) search path.
  -fmodule-header         Build a C++20 Header Unit from a header
  -fmodule-map-file=<file>
                          Load this module map file
  -fmodule-name=<name>    Specify the name of the module to build
  -fmodule-output=<value> Save intermediate module file results when compiling a standard C++ module unit.
  -fmodule-output         Save intermediate module file results when compiling a standard C++ module unit.
  -fmodules-cache-path=<directory>
                          Specify the module cache path
  -fmodules-decluse       Require declaration of modules used within a module
  -fmodules-disable-diagnostic-validation
                          Disable validation of the diagnostic options when loading the module
  -fmodules-ignore-macro=<value>
                          Ignore the definition of the given macro when building and loading modules
  -fmodules-prune-after=<seconds>
                          Specify the interval (in seconds) after which a module file will be considered unused
  -fmodules-prune-interval=<seconds>
                          Specify the interval (in seconds) between attempts to prune the module cache
  -fmodules-search-all    Search even non-imported modules to resolve references
  -fmodules-strict-decluse
                          Like -fmodules-decluse but requires all headers to be in modules
  -fmodules-user-build-path <directory>
                          Specify the module user build path
  -fmodules-validate-input-files-content
                          Validate PCM input files based on content if mtime differs
  -fmodules-validate-once-per-build-session
                          Don't verify input files for the modules if the module has been successfully validated or loaded during this build session
  -fmodules-validate-system-headers
                          Validate the system headers that a module depends on when loading the module
  -fmodules               Enable the 'modules' language feature
  -fms-compatibility-version=<value>
                          Dot-separated value representing the Microsoft compiler version number to report in _MSC_VER (0 = don't define it (default))
  -fms-compatibility      Enable full Microsoft Visual C++ compatibility
  -fms-define-stdc        Define '__STDC__' to '1' in MSVC Compatibility mode
  -fms-extensions         Accept some non-standard constructs supported by the Microsoft compiler
  -fms-hotpatch           Ensure that all functions can be hotpatched at runtime
  -fms-runtime-lib=<value>
                          Select Windows run-time library
  -fms-volatile           Volatile loads and stores have acquire and release semantics
  -fmsc-version=<value>   Microsoft compiler version number to report in _MSC_VER (0 = don't define it (default))
  -fnew-alignment=<align> Specifies the largest alignment guaranteed by '::operator new(size_t)'
  -fnew-infallible        Enable treating throwing global C++ operator new as always returning valid memory (annotates with __attribute__((returns_nonnull)) and throw()). This is detectable in source.
  -fno-aapcs-bitfield-width
                          Do not follow the AAPCS standard requirement stating that volatile bit-field width is dictated by the field container type. (ARM only).
  -fno-access-control     Disable C++ access control
  -fno-addrsig            Don't emit an address-significance table
  -fno-alias              Enables 'noalias' attribute for all pointer-type arguments
  -fno-align-functions    Aligns on a 2-byte boundary
  -fno-apinotes-modules   Disable module-based external API notes support
  -fno-apinotes           Disable external API notes support
  -fno-assume-sane-operator-new
                          Don't assume that C++'s global operator new can't alias any pointer
  -fno-assume-unique-vtables
                          Disable optimizations based on vtable pointer identity
  -fno-assumptions        Disable codegen and compile-time checks for C++23's [[assume]] attribute
  -fno-auto-import        MinGW specific. Disable support for automatic dllimport in code generation and linking
  -fno-autolink           Disable generation of linker directives for automatic library linking
  -fno-builtin-<value>    Disable implicit builtin knowledge of a specific function
  -fno-builtin            Disable implicit builtin knowledge of functions
  -fno-bundle-offload-arch
                          Specify that the offload bundler should not identify a bundle with specific arch. For example, the bundle for `nvptx64-nvidia-cuda-sm_80` uses the bundle tag `nvptx64-nvidia-cuda` when used. This allows .o files to contain .bc bundles that are unspecific to a particular arch version.
  -fno-c++-static-destructors
                          Disable C++ static destructor registration
  -fno-char8_t            Disable C++ builtin type char8_t
  -fno-clangir            Use the AST -> LLVM pipeline to compile
  -fno-color-diagnostics  Disable colors in diagnostics
  -fno-common             Compile common globals like normal definitions
  -fno-complete-member-pointers
                          Do not require member pointer base types to be complete if they would be significant under the Microsoft ABI
  -fno-constant-cfstrings Disable creation of CodeFoundation-type constant strings
  -fno-convergent-functions
                          Assume all functions may be convergent.
  -fno-coverage-mapping   Disable code coverage analysis
  -fno-coverage-mcdc      Disable MC/DC coverage criteria
  -fno-crash-diagnostics  Disable auto-generation of preprocessed source files and a script for reproduction during a clang crash
  -fno-cuda-prec-sqrt     Don't specify that sqrt is correctly rounded (for CUDA devices)
  -fno-cx-fortran-rules   Range reduction is disabled for complex arithmetic operations
  -fno-cx-limited-range   Basic algebraic expansions of complex arithmetic operations involving are disabled.
  -fno-cxx-modules        Disable modules for C++
  -fno-debug-macro        Do not emit macro debug information
  -fno-declspec           Disallow __declspec as a keyword
  -fno-define-target-os-macros
                          Disable predefined target OS macros
  -fno-delayed-template-parsing
                          Disable delayed template parsing
  -fno-delete-null-pointer-checks
                          Do not treat usage of null pointers as undefined behavior
  -fno-diagnostics-fixit-info
                          Do not include fixit information in diagnostics
  -fno-diagnostics-show-line-numbers
                          Show line numbers in diagnostic code snippets
  -fno-digraphs           Disallow alternative token representations '<:', ':>', '<%', '%>', '%:', '%:%:'
  -fno-direct-access-external-data
                          Use GOT indirection to reference external data symbols
  -fno-disable-block-signature-string
                          Don't disable block signature string)
  -fno-discard-value-names
                          Do not discard value names in LLVM IR
  -fno-dollars-in-identifiers
                          Disallow '$' in identifiers
  -fno-elide-constructors Disable C++ copy constructor elision
  -fno-elide-type         Do not elide types when printing diagnostics
  -fno-eliminate-unused-debug-types
                          Emit  debug info for defined but unused types
  -fno-emit-class-debug-always
                          Emit debug information for a C++ class in only one object file
  -fno-exceptions         Disable support for exception handling
  -fno-experimental-late-parse-attributes
                          Disable experimental late parsing of attributes
  -fno-experimental-relative-c++-abi-vtables
                          Do not use the experimental C++ class ABI for classes with virtual tables
  -fno-experimental-sanitize-metadata=<value>
                          Disable emitting metadata for binary analysis sanitizers
  -fno-fat-lto-objects    Disable fat LTO object support
  -fno-file-reproducible  Use the host's platform-specific path separator character when expanding the __FILE__ macro
  -fno-fine-grained-bitfield-accesses
                          Use large-integer access for consecutive bitfield runs.
  -fno-finite-loops       Do not assume that any loop is finite.
  -fno-fixed-point        Disable fixed point types
  -fno-force-enable-int128
                          Disable support for int128_t type
  -fno-global-isel        Disables the global instruction selector
  -fno-gnu-inline-asm     Disable GNU style inline asm
  -fno-gpu-allow-device-init
                          Don't allow device side init function in HIP (experimental)
  -fno-gpu-approx-transcendentals
                          Don't use approximate transcendental functions
  -fno-gpu-defer-diag     Don't defer host/device related diagnostic messages for CUDA/HIP
  -fno-hip-emit-relocatable
                          Do not override toolchain to compile HIP source to relocatable
  -fno-hip-fp32-correctly-rounded-divide-sqrt
                          Don't specify that single precision floating-point divide and sqrt used in the program source are correctly rounded (HIP device compilation only)
  -fno-hip-kernel-arg-name
                          Don't specify that kernel argument names are preserved (HIP only)
  -fno-hip-new-launch-api Don't use new kernel launching API for HIP
  -fno-honor-nan-compares Do not honor NaN compares with fast math
  -fno-integrated-as      Disable the integrated assembler
  -fno-integrated-cc1     Spawn a separate process for each cc1
  -fno-integrated-objemitter
                          Use external machine object code emitter.
  -fno-jump-tables        Do not use jump tables for lowering switches
  -fno-keep-persistent-storage-variables
                          Disable keeping all variables that have a persistent storage duration, including global, static and thread-local variables, to guarantee that they can be directly addressed
  -fno-keep-static-consts Don't keep static const variables even if unused
  -fno-knr-functions      Disable support for K&R C function declarations
  -fno-link-huge-device-code
                          Do not generate or use a custom linker script for huge device code sections (default)
  -fno-lto                Disable LTO mode (default)
  -fno-memory-profile     Disable heap memory profiling
  -fno-merge-all-constants
                          Disallow merging of constants
  -fno-merge-debug-strings
                           Do not mergeidentical debug strings in different object files.
  -fno-modules-check-relocated<value>
                          Skip checks for relocated modules when loading PCM files
  -fno-modules-validate-textual-header-includes
                          Do not enforce -fmodules-decluse and private header restrictions for textual headers. This flag will be removed in a future Clang release.
  -fno-new-infallible     Disable treating throwing global C++ operator new as always returning valid memory (annotates with __attribute__((returns_nonnull)) and throw()). This is detectable in source.
  -fno-objc-avoid-heapify-local-blocks
                          Don't try to avoid heapifying local blocks
  -fno-objc-infer-related-result-type
                          do not infer Objective-C related result type based on method family
  -fno-offload-lto        Disable LTO mode (default) for offload compilation
  -fno-offload-uniform-block
                          Don't assume that kernels are launched with uniform block sizes (default true for CUDA/HIP and false otherwise)
  -fno-openmp-device-lib=<value>
                          Control exclusion of device libraries from device binary linkage. Valid arguments are libc, libm-fp32, libm-fp64, all
  -fno-openmp-extensions  Disable all Clang extensions for OpenMP directives and clauses
  -fno-operator-names     Do not treat C++ operator name keywords as synonyms for operators
  -fno-optimize-sibling-calls
                          Disable tail call optimization, keeping the call stack accurate
  -fno-pch-codegen        Do not generate code for uses of this PCH that assumes an explicit object file will be built for the PCH
  -fno-pch-debuginfo      Do not generate debug info for types in an object file built from this PCH and do not generate them elsewhere
  -fno-plt                Use GOT indirection instead of PLT to make external function calls (x86 only)
  -fno-preserve-as-comments
                          Do not preserve comments in inline assembly
  -fno-profile-generate   Disable generation of profile instrumentation.
  -fno-profile-instr-generate
                          Disable generation of profile instrumentation.
  -fno-profile-instr-use  Disable using instrumentation data for profile-guided optimization
  -fno-pseudo-probe-for-profiling
                          Do not emit pseudo probes for sample profiling
  -fno-raw-string-literals
                          Disable raw string literals
  -fno-register-global-dtors-with-atexit
                          Don't use atexit or __cxa_atexit to register global destructors
  -fno-relaxed-template-template-args
                          Disable C++17 relaxed template template argument matching
  -fno-rtlib-add-rpath    Do not add -rpath with architecture-specific resource directory to the linker flags. When --hip-link is specified, do not add -rpath with HIP runtime library directory to the linker flags
  -fno-rtlib-defaultlib   On Windows, do not emit /defaultlib: directives to link compiler-rt libraries
  -fno-rtti-data          Disable generation of RTTI data
  -fno-rtti               Disable generation of rtti information
  -fno-sanitize-address-globals-dead-stripping
                          Disable linker dead stripping of globals in AddressSanitizer
  -fno-sanitize-address-outline-instrumentation
                          Use default code inlining logic for the address sanitizer
  -fno-sanitize-address-poison-custom-array-cookie
                          Disable poisoning array cookies when using custom operator new[] in AddressSanitizer
  -fno-sanitize-address-use-after-scope
                          Disable use-after-scope detection in AddressSanitizer
  -fno-sanitize-address-use-odr-indicator
                          Disable ODR indicator globals
  -fno-sanitize-cfi-canonical-jump-tables
                          Do not make the jump table addresses canonical in the symbol table
  -fno-sanitize-cfi-cross-dso
                          Disable control flow integrity (CFI) checks for cross-DSO calls.
  -fno-sanitize-coverage=<value>
                          Disable features of coverage instrumentation for Sanitizers
  -fno-sanitize-hwaddress-experimental-aliasing
                          Disable aliasing mode in HWAddressSanitizer
  -fno-sanitize-ignorelist
                          Don't use ignorelist file for sanitizers
  -fno-sanitize-memory-param-retval
                          Disable detection of uninitialized parameters and return values
  -fno-sanitize-memory-track-origins
                          Disable origins tracking in MemorySanitizer
  -fno-sanitize-memory-use-after-dtor
                          Disable use-after-destroy detection in MemorySanitizer
  -fno-sanitize-recover=<value>
                          Disable recovery for specified sanitizers
  -fno-sanitize-stable-abi
                          Conventional ABI instrumentation for sanitizer runtime. Default: Conventional
  -fno-sanitize-stats     Disable sanitizer statistics gathering.
  -fno-sanitize-thread-atomics
                          Disable atomic operations instrumentation in ThreadSanitizer
  -fno-sanitize-thread-func-entry-exit
                          Disable function entry/exit instrumentation in ThreadSanitizer
  -fno-sanitize-thread-memory-access
                          Disable memory access instrumentation in ThreadSanitizer
  -fno-sanitize-trap=<value>
                          Disable trapping for specified sanitizers
  -fno-sanitize-trap      Disable trapping for all sanitizers
  -fno-short-wchar        Force wchar_t to be an unsigned int
  -fno-show-column        Do not include column number on diagnostics
  -fno-show-source-location
                          Do not include source location information with diagnostics
  -fno-signed-char        char is unsigned
  -fno-signed-zeros       Allow optimizations that ignore the sign of floating point zeros
  -fno-skip-odr-check-in-gmf
                          Perform ODR checks for decls in the global module fragment.
  -fno-spell-checking     Disable spell-checking
  -fno-split-machine-functions
                          Disable late function splitting using profile information (x86 ELF/COFF)
  -fno-split-stack        Wouldn't use segmented stack
  -fno-stack-clash-protection
                          Disable stack clash protection
  -fno-stack-protector    Disable the use of stack protectors
  -fno-standalone-debug   Limit debug information produced to reduce size of debug binary
  -fno-strict-aliasing    Disable optimizations based on strict aliasing rules
  -fno-strict-float-cast-overflow
                          Relax language rules and try to match the behavior of the target's native float-to-int conversion instructions
  -fno-strict-return      Don't treat control flow paths that fall off the end of a non-void function as unreachable
  -fno-sycl-add-default-spec-consts-image
                          Turns off generation of device image where all specialization constant usages are replaced with default values.
  -fno-sycl-allow-device-dependencies
                          Do not allow dependencies between device code images (default)
  -fno-sycl-dead-args-optimization
                          Disables elimination of DPC++ dead kernel arguments
  -fno-sycl-decompose-functor
                          Do not decompose SYCL functor if possible (experimental, CUDA only)
  -fno-sycl-device-code-split-esimd
                          do not split ESIMD and SYCL device code into separate device binary images. Has effect only for SPIR-based targets. (experimental)
  -fno-sycl-device-lib-jit-link
                          Disables sycl device library jit link (experimental)
  -fno-sycl-device-lib=<value>
                          Control exclusion of device libraries from device binary linkage. Valid arguments are libc, libm-fp32, libm-fp64, all
  -fno-sycl-early-optimizations
                          Disable standard optimization pipeline for SYCL device compiler
  -fno-sycl-esimd-force-stateless-mem
                          Do not enforce using stateless memory accesses.
  -fno-sycl-explicit-simd Disable SYCL explicit SIMD extension. (deprecated)
  -fno-sycl-force-inline-kernel-lambda
                          Disallow force inline SYCL kernels lambda in entry point
  -fno-sycl-id-queries-fit-in-int
                          Do not assume that SYCL ID queries fit within MAX_INT.
  -fno-sycl-instrument-device-code
                          Do not add Instrumentation and Tracing Technology (ITT) instrumentation intrinsics calls (experimental)
  -fno-sycl-libspirv      Disable check for libspirv
  -fno-sycl-link-spirv    Disable adding of the default (spir64) triple when discovered in user specified objects and archives.
  -fno-sycl-pstl-offload  Disable offloading of C++ standard parallel algorithms.
  -fno-sycl-rdc           Generate relocatable device code during SYCL offload target compilation. Use of ‘-fno-sycl-rdc’ in combination with ‘-c’ will produce final device binaries within the generated fat object. When using this option, each kernel must be self-contained within its translation unit (source file).  Therefore, the use of SYCL_EXTERNAL is disallowed when this option is enabled.
  -fno-sycl-remove-unused-external-funcs
                          Prevent removal of unused `SYCL_EXTERNAL` functions
  -fno-sycl-unnamed-lambda
                          Disallow unnamed SYCL lambda kernels
  -fno-sycl-use-bitcode   Use SPIR-V instead of LLVM bitcode in fat objects (deprecated)
  -fno-sycl-use-footer    Disable usage of the integration footer during SYCL enabled compilations.
  -fno-sycl               Disables SYCL kernels compilation for device
  -fno-system-debug       Do not emit debug information for declarations in system headers
  -fno-temp-file          Directly create compilation output files. This may lead to incorrect incremental builds if the compiler crashes
  -fno-threadsafe-statics Do not emit code to make initialization of local statics thread safe
  -fno-trigraphs          Do not process trigraph sequences
  -fno-unified-lto        Use distinct LTO pipelines
  -fno-unique-section-names
                          Don't use unique names for text and data sections
  -fno-unroll-loops       Turn off loop unroller
  -fno-use-cxa-atexit     Don't use __cxa_atexit for calling destructors
  -fno-use-init-array     Use .ctors/.dtors instead of .init_array/.fini_array
  -fno-vec-allow-scalar-stores
                          When this option is set, an explicit simd loop (for example, one set with #pragma omp simd) will not be vectorized if it contains a store to a scalar variable that is not marked as private, lastprivate, or reduction.
  -fno-vec-peel-loops     Disable peel loop vectorization.
  -fno-vec-remainder-loops
                          Disable remainder loop vectorization.
  -fno-vec-with-mask      Disable vectorization for short trip-count loops with masking.
  -fno-verify-intermediate-code
                          Disable verification of LLVM IR
  -fno-visibility-inlines-hidden-static-local-var
                          Disables -fvisibility-inlines-hidden-static-local-var (this is the default on non-darwin targets)
  -fno-xray-function-index
                          Omit function index section at the expense of single-function patching performance
  -fno-zero-initialized-in-bss
                          Don't place zero initialized data in BSS
  -fobjc-arc-exceptions   Use EH-safe code when synthesizing retains and releases in -fobjc-arc
  -fobjc-arc              Synthesize retain and release calls for Objective-C pointers
  -fobjc-avoid-heapify-local-blocks
                          Try to avoid heapifying local blocks
  -fobjc-disable-direct-methods-for-testing
                          Ignore attribute objc_direct so that direct methods can be tested
  -fobjc-encode-cxx-class-template-spec
                          Fully encode c++ class template specialization
  -fobjc-exceptions       Enable Objective-C exceptions
  -fobjc-runtime=<value>  Specify the target Objective-C runtime kind and version
  -fobjc-weak             Enable ARC-style weak references in Objective-C
  -foffload-implicit-host-device-templates
                          Template functions or specializations without host, device and global attributes have implicit host device attributes (CUDA/HIP only)
  -foffload-lto=<value>   Set LTO mode for offload compilation
  -foffload-lto           Enable LTO in 'full' mode for offload compilation
  -foffload-uniform-block Assume that kernels are launched with uniform block sizes (default true for CUDA/HIP and false otherwise)
  -fomit-frame-pointer    Omit the frame pointer from functions that don't need it. Some stack unwinding cases, such as profilers and sanitizers, may prefer specifying -fno-omit-frame-pointer. On many targets, -O1 and higher omit the frame pointer by default. -m[no-]omit-leaf-frame-pointer takes precedence for leaf functions
  -fopenacc               Enable OpenACC
  -fopenmp-concurrent-host-device-compile<value>
                          Enable parallel compilation of host and device compilation steps when performing OpenMP offload compiles using -fopenmp-targets. (experimental)
  -fopenmp-declare-target-scalar-defaultmap=<value>
                          Assume that a scalar declare target variable with implicit data-mapping referenced in a 'target' construct has the same value in the host and device environment
  -fopenmp-device-lib=<value>
                          Control inclusion of device libraries into device binary linkage. Valid arguments are libc, libm-fp32, libm-fp64, all
  -fopenmp-device-link    Perform device link during compilation step instead of link step (-c compilations).  Use for offload compilations to produce final device binaries within the generated fat object.
  -fopenmp-extensions     Enable all Clang extensions for OpenMP directives and clauses
  -fopenmp-force-usm      Force behvaior as if the user specified pragma omp requires unified_shared_memory.
  -fopenmp-offload-mandatory
                          Do not create a host fallback if offloading to the device fails.
  -fopenmp-simd           Emit OpenMP code only for SIMD-based constructs. Advanced users who prefer to use OpenMP* as it is implemented by the LLVM community can get most of that functionality by using -fopenmp-simd.
  -fopenmp-target-buffers=<value>
                          Allow access to target objects of 4GB or larger in target code.
  -fopenmp-target-debug   Enable debugging in the OpenMP offloading device RTL
  -fopenmp-target-default-sub-group-size=<value>
                          Specify the default sub-group size of SPMD kernels generated for OpenMP target constructs for SPIR64
  -fopenmp-target-jit     Emit code that can be JIT compiled for OpenMP offloading. Implies -foffload-lto=full
  -fopenmp-targets=<value>
                          Specify comma-separated list of triples that correspond to OpenMP offloading targets to be supported.  Valid triples include spir64_gen, spir64_x86_64 and spir64
  -fopenmp-version=<value>
                          Set OpenMP version (e.g. 45 for OpenMP 4.5, 51 for OpenMP 5.1). Default value is 51 for Clang
  -fopenmp                Parse OpenMP pragmas and generate parallel code. Advanced users who prefer to use OpenMP* as it is implemented by the LLVM community can get most of that functionality by using -fopenmp.
  -foperator-arrow-depth=<value>
                          Maximum number of 'operator->'s to call for a member access
  -foptimization-record-file=<file>
                          Specify the output name of the file containing the optimization remarks. Implies -fsave-optimization-record. On Darwin platforms, this cannot be used with multiple -arch <arch> options.
  -foptimization-record-passes=<regex>
                          Only include passes which match a specified regular expression in the generated optimization record (by default, include all passes)
  -forder-file-instrumentation
                          Generate instrumented code to collect order file into default.profraw file (overridden by '=' form of option or LLVM_PROFILE_FILE env var)
  -fortlib                Allow for Fortran generated objects to be mixed and matched and linked in with the C/C++ compiler to pull in the needed libraries.
  -fp-model=<value>       Controls the semantics of floating-point calculations.
  -fp-speculation=<value> Specifies the exception behavior of floating-point operations.
  -fpack-struct=<value>   Specify the default maximum struct packing alignment
  -fpascal-strings        Recognize and construct Pascal-style string literals
  -fpass-plugin=<dsopath> Load pass plugin from a dynamic shared object file (only with new pass manager).
  -fpatchable-function-entry=<N,M>
                          Generate M NOPs before function entry and N-M NOPs after function entry
  -fpcc-struct-return     Override the default ABI to return all structs on the stack
  -fpch-codegen           Generate code for uses of this PCH that assumes an explicit object file will be built for the PCH
  -fpch-debuginfo         Generate debug info for types in an object file built from this PCH and do not generate them elsewhere
  -fpch-instantiate-templates
                          Instantiate templates already while building a PCH
  -fpch-validate-input-files-content
                          Validate PCH input files based on content if mtime differs
  -fplugin-arg-<name>-<arg>
                          Pass <arg> to plugin <name>
  -fplugin=<dsopath>      Load the named plugin (dynamic shared object)
  -fprebuilt-implicit-modules
                          Look up implicit modules in the prebuilt module path
  -fprebuilt-module-path=<directory>
                          Specify the prebuilt module path
  -fpreview-breaking-changes
                          When specified, it informs the compiler driver and compilation phases that it is allowed to break backward compatibility. When this option is specified the compiler will also set the macro __INTEL_PREVIEW_BREAKING_CHANGES.
                          When this option is used in conjunction with -fsycl, the driver will link against an alternate form of libsycl, libsycl-preview.
  -fproc-stat-report=<value>
                          Save subprocess statistics to the given file
  -fproc-stat-report<value>
                          Print subprocess statistics
  -fprofile-arcs          Instrument code to produce gcov data files (*.gcda)
  -fprofile-dwo-dir=<value>
                          Directory to store .dwo files when using -fprofile-sample-generate and -gsplit-dwarf. (experimental)
  -fprofile-exclude-files=<value>
                          Instrument only functions from files where names don't match all the regexes separated by a semi-colon
  -fprofile-filter-files=<value>
                          Instrument only functions from files where names match any regex separated by a semi-colon
  -fprofile-function-groups=<N>
                          Partition functions into N groups and select only functions in group i to be instrumented using -fprofile-selected-function-group
  -fprofile-generate=<directory>
                          Generate instrumented code to collect execution counts into <directory>/default.profraw (overridden by LLVM_PROFILE_FILE env var)
  -fprofile-generate      Generate instrumented code to collect execution counts into default.profraw (overridden by LLVM_PROFILE_FILE env var)
  -fprofile-instr-generate=<file>
                          Generate instrumented code to collect execution counts into <file> (overridden by LLVM_PROFILE_FILE env var)
  -fprofile-instr-generate
                          Generate instrumented code to collect execution counts into default.profraw file (overridden by '=' form of option or LLVM_PROFILE_FILE env var)
  -fprofile-instr-use=<value>
                          Use instrumentation data for profile-guided optimization
  -fprofile-list=<value>  Filename defining the list of functions/files to instrument. The file uses the sanitizer special case list format.
  -fprofile-ml-use        Use pre-trained machine learning model for profile guided optimizations.(deprecated)
  -fprofile-remapping-file=<file>
                          Use the remappings described in <file> to match the profile data against names in the program
  -fprofile-sample-accurate
                          Specifies that the sample profile is accurate
  -fprofile-sample-generate=<value>
                          Enable compiler and linker generating information and adjusting optimizations for Sample-based Profile Guided Optimizations (SPGO). Vaild arguments are none, keep-all-opt, med-fidelity, max-fidelity. (experimental)
  -fprofile-sample-use=<value>
                          Enable compiler and linker using information for Sample-based Profile Guided Optimizations (SPGO). (experimental)
  -fprofile-selected-function-group=<i>
                          Partition functions into N groups using -fprofile-function-groups and select only functions in group i to be instrumented. The valid range is 0 to N-1 inclusive
  -fprofile-update=<method>
                          Set update method of profile counters
  -fprofile-use=<pathname>
                          Use instrumentation data for profile-guided optimization. If pathname is a directory, it reads from <pathname>/default.profdata. Otherwise, it reads from file <pathname>.
  -fprotect-parens        Determines whether the optimizer honors parentheses when floating-point expressions are evaluated
  -fpseudo-probe-for-profiling
                          Emit pseudo probes for sample profiling
  -fptrauth-auth-traps    Enable traps on authentication failures
  -fptrauth-calls         Enable signing and authentication of all indirect calls
  -fptrauth-function-pointer-type-discrimination
                          Enable type discrimination on C function pointers
  -fptrauth-init-fini     Enable signing of function pointers in init/fini arrays
  -fptrauth-intrinsics    Enable pointer authentication intrinsics
  -fptrauth-returns       Enable signing and authentication of return addresses
  -fptrauth-vtable-pointer-address-discrimination
                          Enable address discrimination of vtable pointers
  -fptrauth-vtable-pointer-type-discrimination
                          Enable type discrimination of vtable pointers
  -frandomize-layout-seed-file=<file>
                          File holding the seed used by the randomize structure layout feature
  -frandomize-layout-seed=<seed>
                          The seed used by the randomize structure layout feature
  -fraw-string-literals   Enable raw string literals
  -freciprocal-math       Allow division operations to be reassociated
  -freg-struct-return     Override the default ABI to return small structs in registers
  -fregister-global-dtors-with-atexit
                          Use atexit or __cxa_atexit to register global destructors
  -frelaxed-template-template-args
                          Enable C++17 relaxed template template argument matching
  -fropi                  Generate read-only position independent code (ARM only)
  -frounding-math         Disable floating point optimizations that assume the default rounding mode.
  -frtlib-add-rpath       Add -rpath with architecture-specific resource directory to the linker flags. When --hip-link is specified, also add -rpath with HIP runtime library directory to the linker flags
  -frtlib-defaultlib      On Windows, emit /defaultlib: directives to link compiler-rt libraries (default)
  -frwpi                  Generate read-write position independent code (ARM only)
  -fsafe-buffer-usage-suggestions
                          Display suggestions to update code associated with -Wunsafe-buffer-usage warnings
  -fsample-profile-use-profi
                          Use profi to infer block and edge counts
  -fsanitize-address-destructor=<value>
                          Set the kind of module destructors emitted by AddressSanitizer instrumentation. These destructors are emitted to unregister instrumented global variables when code is unloaded (e.g. via `dlclose()`).
  -fsanitize-address-field-padding=<value>
                          Level of field padding for AddressSanitizer
  -fsanitize-address-globals-dead-stripping
                          Enable linker dead stripping of globals in AddressSanitizer
  -fsanitize-address-outline-instrumentation
                          Always generate function calls for address sanitizer instrumentation
  -fsanitize-address-poison-custom-array-cookie
                          Enable poisoning array cookies when using custom operator new[] in AddressSanitizer
  -fsanitize-address-use-after-return=<mode>
                          Select the mode of detecting stack use-after-return in AddressSanitizer
  -fsanitize-address-use-after-scope
                          Enable use-after-scope detection in AddressSanitizer
  -fsanitize-address-use-odr-indicator
                          Enable ODR indicator globals to avoid false ODR violation reports in partially sanitized programs at the cost of an increase in binary size
  -fsanitize-cfi-canonical-jump-tables
                          Make the jump table addresses canonical in the symbol table
  -fsanitize-cfi-cross-dso
                          Enable control flow integrity (CFI) checks for cross-DSO calls.
  -fsanitize-cfi-icall-experimental-normalize-integers
                          Normalize integers in CFI indirect call type signature checks
  -fsanitize-cfi-icall-generalize-pointers
                          Generalize pointers in CFI indirect call type signature checks
  -fsanitize-coverage-allowlist=<value>
                          Restrict sanitizer coverage instrumentation exclusively to modules and functions that match the provided special case list, except the blocked ones
  -fsanitize-coverage-ignorelist=<value>
                          Disable sanitizer coverage instrumentation for modules and functions that match the provided special case list, even the allowed ones
  -fsanitize-coverage=<value>
                          Specify the type of coverage instrumentation for Sanitizers
  -fsanitize-hwaddress-abi=<value>
                          Select the HWAddressSanitizer ABI to target (interceptor or platform, default interceptor). This option is currently unused.
  -fsanitize-hwaddress-experimental-aliasing
                          Enable aliasing mode in HWAddressSanitizer
  -fsanitize-ignorelist=<value>
                          Path to ignorelist file for sanitizers
  -fsanitize-memory-param-retval
                          Enable detection of uninitialized parameters and return values
  -fsanitize-memory-track-origins=<value>
                          Enable origins tracking in MemorySanitizer
  -fsanitize-memory-track-origins
                          Enable origins tracking in MemorySanitizer
  -fsanitize-memory-use-after-dtor
                          Enable use-after-destroy detection in MemorySanitizer
  -fsanitize-memtag-mode=<value>
                          Set default MTE mode to 'sync' (default) or 'async'
  -fsanitize-recover=<value>
                          Enable recovery for specified sanitizers
  -fsanitize-stable-abi   Stable  ABI instrumentation for sanitizer runtime. Default: Conventional
  -fsanitize-stats        Enable sanitizer statistics gathering.
  -fsanitize-system-ignorelist=<value>
                          Path to system ignorelist file for sanitizers
  -fsanitize-thread-atomics
                          Enable atomic operations instrumentation in ThreadSanitizer (default)
  -fsanitize-thread-func-entry-exit
                          Enable function entry/exit instrumentation in ThreadSanitizer (default)
  -fsanitize-thread-memory-access
                          Enable memory access instrumentation in ThreadSanitizer (default)
  -fsanitize-trap=<value> Enable trapping for specified sanitizers
  -fsanitize-trap         Enable trapping for all sanitizers
  -fsanitize-undefined-strip-path-components=<number>
                          Strip (or keep only, if negative) a given number of path components when emitting check metadata.
  -fsanitize=<check>      Turn on runtime checks for various forms of undefined or suspicious behavior. See user manual for available checks
  -fsave-optimization-record=<format>
                          Generate an optimization record file in a specific format
  -fsave-optimization-record
                          Generate a YAML optimization record file
  -fseh-exceptions        Use SEH style exceptions
  -fseparate-named-sections
                          Use separate unique sections for named sections (ELF Only)
  -fshort-enums           Allocate to an enum type only as many bytes as it needs for the declared range of possible values
  -fshort-wchar           Force wchar_t to be a short unsigned int
  -fshow-overloads=<value>
                          Which overload candidates to show when overload resolution fails. Defaults to 'all'
  -fshow-skipped-includes Show skipped includes in -H output.
  -fsigned-char           char is signed
  -fsized-deallocation    Enable C++14 sized global deallocation functions
  -fsjlj-exceptions       Use SjLj style exceptions
  -fskip-odr-check-in-gmf Skip ODR checks for decls in the global module fragment.
  -fslp-vectorize         Enable the superword-level parallelism vectorization passes
  -fspell-checking-limit=<value>
                          Set the maximum number of times to perform spell checking on unrecognized identifiers (0 = no limit)
  -fsplit-dwarf-inlining  Provide minimal debug info in the object/executable to facilitate online symbolication/stack traces in the absence of .dwo/.dwp files when using Split DWARF
  -fsplit-lto-unit        Enables splitting of the LTO unit
  -fsplit-machine-functions
                          Enable late function splitting using profile information (x86 ELF/COFF)
  -fsplit-stack           Use segmented stack
  -fstack-clash-protection
                          Enable stack clash protection
  -fstack-limit-register=<value>
                          Limits the stack register size
  -fstack-protector-all   Enable stack protectors for all functions
  -fstack-protector-strong
                          Enable stack protectors for some functions vulnerable to stack smashing. Compared to -fstack-protector, this uses a stronger heuristic that includes functions containing arrays of any size (and any type), as well as any calls to alloca or the taking of an address from a local variable
  -fstack-protector       Enable stack protectors for some functions vulnerable to stack smashing. This uses a loose heuristic which considers functions vulnerable if they contain a char (or 8bit integer) array or constant sized calls to alloca , which are of greater size than ssp-buffer-size (default: 8 bytes). All variable sized calls to alloca are considered vulnerable. A function with a stack protector has a guard value added to the stack frame that is checked on function exit. The guard value must be positioned in the stack frame such that a buffer overflow from a vulnerable variable will overwrite the guard value before overwriting the function's return address. The reference stack guard value is stored in a global variable.
  -fstack-security-check  Enable overflow security checks
  -fstack-size-section    Emit section containing metadata on function stack sizes
  -fstack-usage           Emit .su file containing information on function stack sizes
  -fstandalone-debug      Emit full debug info for all types used by the program
  -fstrict-aliasing       Enable optimizations based on strict aliasing rules
  -fstrict-enums          Enable optimizations based on the strict definition of an enum's value range
  -fstrict-flex-arrays=<n>
                          Enable optimizations based on the strict definition of flexible arrays
  -fstrict-float-cast-overflow
                          Assume that overflowing float-to-int casts are undefined (default)
  -fstrict-vtable-pointers
                          Enable optimizations based on the strict rules for overwriting polymorphic C++ objects
  -fswift-async-fp=<option>
                          Control emission of Swift async extended frame info
  -fsycl-add-default-spec-consts-image
                          Generates a copy of every device image that uses a specialization constant and replaces all usages of specialization constant with default values specified by specialization_id. If a device image doesn't use a specialization constant at all then no copy is generated. This option is only useful if used in conjunction with Ahead of Time Compilation (-fsycl-target command line option).
  -fsycl-allow-device-dependencies
                          Allow dependencies between device code images
  -fsycl-dead-args-optimization
                          Enables elimination of DPC++ dead kernel arguments
  -fsycl-decompose-functor
                          Do decompose SYCL functor if possible (experimental, CUDA only)
  -fsycl-default-sub-group-size <value>
                          Set the default sub group size for SYCL kernels
  -fsycl-device-code-split-esimd
                          split ESIMD device code from SYCL into a separate device binary image (default). Has effect only for SPIR-based targets. (experimental)
  -fsycl-device-code-split=<value>
                          Perform SYCL device code split: per_kernel (device code module is created for each SYCL kernel) | per_source (device code module is created for each source (translation unit)) | off (no device code split). | auto (use heuristic to select the best way of splitting device code). Default is 'auto' - use heuristic to distribute device code across modules
  -fsycl-device-code-split
                          Perform SYCL device code split in the 'auto' mode, i.e. use heuristic to distribute device code across modules
  -fsycl-device-lib-jit-link
                          Enables sycl device library jit link (experimental)
  -fsycl-device-lib=<value>
                          Control inclusion of device libraries into device binary linkage. Valid arguments are libc, libm-fp32, libm-fp64, libimf-fp32, libimf-fp64, libimf-bf16, all
  -fsycl-device-obj=<value>
                          Specify format of device code stored in the resulting object. Valid values are: spirv, llvmir (default)
  -fsycl-device-only      Compile SYCL kernels for device
  -fsycl-disable-range-rounding
                          Deprecated: please use -fsycl-range-rounding=disable instead.
  -fsycl-dump-device-code=<value>
                          Dump device code into the user provided directory.
  -fsycl-early-optimizations
                          Enable standard optimization pipeline for SYCL device compiler
  -fsycl-embed-ir         Embed LLVM IR for runtime kernel fusion
  -fsycl-enable-function-pointers
                          Experimental Feature: Enables function pointers and support for virtual functions for DPC++ kernels and device functions.
  -fsycl-esimd-force-stateless-mem
                          Enforce using stateless memory accesses. Convert stateful accesses via SYCL accessors to stateless within ESIMD kernels. Enabled by default.
  -fsycl-exp-range-rounding
                          Use experimental range rounding.
  -fsycl-explicit-simd    Enable SYCL explicit SIMD extension. (deprecated)
  -fsycl-footer-path=<value>
                          Specify the location of the temporary source file with the included integration footer.
  -fsycl-force-inline-kernel-lambda
                          Allow force inline SYCL kernels lambda in entry point
  -fsycl-force-target=<value>
                          Force the usage of the given triple when extracting device code from any given objects on the command line
  -fsycl-fp32-prec-sqrt   SYCL only. Specify that single precision floating-point sqrt is correctly rounded.
  -fsycl-fp64-conv-emu    Enable fp64 partial emulation for kernels with only fp64 conversion operations and no fp64 computation operations (requires Intel GPU backend supporting fp64 partial emulation).
  -fsycl-help=<value>     Emit help information from the related offline compilation tool. Valid values: all, fpga, gen, x86_64.
  -fsycl-help             Emit help information from all of the offline compilation tools
  -fsycl-host-compiler-options=<value>
                          When performing the host compilation with -fsycl-host-compiler specified, use the given options during that compile. Options are expected to be a quoted list of space separated options.
  -fsycl-host-compiler=<value>
                          Specify C++ compiler binary to perform host compilation with during SYCL offload compiles.
  -fsycl-id-queries-fit-in-int
                          Assume that SYCL ID queries fit within MAX_INT.
  -fsycl-instrument-device-code
                          Add Instrumentation and Tracing Technology (ITT) instrumentation intrinsics calls (experimental)
  -fsycl-libspirv-path=<value>
                          Path to libspirv library
  -fsycl-link=<value>     Generate partially linked device and host object to be used at various stages of compilation
  -fsycl-link             Generate partially linked device object to be used with the host link
  -fsycl-max-parallel-link-jobs=<value>
                          Experimental feature: Controls the maximum parallelism of actions performed on SYCL device code post-link, i.e. the generation of SPIR-V device images or AOT compilation of each device image.
  -fsycl-optimize-non-user-code
                          Option used in conjunction with -O0 to optimize SYCL framework utility functions and leave user's kernel code unoptimized. (experimental)
  -fsycl-pstl-offload=<value>
                          Enable offloading of C++ standard parallel algorithms. Valid arguments are gpu and cpu.
  -fsycl-pstl-offload     Enable offloading of C++ standard parallel algorithms.
  -fsycl-range-rounding=<value>
                          Options for range rounding of SYCL range kernels: disable (do not generate range rounded kernels) force (only generate range rounded kernels) on (generate range rounded kernels as well as unrounded kernels). Default is 'on'
  -fsycl-remove-unused-external-funcs
                          Allow removal of unused `SYCL_EXTERNAL` functions (default)
  -fsycl-targets=<value>  Specify comma-separated list of triples that correspond to SYCL offloading targets to be supported. Valid triples include spir64_gen, spir64_x86_64, spir64_fpga and spir64
  -fsycl-unnamed-lambda   Allow unnamed SYCL lambda kernels
  -fsycl-use-bitcode      Use LLVM bitcode instead of SPIR-V in fat objects (deprecated)
  -fsycl                  Enables SYCL kernels compilation for device
  -fsyntax-only           Run the preprocessor, parser and semantic analysis stages
  -fsystem-debug          Emit debug information for declarations in system headers
  -fsystem-module         Build this module as a system module. Only used with -emit-module
  -ftarget-compile-fast   Experimental feature: Reduce target compilation time, with potential runtime performance trade-off.
  -ftarget-export-symbols Expose exported symbols in a generated target library to allow for visibilty to other modules.
  -ftarget-register-alloc-mode=<value>
                          Specify a register allocation mode for specific hardware for use by supported target backends.
  -ftemplate-backtrace-limit=<value>
                          Set the maximum number of entries to print in a template instantiation backtrace (0 = no limit)
  -ftemplate-depth=<value>
                          Set the maximum depth of recursive template instantiation
  -ftest-coverage         Produce gcov notes files (*.gcno)
  -fthin-link-bitcode=<value>
                          Write minimized bitcode to <file> for the ThinLTO thin link only
  -fthinlto-index=<value> Perform ThinLTO importing using provided function summary index
  -ftime-report=<value>   (For new pass manager) 'per-pass': one report for each pass; 'per-pass-run': one report for each pass invocation
  -ftime-trace-granularity=<value>
                          Minimum time granularity (in microseconds) traced by time profiler
  -ftime-trace=<value>    Similar to -ftime-trace. Specify the JSON file or a directory which will contain the JSON file
  -ftime-trace            Turn on time profiler. Generates JSON file based on output filename.
  -ftrap-function=<value> Issue call to specified function rather than a trap instruction
  -ftrapv-handler=<function name>
                          Specify the function to be called on overflow
  -ftrapv                 Trap on integer overflow
  -ftrigraphs             Process trigraph sequences
  -ftrivial-auto-var-init-max-size=<value>
                          Stop initializing trivial automatic stack variables if var size exceeds the specified number of instances (in bytes)
  -ftrivial-auto-var-init-stop-after=<value>
                          Stop initializing trivial automatic stack variables after the specified number of instances
  -ftrivial-auto-var-init=<value>
                          Initialize trivial automatic stack variables. Defaults to 'uninitialized'
  -ftz                    Enable flush denormal results to zero
  -funified-lto           Use the unified LTO pipeline
  -funique-basic-block-section-names
                          Use unique names for basic block sections (ELF Only)
  -funique-internal-linkage-names
                          Uniqueify Internal Linkage Symbol Names by appending the MD5 hash of the module path
  -funroll-loops          Turn on loop unroller
  -funsafe-math-optimizations
                          Allow unsafe floating-point math optimizations which may decrease precision
  -fuse-complex-intrinsics
                          Determines whether to lower _Complex operations to LLVM complex intrinsics
  -fuse-cuid=<value>      Method to generate ID's for compilation units for single source offloading languages CUDA and HIP: 'hash' (ID's generated by hashing file path and command line options) | 'random' (ID's generated as random numbers) | 'none' (disabled). Default is 'hash'. This option will be overridden by option '-cuid=[ID]' if it is specified.
  -fuse-line-directives   Use #line in preprocessed output
  -fvalidate-ast-input-files-content
                          Compute and store the hash of input files used to build an AST. Files with mismatching mtime's are considered valid if both contents is identical
  -fvec-allow-scalar-stores
                          When this option is set, an explicit simd loop (for example, one set with #pragma omp simd) will be vectorized even if it contains a store to a scalar variable that is not marked as private, lastprivate, or reduction.
  -fvec-peel-loops        Enable peel loop vectorization.
  -fvec-remainder-loops   Enable remainder loop vectorization.
  -fvec-with-mask         Enable vectorization for short trip-count loops with masking.
  -fveclib=<value>        Use the given vector functions library
  -fvectorize             Enable the loop vectorization passes
  -fverbose-asm           Generate verbose assembly output
  -fverify-intermediate-code
                          Enable verification of LLVM IR
  -fvirtual-function-elimination
                          Enables dead virtual function elimination optimization. Requires -flto=full
  -fvisibility-dllexport=<value>
                          The visibility for dllexport definitions. If Keep is specified the visibility is not adjusted [-fvisibility-from-dllstorageclass]
  -fvisibility-externs-dllimport=<value>
                          The visibility for dllimport external declarations. If Keep is specified the visibility is not adjusted [-fvisibility-from-dllstorageclass]
  -fvisibility-externs-nodllstorageclass=<value>
                          The visibility for external declarations without an explicit DLL storage class. If Keep is specified the visibility is not adjusted [-fvisibility-from-dllstorageclass]
  -fvisibility-from-dllstorageclass
                          Override the visibility of globals based on their final DLL storage class.
  -fvisibility-global-new-delete-hidden
                          Give global C++ operator new and delete declarations hidden visibility
  -fvisibility-global-new-delete=<value>
                          The visibility for global C++ operator new and delete declarations. If 'source' is specified the visibility is not adjusted
  -fvisibility-inlines-hidden-static-local-var
                          When -fvisibility-inlines-hidden is enabled, static variables in inline C++ member functions will also be given hidden visibility by default
  -fvisibility-inlines-hidden
                          Give inline C++ member functions hidden visibility by default
  -fvisibility-ms-compat  Give global types 'default' visibility and global functions and variables 'hidden' visibility by default
  -fvisibility-nodllstorageclass=<value>
                          The visibility for definitions without an explicit DLL storage class. If Keep is specified the visibility is not adjusted [-fvisibility-from-dllstorageclass]
  -fvisibility=<value>    Set the default symbol visibility for all global definitions
  -fwasm-exceptions       Use WebAssembly style exceptions
  -fwhole-program-vtables Enables whole-program vtable optimization. Requires -flto
  -fwrapv                 Treat signed integer overflow as two's complement
  -fwritable-strings      Store string literals as writable data
  -fxl-pragma-pack        Enable IBM XL #pragma pack handling
  -fxray-always-emit-customevents
                          Always emit __xray_customevent(...) calls even if the containing function is not always instrumented
  -fxray-always-emit-typedevents
                          Always emit __xray_typedevent(...) calls even if the containing function is not always instrumented
  -fxray-always-instrument=<value>
                          DEPRECATED: Filename defining the whitelist for imbuing the 'always instrument' XRay attribute.
  -fxray-attr-list=<value>
                          Filename defining the list of functions/types for imbuing XRay attributes.
  -fxray-function-groups=<value>
                          Only instrument 1 of N groups
  -fxray-ignore-loops     Don't instrument functions with loops unless they also meet the minimum function size
  -fxray-instruction-threshold=<value>
                          Sets the minimum function size to instrument with XRay
  -fxray-instrumentation-bundle=<value>
                          Select which XRay instrumentation points to emit. Options: all, none, function-entry, function-exit, function, custom. Default is 'all'.  'function' includes both 'function-entry' and 'function-exit'.
  -fxray-instrument       Generate XRay instrumentation sleds on function entry and exit
  -fxray-link-deps        Link XRay runtime library when -fxray-instrument is specified (default)
  -fxray-modes=<value>    List of modes to link in by default into XRay instrumented binaries.
  -fxray-never-instrument=<value>
                          DEPRECATED: Filename defining the whitelist for imbuing the 'never instrument' XRay attribute.
  -fxray-selected-function-group=<value>
                          When using -fxray-function-groups, select which group of functions to instrument. Valid range is 0 to fxray-function-groups - 1
  -fzero-call-used-regs=<value>
                          Clear call-used registers upon function return (AArch64/x86 only)
  -fzvector               Enable System z vector language extension
  -F <value>              Add directory to framework include search path
  --gcc-install-dir=<value>
                          Use GCC installation in the specified directory. The directory ends with path components like 'lib{,32,64}/gcc{,-cross}/$triple/$version'. Note: executables (e.g. ld) used by the compiler are not overridden by the selected GCC installation
  --gcc-toolchain=<value> Specify a directory where Clang can find 'include' and 'lib{,32,64}/gcc{,-cross}/$triple/$version'. Clang will use the GCC installation with the largest version
  --gcc-triple=<value>    Search for the GCC installation with the specified triple.
  -gcodeview-command-line Emit compiler path and command line into CodeView debug information
  -gcodeview-ghash        Emit type record hashes in a .debug$H section
  -gcodeview              Generate CodeView debug information
  -gdwarf-2               Generate source-level debug information with dwarf version 2
  -gdwarf-3               Generate source-level debug information with dwarf version 3
  -gdwarf-4               Generate source-level debug information with dwarf version 4
  -gdwarf-5               Generate source-level debug information with dwarf version 5
  -gdwarf32               Enables DWARF32 format for ELF binaries, if debug information emission is enabled.
  -gdwarf64               Enables DWARF64 format for ELF binaries, if debug information emission is enabled.
  -gdwarf                 Generate source-level debug information with the default dwarf version
  -gembed-source          Embed source text in DWARF debug sections
  -gen-reproducer=<value> Emit reproducer on (option: off, crash (default), error, always)
  -gintel-sti             Generate Intel STI debug information
  -gline-directives-only  Emit debug line info directives only
  -gline-tables-only      Emit debug line number tables only
  -global-hoist           Enable external globals are load safe (default)
  -gmodules               Generate debug info with external references to clang modules or precompiled headers
  -gno-codeview-command-line
                          Don't emit compiler path and command line into CodeView debug information
  -gno-embed-source       Restore the default behavior of not embedding source text in DWARF debug sections
  -gno-inline-line-tables Don't emit inline line tables.
  --gpu-bundle-output     Bundle output files of HIP device compilation
  --gpu-instrument-lib=<value>
                          Instrument device library for HIP, which is a LLVM bitcode containing __cyg_profile_func_enter and __cyg_profile_func_exit
  --gpu-max-threads-per-block=<value>
                          Default max threads per block for kernel launch bounds for HIP
  -gpulibc                Link the LLVM C Library for GPUs
  -gsplit-dwarf=<value>   Set DWARF fission mode
  -gstrict-dwarf          Restrict DWARF features to those defined in the specified version, avoiding features from later versions.
  -gz=<value>             DWARF debug sections compression type
  -G <size>               Put objects of at most <size> bytes into small data section (MIPS / Hexagon)
  -g                      Generate source-level debug information
  --help-hidden           Display help for hidden options
  -help                   Display available options
  --hip-device-lib=<value>
                          HIP device library
  --hip-link              Link clang-offload-bundler bundles for HIP
  --hip-path=<value>      HIP runtime installation path, used for finding HIP version and adding HIP include path.
  --hip-version=<value>   HIP version in the format of major.minor.patch
  --hipspv-pass-plugin=<dsopath>
                          path to a pass plugin for HIP to SPIR-V passes.
  --hipstdpar-interpose-alloc
                          Replace all memory allocation / deallocation calls with hipManagedMalloc / hipFree equivalents
  --hipstdpar-path=<value>
                          HIP Standard Parallel Algorithm Acceleration library path, used for finding and implicitly including the library header
  --hipstdpar-prim-path=<value>
                          rocPrim path, required by the HIP Standard Parallel Algorithm Acceleration library, used to implicitly include the rocPrim library
  --hipstdpar-thrust-path=<value>
                          rocThrust path, required by the HIP Standard Parallel Algorithm Acceleration library, used to implicitly include the rocThrust library
  --hipstdpar             Enable HIP acceleration for standard parallel algorithms
  -H                      Show header includes and nesting depth
  -I-                     Restrict all prior -I flags to double-quoted inclusion and remove current directory from include path
  -iapinotes-modules <directory>
                          Add directory to the API notes search path referenced by module name
  -ibuiltininc            Enable builtin #include directories even when -nostdinc is used before or after -ibuiltininc. Using -nobuiltininc after the option disables it
  -idirafter <value>      Add directory to AFTER include search path
  -iframeworkwithsysroot <directory>
                          Add directory to SYSTEM framework search path, absolute paths are relative to -isysroot
  -iframework <value>     Add directory to SYSTEM framework search path
  -imacros <file>         Include macros from file before parsing
  -include-pch <file>     Include precompiled header file
  -include <file>         Include file before parsing
  -index-header-map       Make the next included directory (-I or -F) an indexer header map
  -inline-forceinline     Treat inline routines as forceinline
  -inline-level=<value>   Set function inlining level where: 0 is disable, 1 is inline marked functions and 2 is inline at compilers discretion
  --intel                 Run in Intel Compiler mode
  -ipo                    Enable LTO in 'full' mode
  -ipp-link=<value>       Link Intel(R) IPP libraries in requested manner (static,dynamic,shared)
  -ipp=<value>            Link commonly used Intel(R) Integrated Performace Primitives (Intel(R) IPP) libraries and bring in the associated headers (common,crypto,nonpic,nonpic_crypto)
  -iprefix <dir>          Set the -iwithprefix/-iwithprefixbefore prefix
  -iquote <directory>     Add directory to QUOTE include search path
  -isysroot <dir>         Set the system root directory (usually /)
  -isystem-after <directory>
                          Add directory to end of the SYSTEM include search path
  -isystem <directory>    Add directory to SYSTEM include search path
  -ivfsoverlay-lib <value>
                          Load the virtual filesystem from shared library
  -ivfsoverlay <value>    Overlay the virtual filesystem described by file over the real file system
  -iwithprefixbefore <dir>
                          Set directory to include search path with prefix
  -iwithprefix <dir>      Set directory to SYSTEM include search path with prefix
  -iwithsysroot <directory>
                          Add directory to SYSTEM include search path, absolute paths are relative to -isysroot
  -I <dir>                Add directory to the end of the list of include search paths
  --libomptarget-amdgcn-bc-path=<value>
                          Path to libomptarget-amdgcn bitcode library
  --libomptarget-amdgpu-bc-path=<value>
                          Path to libomptarget-amdgcn bitcode library
  --libomptarget-nvptx-bc-path=<value>
                          Path to libomptarget-nvptx bitcode library
  -L <dir>                Add directory to library search path
  -mabi=quadword-atomics  Enable quadword atomics ABI on AIX (AIX PPC64 only). Uses lqarx/stqcx. instructions.
  -mabicalls              Enable SVR4-style position-independent code (Mips only)
  -maix-shared-lib-tls-model-opt
                          For shared library loaded with the main program, change local-dynamic access(es) to initial-exec access(es) at the function level (AIX 64-bit only).
  -maix-small-local-dynamic-tls
                          Produce a faster access sequence for local-dynamic TLS variables where the offset from the TLS base is encoded as an immediate operand (AIX 64-bit only). This access sequence is not used for variables larger than 32KB.
  -maix-small-local-exec-tls
                          Produce a faster access sequence for local-exec TLS variables where the offset from the TLS base is encoded as an immediate operand (AIX 64-bit only). This access sequence is not used for variables larger than 32KB.
  -maix-struct-return     Return all structs in memory (PPC32 only)
  -malign-branch-boundary=<value>
                          Specify the boundary's size to align branches
  -malign-branch=<value>  Specify types of branches to align
  -malign-double          Align doubles to two words in structs (x86 only)
  -maltivec               Enable AltiVec vector initializer syntax
  -mamdgpu-ieee           Sets the IEEE bit in the expected default floating point  mode register. Floating point opcodes that support exception flag gathering quiet and propagate signaling NaN inputs per IEEE 754-2008. This option changes the ABI. (AMDGPU only)
  -mamdgpu-precise-memory-op
                          Enable precise memory mode (AMDGPU only)
  -mapx-features=<value>  Enable features of APX
  -mapx-inline-asm-use-gpr32
                          Enable use of GPR32 in inline assembly for APX
  -march=<value>          For a list of available architectures for the target use '-mcpu=help'
  -marm64x<value>         Link as a hybrid ARM64X image
  -mauto-arch=<codes>     generate multiple, processor-specific, auto-dispatched code paths for X86 processors, specified by <codes>, if there is a performance benefit
  -mbackchain             Link stack frames through backchain on System Z
  -mbranch-protection=<value>
                          Enforce targets of indirect branches and function returns
  -mbranches-within-32B-boundaries
                          Align selected branches (fused, jcc, jmp) within 32-byte boundary
  -mcabac                 Enable CABAC instructions
  -mcmse                  Allow use of CMSE (Armv8-M Security Extensions)
  -mcode-object-version=<value>
                          Specify code object ABI version. Defaults to 5. (AMDGPU only)
  -mconstructor-aliases   Enable emitting complete constructors and destructors as aliases when possible
  -mcpu=<value>           For a list of available CPUs for the target use '-mcpu=help'
  -mcrbits                Control the CR-bit tracking feature on PowerPC. ``-mcrbits`` (the enablement of CR-bit tracking support) is the default for POWER8 and above, as well as for all other CPUs when optimization is applied (-O2 and above).
  -mcrc                   Allow use of CRC instructions (ARM/Mips only)
  -mcumode                Specify CU wavefront execution mode (AMDGPU only)
  -mdaz-ftz               Globally set the denormals-are-zero (DAZ) and flush-to-zero (FTZ) bits in the floating-point control register on program startup
  -mdebug-line-version=<value>
                          Set debug line version used when generating debug information
  -mdefault-visibility-export-mapping=<value>
                          Mapping between default visibility and export
  -mdouble=<n             Force double to be <n> bits
  -MD                     Write a depfile containing user and system headers
  -meabi <value>          Set EABI type. Default depends on triple)
  -membedded-data         Place constants in the .rodata section instead of the .sdata section even if they meet the -G <size> threshold (MIPS)
  -menable-experimental-extensions
                          Enable use of experimental RISC-V extensions.
  -mexec-model=<value>    Execution model (WebAssembly only)
  -mexecute-only          Disallow generation of data access to code sections (ARM only)
  -mextern-sdata          Assume that externally defined data is in the small data if it meets the -G <size> threshold (MIPS)
  -mfentry                Insert calls to fentry at function entry (x86/SystemZ only)
  -mfix-cmse-cve-2021-35465
                          Work around VLLDM erratum CVE-2021-35465 (ARM only)
  -mfix-cortex-a53-835769 Workaround Cortex-A53 erratum 835769 (AArch64 only)
  -mfix-cortex-a57-aes-1742098
                          Work around Cortex-A57 Erratum 1742098 (ARM only)
  -mfix-cortex-a72-aes-1655431
                          Work around Cortex-A72 Erratum 1655431 (ARM only)
  -mforced-sw-shadow-stack
                          Force using software shadow stack when shadow-stack enabled
  -mfp32                  Use 32-bit floating point registers (MIPS only)
  -mfp64                  Use 64-bit floating point registers (MIPS only)
  -mframe-chain=<value>   Select the frame chain model used to emit frame records (Arm only).
  -mfunction-return=<value>
                          Replace returns with jumps to ``__x86_return_thunk`` (x86 only, error otherwise)
  -MF <file>              Write depfile output from -MMD, -MD, -MM, or -M to <file>
  -mgeneral-regs-only     Generate code which only uses the general purpose registers (AArch64/x86 only)
  -mglobal-merge          Enable merging of globals
  -mgpopt                 Use GP relative accesses for symbols known to be in a small data section (MIPS)
  -mguard=<value>         Enable or disable Control Flow Guard checks and guard tables emission
  -MG                     Add missing headers to depfile
  -mharden-sls=<value>    Select straight-line speculation hardening scope (ARM/AArch64/X86 only). <arg> must be: all, none, retbr(ARM/AArch64), blr(ARM/AArch64), comdat(ARM/AArch64), nocomdat(ARM/AArch64), return(X86), indirect-jmp(X86)
  -mhvx-ieee-fp           Enable Hexagon HVX IEEE floating-point
  -mhvx-length=<value>    Set Hexagon Vector Length
  -mhvx-qfloat            Enable Hexagon HVX QFloat instructions
  -mhvx=<value>           Enable Hexagon Vector eXtensions
  -mhvx                   Enable Hexagon Vector eXtensions
  -miamcu                 Use Intel MCU ABI
  -mignore-xcoff-visibility
                          Not emit the visibility attribute for asm in AIX OS or give all symbols 'unspecified' visibility in XCOFF object file
  --migrate               Run the migrator
  -mincremental-linker-compatible
                          (integrated-as) Emit an object file which can be used with an incremental linker
  -mindirect-branch-cs-prefix
                          Add cs prefix to call and jmp to indirect thunk
  -mindirect-jump=<value> Change indirect jump instructions to inhibit speculation
  -mintrinsic-promote     Force certain functions using intrinsics to promote their architectures and make the intrinsic headers included by default
  -mios-version-min=<value>
                          Set iOS deployment target
  -MJ <value>             Write a compilation database entry per input
  -mlasx                  Enable Loongson Advanced SIMD Extension (LASX).
  -mlink-builtin-bitcode-postopt
                          Link builtin bitcodes after the optimization pipeline
  -mllvm-lto <value>      Additional arguments to forward to LLVM's option processing. Similar to -mllvm, but will also pass the given argument to the LTO step when appropriate.
  -mllvm=<arg>            Alias for -mllvm
  -mllvm <value>          Additional arguments to forward to LLVM's option processing
  -mlocal-sdata           Extend the -G behaviour to object local data (MIPS)
  -mlong-calls            Generate branches with extended addressability, usually via indirect jumps.
  -mlong-double-128       Force long double to be 128 bits
  -mlong-double-64        Force long double to be 64 bits
  -mlong-double-80        Force long double to be 80 bits, padded to 128 bits for storage
  -mlr-for-calls-only     Do not allocate the LR register for general purpose usage, only for calls. (AArch64 only)
  -mlsx                   Enable Loongson SIMD Extension (LSX).
  -mlvi-cfi               Enable only control-flow mitigations for Load Value Injection (LVI)
  -mlvi-hardening         Enable all mitigations for Load Value Injection (LVI)
  -mmacos-version-min=<value>
                          Set macOS deployment target
  -mmadd4                 Enable the generation of 4-operand madd.s, madd.d and related instructions.
  -mmark-bti-property     Add .note.gnu.property with BTI to assembly files (AArch64 only)
  -MMD                    Write a depfile containing user headers
  -mmemops                Enable generation of memop instructions
  -mmlir <value>          Additional arguments to forward to MLIR's option processing
  -mms-bitfields          Set the default structure layout to be compatible with the Microsoft compiler standard
  -mmsa                   Enable MSA ASE (MIPS only)
  -mmt                    Enable MT ASE (MIPS only)
  -MM                     Like -MMD, but also implies -E and writes to stdout by default
  -mno-abicalls           Disable SVR4-style position-independent code (Mips only)
  -mno-amdgpu-precise-memory-op
                          Disable precise memory mode (AMDGPU only)
  -mno-apx-features=<value>
                          Disable features of APX
  -mno-bti-at-return-twice
                          Do not add a BTI instruction after a setjmp or other return-twice construct (Arm/AArch64 only)
  -mno-constructor-aliases
                          Disable emitting complete constructors and destructors as aliases when possible
  -mno-crc                Disallow use of CRC instructions (Mips only)
  -mno-cumode             Specify WGP wavefront execution mode (AMDGPU only)
  -mno-daz-ftz            Do not globally set the denormals-are-zero (DAZ) and flush-to-zero (FTZ) bits in the floating-point control register on program startup
  -mno-embedded-data      Do not place constants in the .rodata section instead of the .sdata if they meet the -G <size> threshold (MIPS)
  -mno-execute-only       Allow generation of data access to code sections (ARM only)
  -mno-extern-sdata       Do not assume that externally defined data is in the small data if it meets the -G <size> threshold (MIPS)
  -mno-fix-cmse-cve-2021-35465
                          Don't work around VLLDM erratum CVE-2021-35465 (ARM only)
  -mno-fix-cortex-a53-835769
                          Don't workaround Cortex-A53 erratum 835769 (AArch64 only)
  -mno-fix-cortex-a57-aes-1742098
                          Don't work around Cortex-A57 Erratum 1742098 (ARM only)
  -mno-fix-cortex-a72-aes-1655431
                          Don't work around Cortex-A72 Erratum 1655431 (ARM only)
  -mno-fmv                Disable function multiversioning
  -mno-forced-sw-shadow-stack
                          Not force using software shadow stack when shadow-stack enabled
  -mno-gather             Disable generation of gather instructions in auto-vectorization(x86 only)
  -mno-global-merge       Disable merging of globals
  -mno-gpopt              Do not use GP relative accesses for symbols known to be in a small data section (MIPS)
  -mno-hvx-ieee-fp        Disable Hexagon HVX IEEE floating-point
  -mno-hvx-qfloat         Disable Hexagon HVX QFloat instructions
  -mno-hvx                Disable Hexagon Vector eXtensions
  -mno-implicit-float     Don't generate implicit floating point or vector instructions
  -mno-incremental-linker-compatible
                          (integrated-as) Emit an object file which cannot be used with an incremental linker
  -mno-lasx               Disable Loongson Advanced SIMD Extension (LASX).
  -mno-local-sdata        Do not extend the -G behaviour to object local data (MIPS)
  -mno-long-calls         Restore the default behaviour of not generating long calls
  -mno-lsx                Disable Loongson SIMD Extension (LSX).
  -mno-lvi-cfi            Disable control-flow mitigations for Load Value Injection (LVI)
  -mno-lvi-hardening      Disable mitigations for Load Value Injection (LVI)
  -mno-madd4              Disable the generation of 4-operand madd.s, madd.d and related instructions.
  -mno-memops             Disable generation of memop instructions
  -mno-movt               Disallow use of movt/movw pairs (ARM only)
  -mno-ms-bitfields       Do not set the default structure layout to be compatible with the Microsoft compiler standard
  -mno-msa                Disable MSA ASE (MIPS only)
  -mno-mt                 Disable MT ASE (MIPS only)
  -mno-neg-immediates     Disallow converting instructions with negative immediates to their negation or inversion.
  -mno-nvj                Disable generation of new-value jumps
  -mno-nvs                Disable generation of new-value stores
  -mno-outline-atomics    Don't generate local calls to out-of-line atomic operations
  -mno-outline            Disable function outlining (AArch64 only)
  -mno-packets            Disable generation of instruction packets
  -mno-pic-data-is-text-relative
                          Don't assume data segments are relative to text segment
  -mno-regnames           Use only register numbers when writing assembly output
  -mno-relax              Disable linker relaxation
  -mno-restrict-it        Allow generation of complex IT blocks.
  -mno-save-restore       Disable using library calls for save and restore
  -mno-scalar-strict-align
                          Allow scalar memory accesses to be unaligned (RISC-V only)
  -mno-scatter            Disable generation of scatter instructions in auto-vectorization(x86 only)
  -mno-seses              Disable speculative execution side effect suppression (SESES)
  -mno-stack-arg-probe    Disable stack probes which are enabled by default
  -mno-strict-align       Allow memory accesses to be unaligned (AArch64/LoongArch/RISC-V only)
  -mno-tgsplit            Disable threadgroup split execution mode (AMDGPU only)
  -mno-tls-direct-seg-refs
                          Disable direct TLS access through segment registers
  -mno-tocdata=<value>    Specifies a list of variables to be exempt from the TOC datatransformation.
  -mno-tocdata            This is the default. TOC data transformation is not applied to anyvariables. Only variables specified explicitly in -mtocdata= willhave the TOC data transformation.
  -mno-unaligned-access   Force all memory accesses to be aligned (AArch32/MIPSr6 only)
  -mno-unaligned-symbols  Expect external char-aligned symbols to be without ABI alignment (SystemZ only)
  -mno-vector-strict-align
                          Allow vector memory accesses to be unaligned (RISC-V only)
  -mno-wavefrontsize64    Specify wavefront size 32 mode (AMDGPU only)
  -mnocrc                 Disallow use of CRC instructions (ARM only)
  -mnop-mcount            Generate mcount/__fentry__ calls as nops. To activate they need to be patched in.
  -mnvj                   Enable generation of new-value jumps
  -mnvs                   Enable generation of new-value stores
  -module-dependency-dir <value>
                          Directory to dump module dependencies to
  -module-file-info       Provide information about a particular module file
  -momit-leaf-frame-pointer
                          Omit frame pointer setup for leaf functions
  -moutline-atomics       Generate local calls to out-of-line atomic operations
  -moutline               Enable function outlining (AArch64 only)
  -mpacked-stack          Use packed stack layout (SystemZ only).
  -mpackets               Enable generation of instruction packets
  -mpad-max-prefix-size=<value>
                          Specify maximum number of prefixes to use for padding
  -mpic-data-is-text-relative
                          Assume data segments are relative to text segment
  -mprefer-vector-width=<value>
                          Specifies preferred vector width for auto-vectorization. Defaults to 'none' which allows target specific decisions.
  -mprintf-kind=<value>   Specify the printf lowering scheme (AMDGPU only), allowed values are "hostcall"(printing happens during kernel execution, this scheme relies on hostcalls which require system to support pcie atomics) and "buffered"(printing happens after all kernel threads exit, this uses a printf buffer and does not rely on pcie atomic support)
  -MP                     Create phony target for each dependency (other than main file)
  -mqdsp6-compat          Enable hexagon-qdsp6 backward compatibility
  -MQ <value>             Specify name of main file output to quote in depfile
  -mrecip=<value>         Control use of approximate reciprocal and reciprocal square root instructions followed by <n> iterations of Newton-Raphson refinement. <value> = ( ['!'] ['vec-'] ('rcp'|'sqrt') [('h'|'s'|'d')] [':'<n>] ) | 'all' | 'default' | 'none'
  -mrecip                 Equivalent to '-mrecip=all'
  -mrecord-mcount         Generate a __mcount_loc section entry for each __fentry__ call.
  -mregnames              Use full register names when writing assembly output
  -mrelax-all             (integrated-as) Relax all machine instructions
  -mrelax                 Enable linker relaxation
  -mrestrict-it           Disallow generation of complex IT blocks. It is off by default.
  -mrtd                   Make StdCall calling convention the default
  -mrvv-vector-bits=<value>
                          Specify the size in bits of an RVV vector register
  -msave-restore          Enable using library calls for save and restore
  -mscalar-strict-align   Force all scalar memory accesses to be aligned (RISC-V only)
  -mseses                 Enable speculative execution side effect suppression (SESES). Includes LVI control flow integrity mitigations
  -msign-return-address=<value>
                          Select return address signing scope
  -msimd=<value>          Select the SIMD extension(s) to be enabled in LoongArch either 'none', 'lsx', 'lasx'.
  -mskip-rax-setup        Skip setting up RAX register when passing variable arguments (x86 only)
  -msmall-data-limit=<value>
                          Put global and static data smaller than the limit into a special section
  -msoft-float            Use software floating point
  -msse2avx               Specify that the assembler should encode SSE instructions with VEX prefix
  -mstack-alignment=<value>
                          Set the stack alignment
  -mstack-arg-probe       Enable stack probes
  -mstack-probe-size=<value>
                          Set the stack probe size
  -mstack-protector-guard-offset=<value>
                          Use the given offset for addressing the stack-protector guard
  -mstack-protector-guard-reg=<value>
                          Use the given reg for addressing the stack-protector guard
  -mstack-protector-guard-symbol=<value>
                          Use the given symbol for addressing the stack-protector guard
  -mstack-protector-guard=<value>
                          Use the given guard (global, tls) for addressing the stack-protector guard
  -mstackrealignext       Force realign the stack at entry to every external function
  -mstackrealign          Force realign the stack at entry to every function
  -mstrict-align          Force all memory accesses to be aligned (AArch64/LoongArch/RISC-V only)
  -msve-vector-bits=<value>
                          Specify the size in bits of an SVE vector register. Defaults to the vector length agnostic value of "scalable". (AArch64 only)
  -msvr4-struct-return    Return small structs in registers (PPC32 only)
  -mtargetos=<value>      Set the deployment target to be the specified OS and OS version
  -mtgsplit               Enable threadgroup split execution mode (AMDGPU only)
  -mthread-model <value>  The thread model to use. Defaults to 'posix')
  -mtls-dialect=<value>   Which thread-local storage dialect to use for dynamic accesses of TLS variables
  -mtls-direct-seg-refs   Enable direct TLS access through segment registers (default)
  -mtls-size=<value>      Specify bit size of immediate TLS offsets (AArch64 ELF only): 12 (for 4KB) | 24 (for 16MB, default) | 32 (for 4GB) | 48 (for 256TB, needs -mcmodel=large)
  -mtocdata=<value>       Specifies a list of variables to which the TOC data transformationwill be applied.
  -mtocdata               All suitable variables will have the TOC data transformation applied
  -mtp=<value>            Thread pointer access method. For AArch32: 'soft' uses a function call, or 'tpidrurw', 'tpidruro' or 'tpidrprw' use the three CP15 registers. 'cp15' is an alias for 'tpidruro'. For AArch64: 'tpidr_el0', 'tpidr_el1', 'tpidr_el2', 'tpidr_el3' or 'tpidrro_el0' use the five system registers. 'elN' is an alias for 'tpidr_elN'.
  -mtune=<value>          Only supported on AArch64, PowerPC, RISC-V, SPARC, SystemZ, and X86
  -MT <value>             Specify name of main file output in depfile
  -munaligned-access      Allow memory accesses to be unaligned (AArch32/MIPSr6 only)
  -munaligned-symbols     Expect external char-aligned symbols to be without ABI alignment (SystemZ only)
  -munsafe-fp-atomics     Enable generation of unsafe floating point atomic instructions. May generate more efficient code, but may not respect rounding and denormal modes, and may give incorrect results for certain memory destinations. (AMDGPU only)
  -mvector-strict-align   Force all vector memory accesses to be aligned (RISC-V only)
  -mvevpu                 Emit VPU instructions for VE
  -MV                     Use NMake/Jom format for the depfile
  -mwavefrontsize64       Specify wavefront size 64 mode (AMDGPU only)
  -mxcoff-build-id=<0xHEXSTRING>
                          On AIX, request creation of a build-id string, "0xHEXSTRING", in the string table of the loader section inside the linked binary
  -mxcoff-roptr           Place constant objects with relocatable address values in the RO data section and add -bforceimprw to the linker flags (AIX only)
  -mzos-hlq-clang=<ClangHLQ>
                          High level qualifier for z/OS C++RT side deck datasets
  -mzos-hlq-csslib=<CsslibHLQ>
                          High level qualifier for z/OS CSSLIB dataset
  -mzos-hlq-le=<LeHLQ>    High level qualifier for z/OS Language Environment datasets
  -mzos-sys-include=<SysInclude>
                          Path to system headers on z/OS
  -M                      Like -MD, but also implies -E and writes to stdout by default
  -no-ansi-alias          disable use of ANSI aliasing rules optimizations
  --no-cuda-include-ptx=<value>
                          Do not include PTX for the following GPU architecture (e.g. sm_35) or 'all'. May be specified more than once.
  --no-cuda-version-check Don't error out if the detected version of the CUDA install is too low for the requested CUDA gpu architecture.
  --no-default-config     Disable loading default configuration files
  -no-fma                 Disable the combining of floating point multiples and add/subtract operations.
  -no-ftz                 Disable flush denormal results to zero
  -no-global-hoist        Disable external globals are load safe
  --no-gpu-bundle-output  Do not bundle output files of HIP device compilation
  -no-hip-rt              Do not link against HIP runtime libraries
  -no-intel-lib=<value>   Restrict linking of Intel specific libraries. Valid arguments are libirc, libimf, libirng, libsvml
  -no-intel-lib           Restrict linking of all Intel specific libraries.
  -no-ipo                 Disable LTO mode (default)
  --no-offload-arch=<value>
                          Remove CUDA/HIP offloading device architecture (e.g. sm_35, gfx906) from the list of devices to compile for. 'all' resets the list to its default value.
  --no-offload-new-driver Don't Use the new driver for offloading compilation.
  -no-parallel-source-info
                          Disable emission of source location information for parallel code generation.
  -no-sox                 Disable saving of compiler options in the executable
  --no-system-header-prefix=<prefix>
                          Treat all #include paths starting with <prefix> as not including a system header.
  -no-vec                 Disable the loop vectorization passes
  --no-wasm-opt           Disable the wasm-opt optimizer
  -nobuiltininc           Disable builtin #include directories
  -nogpuinc               Do not add include paths for CUDA/HIP and do not include the default CUDA/HIP wrapper headers
  -nogpulib               Do not link device library for CUDA/HIP device compilation
  -nohipwrapperinc        Do not include the default HIP wrapper headers and include paths
  -nolib-inline           disable inline expansion of intrinsic functions
  -nolibsycl              Do not link SYCL runtime library
  -nostdinc++             Disable standard #include directories for the C++ standard library
  --nvptx-arch-tool=<value>
                          Tool used for detecting NVIDIA GPU arch in the system.
  -ObjC++                 Treat source input files as Objective-C++ inputs
  -objcmt-allowlist-dir-path=<value>
                          Only modify files with a filename contained in the provided directory path
  -objcmt-atomic-property Make migration to 'atomic' properties
  -objcmt-migrate-all     Enable migration to modern ObjC
  -objcmt-migrate-annotation
                          Enable migration to property and method annotations
  -objcmt-migrate-designated-init
                          Enable migration to infer NS_DESIGNATED_INITIALIZER for initializer methods
  -objcmt-migrate-instancetype
                          Enable migration to infer instancetype for method result type
  -objcmt-migrate-literals
                          Enable migration to modern ObjC literals
  -objcmt-migrate-ns-macros
                          Enable migration to NS_ENUM/NS_OPTIONS macros
  -objcmt-migrate-property-dot-syntax
                          Enable migration of setter/getter messages to property-dot syntax
  -objcmt-migrate-property
                          Enable migration to modern ObjC property
  -objcmt-migrate-protocol-conformance
                          Enable migration to add protocol conformance on classes
  -objcmt-migrate-readonly-property
                          Enable migration to modern ObjC readonly property
  -objcmt-migrate-readwrite-property
                          Enable migration to modern ObjC readwrite property
  -objcmt-migrate-subscripting
                          Enable migration to modern ObjC subscripting
  -objcmt-ns-nonatomic-iosonly
                          Enable migration to use NS_NONATOMIC_IOSONLY macro for setting property's 'atomic' attribute
  -objcmt-returns-innerpointer-property
                          Enable migration to annotate property with NS_RETURNS_INNER_POINTER
  -objcmt-whitelist-dir-path=<value>
                          Alias for -objcmt-allowlist-dir-path
  -ObjC                   Treat source input files as Objective-C inputs
  -object-file-name=<file>
                          Set the output <file> for debug infos
  --offload-arch=<value>  Specify an offloading device architecture for CUDA, HIP, or OpenMP. (e.g. sm_35). If 'native' is used the compiler will detect locally installed architectures. For HIP offloading, the device architecture can be followed by target ID features delimited by a colon (e.g. gfx908:xnack+:sramecc-). May be specified more than once.
  --offload-compress      Compress offload device binaries (HIP only)
  --offload-device-only   Only compile for the offloading device.
  --offload-host-device   Compile for both the offloading host and device (default).
  --offload-host-only     Only compile for the offloading host.
  --offload-link          Use the new offloading linker to perform the link job.
  --offload-new-driver    Use the new driver for offloading compilation.
  --offload=<value>       Specify comma-separated list of offloading target triples (CUDA and HIP only)
  -o <file>               Write output to <file>
  -parallel-source-info=<value>
                          Emit source location information for parallel code generation with OpenMP and auto-parallelization.
  -pch-use <file>         Include precompiled header file
  -pc <value>             Initialize X87 floating point precision to single, double or double extended. Valid values of 32, 64 and 80
  -pedantic               Warn on language extensions
  -pg                     Enable mcount instrumentation
  -pipe                   Use pipes between commands, when possible
  --precompile            Only precompile the input
  --pretty-sgf            Emit pretty printed symbol graphs
  -print-diagnostic-options
                          Print all of Clang's warning options
  -print-effective-triple Print the effective target triple
  -print-enabled-extensions
                          Print the extensions enabled by the given target and -march/-mcpu options. (AArch64 and RISC-V only)
  -print-file-name=<file> Print the full library path of <file>
  -print-ivar-layout      Enable Objective-C Ivar layout bitmap print trace
  -print-libgcc-file-name Print the library path for the currently used compiler runtime library ("libgcc.a" or "libclang_rt.builtins.*.a")
  -print-library-module-manifest-path
                          Print the path for the C++ Standard library module manifest
  -print-multi-flags-experimental
                          Print the flags used for selecting multilibs (experimental)
  -print-prog-name=<name> Print the full program path of <name>
  -print-resource-dir     Print the resource directory pathname
  -print-rocm-search-dirs Print the paths used for finding ROCm installation
  -print-runtime-dir      Print the directory pathname containing Clang's runtime libraries
  -print-search-dirs      Print the paths used for finding libraries and programs
  -print-supported-cpus   Print supported cpu models for the given target (if target is not specified, it will print the supported cpus for the default target)
  -print-supported-extensions
                          Print supported -march extensions (RISC-V, AArch64 and ARM only)
  -print-target-triple    Print the normalized target triple
  -print-targets          Print the registered targets
  -pthread                Support POSIX threads in generated code
  --ptxas-path=<value>    Path to ptxas (used for compiling CUDA code)
  -P                      Disable linemarker output in -E mode
  -p                      Enable mcount instrumentation with prof
  -qactypes               Enable compile and link support for the Algorithmic C Data-types (AC types)
  -qdaal=<value>          Link Intel(R) Data Analytics Acceleration Library (Intel(R) DAAL) libraries and bring in the associated headers (parallel)
  -qipp-link=<value>      Link Intel(R) IPP libraries in requested manner (static,dynamic,shared)
  -qipp=<value>           Link commonly used Intel(R) Integrated Performace Primitives (Intel(R) IPP) libraries and bring in the associated headers (common,crypto,nonpic,nonpic_crypto)
  -qmkl-ilp64=<value>     Link commonly used Intel(R) Math Kernel ILP64 Variant Library (Intel(R) MKL) and bring in the associated headers (parallel,sequential,cluster)("cluster" is not supported in DPC++)
  -qmkl-sycl-impl=<value> Limit linking of SYCL-specific implementations of the Intel(R) Math Kernel Library to specified in argument. Valid arguments: blas, lapack, dft, sparse, rng, stats, vm.
  -qmkl=<value>           Link commonly used Intel(R) Math Kernel Library (Intel(R) MKL) and bring in the associated headers (parallel,sequential,cluster)("cluster" is not supported in DPC++)
  -qno-actypes            Disable the compile and link support for the Algorithmic C Data-types (AC types)
  -qno-openmp             Disable OpenMP support
  -qno-opt-dynamic-align  Disable peeling to optimize alignment for vectorization.
  -qno-opt-jump-tables    Do not use jump tables for lowering switches
  -qno-opt-matmul         Disables compiler-generated Matrix Multiply (matmul) library call
  -qno-opt-mem-layout-trans
                          Disable memory layout transformations
  -qno-opt-multiple-gather-scatter-by-shuffles
                          Disables the optimization for multiple adjacent gather/scatter type vector memory references
  -qno-opt-prefetch       Disable prefetching.
  -Qn                     Do not emit metadata containing compiler name and version
  -qopenmp-link=<value>   Choose whether to link with the static or dynamic OpenMP libraries. Default is dynamic.
  -qopenmp-simd           Emit OpenMP code only for SIMD-based constructs.
  -qopenmp-stubs          enables the user to compile OpenMP programs in sequential mode. The OpenMP directives are ignored and a stub OpenMP library is linked.
  -qopenmp-threadprivate=<value>
                          Choose which threadprivate implementation to use: compat or legacy.
  -qopenmp                Parse OpenMP pragmas and generate parallel code.
  -qopt-assume-no-loop-carried-dep=<value>
                          Set a level of performance tuning for loops.  0 - The compiler does not assume there is loop-carried dependencies (default).  1 - Assume there are no loop-carried dependencies for innermost loops.  2 - Assume there are no loop-carried dependencies for all loop levels.
  -qopt-dword-index-for-array-of-structs=<value>
                          When specified allows the compiler to use dword indexes to access elements of arrays of structs which in size do not exceed val bytes. The arrays in question should contain no more than INT_MAX / sizeof(element) elements. Allowed values for val are: 16, 32, default is 16.
  -qopt-dynamic-align     Enable peeling to optimize alignment for vectorization.
  -qopt-for-throughput=<value>
                          Optimize for throughput performance, assuming multiple jobs are running.  The memory optimizations for single job versus multiple jobs can be tuned in different ways by the compiler. Valid arguments: multi-job, single-job
  -qopt-jump-tables       Control the generation of jump tables
  -qopt-matmul            Enables compiler-generated Matrix Multiply (matmul) library call
  -qopt-mem-layout-trans=<value>
                          Control the level of memory layout transformations performed by the compiler
  -qopt-multiple-gather-scatter-by-shuffles
                          Enables the optimization for multiple adjacent gather/scatter type vector memory references
  -qopt-prefetch-distance=<value>
                          Specify the prefetch distance to be used for compiler generated prefetches inside loops. Value indicates distance from memory to L2 cache.
  -qopt-prefetch-loads-only
                          Only insert prefetches based on the loads inside the loop. Stores are ignored.
  -qopt-prefetch=<value>  Enable levels of prefetch insertion, where 0 disables.  Values of 1 - 5 are available.  Default is 2.
  -qopt-prefetch          Enable prefetch insertion.  Same as -qopt-prefetch=2.
  -qopt-report-file=<value>
                          Specify the filename or output stream (stdout, stderr) for the generated optimization report
  -qopt-report-names=<value>
                          Specifies whether mangled or unmangled names should appear in the optimization report.
  -qopt-report-phase=<value>
                          Specify one or more phases for which optimization reports are generated
  -qopt-report-stdout     Specify the generated optimization report should be directed to stdout
  -qopt-report=<value>    Generate an optimization report, min, med or max.
  -qopt-streaming-stores=<value>
                          Specifies whether streaming stores are generated.
  -qopt-zmm-usage=<value> Specifies the level of zmm registers usage, low or high
  -Qoption,<arg>           Qoption,<tool>,<args> to pass the comma separated arguments to the <tool>; <tool> can be asm for assembler (or) link/ld for linker (or) preprocessor for preprocessor (or) compiler for compiler
  -qoverride-limits       enables the user to skip throttling of loops in framework and DD.
  -qtbb                   Link Intel(R) Threading Building Blocks (Intel(R) TBB) libraries and bring in the associated headers
  -Qunused-arguments      Don't emit warning for unused driver arguments
  -Qy                     Emit metadata containing compiler name and version
  -regcall4               Set __regcall4 as a default calling convention to respect __regcall ABI v.4
  -regcall                Set __regcall as a default calling convention
  -relocatable-pch        Whether to build a relocatable precompiled header
  -reuse-exe=<exe>        Speed up FPGA aoc compile if the device code in <exe> is unchanged.
  -rewrite-legacy-objc    Rewrite Legacy Objective-C source to C++
  -rewrite-objc           Rewrite Objective-C source to C++
  --rocm-device-lib-path=<value>
                          ROCm device library path. Alternative to rocm-path.
  --rocm-path=<value>     ROCm installation path, used for finding and automatically linking required bitcode libraries.
  -Rpass-analysis=<value> Report transformation analysis from optimization passes whose name matches the given POSIX regular expression
  -Rpass-missed=<value>   Report missed transformations by optimization passes whose name matches the given POSIX regular expression
  -Rpass=<value>          Report transformations performed by optimization passes whose name matches the given POSIX regular expression
  -rtlib=<value>          Compiler runtime library to use
  -R<remark>              Enable the specified remark
  -save-stats=<value>     Save llvm statistics.
  -save-stats             Save llvm statistics.
  -save-temps=<value>     Save intermediate compilation results. <arg> can be set to 'cwd' for current working directory, or 'obj' which will save temporary files in the same directory as the final output file
  -save-temps             Alias for --save-temps=cwd
  -serialize-diagnostics <value>
                          Serialize compiler diagnostics to a file
  -shared-intel           link Intel provided libraries dynamically
  -shared-libsan          Dynamically link the sanitizer runtime
  -sox=<value>            Enable saving of compiler options, version and additional information in the executable.  Use -no-sox to disable (DEFAULT). Valid arguments: profile - Includes data when profile was used for functions that were compiled with PGO enabling options such as -fprofile-use and -fprofile-instr-use, inline - Includes a list of the functions that were inlined in each object, secure - Strip out directory names and options that use them.
  -sox                    Enable saving of compiler options in the executable
  --start-no-unused-arguments
                          Don't emit warnings about unused arguments for the following arguments
  -static-intel           link Intel provided libraries statically
  -static-libsan          Statically link the sanitizer runtime (Not supported for ASan, TSan or UBSan on darwin)
  -static-openmp          Use the static host OpenMP runtime while linking.
  -std=<value>            Language standard to compile for
  -stdlib++-isystem <directory>
                          Use directory as the C++ standard library include path
  -stdlib=<value>         C++ standard library to use
  -strict-ansi            strict ANSI conformance dialect
  -sycl-std=<value>       SYCL language standard to compile for.
  --symbol-graph-dir=<value>
                          Directory in which to emit symbol graphs.
  --system-header-prefix=<prefix>
                          Treat all #include paths starting with <prefix> as including a system header.
  -S                      Only run preprocess and compilation steps
  --target=<value>        Generate code for the given target
  -tbb                    Link Intel(R) Threading Building Blocks (Intel(R) TBB) libraries and bring in the associated headers
  -time                   Time individual commands
  -traceback              Generate traceback debug information
  -traditional-cpp        Enable some traditional CPP emulation
  -trigraphs              Process trigraph sequences
  -T <script>             Specify <script> as linker script
  -undef                  undef all system defines
  -unroll<value>          Set maximum number of times to unroll loops.  Omit n to use default heuristics.  Use 0 to disable the loop unroller.
  -unwindlib=<value>      Unwind library to use
  -use-msasm              enables the use of blocks and entire functions of assembly code within a C or C++ file
  -U <macro>              Undefine macro <macro>
  -vec-threshold<value>   Sets a threshold for the vectorization of loops based on the probability of profitable execution of the vectorized loop in parallel.
  -vecabi=<value>         Determines which vector function ABI the compiler uses to create or call vector functions. The 'gcc' (default) argument enforces compatibility with gcc. The 'cmdtarget' argument uses an extended set of vector functions.
  -vec                    Enable the loop vectorization passes
  --verify-debug-info     Verify the binary representation of debug output
  -verify-pch             Load and verify that a pre-compiled header file is not stale
  --version               Print version information
  -vfsoverlay <value>     Overlay the virtual filesystem described by file over the real file system. Additionally, pass this overlay file to the linker if it supports it
  -v                      Show commands to run and use verbose output
  -Wa,<arg>               Pass the comma separated arguments in <arg> to the assembler
  --wasm-opt              Enable the wasm-opt optimizer (default)
  -Wcheck-unicode-security
                          Enable detection and warn about Unicode constructs that can be exploited by using bi-directional formatting codes, zero-width characters in strings and use of zero-width characters and homoglyphs in identifiers. Done by using clang-tidy
  -Wdeprecated            Enable warnings for deprecated constructs and define __DEPRECATED
  -Winvalid-constexpr     Enable checking of constexpr function bodies for validity within a constant expression context
  -Wl,<arg>               Pass the comma separated arguments in <arg> to the linker
  -Wno-invalid-constexpr  Disable checking of constexpr function bodies for validity within a constant expression context
  -Wno-sycl-strict        Disable warnings which enforce strict SYCL language compatibility.
  -working-directory <value>
                          Resolve file paths relative to the specified directory
  -Wp,<arg>               Pass the comma separated arguments in <arg> to the preprocessor
  -W<warning>             Enable the specified warning
  -w                      Suppress all warnings
  -Xanalyzer <arg>        Pass <arg> to the static analyzer
  -Xarch_device <arg>     Pass <arg> to the CUDA/HIP device compilation
  -Xarch_host <arg>       Pass <arg> to the CUDA/HIP host compilation
  -Xassembler <arg>       Pass <arg> to the assembler
  -Xclang=<arg>           Alias for -Xclang
  -Xclang <arg>           Pass <arg> to clang -cc1
  -Xcuda-fatbinary <arg>  Pass <arg> to fatbinary invocation
  -Xcuda-ptxas <arg>      Pass <arg> to the ptxas assembler
  -Xlinker <arg>          Pass <arg> to the linker
  -Xoffload-linker<triple> <arg>
                          Pass <arg> to the offload linkers or the ones idenfied by -<triple>
  -Xopenmp-target-backend=<triple> <arg>
                          Pass <arg> to the OpenMP based backend identified by <triple>. Depending on the triple (spir64, spir64_gen, spir64_x86_64), the arg passed will be interpreted by the corresponding AOT tool or runtime consumer.
  -Xopenmp-target-backend <arg>
                          Pass <arg> to the OpenMP based target backend.
  -Xopenmp-target-frontend=<value>
                          Pass <arg> to the OpenMP based target frontend identified by <triple>.
  -Xopenmp-target-frontend <value>
                          Pass <arg> to the OpenMP based target frontend.
  -Xopenmp-target-linker=<triple> <arg>
                          Pass <arg> to the SYCL based target linker identified by <triple>.
  -Xopenmp-target-linker <arg>
                          Pass <arg> to the SYCL based target linker.
  -Xopenmp-target=<triple> <arg>
                          Pass <arg> to the target offloading toolchain identified by <triple>.
  -Xopenmp-target <arg>   Pass <arg> to the target offloading toolchain.
  -Xpreprocessor <arg>    Pass <arg> to the preprocessor
  -Xsycl-target-backend=<triple> <arg>
                          Pass <arg> to the SYCL based backend identified by <triple>. Depending on the triple (spir64, spir64_gen, spir64_x86_64, spir64_fpga), the arg passed will be interpreted by the corresponding AOT tool or runtime consumer.
  -Xsycl-target-backend <arg>
                          Pass <arg> to the SYCL based target backend.
  -Xsycl-target-frontend=<triple> <arg>
                          Pass <arg> to the SYCL based target frontend identified by <triple>.
  -Xsycl-target-frontend <arg>
                          Pass <arg> to the SYCL based target frontend.
  -Xsycl-target-linker=<triple> <arg>
                          Pass <arg> to the SYCL based target linker identified by <triple>.
  -Xsycl-target-linker <arg>
                          Pass <arg> to the SYCL based target linker.
  -Xs <arg>               Pass <arg> to the offline compiler.
  -Xs<arg>                Pass <arg> to the offline compiler, adding the option specifier '-' to the <arg>.
  -x <language>           Treat subsequent input files as having type <language>
  -x<code>                Generate specialized code to run exclusively on processors indicated by <code>.
  -z <arg>                Pass -z <arg> to the linker
dxc compatibility options.:
  --dxv-path=<value>  DXIL validator installation path
  -fspv-target-env=<value>
                      Specify the target environment
  -hlsl-entry <value> Entry point name for hlsl
Executing: mpiicc -cc=icx --help | head -n 500
Detected CLANG compiler
            checkCoverage: Searching version string 'Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)' (for compiler 'mpiicc -cc=icx') using pattern 'clang version (\d+)\.(\d+)\.(\d+)'
            checkCoverage: Checking for coverage tool(s):
- llvm-cov
    Checking for program llvm-cov...not found
    Checking for program /opt/intel/oneapi/mpi/2021.14/bin/llvm-cov...not found
    Checking for program /opt/intel/oneapi/mkl/2025.0/bin/llvm-cov...not found
    Checking for program /opt/intel/oneapi/dpcpp-ct/2025.0/bin/llvm-cov...not found
    Checking for program /opt/intel/oneapi/dev-utilities/2025.0/bin/llvm-cov...not found
    Checking for program /opt/intel/oneapi/debugger/2025.0/opt/debugger/bin/llvm-cov...not found
    Checking for program /opt/intel/oneapi/compiler/2025.0/bin/llvm-cov...not found
    Checking for program /usr/local/sbin/llvm-cov...not found
    Checking for program /usr/local/bin/llvm-cov...not found
    Checking for program /usr/sbin/llvm-cov...not found
    Checking for program /usr/bin/llvm-cov...not found
    Checking for program /sbin/llvm-cov...not found
    Checking for program /bin/llvm-cov...not found
    Checking for program /usr/games/llvm-cov...not found
    Checking for program /usr/local/games/llvm-cov...not found
    Checking for program /snap/bin/llvm-cov...not found
    Checking for program /snap/bin/llvm-cov...not found
    Checking for program /srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/lib/petsc/bin/win32fe/llvm-cov...not found
  Unable to find programs: ['llvm-cov'] in listing of the specific search path: ['']
      Warning accessing  gives errors: [Errno 2] No such file or directory: ''
=============================================================================================
TESTING: configureStrictPetscErrorCode from PETSc.Configure(/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/config/PETSc/Configure.py:1224)
  
    Enables or disables strict PetscErrorCode checking.

    If --with-strict-petscerrorcode = 1:
    - defines PETSC_USE_STRICT_PETSCERRORCODE to 1

    Else:
    - deletes any prior PETSC_USE_STRICT_PETSCERRORCODE definitions (if they exist)
    
=============================================================================================
Executing: CC -VV
stdout: /bin/sh: 1: CC: not found
          Defined "USE_SOCKET_VIEWER" to "1"
Executing: mpiicc -cc=icx -c -o /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.o -I/tmp/petsc-m5p55c3k/config.compilerFlags -I/tmp/petsc-m5p55c3k/config.compilersFortran -I/tmp/petsc-m5p55c3k/config.headers -I/tmp/petsc-m5p55c3k/config.utilities.cacheDetails -I/tmp/petsc-m5p55c3k/config.types -I/tmp/petsc-m5p55c3k/config.functions -I/tmp/petsc-m5p55c3k/config.utilities.featureTestMacros -I/tmp/petsc-m5p55c3k/config.utilities.missing -I/tmp/petsc-m5p55c3k/PETSc.options.sharedLibraries -I/tmp/petsc-m5p55c3k/PETSc.options.scalarTypes -I/tmp/petsc-m5p55c3k/config.packages.MPI -I/tmp/petsc-m5p55c3k/config.packages.pthread -I/tmp/petsc-m5p55c3k/config.setCompilers -I/tmp/petsc-m5p55c3k/config.packages.BlasLapack -I/tmp/petsc-m5p55c3k/config.compilers -I/tmp/petsc-m5p55c3k/config.packages.mkl_sparse_optimize -I/tmp/petsc-m5p55c3k/config.libraries -I/tmp/petsc-m5p55c3k/PETSc.Configure  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native  /tmp/petsc-m5p55c3k/PETSc.Configure/conftest.c 
Successful compile:
Source:
#include "confdefs.h"
#include "conffix.h"
#include <sys/socket.h>

int main(void) {
setsockopt(0,SOL_SOCKET,SO_REUSEADDR,0,0);
  return 0;
}

          Defined "HAVE_SO_REUSEADDR" to "1"
=============================================================================================
Executing: mpiicc -cc=icx -show
stdout: icx -I"/opt/intel/oneapi/mpi/2021.14/include" -L"/opt/intel/oneapi/mpi/2021.14/lib" -L"/opt/intel/oneapi/mpi/2021.14/lib" -Xlinker --enable-new-dtags -Xlinker -rpath -Xlinker "/opt/intel/oneapi/mpi/2021.14/lib" -Xlinker -rpath -Xlinker "/opt/intel/oneapi/mpi/2021.14/lib" -lmpifort -lmpi -ldl -lrt -lpthread
          Defined "MPICC_SHOW" to ""icx -I/opt/intel/oneapi/mpi/2021.14/include -L/opt/intel/oneapi/mpi/2021.14/lib -L/opt/intel/oneapi/mpi/2021.14/lib -Xlinker --enable-new-dtags -Xlinker -rpath -Xlinker /opt/intel/oneapi/mpi/2021.14/lib -Xlinker -rpath -Xlinker /opt/intel/oneapi/mpi/2021.14/lib -lmpifort -lmpi -ldl -lrt -lpthread""
          Defined make macro "CC_FLAGS" to " -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native"
          Defined "HAVE_CXX" to "1"
          Defined make macro "CXXPP_FLAGS" to ""
          Defined make macro "CXX_FLAGS" to " -Wall -Wwrite-strings -Wno-strict-aliasing -Wno-unknown-pragmas -fstack-protector -fvisibility=hidden -O2 -march=native -mtune=native  -std=gnu++20 -fPIC"
          Defined make macro "CXX_LINKER" to "mpiicpc -cxx=icpx"
          Defined make macro "CXX_LINKER_FLAGS" to "   -Wall -Wwrite-strings -Wno-strict-aliasing -Wno-unknown-pragmas -fstack-protector -fvisibility=hidden -O2 -march=native -mtune=native"
          Defined make macro "CPP_FLAGS" to ""
          Defined make macro "PCC" to "mpiicc -cc=icx"
          Defined make macro "PCC_FLAGS" to "$(CC_FLAGS)"
          Defined make macro "CC_SUFFIX" to "o"
          Defined make macro "PCC_LINKER" to "mpiicc -cc=icx"
          Defined make macro "PCC_LINKER_FLAGS" to "   -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native"
          Defined make macro "CC_LINKER_SUFFIX" to ""
          Defined "USE_FORTRAN_BINDINGS" to "1"
          Defined make macro "FPP_FLAGS" to ""
          Defined make macro "FC_FLAGS" to " -fPIC -O2 -march=native -mtune=native  "
          Defined make macro "FC_SUFFIX" to "o"
          Defined make macro "FC_LINKER" to "mpiifort -fc=ifx"
          Defined make macro "FC_LINKER_FLAGS" to "   -fPIC -O2 -march=native -mtune=native "
          Defined make macro "FC_MODULE_FLAG" to "-I"
          Defined make macro "FC_MODULE_OUTPUT_FLAG" to "-module "
          Defined make macro "SL_LINKER" to "mpiicc -cc=icx"
          Defined make macro "SL_LINKER_FLAGS" to "${PCC_LINKER_FLAGS}"
          Defined make macro "SL_LINKER_SUFFIX" to "so"
          Defined "SLSUFFIX" to ""so""
          Defined make macro "SL_LINKER_LIBS" to "${PETSC_EXTERNAL_LIB_BASIC}"
          Defined make macro "PETSC_LANGUAGE" to "CONLY"
          Defined make macro "PETSC_SCALAR" to "real"
          Defined make macro "PETSC_PRECISION" to "double"
=============================================================================================
          Defined "HAVE_MKL_SPARSE" to "1"
          Defined make macro "MKL_SPARSE_LIB" to ""
          Defined make macro "MKL_SPARSE_INCLUDE" to ""
          Defined "HAVE_MKL_SPARSE_OPTIMIZE" to "1"
          Defined make macro "MKL_SPARSE_OPTIMIZE_LIB" to ""
          Defined make macro "MKL_SPARSE_OPTIMIZE_INCLUDE" to ""
          Defined make macro "BLASLAPACK_LIB" to "-Wl,-rpath,/opt/intel/oneapi/mkl/2025.0/lib/intel64 -L/opt/intel/oneapi/mkl/2025.0/lib/intel64 -lmkl_intel_lp64 -lmkl_core -lmkl_sequential -lpthread"
          Defined make macro "BLASLAPACK_INCLUDE" to ""
          Defined "HAVE_PTHREAD" to "1"
          Defined make macro "PTHREAD_LIB" to ""
          Defined make macro "PTHREAD_INCLUDE" to ""
          Defined "HAVE_MATHLIB" to "1"
          Defined make macro "MATHLIB_LIB" to ""
          Defined make macro "MATHLIB_INCLUDE" to ""
          Defined "HAVE_REGEX" to "1"
          Defined make macro "REGEX_LIB" to ""
          Defined make macro "REGEX_INCLUDE" to ""
          Defined make macro "MPI_LIB" to ""
          Defined make macro "MPI_INCLUDE" to ""
          Defined "HAVE_X" to "1"
          Defined make macro "X_LIB" to "-lX11"
          Defined make macro "X_INCLUDE" to ""
          Defined make macro "PETSC_EXTERNAL_LIB_BASIC" to "-Wl,-rpath,/opt/intel/oneapi/mkl/2025.0/lib/intel64 -L/opt/intel/oneapi/mkl/2025.0/lib/intel64 -fortlib -lmkl_intel_lp64 -lmkl_core -lmkl_sequential -lpthread -lX11 -lstdc++"
          Defined make macro "PETSC_CC_INCLUDES" to "-I/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/include -I/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/arch-linux-c-opt/include"
          Defined make macro "PETSC_CC_INCLUDES_INSTALL" to "-I/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/include -I/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/arch-linux-c-opt/include"
          Defined make macro "PETSC_FC_INCLUDES" to "-I/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/include -I/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/arch-linux-c-opt/include"
          Defined make macro "PETSC_FC_INCLUDES_INSTALL" to "-I/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/include -I/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/arch-linux-c-opt/include"
          Defined "LIB_DIR" to ""/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/arch-linux-c-opt/lib""
          Defined "USE_SINGLE_LIBRARY" to "1"
          Defined make macro "LIBNAME" to "${INSTALL_LIB_DIR}/libpetsc.${AR_LIB_SUFFIX}"
          Defined make macro "SHLIBS" to "libpetsc"
          Defined make macro "PETSC_WITH_EXTERNAL_LIB" to "-Wl,-rpath,/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/arch-linux-c-opt/lib -L/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/arch-linux-c-opt/lib -Wl,-rpath,/opt/intel/oneapi/mkl/2025.0/lib/intel64 -L/opt/intel/oneapi/mkl/2025.0/lib/intel64 -fortlib -lpetsc -lmkl_intel_lp64 -lmkl_core -lmkl_sequential -lpthread -lX11 -lstdc++"
          Defined make macro "PETSC_SYS_LIB" to "${PETSC_WITH_EXTERNAL_LIB}"
          Defined make macro "PETSC_VEC_LIB" to "${PETSC_WITH_EXTERNAL_LIB}"
          Defined make macro "PETSC_MAT_LIB" to "${PETSC_WITH_EXTERNAL_LIB}"
          Defined make macro "PETSC_DM_LIB" to "${PETSC_WITH_EXTERNAL_LIB}"
          Defined make macro "PETSC_KSP_LIB" to "${PETSC_WITH_EXTERNAL_LIB}"
          Defined make macro "PETSC_SNES_LIB" to "${PETSC_WITH_EXTERNAL_LIB}"
          Defined make macro "PETSC_TS_LIB" to "${PETSC_WITH_EXTERNAL_LIB}"
          Defined make macro "PETSC_TAO_LIB" to "${PETSC_WITH_EXTERNAL_LIB}"
          Defined make macro "PETSC_LIB" to "${PETSC_TAO_LIB}"
          Defined make macro "PETSC_LIB_BASIC" to "-lpetsc"
          Defined make macro "CONFIGURE_OPTIONS" to "--with-debugging=0 --with-fc=\"mpiifort -fc=ifx\" --with-cc=\"mpiicc -cc=icx\" --with-cxx=\"mpiicpc -cxx=icpx\" --with-blaslapack-dir=/opt/intel/oneapi/mkl/2025.0 FOPTFLAGS=\"-O2 -march=native -mtune=native\" COPTFLAGS=\"-O2 -march=native -mtune=native\" CXXOPTFLAGS=\"-O2 -march=native -mtune=native\""
          Defined "HAVE_TAU_PERFSTUBS" to "1"
================================================================================
    child PETSc.Configure took 2.247564 seconds
    child sum 50.277600
    child total 50.307786
**** arch-linux-c-opt/lib/petsc/conf/petscvariables ****
FAST_AR_FLAGS = Scq
AR_FLAGS = cr
AR_ARGFILE = yes
PCC_AT_FILE = 1
C_VERSION = Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)
MPICC_SHOW = icx -I\"/opt/intel/oneapi/mpi/2021.14/include\" -L\"/opt/intel/oneapi/mpi/2021.14/lib\" -L\"/opt/intel/oneapi/mpi/2021.14/lib\" -Xlinker --enable-new-dtags -Xlinker -rpath -Xlinker \"/opt/intel/oneapi/mpi/2021.14/lib\" -Xlinker -rpath -Xlinker \"/opt/intel/oneapi/mpi/2021.14/lib\" -lmpifort -lmpi -ldl -lrt -lpthread
Cxx_VERSION = Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)
MPICXX_SHOW = icpx -I"/opt/intel/oneapi/mpi/2021.14/include" -L"/opt/intel/oneapi/mpi/2021.14/lib" -L"/opt/intel/oneapi/mpi/2021.14/lib" -Xlinker --enable-new-dtags -Xlinker -rpath -Xlinker "/opt/intel/oneapi/mpi/2021.14/lib" -Xlinker -rpath -Xlinker "/opt/intel/oneapi/mpi/2021.14/lib" -lmpicxx -lmpifort -lmpi -ldl -lrt -lpthread
FC_VERSION = ifx (IFX) 2025.0.0 20241008
MPIFC_SHOW = ifx -I"/opt/intel/oneapi/mpi/2021.14/include/mpi" -I"/opt/intel/oneapi/mpi/2021.14/include" -I"/opt/intel/oneapi/mpi/2021.14/include/mpi" -L"/opt/intel/oneapi/mpi/2021.14/lib" -L"/opt/intel/oneapi/mpi/2021.14/lib" -Xlinker --enable-new-dtags -Xlinker -rpath -Xlinker "/opt/intel/oneapi/mpi/2021.14/lib" -Xlinker -rpath -Xlinker "/opt/intel/oneapi/mpi/2021.14/lib" -lmpifort -lmpi -ldl -lrt -lpthread
C_DEPFLAGS = -MMD -MP
CXX_DEPFLAGS = -MMD -MP
FC_DEFINE_FLAG = -D
wPETSC_DIR = /srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4
CC_FLAGS =  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native
CXXPP_FLAGS = 
CXX_FLAGS =  -Wall -Wwrite-strings -Wno-strict-aliasing -Wno-unknown-pragmas -fstack-protector -fvisibility=hidden -O2 -march=native -mtune=native  -std=gnu++20 -fPIC
CXX_LINKER = mpiicpc -cxx=icpx
CXX_LINKER_FLAGS =    -Wall -Wwrite-strings -Wno-strict-aliasing -Wno-unknown-pragmas -fstack-protector -fvisibility=hidden -O2 -march=native -mtune=native
CPP_FLAGS = 
PCC = mpiicc -cc=icx
PCC_FLAGS = $(CC_FLAGS)
CC_SUFFIX = o
PCC_LINKER = mpiicc -cc=icx
PCC_LINKER_FLAGS =    -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native
CC_LINKER_SUFFIX = 
FPP_FLAGS = 
FC_FLAGS =  -fPIC -O2 -march=native -mtune=native  
FC_SUFFIX = o
FC_LINKER = mpiifort -fc=ifx
FC_LINKER_FLAGS =    -fPIC -O2 -march=native -mtune=native 
FC_MODULE_FLAG = -I
FC_MODULE_OUTPUT_FLAG = -module 
SL_LINKER = mpiicc -cc=icx
SL_LINKER_FLAGS = ${PCC_LINKER_FLAGS}
SL_LINKER_SUFFIX = so
SL_LINKER_LIBS = ${PETSC_EXTERNAL_LIB_BASIC}
PETSC_LANGUAGE = CONLY
PETSC_SCALAR = real
PETSC_PRECISION = double
MKL_SPARSE_LIB = 
MKL_SPARSE_INCLUDE = 
MKL_SPARSE_OPTIMIZE_LIB = 
MKL_SPARSE_OPTIMIZE_INCLUDE = 
BLASLAPACK_LIB = -Wl,-rpath,/opt/intel/oneapi/mkl/2025.0/lib/intel64 -L/opt/intel/oneapi/mkl/2025.0/lib/intel64 -lmkl_intel_lp64 -lmkl_core -lmkl_sequential -lpthread
BLASLAPACK_INCLUDE = 
PTHREAD_LIB = 
PTHREAD_INCLUDE = 
MATHLIB_LIB = 
MATHLIB_INCLUDE = 
REGEX_LIB = 
REGEX_INCLUDE = 
MPI_LIB = 
MPI_INCLUDE = 
X_LIB = -lX11
X_INCLUDE = 
PETSC_EXTERNAL_LIB_BASIC = -Wl,-rpath,/opt/intel/oneapi/mkl/2025.0/lib/intel64 -L/opt/intel/oneapi/mkl/2025.0/lib/intel64 -fortlib -lmkl_intel_lp64 -lmkl_core -lmkl_sequential -lpthread -lX11 -lstdc++
PETSC_CC_INCLUDES = -I/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/include -I/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/arch-linux-c-opt/include
PETSC_CC_INCLUDES_INSTALL = -I/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/include -I/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/arch-linux-c-opt/include
PETSC_FC_INCLUDES = -I/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/include -I/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/arch-linux-c-opt/include
PETSC_FC_INCLUDES_INSTALL = -I/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/include -I/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/arch-linux-c-opt/include
LIBNAME = ${INSTALL_LIB_DIR}/libpetsc.${AR_LIB_SUFFIX}
SHLIBS = libpetsc
PETSC_WITH_EXTERNAL_LIB = -Wl,-rpath,/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/arch-linux-c-opt/lib -L/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/arch-linux-c-opt/lib -Wl,-rpath,/opt/intel/oneapi/mkl/2025.0/lib/intel64 -L/opt/intel/oneapi/mkl/2025.0/lib/intel64 -fortlib -lpetsc -lmkl_intel_lp64 -lmkl_core -lmkl_sequential -lpthread -lX11 -lstdc++
PETSC_SYS_LIB = ${PETSC_WITH_EXTERNAL_LIB}
PETSC_VEC_LIB = ${PETSC_WITH_EXTERNAL_LIB}
PETSC_MAT_LIB = ${PETSC_WITH_EXTERNAL_LIB}
PETSC_DM_LIB = ${PETSC_WITH_EXTERNAL_LIB}
PETSC_KSP_LIB = ${PETSC_WITH_EXTERNAL_LIB}
PETSC_SNES_LIB = ${PETSC_WITH_EXTERNAL_LIB}
PETSC_TS_LIB = ${PETSC_WITH_EXTERNAL_LIB}
PETSC_TAO_LIB = ${PETSC_WITH_EXTERNAL_LIB}
PETSC_LIB = ${PETSC_TAO_LIB}
PETSC_LIB_BASIC = -lpetsc
CONFIGURE_OPTIONS = --with-debugging=0 --with-fc=\"mpiifort -fc=ifx\" --with-cc=\"mpiicc -cc=icx\" --with-cxx=\"mpiicpc -cxx=icpx\" --with-blaslapack-dir=/opt/intel/oneapi/mkl/2025.0 FOPTFLAGS=\"-O2 -march=native -mtune=native\" COPTFLAGS=\"-O2 -march=native -mtune=native\" CXXOPTFLAGS=\"-O2 -march=native -mtune=native\"
MKDIR = /usr/bin/mkdir -p
SHELL = /usr/bin/bash
SED = /usr/bin/sed
SEDINPLACE = /usr/bin/sed -i
MV = /usr/bin/mv
CP = /usr/bin/cp
GREP = /usr/bin/grep
RM = /usr/bin/rm -f
DIFF = /usr/bin/diff -w
PYTHON = /usr/bin/python3
M4 = /usr/bin/m4
CC = mpiicc -cc=icx
CPP = mpiicc -cc=icx -E
CXX = mpiicpc -cxx=icpx
CXXPP = mpiicpc -cxx=icpx -E
FC = mpiifort -fc=ifx
FPP = mpiifort -fc=ifx -E
AR = /usr/bin/ar
RANLIB = /usr/bin/ranlib
AR_LIB_SUFFIX = a
LD_SHARED = mpiicc -cc=icx
DYNAMICLINKER = mpiicc -cc=icx
CC_LINKER_SLFLAG = -Wl,-rpath,
FC_LINKER_SLFLAG = -Wl,-rpath,
CLANGUAGE = C
EXEFLAGS = -Wl,-export-dynamic
GIT = git
PREFIXDIR = /srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/arch-linux-c-opt
PETSC_SCALAR_SIZE = 64
PETSC_INDEX_SIZE = 32
MAKE = /usr/bin/gmake
MAKE_USER = make
OMAKE_PRINTDIR = /usr/bin/gmake --print-directory
OMAKE = /usr/bin/gmake --no-print-directory
MAKE_PAR_OUT_FLG = --output-sync=recurse
MAKE_NP = 5
MAKE_TEST_NP = 3
MAKE_LOAD = 9.0
NPMAX = 6
SONAME_FUNCTION = $(1).$(SL_LINKER_SUFFIX).$(2)
SL_LINKER_FUNCTION =  -shared  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native -Wl,-soname,$(call SONAME_FUNCTION,$(notdir $(1)),$(2))
BUILDSHAREDLIB = yes
GDB = /usr/bin/gdb
DSYMUTIL = true
MPIEXEC = /opt/intel/oneapi/mpi/2021.14/bin/mpiexec
HOSTNAME = hostname
PING = ping
MPIEXEC_TAIL = 
PYTHON_EXE = "/usr/bin/python3"
CMAKE = /usr/bin/cmake
CTEST = /usr/bin/ctest
PETSC_TEST_OPTIONS = -checkfunctionlist -use_gpu_aware_mpi 0
**** arch-linux-c-opt/lib/petsc/conf/petscrules ****
print_mesg_after_build: 
	-@echo "========================================="
	-@echo "Now to check if the libraries are working do:"
	-@echo "${MAKE_USER} PETSC_DIR=${PETSC_DIR} PETSC_ARCH=${PETSC_ARCH} check"
	-@echo "========================================="

libc: ${LIBNAME}(${OBJSC})

libcxx: ${LIBNAME}(${OBJSCXX})

libcu: ${LIBNAME}(${OBJSCU})

libf: ${OBJSF}
	-${AR} ${AR_FLAGS} ${LIBNAME} ${OBJSF}

shared_arch: shared_linux

amrex-build: 

amrex-install: 

mfem-build: 

mfem-install: 

slepc-build: 

slepc-install: 

bamg-build: 

bamg-install: 

hpddm-build: 

hpddm-install: 

libmesh-build: 

libmesh-install: 

petsc4py-build: 

petsc4py-install: 

petsc4pytest: 

**** arch-linux-c-opt/include/petscconf.h ****
#if !defined(INCLUDED_UNKNOWN)
#define INCLUDED_UNKNOWN

#define PETSC_ARCH "arch-linux-c-opt"
#define PETSC_ATTRIBUTEALIGNED(size) __attribute((aligned(size)))
#define PETSC_BLASLAPACK_UNDERSCORE 1
#define PETSC_CLANGUAGE_C 1
#define PETSC_CXX_RESTRICT __restrict
#define PETSC_DEPRECATED_ENUM_BASE(string_literal_why) __attribute__((deprecated(string_literal_why)))
#define PETSC_DEPRECATED_FUNCTION_BASE(string_literal_why) __attribute__((deprecated(string_literal_why)))
#define PETSC_DEPRECATED_MACRO_BASE(string_literal_why) PETSC_DEPRECATED_MACRO_BASE_(GCC warning string_literal_why)
#define PETSC_DEPRECATED_MACRO_BASE_(why) _Pragma(#why)
#define PETSC_DEPRECATED_OBJECT_BASE(string_literal_why) __attribute__((deprecated(string_literal_why)))
#define PETSC_DEPRECATED_TYPEDEF_BASE(string_literal_why) __attribute__((deprecated(string_literal_why)))
#define PETSC_DIR "/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4"
#define PETSC_DIR_SEPARATOR '/'
#define PETSC_FORTRAN_CHARLEN_T int
#define PETSC_FORTRAN_TYPE_INITIALIZE  = -2
#define PETSC_FUNCTION_NAME_C __func__
#define PETSC_FUNCTION_NAME_CXX __func__
#define PETSC_HAVE_ACCESS 1
#define PETSC_HAVE_ATOLL 1
#define PETSC_HAVE_ATTRIBUTEALIGNED 1
#define PETSC_HAVE_BUILTIN_EXPECT 1
#define PETSC_HAVE_BZERO 1
#define PETSC_HAVE_C99_COMPLEX 1
#define PETSC_HAVE_CLOCK 1
#define PETSC_HAVE_CXX 1
#define PETSC_HAVE_CXX_ATOMIC 1
#define PETSC_HAVE_CXX_COMPLEX 1
#define PETSC_HAVE_CXX_COMPLEX_FIX 1
#define PETSC_HAVE_CXX_DIALECT_CXX11 1
#define PETSC_HAVE_CXX_DIALECT_CXX14 1
#define PETSC_HAVE_CXX_DIALECT_CXX17 1
#define PETSC_HAVE_CXX_DIALECT_CXX20 1
#define PETSC_HAVE_DLADDR 1
#define PETSC_HAVE_DLCLOSE 1
#define PETSC_HAVE_DLERROR 1
#define PETSC_HAVE_DLFCN_H 1
#define PETSC_HAVE_DLOPEN 1
#define PETSC_HAVE_DLSYM 1
#define PETSC_HAVE_DOUBLE_ALIGN_MALLOC 1
#define PETSC_HAVE_DRAND48 1
#define PETSC_HAVE_DYNAMIC_LIBRARIES 1
#define PETSC_HAVE_ERF 1
#define PETSC_HAVE_EXECUTABLE_EXPORT 1
#define PETSC_HAVE_FCNTL_H 1
#define PETSC_HAVE_FENV_H 1
#define PETSC_HAVE_FE_VALUES 1
#define PETSC_HAVE_FLOAT_H 1
#define PETSC_HAVE_FORK 1
#define PETSC_HAVE_FORTRAN_FLUSH 1
#define PETSC_HAVE_FORTRAN_FREE_LINE_LENGTH_NONE 1
#define PETSC_HAVE_FORTRAN_TYPE_STAR 1
#define PETSC_HAVE_FORTRAN_UNDERSCORE 1
#define PETSC_HAVE_GETCWD 1
#define PETSC_HAVE_GETDOMAINNAME 1
#define PETSC_HAVE_GETHOSTBYNAME 1
#define PETSC_HAVE_GETHOSTNAME 1
#define PETSC_HAVE_GETPAGESIZE 1
#define PETSC_HAVE_GETRUSAGE 1
#define PETSC_HAVE_IMMINTRIN_H 1
#define PETSC_HAVE_INTTYPES_H 1
#define PETSC_HAVE_ISINF 1
#define PETSC_HAVE_ISNAN 1
#define PETSC_HAVE_ISNORMAL 1
#define PETSC_HAVE_I_MPI_NUMVERSION 20211400300
#define PETSC_HAVE_LGAMMA 1
#define PETSC_HAVE_LINUX 1
#define PETSC_HAVE_LOG2 1
#define PETSC_HAVE_LSEEK 1
#define PETSC_HAVE_MALLOC_H 1
#define PETSC_HAVE_MEMMOVE 1
#define PETSC_HAVE_MKL_LIBS 1
#define PETSC_HAVE_MKL_SPARSE 1
#define PETSC_HAVE_MKL_SPARSE_OPTIMIZE 1
#define PETSC_HAVE_MKL_SPARSE_SP2M_FEATURE 1
#define PETSC_HAVE_MKSTEMP 1
#define PETSC_HAVE_MMAP 1
#define PETSC_HAVE_MPICH_NUMVERSION 30400002
#define PETSC_HAVE_MPIIO 1
#define PETSC_HAVE_MPI_COMBINER_CONTIGUOUS 1
#define PETSC_HAVE_MPI_COMBINER_DUP 1
#define PETSC_HAVE_MPI_COMBINER_NAMED 1
#define PETSC_HAVE_MPI_F90MODULE 1
#define PETSC_HAVE_MPI_F90MODULE_VISIBILITY 1
#define PETSC_HAVE_MPI_GET_ACCUMULATE 1
#define PETSC_HAVE_MPI_GET_LIBRARY_VERSION 1
#define PETSC_HAVE_MPI_INIT_THREAD 1
#define PETSC_HAVE_MPI_INT64_T 1
#define PETSC_HAVE_MPI_LARGE_COUNT 1
#define PETSC_HAVE_MPI_LONG_DOUBLE 1
#define PETSC_HAVE_MPI_NEIGHBORHOOD_COLLECTIVES 1
#define PETSC_HAVE_MPI_NONBLOCKING_COLLECTIVES 1
#define PETSC_HAVE_MPI_ONE_SIDED 1
#define PETSC_HAVE_MPI_PERSISTENT_NEIGHBORHOOD_COLLECTIVES 1
#define PETSC_HAVE_MPI_PROCESS_SHARED_MEMORY 1
#define PETSC_HAVE_MPI_REDUCE_LOCAL 1
#define PETSC_HAVE_MPI_REDUCE_SCATTER_BLOCK 1
#define PETSC_HAVE_MPI_RGET 1
#define PETSC_HAVE_MPI_WIN_CREATE 1
#define PETSC_HAVE_NANOSLEEP 1
#define PETSC_HAVE_NETDB_H 1
#define PETSC_HAVE_NETINET_IN_H 1
#define PETSC_HAVE_POPEN 1
#define PETSC_HAVE_POSIX_MEMALIGN 1
#define PETSC_HAVE_PTHREAD 1
#define PETSC_HAVE_PWD_H 1
#define PETSC_HAVE_RAND 1
#define PETSC_HAVE_READLINK 1
#define PETSC_HAVE_REALPATH 1
#define PETSC_HAVE_REGEX 1
#define PETSC_HAVE_RTLD_DEFAULT 1
#define PETSC_HAVE_RTLD_GLOBAL 1
#define PETSC_HAVE_RTLD_LAZY 1
#define PETSC_HAVE_RTLD_LOCAL 1
#define PETSC_HAVE_RTLD_NOW 1
#define PETSC_HAVE_SETJMP_H 1
#define PETSC_HAVE_SLEEP 1
#define PETSC_HAVE_SNPRINTF 1
#define PETSC_HAVE_SOCKET 1
#define PETSC_HAVE_SO_REUSEADDR 1
#define PETSC_HAVE_STDATOMIC_H 1
#define PETSC_HAVE_STDINT_H 1
#define PETSC_HAVE_STRCASECMP 1
#define PETSC_HAVE_STRINGS_H 1
#define PETSC_HAVE_STRUCT_SIGACTION 1
#define PETSC_HAVE_SYS_PARAM_H 1
#define PETSC_HAVE_SYS_PROCFS_H 1
#define PETSC_HAVE_SYS_RESOURCE_H 1
#define PETSC_HAVE_SYS_SOCKET_H 1
#define PETSC_HAVE_SYS_TIMES_H 1
#define PETSC_HAVE_SYS_TIME_H 1
#define PETSC_HAVE_SYS_TYPES_H 1
#define PETSC_HAVE_SYS_UTSNAME_H 1
#define PETSC_HAVE_SYS_WAIT_H 1
#define PETSC_HAVE_TAU_PERFSTUBS 1
#define PETSC_HAVE_TGAMMA 1
#define PETSC_HAVE_TIME 1
#define PETSC_HAVE_TIME_H 1
#define PETSC_HAVE_UNAME 1
#define PETSC_HAVE_UNISTD_H 1
#define PETSC_HAVE_USLEEP 1
#define PETSC_HAVE_VA_COPY 1
#define PETSC_HAVE_VSNPRINTF 1
#define PETSC_HAVE_X 1
#define PETSC_HAVE_XMMINTRIN_H 1
#define PETSC_HAVE___INT64 1
#define PETSC_INTPTR_T intptr_t
#define PETSC_INTPTR_T_FMT "#" PRIxPTR
#define PETSC_IS_COLORING_MAX USHRT_MAX
#define PETSC_IS_COLORING_VALUE_TYPE short
#define PETSC_IS_COLORING_VALUE_TYPE_F integer2
#define PETSC_LEVEL1_DCACHE_LINESIZE 64
#define PETSC_LIB_DIR "/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4/arch-linux-c-opt/lib"
#define PETSC_MAX_PATH_LEN 4096
#define PETSC_MEMALIGN 16
#define PETSC_MKL_SPBLAS_DEPRECATED 1
#define PETSC_MPICC_SHOW "icx -I/opt/intel/oneapi/mpi/2021.14/include -L/opt/intel/oneapi/mpi/2021.14/lib -L/opt/intel/oneapi/mpi/2021.14/lib -Xlinker --enable-new-dtags -Xlinker -rpath -Xlinker /opt/intel/oneapi/mpi/2021.14/lib -Xlinker -rpath -Xlinker /opt/intel/oneapi/mpi/2021.14/lib -lmpifort -lmpi -ldl -lrt -lpthread"
#define PETSC_MPIU_IS_COLORING_VALUE_TYPE MPI_UNSIGNED_SHORT
#define PETSC_OMAKE "/usr/bin/gmake --no-print-directory"
#define PETSC_PREFETCH_HINT_NTA _MM_HINT_NTA
#define PETSC_PREFETCH_HINT_T0 _MM_HINT_T0
#define PETSC_PREFETCH_HINT_T1 _MM_HINT_T1
#define PETSC_PREFETCH_HINT_T2 _MM_HINT_T2
#define PETSC_PYTHON_EXE "/usr/bin/python3"
#define PETSC_Prefetch(a,b,c) _mm_prefetch((const char*)(a),(c))
#define PETSC_REPLACE_DIR_SEPARATOR '\\'
#define PETSC_SIGNAL_CAST  
#define PETSC_SIZEOF_INT 4
#define PETSC_SIZEOF_LONG 8
#define PETSC_SIZEOF_LONG_LONG 8
#define PETSC_SIZEOF_SIZE_T 8
#define PETSC_SIZEOF_VOID_P 8
#define PETSC_SLSUFFIX "so"
#define PETSC_UINTPTR_T uintptr_t
#define PETSC_UINTPTR_T_FMT "#" PRIxPTR
#define PETSC_UNUSED __attribute((unused))
#define PETSC_USE_AVX512_KERNELS 1
#define PETSC_USE_BACKWARD_LOOP 1
#define PETSC_USE_CTABLE 1
#define PETSC_USE_DEBUGGER "gdb"
#define PETSC_USE_DMLANDAU_2D 1
#define PETSC_USE_FORTRAN_BINDINGS 1
#define PETSC_USE_INFO 1
#define PETSC_USE_ISATTY 1
#define PETSC_USE_LOG 1
#define PETSC_USE_MALLOC_COALESCED 1
#define PETSC_USE_PROC_FOR_SIZE 1
#define PETSC_USE_REAL_DOUBLE 1
#define PETSC_USE_SHARED_LIBRARIES 1
#define PETSC_USE_SINGLE_LIBRARY 1
#define PETSC_USE_SOCKET_VIEWER 1
#define PETSC_USE_VISIBILITY_C 1
#define PETSC_USE_VISIBILITY_CXX 1
#define PETSC_USING_64BIT_PTR 1
#define PETSC_USING_F2003 1
#define PETSC_USING_F90FREEFORM 1
#define PETSC__BSD_SOURCE 1
#define PETSC__DEFAULT_SOURCE 1
#define PETSC__GNU_SOURCE 1
#endif
**** arch-linux-c-opt/include/petscfix.h ****
#if !defined(INCLUDED_UNKNOWN)
#define INCLUDED_UNKNOWN

#if defined(__cplusplus)
extern "C" {
}
#else
#endif
#endif
**** arch-linux-c-opt/include/petscpkg_version.h ****
#if !defined(INCLUDED_UNKNOWN)
#define INCLUDED_UNKNOWN

#define PETSC_PKG_BLASLAPACK_VERSION_MAJOR 20250000
#define PETSC_PKG_BLASLAPACK_VERSION_MINOR 0
#define PETSC_PKG_BLASLAPACK_VERSION_SUBMINOR 0
#define PETSC_PKG_BLASLAPACK_VERSION_ PETSC_PKG_BLASLAPACK_VERSION_EQ

#define PETSC_PKG_BLASLAPACK_VERSION_EQ(MAJOR,MINOR,SUBMINOR)         \
      ((PETSC_PKG_BLASLAPACK_VERSION_MAJOR    == (MAJOR)) &&          \
       (PETSC_PKG_BLASLAPACK_VERSION_MINOR    == (MINOR)) &&          \
       (PETSC_PKG_BLASLAPACK_VERSION_SUBMINOR == (SUBMINOR)))

#define PETSC_PKG_BLASLAPACK_VERSION_LT(MAJOR,MINOR,SUBMINOR)         \
       (PETSC_PKG_BLASLAPACK_VERSION_MAJOR  < (MAJOR) ||              \
        (PETSC_PKG_BLASLAPACK_VERSION_MAJOR == (MAJOR) &&             \
         (PETSC_PKG_BLASLAPACK_VERSION_MINOR  < (MINOR) ||            \
          (PETSC_PKG_BLASLAPACK_VERSION_MINOR == (MINOR) &&           \
           (PETSC_PKG_BLASLAPACK_VERSION_SUBMINOR  < (SUBMINOR))))))

#define PETSC_PKG_BLASLAPACK_VERSION_LE(MAJOR,MINOR,SUBMINOR)         \
       (PETSC_PKG_BLASLAPACK_VERSION_LT(MAJOR,MINOR,SUBMINOR) ||      \
        PETSC_PKG_BLASLAPACK_VERSION_EQ(MAJOR,MINOR,SUBMINOR))

#define PETSC_PKG_BLASLAPACK_VERSION_GT(MAJOR,MINOR,SUBMINOR)         \
       ( 0 == PETSC_PKG_BLASLAPACK_VERSION_LE(MAJOR,MINOR,SUBMINOR))

#define PETSC_PKG_BLASLAPACK_VERSION_GE(MAJOR,MINOR,SUBMINOR)         \
       ( 0 == PETSC_PKG_BLASLAPACK_VERSION_LT(MAJOR,MINOR,SUBMINOR))

#define PETSC_PKG_MPI_VERSION_MAJOR 3
#define PETSC_PKG_MPI_VERSION_MINOR 0
#define PETSC_PKG_MPI_VERSION_SUBMINOR 0
#define PETSC_PKG_MPI_VERSION_ PETSC_PKG_MPI_VERSION_EQ

#define PETSC_PKG_MPI_VERSION_EQ(MAJOR,MINOR,SUBMINOR)         \
      ((PETSC_PKG_MPI_VERSION_MAJOR    == (MAJOR)) &&          \
       (PETSC_PKG_MPI_VERSION_MINOR    == (MINOR)) &&          \
       (PETSC_PKG_MPI_VERSION_SUBMINOR == (SUBMINOR)))

#define PETSC_PKG_MPI_VERSION_LT(MAJOR,MINOR,SUBMINOR)         \
       (PETSC_PKG_MPI_VERSION_MAJOR  < (MAJOR) ||              \
        (PETSC_PKG_MPI_VERSION_MAJOR == (MAJOR) &&             \
         (PETSC_PKG_MPI_VERSION_MINOR  < (MINOR) ||            \
          (PETSC_PKG_MPI_VERSION_MINOR == (MINOR) &&           \
           (PETSC_PKG_MPI_VERSION_SUBMINOR  < (SUBMINOR))))))

#define PETSC_PKG_MPI_VERSION_LE(MAJOR,MINOR,SUBMINOR)         \
       (PETSC_PKG_MPI_VERSION_LT(MAJOR,MINOR,SUBMINOR) ||      \
        PETSC_PKG_MPI_VERSION_EQ(MAJOR,MINOR,SUBMINOR))

#define PETSC_PKG_MPI_VERSION_GT(MAJOR,MINOR,SUBMINOR)         \
       ( 0 == PETSC_PKG_MPI_VERSION_LE(MAJOR,MINOR,SUBMINOR))

#define PETSC_PKG_MPI_VERSION_GE(MAJOR,MINOR,SUBMINOR)         \
       ( 0 == PETSC_PKG_MPI_VERSION_LT(MAJOR,MINOR,SUBMINOR))

#endif

  Attempting to save configure hash file: arch-linux-c-opt/lib/petsc/conf/configure-hash
  Saved configure hash file: arch-linux-c-opt/lib/petsc/conf/configure-hash
Configure Actions
   These are the actions performed by configure on the filesystem
---------------------------------------------------------------------------------------------
PETSc:
  Build         : Set default architecture to arch-linux-c-opt in lib/petsc/conf/petscvariables
  File creation : Created arch-linux-c-opt/lib/petsc/conf/reconfigure-arch-linux-c-opt.py for automatic reconfiguration
Framework:
  RDict update  : Substitutions were stored in RDict with parent None
  File creation : Created makefile configure header arch-linux-c-opt/lib/petsc/conf/petscvariables
  File creation : Created makefile configure header arch-linux-c-opt/lib/petsc/conf/petscrules
  File creation : Created configure header arch-linux-c-opt/include/petscconf.h
  File creation : Created C specific configure header arch-linux-c-opt/include/petscfix.h
  File creation : Created configure pkg header arch-linux-c-opt/include/petscpkg_version.h
Compilers:
  C Compiler:         mpiicc -cc=icx  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native 
    Version: Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)
  C++ Compiler:         mpiicpc -cxx=icpx  -Wall -Wwrite-strings -Wno-strict-aliasing -Wno-unknown-pragmas -fstack-protector -fvisibility=hidden -O2 -march=native -mtune=native  -std=gnu++20 -fPIC 
    Version: Intel(R) oneAPI DPC++/C++ Compiler 2025.0.0 (2025.0.0.20241008)
  Fortran Compiler:         mpiifort -fc=ifx  -fPIC -O2 -march=native -mtune=native  
    Version: ifx (IFX) 2025.0.0 20241008
Linkers:
  Shared linker:   mpiicc -cc=icx  -shared  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native
  Dynamic linker:   mpiicc -cc=icx  -shared  -fPIC -Wall -Wwrite-strings -Wno-unknown-pragmas -fstack-protector -Qunused-arguments -fvisibility=hidden -O2 -march=native -mtune=native
  Libraries linked against:   
Intel instruction sets utilizable by compiler:
  AVX2
Intel instruction sets utilizable by compiler:
  AVX2
BlasLapack:
  Intel MKL Version:  20250000
  Libraries:  -Wl,-rpath,/opt/intel/oneapi/mkl/2025.0/lib/intel64 -L/opt/intel/oneapi/mkl/2025.0/lib/intel64 -lmkl_intel_lp64 -lmkl_core -lmkl_sequential -lpthread
  uses 4 byte integers
MPI:
  Version:    3
  mpiexec: /opt/intel/oneapi/mpi/2021.14/bin/mpiexec
  Implementation: mpich3
  I_MPI_NUMVERSION: 20211400300  MPICH_NUMVERSION: 30400002
X:
  Libraries:  -lX11
python:
  Executable: /usr/bin/python3
pthread:
cmake:
  Version:    3.28.3
  Executable: /usr/bin/cmake
regex:
mkl_sparse:
mkl_sparse_optimize:
PETSc:
  Language used to compile PETSc: C
  PETSC_ARCH: arch-linux-c-opt
  PETSC_DIR: /srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4
  Prefix: <inplace installation>
  Scalar type: real
  Precision: double
  Integer size: 4 bytes
  Single library: yes
  Shared libraries: yes
  Memory alignment from malloc(): 16 bytes
  Using GNU make: /usr/bin/gmake
xxx=======================================================================================xxx
 Configure stage complete. Now build PETSc libraries with:
   make PETSC_DIR=/srv/wrk/E4D/E4D-HR-Master-250818/lib/petsc-3.21.4 PETSC_ARCH=arch-linux-c-opt all
xxx=======================================================================================xxx
================================================================================
Finishing configure run at Mon, 18 Aug 2025 18:19:18 +0800
================================================================================
